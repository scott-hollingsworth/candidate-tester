pipelines:
  branches:
    master:
      - step:
          name: Build and Test Java Solution
          image: java:8
          script:
            - cd $JAVA_DIR
            - bash ./gradlew clean build
            - bash ./gradlew assemble
            - cd ..
      - step:
          name: Build and Test .NET Solution
          caches: 
            - dotnetcore
          image: mcr.microsoft.com/dotnet/core/sdk:3.1
          script:
            - dotnet restore $DOTNET_PROJ
            - dotnet publish -c release -o ./$DOTNET_DIR/build_output $DOTNET_PROJ
      - step:
          name: Build and Test JavaScript Solution
          image: circleci/node:12.10.0-browsers
          caches:
            - node
          script:
            - cd javascript-webcrawler
            - yarn install
            - yarn lint
            - yarn test --passWithNoTests
            - yarn test:e2e
    java/*:
      - step:
          name: Build and Test Java Solution
          image: java:8
          script:
            - set -eu
            - set -o pipefail
            - cd $JAVA_DIR
            # - bash ./check-git-commits.sh
            # - pipe: sonarsource/sonarcloud-scan:1.0.1
            #   variables:
            #     EXTRA_ARGS: -Dsonar.projectDescription=\"Candidate Tester" -Dsonar.eslint.reportPaths=\"report.txt\" -Dsonar.branch.name=$BITBUCKET_BRANCH
            #     SONAR_SCANNER_OPTS: -Xmx512m
            #     DEBUG: "true"
            #     SONAR__TOKEN: ${SONAR_TOKEN}
            - bash ./gradlew clean build
            # - bash ./gradlew clean bootrun
            # - curl "http://localhost:8080/crawl?${STATIC_URL}"
            - cd ..
            # figure out output name and location
            # - bash ./compareJSONs.sh expected.json $JAVA_DIR/output.json
            - echo "The candidate's submission has successfully passed the tests."
          artifacts:
           - $JAVA_DIR/build/reports/*
           - reports/*.txt
           #the output json
    dotnet/*:
      - step:
          name: Build and Test .NET Solution
          caches: 
            - dotnetcore
          image: mcr.microsoft.com/dotnet/core/sdk:3.1
          script:
            - set -eu
            - set -o pipefail
            # - bash ./$DOTNET_DIR/check-git-commits.sh
            # - pipe: sonarsource/sonarcloud-scan:1.0.1
            #     variables:
            #       EXTRA_ARGS: -Dsonar.projectDescription=\"Candidate Tester" -Dsonar.eslint.reportPaths=\"report.txt\" -Dsonar.branch.name=$BITBUCKET_BRANCH
            #       SONAR_SCANNER_OPTS: -Xmx512m
            #       DEBUG: "true"
            #       SONAR__TOKEN: ${SONAR_TOKEN}
            - dotnet restore $DOTNET_PROJ
            - dotnet publish -c release -o ./$DOTNET_DIR/build_output $DOTNET_PROJ
            # - bash ./compareJSONs.sh expected.json $DOTNET_DIR/output.json
          artifacts:
            - reports/*.txt
           #the output json
    # javascript/*:
    #   - step:
    #       name: Build and Test JavaScript Solution
    #       image: circleci/node:12.10.0-browsers
    #       caches:
    #         - node
    #       script:
    #         - yarn test:report
