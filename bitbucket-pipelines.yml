pipelines:
  branches:
    java/*:
      - step:
          name: Build and Test Java Solution
          image: openjdk:8
          script:
            - apt-get update
            - set -eu
            - set -o pipefail
            - apt-get install -y jq
            # - pipe: sonarsource/sonarcloud-scan:1.0.1
            #   variables:
            #     EXTRA_ARGS: -Dsonar.projectDescription=\"Candidate Tester" -Dsonar.eslint.reportPaths=\"report.txt\" -Dsonar.branch.name=$BITBUCKET_BRANCH
            #     SONAR_SCANNER_OPTS: -Xmx512m
            #     DEBUG: "true"
            #     SONAR__TOKEN: ${SONAR_TOKEN}
            # figure out output name and location
            - bash ./scripts/git-clone.sh $JAVA_DIR
            - bash ./scripts/java-output-test.sh $JAVA_DIR
            - echo "--- The Candidate's Submission PASSED ---"
          artifacts:
           - ./$JAVA_DIR/output.json
           - ./$JAVA_DIR/build/reports/*
           - ./reports/*.txt
    dotnet/*:
      - step:
          name: Build and Test .NET Solution
          caches: 
            - dotnetcore
          image: mcr.microsoft.com/dotnet/core/sdk:3.1
          script:
            - apt-get update
            - set -eu
            - set -o pipefail
            - apt-get install -y jq
            # - pipe: sonarsource/sonarcloud-scan:1.0.1
            #     variables:
            #       EXTRA_ARGS: -Dsonar.projectDescription=\"Candidate Tester" -Dsonar.eslint.reportPaths=\"report.txt\" -Dsonar.branch.name=$BITBUCKET_BRANCH
            #       SONAR_SCANNER_OPTS: -Xmx512m
            #       DEBUG: "true"
            #       SONAR__TOKEN: ${SONAR_TOKEN}
            - bash ./scripts/git-clone.sh $DOTNET_DIR
            - bash ./scripts/dotnet-output-test.sh $DOTNET_DIR
            - echo "--- The Candidate's Submission PASSED ---"
          artifacts:
            - reports/*.txt
            - $DOTNET_DIR/output.json
    javascript/*:
      - step:
          name: Build and Test JavaScript Solution
          image: circleci/node:12.10.0-browsers
          caches:
            - nodecustom
            - yarn
          script:
            - bash ./scripts/git-clone.sh $JAVASCRIPT_DIR
            - cd $JAVASCRIPT_DIR
            - curl -O $TEST_DOMAIN/expected.json
            - yarn install
            - yarn lint:ci
            - yarn test:ci
            - TEST_DOMAIN=$TEST_DOMAIN/index.html yarn test:ci:e2e

definitions:
  caches:
    nodecustom: ./$JAVASCRIPT_DIR/node_modules
    yarn: $YARN_CACHE
