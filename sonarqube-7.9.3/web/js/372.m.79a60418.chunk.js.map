{"version":3,"sources":["webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/utils.ts","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/SnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/ComponentSourceSnippetViewer.tsx","webpack:///./src/main/js/apps/issues/crossComponentSourceViewer/CrossComponentSourceViewerWrapper.tsx"],"names":["LINES_ABOVE","LINES_BELOW","MERGE_DISTANCE","LINES_BELOW_LAST","EXPAND_BY_LINES","collision","_ref","_ref2","_ref3","_slicedToArray","startA","endA","_ref4","startB","getPrimaryLocation","issue","component","textRange","endLine","endOffset","startLine","startOffset","rangesToSnippets","ranges","componentLines","map","range","lines","i","start","end","push","filter","snippet","length","expandSnippet","_ref5","direction","snippetIndex","snippets","snippetToExpand","snippetToExpandRange","Math","max","line","forEach","index","snippetRange","min","SCROLL_LEFT_OFFSET","SnippetViewer_SnippetViewer","index_js_exposed","[object Object]","props","super","this","doScroll","element","scroll","parent","node","current","Object","scrolling","leftOffset","rightOffset","getBoundingClientRect","width","expandBlock","displayDuplications","issuesForLine","issueLocations","symbols","verticalBuffer","secondaryIssueLocations","helpers_issueLocations","locations","_this$props","duplications","duplicationsByLine","duplicationsCount","lineDuplications","isSinkLine","some","key","Line","branchLike","displayAllIssues","displayCoverage","displayIssues","displayLocationMarkers","highlighted","highlightedLocationMessage","helpers_lines","highlightedSymbols","issuePopup","issues","last","linePopup","loadDuplications","onIssueChange","onIssuePopupToggle","onIssueSelect","onIssueUnselect","onIssuesClose","handleCloseIssues","onIssuesOpen","handleOpenIssues","onLinePopupToggle","handleLinePopupToggle","onLocationSelect","onSymbolClick","handleSymbolClick","openIssues","openIssuesByLine","previousLine","undefined","renderDuplicationPopup","selectedIssue","_this$props2","_this$props2$issuesBy","issuesByLine","locationsByLine","lastLine","measures","parseInt","indexing","bottomLine","issueLine","lowestVisibleIssue","keys","k","l","inSnippet","s","duplicated","className","ref","colSpan","aria-label","l10n","onClick","type","ExpandSnippetIcon","renderLine","ComponentSourceSnippetViewer_ComponentSourceSnippetViewer","mounted","state","additionalLines","loading","snippetGroup","extension","from","to","api_components","assign","branches","then","reduce","lineMap","coverageStatus","getCoverageStatus","newLinesMapped","setState","combinedLines","sources","expandComponent","createSnippetsFromProps","arguments","loc","startIndex","endIndex","firstCollision","keep","createSnippets","secondaryLocations","_this$props3","_this$state","fullyShown","classnames","source-duplications-expanded","SourceViewerHeaderSlim","expandable","onExpand","sourceViewerFile","renderSnippet","__webpack_require__","d","__webpack_exports__","CrossComponentSourceViewerWrapper_CrossComponentSourceViewerWrapper","components","notAccessible","fetchDuplications","r","duplicatedFiles","files","name","handleIssuePopupToggle","popupName","open","samePopup","handleCloseLinePopup","blocks","helpers_duplications","context","Consumer","openComponent","DuplicationPopup","inRemovedComponent","onClose","fetchIssueFlowSnippets","newProps","issueKey","onLoaded","response","status","throwGlobalError","_this$state2","DeferredSpinner","Alert","variant","_this$state3","issuesByComponent","locationsByComponent","currentGroup","currentComponent","groups","path","project","projectName","q","uuid","unknownComponent","groupLocationsByComponent","componentProps","SourceViewerContext","Provider","concat","selectedFlowIndex","value","file"],"mappings":"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","file":"js/372.m.79a60418.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nconst LINES_ABOVE = 2;\nconst LINES_BELOW = 2;\nexport const MERGE_DISTANCE = 4; // Merge if snippets are four lines away (separated by 3 lines) or fewer\nexport const LINES_BELOW_LAST = 9;\nexport const EXPAND_BY_LINES = 10;\n\nfunction unknownComponent(key: string): T.SnippetsByComponent {\n  return {\n    component: {\n      key,\n      measures: {},\n      path: '',\n      project: '',\n      projectName: '',\n      q: 'FIL',\n      uuid: ''\n    },\n    sources: []\n  };\n}\n\nfunction collision([startA, endA]: number[], [startB, endB]: number[]) {\n  return !(startA > endB + MERGE_DISTANCE || endA < startB - MERGE_DISTANCE);\n}\n\nfunction getPrimaryLocation(issue: T.Issue): T.FlowLocation {\n  return {\n    component: issue.component,\n    textRange: issue.textRange || {\n      endLine: 0,\n      endOffset: 0,\n      startLine: 0,\n      startOffset: 0\n    }\n  };\n}\n\nexport function createSnippets(\n  locations: T.FlowLocation[],\n  componentLines: T.LineMap = {},\n  last: boolean,\n  issue?: T.Issue\n): T.SourceLine[][] {\n  return rangesToSnippets(\n    // For each location's range (2 above and 2 below), and then compare with other ranges\n    // to merge snippets that collide.\n    (issue ? [getPrimaryLocation(issue), ...locations] : locations).reduce(\n      (snippets: Array<{ start: number; end: number }>, loc, index) => {\n        const startIndex = Math.max(1, loc.textRange.startLine - LINES_ABOVE);\n        const endIndex =\n          loc.textRange.endLine +\n          ((issue && index === 0) || (last && index === locations.length - 1)\n            ? LINES_BELOW_LAST\n            : LINES_BELOW);\n\n        let firstCollision: { start: number; end: number } | undefined;\n\n        // Remove ranges that collide into the first collision\n        snippets = snippets.filter(snippet => {\n          if (collision([snippet.start, snippet.end], [startIndex, endIndex])) {\n            let keep = false;\n            // Check if we've already collided\n            if (!firstCollision) {\n              firstCollision = snippet;\n              keep = true;\n            }\n            // Merge with first collision:\n            firstCollision.start = Math.min(startIndex, snippet.start, firstCollision.start);\n            firstCollision.end = Math.max(endIndex, snippet.end, firstCollision.end);\n\n            // remove the range if it was not the first collision\n            return keep;\n          }\n          return true;\n        });\n\n        if (firstCollision === undefined) {\n          snippets.push({\n            start: startIndex,\n            end: endIndex\n          });\n        }\n\n        return snippets;\n      },\n      []\n    ),\n    componentLines\n  );\n}\n\nfunction rangesToSnippets(\n  ranges: Array<{ start: number; end: number }>,\n  componentLines: T.LineMap\n) {\n  return ranges\n    .map(range => {\n      const lines = [];\n      for (let i = range.start; i <= range.end; i++) {\n        if (componentLines[i]) {\n          lines.push(componentLines[i]);\n        }\n      }\n      return lines;\n    })\n    .filter(snippet => snippet.length > 0);\n}\n\nexport function groupLocationsByComponent(\n  locations: T.FlowLocation[],\n  components: { [key: string]: T.SnippetsByComponent }\n) {\n  let currentComponent = '';\n  let currentGroup: T.SnippetGroup;\n  const groups: T.SnippetGroup[] = [];\n\n  locations.forEach((loc, index) => {\n    if (loc.component !== currentComponent) {\n      currentGroup = {\n        ...(components[loc.component] || unknownComponent(loc.component)),\n        locations: []\n      };\n      groups.push(currentGroup);\n      currentComponent = loc.component;\n    }\n    loc.index = index;\n    currentGroup.locations.push(loc);\n  });\n\n  return groups;\n}\n\nexport function expandSnippet({\n  direction,\n  lines,\n  snippetIndex,\n  snippets\n}: {\n  direction: T.ExpandDirection;\n  lines: T.LineMap;\n  snippetIndex: number;\n  snippets: T.SourceLine[][];\n}) {\n  const snippetToExpand = snippets[snippetIndex];\n\n  const snippetToExpandRange = {\n    start: Math.max(0, snippetToExpand[0].line - (direction === 'up' ? EXPAND_BY_LINES : 0)),\n    end:\n      snippetToExpand[snippetToExpand.length - 1].line +\n      (direction === 'down' ? EXPAND_BY_LINES : 0)\n  };\n\n  const ranges: Array<{ start: number; end: number }> = [];\n\n  snippets.forEach((snippet, index: number) => {\n    const snippetRange = {\n      start: snippet[0].line,\n      end: snippet[snippet.length - 1].line\n    };\n\n    if (index === snippetIndex) {\n      // keep expanded snippet\n      ranges.push(snippetToExpandRange);\n    } else if (\n      collision(\n        [snippetRange.start, snippetRange.end],\n        [snippetToExpandRange.start, snippetToExpandRange.end]\n      )\n    ) {\n      // Merge with expanded snippet\n      snippetToExpandRange.start = Math.min(snippetRange.start, snippetToExpandRange.start);\n      snippetToExpandRange.end = Math.max(snippetRange.end, snippetToExpandRange.end);\n    } else {\n      // No collision, jsut keep the snippet\n      ranges.push(snippetRange);\n    }\n  });\n\n  return rangesToSnippets(ranges, lines);\n}\n\nexport function inSnippet(line: number, snippet: T.SourceLine[]) {\n  return line >= snippet[0].line && line <= snippet[snippet.length - 1].line;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { inSnippet, LINES_BELOW_LAST } from './utils';\nimport ExpandSnippetIcon from '../../../components/icons-components/ExpandSnippetIcon';\nimport Line from '../../../components/SourceViewer/components/Line';\nimport { symbolsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport { getSecondaryIssueLocationsForLine } from '../../../components/SourceViewer/helpers/issueLocations';\nimport {\n  optimizeLocationMessage,\n  optimizeHighlightedSymbols,\n  optimizeSelectedIssue\n} from '../../../components/SourceViewer/helpers/lines';\nimport { translate } from '../../../helpers/l10n';\nimport { scrollHorizontally } from '../../../helpers/scrolling';\n\ninterface Props {\n  branchLike: T.BranchLike | undefined;\n  component: T.SourceViewerFile;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  expandBlock: (snippetIndex: number, direction: T.ExpandDirection) => void;\n  handleCloseIssues: (line: T.SourceLine) => void;\n  handleLinePopupToggle: (line: T.SourceLine) => void;\n  handleOpenIssues: (line: T.SourceLine) => void;\n  handleSymbolClick: (symbols: string[]) => void;\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  highlightedSymbols: string[];\n  index: number;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLocationSelect: (index: number) => void;\n  openIssuesByLine: T.Dict<boolean>;\n  renderDuplicationPopup: (index: number, line: number) => React.ReactNode;\n  scroll?: (element: HTMLElement) => void;\n  snippet: T.SourceLine[];\n}\n\nconst SCROLL_LEFT_OFFSET = 32;\n\nexport default class SnippetViewer extends React.PureComponent<Props> {\n  node: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props) {\n    super(props);\n    this.node = React.createRef();\n  }\n\n  doScroll = (element: HTMLElement) => {\n    if (this.props.scroll) {\n      this.props.scroll(element);\n    }\n    const parent = this.node.current as Element;\n\n    if (parent) {\n      scrollHorizontally(element, {\n        leftOffset: SCROLL_LEFT_OFFSET,\n        rightOffset: parent.getBoundingClientRect().width - SCROLL_LEFT_OFFSET,\n        parent\n      });\n    }\n  };\n\n  expandBlock = (direction: T.ExpandDirection) => () =>\n    this.props.expandBlock(this.props.index, direction);\n\n  renderLine({\n    displayDuplications,\n    index,\n    issuesForLine,\n    issueLocations,\n    line,\n    snippet,\n    symbols,\n    verticalBuffer\n  }: {\n    displayDuplications: boolean;\n    index: number;\n    issuesForLine: T.Issue[];\n    issueLocations: T.LinearIssueLocation[];\n    line: T.SourceLine;\n    snippet: T.SourceLine[];\n    symbols: string[];\n    verticalBuffer: number;\n  }) {\n    const secondaryIssueLocations = getSecondaryIssueLocationsForLine(line, this.props.locations);\n\n    const { duplications, duplicationsByLine } = this.props;\n    const duplicationsCount = duplications ? duplications.length : 0;\n    const lineDuplications =\n      (duplicationsCount && duplicationsByLine && duplicationsByLine[line.line]) || [];\n\n    const isSinkLine = issuesForLine.some(i => i.key === this.props.issue.key);\n\n    return (\n      <Line\n        branchLike={this.props.branchLike}\n        displayAllIssues={false}\n        displayCoverage={true}\n        displayDuplications={displayDuplications}\n        displayIssues={!isSinkLine || issuesForLine.length > 1}\n        displayLocationMarkers={true}\n        duplications={lineDuplications}\n        duplicationsCount={duplicationsCount}\n        highlighted={false}\n        highlightedLocationMessage={optimizeLocationMessage(\n          this.props.highlightedLocationMessage,\n          secondaryIssueLocations\n        )}\n        highlightedSymbols={optimizeHighlightedSymbols(symbols, this.props.highlightedSymbols)}\n        issueLocations={issueLocations}\n        issuePopup={this.props.issuePopup}\n        issues={issuesForLine}\n        key={line.line}\n        last={false}\n        line={line}\n        linePopup={this.props.linePopup}\n        loadDuplications={this.props.loadDuplications}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onIssueSelect={() => {}}\n        onIssueUnselect={() => {}}\n        onIssuesClose={this.props.handleCloseIssues}\n        onIssuesOpen={this.props.handleOpenIssues}\n        onLinePopupToggle={this.props.handleLinePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        onSymbolClick={this.props.handleSymbolClick}\n        openIssues={this.props.openIssuesByLine[line.line]}\n        previousLine={index > 0 ? snippet[index - 1] : undefined}\n        renderDuplicationPopup={this.props.renderDuplicationPopup}\n        scroll={this.doScroll}\n        secondaryIssueLocations={secondaryIssueLocations}\n        selectedIssue={optimizeSelectedIssue(this.props.issue.key, issuesForLine)}\n        verticalBuffer={verticalBuffer}\n      />\n    );\n  }\n\n  render() {\n    const {\n      component,\n      issue,\n      issuesByLine = {},\n      last,\n      locationsByLine,\n      openIssuesByLine,\n      snippet\n    } = this.props;\n    const lastLine =\n      component.measures && component.measures.lines && parseInt(component.measures.lines, 10);\n\n    const symbols = symbolsByLine(snippet);\n\n    const bottomLine = snippet[snippet.length - 1].line;\n    const issueLine = issue.textRange ? issue.textRange.endLine : issue.line;\n    const lowestVisibleIssue = Math.max(\n      ...Object.keys(issuesByLine)\n        .map(k => parseInt(k, 10))\n        .filter(l => inSnippet(l, snippet) && (l === issueLine || openIssuesByLine[l]))\n    );\n    const verticalBuffer = last\n      ? Math.max(0, LINES_BELOW_LAST - (bottomLine - lowestVisibleIssue))\n      : 0;\n\n    const displayDuplications = snippet.some(s => !!s.duplicated);\n\n    return (\n      <div className=\"source-viewer-code snippet\" ref={this.node}>\n        <table className=\"source-table\">\n          <tbody>\n            {snippet[0].line > 1 && (\n              <tr className=\"expand-block expand-block-above\">\n                <td colSpan={5}>\n                  <button\n                    aria-label={translate('source_viewer.expand_above')}\n                    onClick={this.expandBlock('up')}\n                    type=\"button\">\n                    <ExpandSnippetIcon />\n                  </button>\n                </td>\n              </tr>\n            )}\n            {snippet.map((line, index) =>\n              this.renderLine({\n                displayDuplications,\n                index,\n                issuesForLine: issuesByLine[line.line] || [],\n                issueLocations: locationsByLine[line.line] || [],\n                line,\n                snippet,\n                symbols: symbols[line.line],\n                verticalBuffer: index === snippet.length - 1 ? verticalBuffer : 0\n              })\n            )}\n            {(!lastLine || snippet[snippet.length - 1].line < lastLine) && (\n              <tr className=\"expand-block expand-block-below\">\n                <td colSpan={5}>\n                  <button\n                    aria-label={translate('source_viewer.expand_below')}\n                    onClick={this.expandBlock('down')}\n                    type=\"button\">\n                    <ExpandSnippetIcon />\n                  </button>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { createSnippets, expandSnippet, EXPAND_BY_LINES, MERGE_DISTANCE } from './utils';\nimport SnippetViewer from './SnippetViewer';\nimport { getSources } from '../../../api/components';\nimport getCoverageStatus from '../../../components/SourceViewer/helpers/getCoverageStatus';\nimport { locationsByLine } from '../../../components/SourceViewer/helpers/indexing';\nimport SourceViewerHeaderSlim from '../../../components/SourceViewer/SourceViewerHeaderSlim';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n\ninterface Props {\n  branchLike: T.BranchLike | undefined;\n  duplications?: T.Duplication[];\n  duplicationsByLine?: { [line: number]: number[] };\n  highlightedLocationMessage: { index: number; text: string | undefined } | undefined;\n  issue: T.Issue;\n  issuePopup?: { issue: string; name: string };\n  issuesByLine: T.IssuesByLine;\n  last: boolean;\n  linePopup?: T.LinePopup;\n  loadDuplications: (component: string, line: T.SourceLine) => void;\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onIssuePopupToggle: (issue: string, popupName: string, open?: boolean) => void;\n  onLinePopupToggle: (linePopup: T.LinePopup & { component: string }) => void;\n  onLocationSelect: (index: number) => void;\n  renderDuplicationPopup: (\n    component: T.SourceViewerFile,\n    index: number,\n    line: number\n  ) => React.ReactNode;\n  scroll?: (element: HTMLElement) => void;\n  snippetGroup: T.SnippetGroup;\n}\n\ninterface State {\n  additionalLines: { [line: number]: T.SourceLine };\n  highlightedSymbols: string[];\n  loading: boolean;\n  openIssuesByLine: T.Dict<boolean>;\n  snippets: T.SourceLine[][];\n}\n\nexport default class ComponentSourceSnippetViewer extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    additionalLines: {},\n    highlightedSymbols: [],\n    loading: false,\n    openIssuesByLine: {},\n    snippets: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.createSnippetsFromProps();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  createSnippetsFromProps() {\n    const snippets = createSnippets(\n      this.props.snippetGroup.locations,\n      this.props.snippetGroup.sources,\n      this.props.last,\n      this.props.issue.secondaryLocations.length > 0 ? this.props.issue : undefined\n    );\n    this.setState({ snippets });\n  }\n\n  expandBlock = (snippetIndex: number, direction: T.ExpandDirection) => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n    const { snippets } = this.state;\n\n    const snippet = snippets[snippetIndex];\n\n    // Extend by EXPAND_BY_LINES and add buffer for merging snippets\n    const extension = EXPAND_BY_LINES + MERGE_DISTANCE - 1;\n\n    const range =\n      direction === 'up'\n        ? {\n            from: Math.max(1, snippet[0].line - extension),\n            to: snippet[0].line - 1\n          }\n        : {\n            from: snippet[snippet.length - 1].line + 1,\n            to: snippet[snippet.length - 1].line + extension\n          };\n\n    getSources({\n      key,\n      ...range,\n      ...getBranchLikeQuery(branchLike)\n    })\n      .then(lines =>\n        lines.reduce((lineMap: T.Dict<T.SourceLine>, line) => {\n          line.coverageStatus = getCoverageStatus(line);\n          lineMap[line.line] = line;\n          return lineMap;\n        }, {})\n      )\n      .then(\n        newLinesMapped => {\n          if (this.mounted) {\n            this.setState(({ additionalLines, snippets }) => {\n              const combinedLines = { ...additionalLines, ...newLinesMapped };\n\n              return {\n                additionalLines: combinedLines,\n                snippets: expandSnippet({\n                  direction,\n                  lines: { ...combinedLines, ...this.props.snippetGroup.sources },\n                  snippetIndex,\n                  snippets\n                })\n              };\n            });\n          }\n        },\n        () => {}\n      );\n  };\n\n  expandComponent = () => {\n    const { branchLike, snippetGroup } = this.props;\n    const { key } = snippetGroup.component;\n\n    this.setState({ loading: true });\n\n    getSources({ key, ...getBranchLikeQuery(branchLike) }).then(\n      lines => {\n        if (this.mounted) {\n          this.setState({ loading: false, snippets: [lines] });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleLinePopupToggle = (linePopup: T.LinePopup) => {\n    this.props.onLinePopupToggle({\n      ...linePopup,\n      component: this.props.snippetGroup.component.key\n    });\n  };\n\n  handleOpenIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: true }\n    }));\n  };\n\n  handleCloseIssues = (line: T.SourceLine) => {\n    this.setState(state => ({\n      openIssuesByLine: { ...state.openIssuesByLine, [line.line]: false }\n    }));\n  };\n\n  handleSymbolClick = (highlightedSymbols: string[]) => {\n    this.setState({ highlightedSymbols });\n  };\n\n  loadDuplications = (line: T.SourceLine) => {\n    this.props.loadDuplications(this.props.snippetGroup.component.key, line);\n  };\n\n  renderDuplicationPopup = (index: number, line: number) => {\n    return this.props.renderDuplicationPopup(this.props.snippetGroup.component, index, line);\n  };\n\n  renderSnippet({\n    index,\n    issuesByLine,\n    last,\n    locationsByLine,\n    snippet\n  }: {\n    index: number;\n    issuesByLine: T.IssuesByLine;\n    last: boolean;\n    locationsByLine: { [line: number]: T.LinearIssueLocation[] };\n    snippet: T.SourceLine[];\n  }) {\n    return (\n      <SnippetViewer\n        branchLike={this.props.branchLike}\n        component={this.props.snippetGroup.component}\n        expandBlock={this.expandBlock}\n        handleCloseIssues={this.handleCloseIssues}\n        handleLinePopupToggle={this.handleLinePopupToggle}\n        handleOpenIssues={this.handleOpenIssues}\n        handleSymbolClick={this.handleSymbolClick}\n        highlightedLocationMessage={this.props.highlightedLocationMessage}\n        highlightedSymbols={this.state.highlightedSymbols}\n        index={index}\n        issue={this.props.issue}\n        issuePopup={this.props.issuePopup}\n        issuesByLine={issuesByLine}\n        key={index}\n        last={last}\n        loadDuplications={this.loadDuplications}\n        locations={this.props.locations}\n        locationsByLine={locationsByLine}\n        onIssueChange={this.props.onIssueChange}\n        onIssuePopupToggle={this.props.onIssuePopupToggle}\n        onLocationSelect={this.props.onLocationSelect}\n        openIssuesByLine={this.state.openIssuesByLine}\n        renderDuplicationPopup={this.renderDuplicationPopup}\n        scroll={this.props.scroll}\n        snippet={snippet}\n      />\n    );\n  }\n\n  render() {\n    const { branchLike, duplications, issue, issuesByLine, last, snippetGroup } = this.props;\n    const { loading, snippets } = this.state;\n    const locations = locationsByLine([issue]);\n\n    const fullyShown =\n      snippets.length === 1 &&\n      snippetGroup.component.measures &&\n      snippets[0].length === parseInt(snippetGroup.component.measures.lines || '', 10);\n\n    return (\n      <div\n        className={classNames('component-source-container', {\n          'source-duplications-expanded': duplications && duplications.length > 0\n        })}>\n        <SourceViewerHeaderSlim\n          branchLike={branchLike}\n          expandable={!fullyShown}\n          loading={loading}\n          onExpand={this.expandComponent}\n          sourceViewerFile={snippetGroup.component}\n        />\n        {snippets.map((snippet, index) =>\n          this.renderSnippet({\n            snippet,\n            index,\n            issuesByLine: last ? issuesByLine : {},\n            locationsByLine: last && index === snippets.length - 1 ? locations : {},\n            last: last && index === snippets.length - 1\n          })\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ComponentSourceSnippetViewer from './ComponentSourceSnippetViewer';\nimport { groupLocationsByComponent } from './utils';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport DuplicationPopup from '../../../components/SourceViewer/components/DuplicationPopup';\nimport { SourceViewerContext } from '../../../components/SourceViewer/SourceViewerContext';\nimport { Alert } from '../../../components/ui/Alert';\nimport { WorkspaceContext } from '../../../components/workspace/context';\nimport { getIssueFlowSnippets } from '../../../api/issues';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport {\n  filterDuplicationBlocksByLine,\n  getDuplicationBlocksForIndex,\n  isDuplicationBlockInRemovedComponent\n} from '../../../components/SourceViewer/helpers/duplications';\nimport {\n  duplicationsByLine,\n  issuesByComponentAndLine\n} from '../../../components/SourceViewer/helpers/indexing';\nimport { getDuplications } from '../../../api/components';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  branchLike: T.Branch | T.PullRequest | undefined;\n  highlightedLocationMessage?: { index: number; text: string | undefined };\n  issue: T.Issue;\n  issues: T.Issue[];\n  locations: T.FlowLocation[];\n  onIssueChange: (issue: T.Issue) => void;\n  onLoaded?: () => void;\n  onLocationSelect: (index: number) => void;\n  scroll?: (element: HTMLElement) => void;\n  selectedFlowIndex: number | undefined;\n}\n\ninterface State {\n  components: T.Dict<T.SnippetsByComponent>;\n  duplicatedFiles?: T.Dict<T.DuplicatedFile>;\n  duplications?: T.Duplication[];\n  duplicationsByLine: { [line: number]: number[] };\n  issuePopup?: { issue: string; name: string };\n  linePopup?: T.LinePopup & { component: string };\n  loading: boolean;\n  notAccessible: boolean;\n}\n\nexport default class CrossComponentSourceViewerWrapper extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    components: {},\n    duplicationsByLine: {},\n    loading: true,\n    notAccessible: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIssueFlowSnippets(this.props.issue.key);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.issue.key !== this.props.issue.key) {\n      this.fetchIssueFlowSnippets(newProps.issue.key);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDuplications = (component: string, line: T.SourceLine) => {\n    getDuplications({\n      key: component,\n      ...getBranchLikeQuery(this.props.branchLike)\n    }).then(\n      r => {\n        if (this.mounted) {\n          this.setState(state => ({\n            duplicatedFiles: r.files,\n            duplications: r.duplications,\n            duplicationsByLine: duplicationsByLine(r.duplications),\n            linePopup:\n              r.duplications.length === 1\n                ? { component, index: 0, line: line.line, name: 'duplications' }\n                : state.linePopup\n          }));\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchIssueFlowSnippets(issueKey: string) {\n    this.setState({ loading: true });\n    getIssueFlowSnippets(issueKey).then(\n      components => {\n        if (this.mounted) {\n          this.setState({\n            components,\n            issuePopup: undefined,\n            linePopup: undefined,\n            loading: false\n          });\n          if (this.props.onLoaded) {\n            this.props.onLoaded();\n          }\n        }\n      },\n      ({ response }: { response: Response }) => {\n        if (response.status !== 403) {\n          throwGlobalError({ response });\n        }\n        if (this.mounted) {\n          this.setState({ loading: false, notAccessible: response.status === 403 });\n        }\n      }\n    );\n  }\n\n  handleIssuePopupToggle = (issue: string, popupName: string, open?: boolean) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.issuePopup && state.issuePopup.name === popupName && state.issuePopup.issue === issue;\n      if (open !== false && !samePopup) {\n        return { issuePopup: { issue, name: popupName } };\n      } else if (open !== true && samePopup) {\n        return { issuePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleLinePopupToggle = ({\n    component,\n    index,\n    line,\n    name,\n    open\n  }: T.LinePopup & { component: string }) => {\n    this.setState((state: State) => {\n      const samePopup =\n        state.linePopup !== undefined &&\n        state.linePopup.line === line &&\n        state.linePopup.name === name &&\n        state.linePopup.component === component &&\n        state.linePopup.index === index;\n      if (open !== false && !samePopup) {\n        return { linePopup: { component, index, line, name } };\n      } else if (open !== true && samePopup) {\n        return { linePopup: undefined };\n      }\n      return null;\n    });\n  };\n\n  handleCloseLinePopup = () => {\n    this.setState({ linePopup: undefined });\n  };\n\n  renderDuplicationPopup = (component: T.SourceViewerFile, index: number, line: number) => {\n    const { duplicatedFiles, duplications } = this.state;\n\n    if (!component || !duplicatedFiles) {\n      return null;\n    }\n\n    const blocks = getDuplicationBlocksForIndex(duplications, index);\n\n    return (\n      <WorkspaceContext.Consumer>\n        {({ openComponent }) => (\n          <DuplicationPopup\n            blocks={filterDuplicationBlocksByLine(blocks, line)}\n            branchLike={this.props.branchLike}\n            duplicatedFiles={duplicatedFiles}\n            inRemovedComponent={isDuplicationBlockInRemovedComponent(blocks)}\n            onClose={this.handleCloseLinePopup}\n            openComponent={openComponent}\n            sourceViewerFile={component}\n          />\n        )}\n      </WorkspaceContext.Consumer>\n    );\n  };\n\n  render() {\n    const { loading, notAccessible } = this.state;\n\n    if (loading) {\n      return (\n        <div>\n          <DeferredSpinner />\n        </div>\n      );\n    }\n\n    if (notAccessible) {\n      return (\n        <Alert className=\"spacer-top\" variant=\"warning\">\n          {translate('code_viewer.no_source_code_displayed_due_to_security')}\n        </Alert>\n      );\n    }\n\n    const { components, duplications, duplicationsByLine, linePopup } = this.state;\n    const issuesByComponent = issuesByComponentAndLine(this.props.issues);\n    const locationsByComponent = groupLocationsByComponent(this.props.locations, components);\n\n    return (\n      <div>\n        {locationsByComponent.map((snippetGroup, i) => {\n          let componentProps = {};\n          if (linePopup && snippetGroup.component.key === linePopup.component) {\n            componentProps = {\n              duplications,\n              duplicationsByLine,\n              linePopup: { index: linePopup.index, line: linePopup.line, name: linePopup.name }\n            };\n          }\n          return (\n            <SourceViewerContext.Provider\n              key={`${this.props.issue.key}-${this.props.selectedFlowIndex}-${i}`}\n              value={{ branchLike: this.props.branchLike, file: snippetGroup.component }}>\n              <ComponentSourceSnippetViewer\n                branchLike={this.props.branchLike}\n                highlightedLocationMessage={this.props.highlightedLocationMessage}\n                issue={this.props.issue}\n                issuePopup={this.state.issuePopup}\n                issuesByLine={issuesByComponent[snippetGroup.component.key] || {}}\n                last={i === locationsByComponent.length - 1}\n                loadDuplications={this.fetchDuplications}\n                locations={snippetGroup.locations || []}\n                onIssueChange={this.props.onIssueChange}\n                onIssuePopupToggle={this.handleIssuePopupToggle}\n                onLinePopupToggle={this.handleLinePopupToggle}\n                onLocationSelect={this.props.onLocationSelect}\n                renderDuplicationPopup={this.renderDuplicationPopup}\n                scroll={this.props.scroll}\n                snippetGroup={snippetGroup}\n                {...componentProps}\n              />\n            </SourceViewerContext.Provider>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}