{"version":3,"sources":["webpack:///./src/main/js/components/common/ScreenPositionHelper.tsx","webpack:///./src/main/js/helpers/periods.ts","webpack:///./src/main/js/components/charts/Histogram.tsx","webpack:///./src/main/js/components/charts/LanguageDistribution.tsx","webpack:///./src/main/js/components/charts/LanguageDistributionContainer.tsx","webpack:///./src/main/js/components/charts/ColorRatingsLegend.js","webpack:///./src/main/js/components/charts/BubbleChart.js","webpack:///./src/main/js/apps/component-measures/components/Breadcrumb.js","webpack:///./src/main/js/apps/component-measures/components/Breadcrumbs.js","webpack:///./src/main/js/apps/component-measures/components/MeasureFavoriteContainer.js","webpack:///./src/main/js/apps/component-measures/components/LeakPeriodLegend.js","webpack:///./src/main/js/apps/component-measures/components/MeasureHeader.js","webpack:///./src/main/js/apps/component-measures/config/domains.js","webpack:///./src/main/js/apps/component-measures/config/bubbles.js","webpack:///./src/main/js/apps/component-measures/utils.js","webpack:///./src/main/js/apps/component-measures/components/MeasureViewSelect.js","webpack:///./src/main/js/apps/component-measures/components/MetricNotFound.js","webpack:///./src/main/js/apps/component-measures/components/FilesCounter.js","webpack:///./src/main/js/apps/component-measures/components/PageActions.js","webpack:///./src/main/js/apps/component-measures/drilldown/ComponentCell.js","webpack:///./src/main/js/apps/component-measures/drilldown/MeasureCell.js","webpack:///./src/main/js/apps/component-measures/drilldown/ComponentsListRow.js","webpack:///./src/main/js/apps/component-measures/drilldown/EmptyResult.js","webpack:///./src/main/js/apps/component-measures/config/complementary.js","webpack:///./src/main/js/apps/component-measures/drilldown/ComponentsList.js","webpack:///./src/main/js/apps/component-measures/drilldown/FilesView.js","webpack:///./src/main/js/apps/component-measures/drilldown/CodeView.js","webpack:///./src/main/js/components/charts/ColorBoxLegend.js","webpack:///./src/main/js/components/charts/ColorGradientLegend.js","webpack:///./src/main/js/components/charts/TreeMapRect.js","webpack:///./src/main/js/components/charts/TreeMap.js","webpack:///./src/main/js/apps/component-measures/drilldown/TreeMapView.js","webpack:///./src/main/js/apps/component-measures/components/MeasureContent.js","webpack:///./src/main/js/apps/component-measures/components/MeasureContentContainer.js","webpack:///./src/main/js/apps/component-measures/drilldown/BubbleChart.js","webpack:///./src/main/js/apps/component-measures/components/MeasureOverview.js","webpack:///./src/main/js/apps/component-measures/components/MeasureOverviewContainer.js","webpack:///./src/main/js/apps/component-measures/sidebar/ProjectOverviewFacet.js","webpack:///./src/main/js/apps/component-measures/sidebar/FacetMeasureValue.js","webpack:///./src/main/js/apps/component-measures/sidebar/DomainFacet.js","webpack:///./src/main/js/apps/component-measures/sidebar/Sidebar.js","webpack:///./src/main/js/apps/component-measures/components/App.js","webpack:///./src/main/js/apps/component-measures/components/AppContainer.js","webpack:///./src/main/js/components/facet/FacetBox.tsx","webpack:///./src/main/js/components/facet/FacetItem.tsx","webpack:///./src/main/js/components/facet/FacetHeader.tsx","webpack:///./src/main/js/components/facet/FacetItemsList.tsx"],"names":["ScreenPositionHelper","_super","props","_this","call","this","getPosition","containerPos","container","getBoundingClientRect","top","window","pageYOffset","left","pageXOffset","debouncedOnResize","Object","lodash__WEBPACK_IMPORTED_MODULE_1__","forceUpdate","__extends","prototype","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","react__WEBPACK_IMPORTED_MODULE_0__","className","ref","children","_dates__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","getLeakPeriod","periods","index","Array","isArray","find","period","getPeriod","getPeriodLabel","parameter","modeParam","mode","_l10n__WEBPACK_IMPORTED_MODULE_0__","getPeriodDate","date","undefined","Histogram_DEFAULT_PADDING","Histogram","Histogram_extends","renderBar","d","xScale","yScale","_a","alignTicks","_b","padding","width","Math","round","x","range","y","bandwidth","index_js_exposed","height","renderValue","yValues","value","Histogram_BAR_HEIGHT","Tooltip","overlay","yTooltips","dx","dy","renderTick","yTicks","tick","historyTickClass","renderBars","bars","map","key","availableWidth","d3_scale","domain","d3_array","availableHeight","_","rangeRound","transform","LanguageDistribution_cutLanguageName","name","length","substr","__webpack_exports__","es","state","languages","rootReducer","distribution","split","point","tokens","language","lines","parseInt","data","lodash_js_exposed","langKey","l10n","lang","getLanguageName","measures","charts_Histogram","_helpers_constants__WEBPACK_IMPORTED_MODULE_3__","ColorRatingsLegend","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","classnames__WEBPACK_IMPORTED_MODULE_1___default","rating","style","borderColor","backgroundColor","_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","Bubble","apply","arguments","handleClick","onClick","link","circle","r","fill","color","stroke","react_router__WEBPACK_IMPORTED_MODULE_1__","to","_controls_Tooltip__WEBPACK_IMPORTED_MODULE_6__","tooltip","PureComponent","BubbleChart","getXRange","sizeScale","minX","d3_array__WEBPACK_IMPORTED_MODULE_2__","items","size","maxX","getYRange","minY","maxY","dMinY","getTicks","scale","format","ticks","uniqueTicksCount","lodash__WEBPACK_IMPORTED_MODULE_4__","ticksCount","renderXGrid","displayXGrid","y1","y2","x1","x2","renderYGrid","displayYGrid","renderXTicks","xTicks","displayXTicks","innerText","formatXTick","renderYTicks","displayYTicks","formatYTick","renderChart","d3_scale__WEBPACK_IMPORTED_MODULE_3__","xDomain","nice","yDomain","sizeDomain","sizeRange","xScaleOriginal","copy","yScaleOriginal","bubbles","b","item","onBubbleClick","react_virtualized_dist_commonjs_AutoSizer__WEBPACK_IMPORTED_MODULE_5___default","disableHeight","defaultProps","Breadcrumb","e","preventDefault","target","blur","handleSelect","component","Breadcrumb_extends","canBrowse","isLast","componentName","qualifier","path","breadcrumbItem","index_js_exposed_default","href","Breadcrumbs","breadcrumbs","fetchBreadcrumbs","branchLike","rootComponent","mounted","setState","api_components","Breadcrumbs_assign","branches","then","Breadcrumbs_extends","attachShortcuts","componentWillReceiveProps","nextProps","detachShortcuts","keymaster_default","idx","backToFirst","unbind","lastItem","components_Breadcrumb","MeasureFavoriteContainer_MeasureFavoriteContainer","MeasureFavoriteContainer","MeasureFavoriteContainer_extends","fetchComponentFavorite","onReceiveComponent","canMarkAsFavorite","FavoriteContainer","componentKey","MeasureFavoriteContainer_mapDispatchToProps","dispatch","favorites","notFavorites","fav","push","duck","components_MeasureFavoriteContainer","LeakPeriodLegend_LeakPeriodLegend","leakClass","classnames_default","label","helpers_periods","DateFromNow","DateFormatter","long","MeasureHeader_MeasureHeader","leakPeriod","measure","metric","secondaryMeasure","isDiff","helpers_measures","hasHistory","IssueTypeIcon","query","Measure","metricKey","metricType","type","leak","react_router_es","urls","HistoryIcon","LanguageDistributionContainer","domains_domains","Reliability","categories","order","Security","Maintainability","Coverage","Duplications","Size","Complexity","Releasability","Issues","colors","project_overview","utils_PROJECT_OVERVEW","utils_DEFAULT_VIEW","utils_DEFAULT_METRIC","utils_KNOWN_DOMAINS","utils_BANNED_MEASURES","utils_enhanceComponent","metrics","enhancedMeasures","utils","utils_assign","utils_isFileType","includes","utils_isViewType","utils_groupByDomains","domains","indexOf","utils_hasList","utils_hasTree","utils_hasBubbleChart","domainName","utils_getBubbleMetrics","conf","utils_parseView","rawView","view","helpers_query","utils_parseQuery","urlQuery","selected","utils_serializeQuery","MeasureViewSelect","getOptions","options","ListIcon","icon","TreeIcon","utils_hasTreemap","TreemapIcon","handleChange","option","handleViewChange","MeasureViewSelect_extends","Select","autoBlur","clearable","searchable","valueRenderer","onChange","MetricNotFound_MetricNotFound","FilesCounter_FilesCounter","current","total","PageActions_PageActions","isFile","paging","totalLoadedComponents","showShortcuts","DeferredSpinner","loading","ComponentCell","isLeftClickEvent","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","ComponentCell_extends","renderInner","head","tail","parts","title","refKey","QualifierIcon","id","LinkIcon","MeasureCell_MeasureCell","ComponentsListRow_ComponentsListRow","otherMeasures","otherMetrics","ComponentsListRow_assign","rowClass","isSelected","drilldown_ComponentCell","EmptyResult_EmptyResult","complementary","coverage","line_coverage","branch_coverage","uncovered_lines","uncovered_conditions","new_coverage","new_line_coverage","new_branch_coverage","new_uncovered_lines","new_uncovered_conditions","duplicated_lines_density","new_duplicated_lines_density","duplicated_lines","new_duplicated_lines","ComponentsList_ComponentsList","components","selectedComponent","ListView","openSelected","selectedKey","handleOpen","selectPrevious","selectedIdx","selectNext","scrollToElement","listContainer","elem","getElementsByClassName","scrolling","topOffset","bottomOffset","FilesView_extends","componentDidUpdate","prevProps","action","ListFooter","count","loadMore","fetchMore","CodeView","prevComponent","updateSelected","nextComponent","CodeView_extends","SourceViewer","ColorBoxLegend_ColorBoxLegend","colorScale","colorNA","colorDomain","colorRange","ColorGradientLegend_NA_SPACING","ColorGradientLegend_ColorGradientLegend","direction","reverse","lastColorIdx","lastDomainIdx","widthNoPadding","rectHeight","offset","stopColor","TreeMapRect_SIZE_SCALE","clamp","TreeMapRect","handleLinkClick","stopPropagation","handleRectClick","itemKey","renderLink","renderCell","cellStyles","fontSize","lineHeight","cursor","isTextVisible","isIconVisible","prefix","role","tabIndex","maxWidth","spacer-right","dangerouslySetInnerHTML","__html","TreeMapRect_extends","placement","TreeMap","mostCommitPrefix","labels","sortedLabels","slice","sort","firstLabel","firstLabelLength","lastLabel","i","charAt","prefixTokens","lastPrefixPart","TreeMap_extends","renderNoData","hierarchy","d3_hierarchy","sum","nodes","treemap","leaves","halfWidth","node","charts_TreeMapRect","x0","y0","onRectangleClick","TreeMapView_COLORS","theme","TreeMapView_LEVEL_COLORS","TreeMapView","getTreemapComponents","getColorScale","colorMeasure","sizeMeasure","colorValue","sizeValue","getTooltip","filter","Boolean","getLevelColorScale","getPercentColorScale","getRatingColorScale","colorMetric","sizeMetric","formatted","treemapItems","TreeMapView_extends","renderLegend","AutoSizer_default","charts_TreeMap","MeasureContent","getSelectedIndex","findIndex","getComponentRequestParams","strategy","metricKeys","opts","MeasureContent_assign","metricSortFilter","metricPeriodSort","metricSort","s","asc","ps","fetchComponents","updateLoading","c","fetchMoreComponents","concat","onOpenComponent","router","focus","onSelectComponent","MeasureContent_extends","renderCode","drilldown_CodeView","renderMeasure","FilesView","drilldown_TreeMapView","currentUser","isLoggedIn","components_Breadcrumbs","components_MeasureViewSelect","updateView","MeasureContentContainer","fetchMeasure","fetchMeasures","MeasureContentContainer_assign","updateQuery","MeasureContentContainer_extends","components_MeasureContent","getMeasureVal","Number","handleBubbleClick","BubbleChart_extends","values","inner","forEach","line","Fragment","renderBubbleChart","constants","max","charts_BubbleChart","renderChartHeader","colorsMetric","renderChartFooter","description","translatedDescription","MeasureOverview_BUBBLES_LIMIT","MeasureOverview","metricsKey","MeasureOverview_assign","MeasureOverview_extends","renderContent","drilldown_BubbleChart","MeasureOverviewContainer","fetchComponent","MeasureOverviewContainer_assign","MeasureOverviewContainer_extends","components_MeasureOverview","ProjectOverviewFacet_ProjectOverviewFacet","facetName","FacetBox","property","FacetItemsList","FacetItem","active","disabled","mouseEnterDelay","FacetMeasureValue_FacetMeasureValue","DomainFacet","handleHeaderClick","onToggle","hasFacetSelected","measureSelected","overviewSelected","getValues","renderItemFacetStat","renderItemsFacet","utils_addMeasureCategories","translateMetric","some","sortedItems","configOrder","utils_sortMeasures","stat","renderOverviewFacet","BubblesIcon","DomainFacet_extends","helper","translatedHelper","FacetHeader","open","Sidebar","getOpenFacets","openFacets","selectedMetric","newOpenFacets","Sidebar_assign","toggleFacet","resetSelection","utils_getDefaultView","changeMetric","Sidebar_extends","sidebar_DomainFacet","App","filteredKeys","newQuery","App_assign","location","pathname","App_extends","document","body","classList","add","documentElement","fetchMetrics","setScope","footer","getElementById","remove","deleteScope","Helmet_default","sidebar_Sidebar","components_MeasureContentContainer","components_MeasureOverviewContainer","AppContainer_mapDispatchToProps","getState","Promise","resolve","api_measures","AppContainer_assign","additionalFields","bannedMetrics","applicationPeriods","throwGlobalError","rootActions","components_App","classnames__WEBPACK_IMPORTED_MODULE_1__","data-property","event","currentTarget","search-navigator-facet-half","data-facet","renderHelper","_controls_Tooltip__WEBPACK_IMPORTED_MODULE_3__","_icons_components_HelpIcon__WEBPACK_IMPORTED_MODULE_2__","renderValueIndicator","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","showClearButton","onClear","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_1__","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"js/266.a257fed0.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { debounce } from 'lodash';\n\ninterface Props {\n  className?: string;\n  children: (position: { top: number; left: number }) => React.ReactElement<any>;\n}\n\nexport default class ScreenPositionHelper extends React.PureComponent<Props> {\n  container?: HTMLDivElement;\n  debouncedOnResize: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedOnResize = debounce(() => this.forceUpdate(), 250);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    window.addEventListener('resize', this.debouncedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedOnResize);\n  }\n\n  getPosition = () => {\n    const containerPos = this.container && this.container.getBoundingClientRect();\n    if (!containerPos) {\n      return { top: 0, left: 0 };\n    }\n    return {\n      top: window.pageYOffset + containerPos.top,\n      left: window.pageXOffset + containerPos.left\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={container => (this.container = container as HTMLDivElement)}>\n        {this.props.children(this.getPosition())}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { translate, translateWithParameters } from './l10n';\nimport { parseDate } from './dates';\n\nexport interface Period {\n  date: string;\n  index: number;\n  mode: string;\n  modeParam?: string;\n  parameter: string;\n}\n\nexport function getPeriod(periods: Period[] | undefined, index: number): Period | undefined {\n  if (!Array.isArray(periods)) {\n    return undefined;\n  }\n\n  return periods.find(period => period.index === index);\n}\n\nexport function getLeakPeriod(periods: Period[] | undefined): Period | undefined {\n  return getPeriod(periods, 1);\n}\n\nexport function getPeriodLabel(period: Period | undefined): string | undefined {\n  if (!period) {\n    return undefined;\n  }\n\n  const parameter = period.modeParam || period.parameter;\n\n  if (period.mode === 'previous_version' && !parameter) {\n    return translate('overview.period.previous_version_only_date');\n  }\n\n  return translateWithParameters(`overview.period.${period.mode}`, parameter);\n}\n\nexport function getPeriodDate(period?: { date?: string }): Date | undefined {\n  return period && period.date ? parseDate(period.date) : undefined;\n}\n\nexport function getLeakPeriodLabel(periods: Period[]): string | undefined {\n  return getPeriodLabel(getLeakPeriod(periods));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { max } from 'd3-array';\nimport { scaleLinear, scaleBand, ScaleLinear, ScaleBand } from 'd3-scale';\nimport Tooltip from '../controls/Tooltip';\n\ninterface Props {\n  alignTicks?: boolean;\n  bars: number[];\n  height: number;\n  padding?: [number, number, number, number];\n  yTicks?: string[];\n  yTooltips?: string[];\n  yValues?: string[];\n  width: number;\n}\n\nconst BAR_HEIGHT = 10;\nconst DEFAULT_PADDING = [10, 10, 10, 10];\n\ntype XScale = ScaleLinear<number, number>;\ntype YScale = ScaleBand<number>;\n\nexport default class Histogram extends React.PureComponent<Props> {\n  renderBar(d: number, index: number, xScale: XScale, yScale: YScale) {\n    const { alignTicks, padding = DEFAULT_PADDING } = this.props;\n\n    const width = Math.round(xScale(d)) + /* minimum bar width */ 1;\n    const x = xScale.range()[0] + (alignTicks ? padding[3] : 0);\n    const y = Math.round(yScale(index)! + yScale.bandwidth() / 2);\n\n    return <rect className=\"bar-chart-bar\" x={x} y={y} width={width} height={BAR_HEIGHT} />;\n  }\n\n  renderValue(d: number, index: number, xScale: XScale, yScale: YScale) {\n    const { alignTicks, padding = DEFAULT_PADDING, yValues } = this.props;\n\n    const value = yValues && yValues[index];\n\n    if (!value) {\n      return null;\n    }\n\n    const x = xScale(d) + (alignTicks ? padding[3] : 0);\n    const y = Math.round(yScale(index)! + yScale.bandwidth() / 2 + BAR_HEIGHT / 2);\n\n    return (\n      <Tooltip overlay={this.props.yTooltips && this.props.yTooltips[index]}>\n        <text className=\"bar-chart-tick histogram-value\" x={x} y={y} dx=\"1em\" dy=\"0.3em\">\n          {value}\n        </text>\n      </Tooltip>\n    );\n  }\n\n  renderTick(index: number, xScale: XScale, yScale: YScale) {\n    const { alignTicks, yTicks } = this.props;\n\n    const tick = yTicks && yTicks[index];\n\n    if (!tick) {\n      return null;\n    }\n\n    const x = xScale.range()[0];\n    const y = Math.round(yScale(index)! + yScale.bandwidth() / 2 + BAR_HEIGHT / 2);\n    const historyTickClass = alignTicks ? 'histogram-tick-start' : 'histogram-tick';\n\n    return (\n      <text\n        className={'bar-chart-tick ' + historyTickClass}\n        x={x}\n        y={y}\n        dx={alignTicks ? 0 : '-1em'}\n        dy=\"0.3em\">\n        {tick}\n      </text>\n    );\n  }\n\n  renderBars(xScale: XScale, yScale: YScale) {\n    return (\n      <g>\n        {this.props.bars.map((d, index) => {\n          return (\n            <g key={index}>\n              {this.renderBar(d, index, xScale, yScale)}\n              {this.renderValue(d, index, xScale, yScale)}\n              {this.renderTick(index, xScale, yScale)}\n            </g>\n          );\n        })}\n      </g>\n    );\n  }\n\n  render() {\n    const { bars, width, height, padding = DEFAULT_PADDING } = this.props;\n\n    const availableWidth = width - padding[1] - padding[3];\n    const xScale: XScale = scaleLinear()\n      .domain([0, max(bars)!])\n      .range([0, availableWidth]);\n\n    const availableHeight = height - padding[0] - padding[2];\n    const yScale: YScale = scaleBand<number>()\n      .domain(bars.map((_, index) => index))\n      .rangeRound([0, availableHeight]);\n\n    return (\n      <svg className=\"bar-chart\" width={this.props.width} height={this.props.height}>\n        <g transform={`translate(${this.props.alignTicks ? 4 : padding[3]}, ${padding[0]})`}>\n          {this.renderBars(xScale, yScale)}\n        </g>\n      </svg>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { find, sortBy } from 'lodash';\nimport Histogram from './Histogram';\nimport { formatMeasure } from '../../helpers/measures';\nimport { Language } from '../../api/languages';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  alignTicks?: boolean;\n  distribution: string;\n  languages?: Language[];\n  width: number;\n}\n\nexport default function LanguageDistribution(props: Props) {\n  let distribution = props.distribution.split(';').map(point => {\n    const tokens = point.split('=');\n    return { language: tokens[0], lines: parseInt(tokens[1], 10) };\n  });\n\n  distribution = sortBy(distribution, d => -d.lines);\n\n  const data = distribution.map(d => d.lines);\n  const yTicks = distribution.map(d => getLanguageName(d.language)).map(cutLanguageName);\n  const yTooltips = distribution.map(d => (d.lines > 1000 ? formatMeasure(d.lines, 'INT') : ''));\n  const yValues = distribution.map(d => formatMeasure(d.lines, 'SHORT_INT'));\n\n  return (\n    <Histogram\n      alignTicks={props.alignTicks}\n      bars={data}\n      height={distribution.length * 25}\n      padding={[0, 60, 0, 80]}\n      yTicks={yTicks}\n      yTooltips={yTooltips}\n      yValues={yValues}\n      width={props.width}\n    />\n  );\n\n  function getLanguageName(langKey: string) {\n    if (langKey === '<null>') {\n      return translate('unknown');\n    }\n    const lang = find(props.languages, { key: langKey });\n    return lang ? lang.name : langKey;\n  }\n}\n\nfunction cutLanguageName(name: string) {\n  return name.length > 10 ? `${name.substr(0, 7)}...` : name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport LanguageDistribution from './LanguageDistribution';\nimport { getLanguages } from '../../store/rootReducer';\n\nconst mapStateToProps = (state: any) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect<any, any, any>(mapStateToProps)(LanguageDistribution);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport { formatMeasure } from '../../helpers/measures';\nimport { RATING_COLORS } from '../../helpers/constants';\n\nexport default function ColorRatingsLegend({ className } /*: { className?: string } */) {\n  return (\n    <div className={classNames('color-box-legend', className)}>\n      {[1, 2, 3, 4, 5].map(rating => (\n        <div key={rating}>\n          <span\n            className=\"color-box-legend-rect\"\n            style={{ borderColor: RATING_COLORS[rating - 1] }}>\n            <span\n              className=\"color-box-legend-rect-inner\"\n              style={{ backgroundColor: RATING_COLORS[rating - 1] }}\n            />\n          </span>\n          {formatMeasure(rating, 'RATING')}\n        </div>\n      ))}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { Link } from 'react-router';\nimport { min, max } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\nimport { sortBy, uniq } from 'lodash';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Tooltip from '../controls/Tooltip';\n\n/*::\ntype Scale = {\n  (number): number,\n  range: () => [number, number],\n  ticks: number => Array<number>\n};\n*/\n\nconst TICKS_COUNT = 5;\n\nexport class Bubble extends React.PureComponent {\n  /*:: props: {\n    color?: string,\n    link?: string,\n    onClick: (?string) => void,\n    r: number,\n    tooltip?: string | React$Element<*>,\n    x: number,\n    y: number\n  };\n*/\n\n  handleClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.link);\n    }\n  };\n\n  render() {\n    let circle = (\n      <circle\n        className=\"bubble-chart-bubble\"\n        onClick={this.props.onClick ? this.handleClick : undefined}\n        r={this.props.r}\n        style={{ fill: this.props.color, stroke: this.props.color }}\n        transform={`translate(${this.props.x}, ${this.props.y})`}\n      />\n    );\n\n    if (this.props.link && !this.props.onClick) {\n      circle = <Link to={this.props.link}>{circle}</Link>;\n    }\n\n    return (\n      <Tooltip overlay={this.props.tooltip || undefined}>\n        <g>{circle}</g>\n      </Tooltip>\n    );\n  }\n}\n\nexport default class BubbleChart extends React.PureComponent {\n  /*:: props: {|\n    items: Array<{|\n      x: number,\n      y: number,\n      size: number,\n      color?: string,\n      key?: string,\n      link?: string,\n      tooltip?: string | React$Element<*>\n    |}>,\n    sizeRange?: [number, number],\n    displayXGrid: boolean,\n    displayXTicks: boolean,\n    displayYGrid: boolean,\n    displayYTicks: boolean,\n    height: number,\n    padding: [number, number, number, number],\n    formatXTick: number => string,\n    formatYTick: number => string,\n    onBubbleClick?: (?string) => void,\n    xDomain?: [number, number],\n    yDomain?: [number, number]\n  |};\n*/\n\n  static defaultProps = {\n    sizeRange: [5, 45],\n    displayXGrid: true,\n    displayYGrid: true,\n    displayXTicks: true,\n    displayYTicks: true,\n    padding: [10, 10, 10, 10],\n    formatXTick: d => d,\n    formatYTick: d => d\n  };\n\n  getXRange(xScale /*: Scale */, sizeScale /*: Scale */, availableWidth /*: number */) {\n    const minX = min(this.props.items, d => xScale(d.x) - sizeScale(d.size));\n    const maxX = max(this.props.items, d => xScale(d.x) + sizeScale(d.size));\n    const dMinX = minX < 0 ? xScale.range()[0] - minX : xScale.range()[0];\n    const dMaxX = maxX > xScale.range()[1] ? maxX - xScale.range()[1] : 0;\n    return [dMinX, availableWidth - dMaxX];\n  }\n\n  getYRange(yScale /*: Scale */, sizeScale /*: Scale */, availableHeight /*: number */) {\n    const minY = min(this.props.items, d => yScale(d.y) - sizeScale(d.size));\n    const maxY = max(this.props.items, d => yScale(d.y) + sizeScale(d.size));\n    const dMinY = minY < 0 ? yScale.range()[1] - minY : yScale.range()[1];\n    const dMaxY = maxY > yScale.range()[0] ? maxY - yScale.range()[0] : 0;\n    return [availableHeight - dMaxY, dMinY];\n  }\n\n  getTicks(scale /*: Scale */, format /*: number => string */) {\n    const ticks = scale.ticks(TICKS_COUNT).map(tick => format(tick));\n    const uniqueTicksCount = uniq(ticks).length;\n    const ticksCount = uniqueTicksCount < TICKS_COUNT ? uniqueTicksCount - 1 : TICKS_COUNT;\n    return scale.ticks(ticksCount);\n  }\n\n  renderXGrid(ticks /*: Array<number> */, xScale /*: Scale */, yScale /*: Scale */) {\n    if (!this.props.displayXGrid) {\n      return null;\n    }\n\n    const lines = ticks.map((tick, index) => {\n      const x = xScale(tick);\n      const y1 = yScale.range()[0];\n      const y2 = yScale.range()[1];\n      return <line key={index} x1={x} x2={x} y1={y1} y2={y2} className=\"bubble-chart-grid\" />;\n    });\n\n    return <g ref=\"xGrid\">{lines}</g>;\n  }\n\n  renderYGrid(ticks /*: Array<number> */, xScale /*: Scale */, yScale /*: Scale */) {\n    if (!this.props.displayYGrid) {\n      return null;\n    }\n\n    const lines = ticks.map((tick, index) => {\n      const y = yScale(tick);\n      const x1 = xScale.range()[0];\n      const x2 = xScale.range()[1];\n      return <line key={index} x1={x1} x2={x2} y1={y} y2={y} className=\"bubble-chart-grid\" />;\n    });\n\n    return <g ref=\"yGrid\">{lines}</g>;\n  }\n\n  renderXTicks(xTicks /*: Array<number> */, xScale /*: Scale */, yScale /*: Scale */) {\n    if (!this.props.displayXTicks) {\n      return null;\n    }\n\n    const ticks = xTicks.map((tick, index) => {\n      const x = xScale(tick);\n      const y = yScale.range()[0];\n      const innerText = this.props.formatXTick(tick);\n      return (\n        <text key={index} className=\"bubble-chart-tick\" x={x} y={y} dy=\"1.5em\">\n          {innerText}\n        </text>\n      );\n    });\n\n    return <g>{ticks}</g>;\n  }\n\n  renderYTicks(yTicks /*: Array<number> */, xScale /*: Scale */, yScale /*: Scale */) {\n    if (!this.props.displayYTicks) {\n      return null;\n    }\n\n    const ticks = yTicks.map((tick, index) => {\n      const x = xScale.range()[0];\n      const y = yScale(tick);\n      const innerText = this.props.formatYTick(tick);\n      return (\n        <text\n          key={index}\n          className=\"bubble-chart-tick bubble-chart-tick-y\"\n          x={x}\n          y={y}\n          dx=\"-0.5em\"\n          dy=\"0.3em\">\n          {innerText}\n        </text>\n      );\n    });\n\n    return <g>{ticks}</g>;\n  }\n\n  renderChart(width /*: number */) {\n    const availableWidth = width - this.props.padding[1] - this.props.padding[3];\n    const availableHeight = this.props.height - this.props.padding[0] - this.props.padding[2];\n\n    const xScale = scaleLinear()\n      .domain(this.props.xDomain || [0, max(this.props.items, d => d.x)])\n      .range([0, availableWidth])\n      .nice();\n    const yScale = scaleLinear()\n      .domain(this.props.yDomain || [0, max(this.props.items, d => d.y)])\n      .range([availableHeight, 0])\n      .nice();\n    const sizeScale = scaleLinear()\n      .domain(this.props.sizeDomain || [0, max(this.props.items, d => d.size)])\n      .range(this.props.sizeRange);\n\n    const xScaleOriginal = xScale.copy();\n    const yScaleOriginal = yScale.copy();\n\n    xScale.range(this.getXRange(xScale, sizeScale, availableWidth));\n    yScale.range(this.getYRange(yScale, sizeScale, availableHeight));\n\n    const bubbles = sortBy(this.props.items, b => -b.size).map((item, index) => {\n      return (\n        <Bubble\n          key={item.key || index}\n          link={item.link}\n          tooltip={item.tooltip}\n          x={xScale(item.x)}\n          y={yScale(item.y)}\n          r={sizeScale(item.size)}\n          color={item.color}\n          onClick={this.props.onBubbleClick}\n        />\n      );\n    });\n\n    const xTicks = this.getTicks(xScale, this.props.formatXTick);\n    const yTicks = this.getTicks(yScale, this.props.formatYTick);\n\n    return (\n      <svg className=\"bubble-chart\" width={width} height={this.props.height}>\n        <g transform={`translate(${this.props.padding[3]}, ${this.props.padding[0]})`}>\n          {this.renderXGrid(xTicks, xScale, yScale)}\n          {this.renderXTicks(xTicks, xScale, yScaleOriginal)}\n          {this.renderYGrid(yTicks, xScale, yScale)}\n          {this.renderYTicks(yTicks, xScaleOriginal, yScale)}\n          {bubbles}\n        </g>\n      </svg>\n    );\n  }\n\n  render() {\n    return <AutoSizer disableHeight={true}>{size => this.renderChart(size.width)}</AutoSizer>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { collapsePath, limitComponentName } from '../../../helpers/path';\n/*:: import type { Component } from '../types'; */\n\n/*:: type Props = {\n  canBrowse: boolean,\n  component: Component,\n  isLast: boolean,\n  handleSelect: string => void\n}; */\n\nexport default class Breadcrumb extends React.PureComponent {\n  /*:: props: Props; */\n\n  handleClick = (e /*: Event & { target: HTMLElement } */) => {\n    e.preventDefault();\n    e.target.blur();\n    this.props.handleSelect(this.props.component.key);\n  };\n\n  render() {\n    const { canBrowse, component, isLast } = this.props;\n    const isPath = component.qualifier === 'DIR';\n    const componentName = isPath\n      ? collapsePath(component.name, 15)\n      : limitComponentName(component.name);\n    const breadcrumbItem = canBrowse ? (\n      <a href=\"#\" onClick={this.handleClick}>\n        {componentName}\n      </a>\n    ) : (\n      <span>{componentName}</span>\n    );\n\n    return (\n      <span>\n        <Tooltip overlay={component.name !== componentName ? component.name : undefined}>\n          {breadcrumbItem}\n        </Tooltip>\n        {!isLast && <span className=\"slash-separator\" />}\n      </span>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport key from 'keymaster';\nimport Breadcrumb from './Breadcrumb';\nimport { getBreadcrumbs } from '../../../api/components';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n/*:: import type { Component } from '../types'; */\n\n/*:: type Props = {|\n  backToFirst: boolean,\n  branchLike?: { id?: string, name: string },\n  className?: string,\n  component: Component,\n  handleSelect: string => void,\n  rootComponent: Component\n|}; */\n\n/*:: type State = {\n  breadcrumbs: Array<Component>\n}; */\n\nexport default class Breadcrumbs extends React.PureComponent {\n  /*:: mounted: boolean; */\n  /*:: props: Props; */\n  state /*: State */ = {\n    breadcrumbs: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBreadcrumbs(this.props);\n    this.attachShortcuts();\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (this.props.component !== nextProps.component) {\n      this.fetchBreadcrumbs(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    this.detachShortcuts();\n  }\n\n  attachShortcuts() {\n    key('left', 'measures-files', () => {\n      const { breadcrumbs } = this.state;\n      if (breadcrumbs.length > 1) {\n        const idx = this.props.backToFirst ? 0 : breadcrumbs.length - 2;\n        this.props.handleSelect(breadcrumbs[idx].key);\n      }\n      return false;\n    });\n  }\n\n  detachShortcuts() {\n    key.unbind('left', 'measures-files');\n  }\n\n  fetchBreadcrumbs = ({ branchLike, component, rootComponent } /*: Props */) => {\n    const isRoot = component.key === rootComponent.key;\n    if (isRoot) {\n      if (this.mounted) {\n        this.setState({ breadcrumbs: [component] });\n      }\n      return;\n    }\n    getBreadcrumbs({ component: component.key, ...getBranchLikeQuery(branchLike) }).then(\n      breadcrumbs => {\n        if (this.mounted) {\n          this.setState({ breadcrumbs });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { breadcrumbs } = this.state;\n    if (breadcrumbs.length <= 0) {\n      return null;\n    }\n    const lastItem = breadcrumbs[breadcrumbs.length - 1];\n    return (\n      <div className={this.props.className}>\n        {breadcrumbs.map(component => (\n          <Breadcrumb\n            key={component.key}\n            canBrowse={component.key !== lastItem.key}\n            component={component}\n            isLast={component.key === lastItem.key}\n            handleSelect={this.props.handleSelect}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FavoriteContainer from '../../../components/controls/FavoriteContainer';\nimport { getComponentForSourceViewer } from '../../../api/components';\nimport { receiveFavorites } from '../../../store/favorites/duck';\nimport { isMainBranch } from '../../../helpers/branches';\n\n/*:: type FavComponent = { key: string, canMarkAsFavorite: boolean, fav: boolean }; */\n\n/*:: type Props = {\n  branchLike?: { id?: string; name: string },\n  className?: string,\n  component: string,\n  onReceiveComponent: (component: FavComponent) => void\n}; */\n\n/*:: type State = { component: ?FavComponent }; */\n\nclass MeasureFavoriteContainer extends React.PureComponent {\n  /*:: mounted: boolean; */\n  /*:: props: Props; */\n  state /*: State */ = {\n    component: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponentFavorite(this.props);\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (nextProps.component !== this.props.component) {\n      this.fetchComponentFavorite(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchComponentFavorite({ component, onReceiveComponent } /*: Props */) {\n    getComponentForSourceViewer({ component }).then(component => {\n      this.setState({ component });\n      onReceiveComponent(component);\n    });\n  }\n\n  render() {\n    const { component } = this.state;\n    if (\n      component == null ||\n      !component.canMarkAsFavorite ||\n      (this.props.branchLike && !isMainBranch(this.props.branchLike))\n    ) {\n      return null;\n    }\n    return (\n      <FavoriteContainer className={this.props.className} componentKey={this.props.component} />\n    );\n  }\n}\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = {\n  onReceiveComponent: (component /*: FavComponent */) => dispatch => {\n    if (component.canMarkAsFavorite) {\n      const favorites = [];\n      const notFavorites = [];\n      if (component.fav) {\n        favorites.push({ key: component.key });\n      } else {\n        notFavorites.push({ key: component.key });\n      }\n      dispatch(receiveFavorites(favorites, notFavorites));\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasureFavoriteContainer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { getPeriodLabel, getPeriodDate } from '../../../helpers/periods';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n/*:: import type { Component, Period } from '../types'; */\n\n/*:: type Props = {\n  className?: string,\n  component: Component,\n  period: Period\n}; */\n\nexport default function LeakPeriodLegend({ className, component, period } /*: Props */) {\n  const leakClass = classNames('domain-measures-leak-header', className);\n  if (component.qualifier === 'APP') {\n    return <div className={leakClass}>{translate('issues.leak_period')}</div>;\n  }\n\n  const label = (\n    <div className={leakClass}>\n      {translateWithParameters('overview.leak_period_x', getPeriodLabel(period))}\n    </div>\n  );\n\n  if (period.mode === 'days') {\n    return label;\n  }\n\n  const date = getPeriodDate(period);\n  const tooltip = (\n    <div>\n      <DateFromNow date={date} />\n      {', '}\n      <DateFormatter date={date} long={true} />\n    </div>\n  );\n  return <Tooltip overlay={tooltip}>{label}</Tooltip>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { Link } from 'react-router';\nimport LeakPeriodLegend from './LeakPeriodLegend';\nimport HistoryIcon from '../../../components/icons-components/HistoryIcon';\nimport IssueTypeIcon from '../../../components/ui/IssueTypeIcon';\nimport LanguageDistributionContainer from '../../../components/charts/LanguageDistributionContainer';\nimport Measure from '../../../components/measure/Measure';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { getLocalizedMetricName, translate } from '../../../helpers/l10n';\nimport { getMeasureHistoryUrl } from '../../../helpers/urls';\nimport { isDiffMetric } from '../../../helpers/measures';\n/*:: import type { Component, Period } from '../types'; */\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  component: Component,\n  components: Array<Component>,\n  leakPeriod?: Period,\n  measure?: MeasureEnhanced,\n  metric: Metric,\n  secondaryMeasure: ?MeasureEnhanced\n|}; */\n\nexport default function MeasureHeader(props /*: Props*/) {\n  const { branchLike, component, leakPeriod, measure, metric, secondaryMeasure } = props;\n  const isDiff = isDiffMetric(metric.key);\n  const hasHistory = component.qualifier !== 'FIL' && component.qualifier !== 'UTS';\n  return (\n    <div className=\"measure-details-header big-spacer-bottom\">\n      <div className=\"measure-details-primary\">\n        <div className=\"measure-details-metric\">\n          <IssueTypeIcon className=\"little-spacer-right text-text-bottom\" query={metric.key} />\n          {getLocalizedMetricName(metric)}\n          <span className=\"measure-details-value spacer-left\">\n            <strong>\n              {isDiff ? (\n                <Measure\n                  className=\"domain-measures-leak\"\n                  metricKey={metric.key}\n                  metricType={metric.type}\n                  value={measure && measure.leak}\n                />\n              ) : (\n                <Measure\n                  metricKey={metric.key}\n                  metricType={metric.type}\n                  value={measure && measure.value}\n                />\n              )}\n            </strong>\n          </span>\n          {!isDiff &&\n            hasHistory && (\n              <Tooltip overlay={translate('component_measures.show_metric_history')}>\n                <Link\n                  className=\"js-show-history spacer-left button button-small\"\n                  to={getMeasureHistoryUrl(component.key, metric.key, branchLike)}>\n                  <HistoryIcon />\n                </Link>\n              </Tooltip>\n            )}\n        </div>\n        <div className=\"measure-details-primary-actions\">\n          {leakPeriod != null && (\n            <LeakPeriodLegend className=\"spacer-left\" component={component} period={leakPeriod} />\n          )}\n        </div>\n      </div>\n      {secondaryMeasure &&\n        secondaryMeasure.metric.key === 'ncloc_language_distribution' && (\n          <div className=\"measure-details-secondary\">\n            <LanguageDistributionContainer\n              alignTicks={true}\n              distribution={secondaryMeasure.value}\n              width={260}\n            />\n          </div>\n        )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nexport const domains /*: { [string]: { categories?: Array<string>, order: Array<string> } }*/ = {\n  Reliability: {\n    categories: ['new_code_category', 'overall_category'],\n    order: [\n      'new_code_category',\n      'new_bugs',\n      'new_reliability_rating',\n      'new_reliability_remediation_effort',\n\n      'overall_category',\n      'bugs',\n      'reliability_rating',\n      'reliability_remediation_effort'\n    ]\n  },\n\n  Security: {\n    categories: ['new_code_category', 'overall_category'],\n    order: [\n      'new_code_category',\n      'new_vulnerabilities',\n      'new_security_rating',\n      'new_security_remediation_effort',\n\n      'overall_category',\n      'vulnerabilities',\n      'security_rating',\n      'security_remediation_effort'\n    ]\n  },\n\n  Maintainability: {\n    categories: ['new_code_category', 'overall_category'],\n    order: [\n      'new_code_category',\n      'new_code_smells',\n      'new_technical_debt',\n      'new_sqale_debt_ratio',\n      'new_maintainability_rating',\n\n      'overall_category',\n      'code_smells',\n      'sqale_index',\n      'sqale_debt_ratio',\n      'sqale_rating',\n      'effort_to_reach_maintainability_rating_a'\n    ]\n  },\n\n  Coverage: {\n    categories: ['new_code_category', 'overall_category', 'tests_category'],\n    order: [\n      'new_code_category',\n      'new_coverage',\n      'new_lines_to_cover',\n      'new_uncovered_lines',\n      'new_line_coverage',\n      'new_conditions_to_cover',\n      'new_uncovered_conditions',\n      'new_branch_coverage',\n\n      'overall_category',\n      'coverage',\n      'lines_to_cover',\n      'uncovered_lines',\n      'line_coverage',\n      'conditions_to_cover',\n      'uncovered_conditions',\n      'branch_coverage',\n\n      'tests_category',\n      'tests',\n      'test_success',\n      'test_errors',\n      'test_failures',\n      'skipped_tests',\n      'test_success_density',\n      'test_execution_time'\n    ]\n  },\n\n  Duplications: {\n    categories: ['new_code_category', 'overall_category'],\n    order: [\n      'new_code_category',\n      'new_duplicated_lines_density',\n      'new_duplicated_lines',\n      'new_duplicated_blocks',\n\n      'overall_category',\n      'duplicated_lines_density',\n      'duplicated_lines',\n      'duplicated_blocks',\n      'duplicated_files'\n    ]\n  },\n\n  Size: {\n    order: [\n      'new_lines',\n\n      'ncloc',\n      'lines',\n      'statements',\n      'functions',\n      'classes',\n      'files',\n      'directories'\n    ]\n  },\n\n  Complexity: {\n    order: ['complexity', 'function_complexity', 'file_complexity', 'class_complexity']\n  },\n\n  Releasability: {\n    order: ['releasability_rating', 'releasability_effort', 'alert_status']\n  },\n\n  Issues: {\n    order: [\n      'new_violations',\n      'new_blocker_violations',\n      'new_critical_violations',\n      'new_major_violations',\n      'new_minor_violations',\n      'new_info_violations',\n\n      'violations',\n      'blocker_violations',\n      'critical_violations',\n      'major_violations',\n      'minor_violations',\n      'info_violations',\n      'open_issues',\n      'reopened_issues',\n      'confirmed_issues',\n      'false_positive_issues'\n    ]\n  }\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nexport const bubbles = {\n  Reliability: {\n    x: 'ncloc',\n    y: 'reliability_remediation_effort',\n    size: 'bugs',\n    colors: ['reliability_rating']\n  },\n  Security: {\n    x: 'ncloc',\n    y: 'security_remediation_effort',\n    size: 'vulnerabilities',\n    colors: ['security_rating']\n  },\n  Maintainability: {\n    x: 'ncloc',\n    y: 'sqale_index',\n    size: 'code_smells',\n    colors: ['sqale_rating']\n  },\n  Coverage: { x: 'complexity', y: 'coverage', size: 'uncovered_lines', yDomain: [100, 0] },\n  Duplications: { x: 'ncloc', y: 'duplicated_lines', size: 'duplicated_blocks' },\n  project_overview: {\n    x: 'sqale_index',\n    y: 'coverage',\n    size: 'ncloc',\n    colors: ['reliability_rating', 'security_rating'],\n    yDomain: [100, 0]\n  }\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport { groupBy, memoize, sortBy, toPairs } from 'lodash';\nimport { domains } from './config/domains';\nimport { bubbles } from './config/bubbles';\nimport { getLocalizedMetricName } from '../../helpers/l10n';\nimport { cleanQuery, parseAsString, serializeString } from '../../helpers/query';\nimport { enhanceMeasure } from '../../components/measure/utils';\n/*:: import type { Component, ComponentEnhanced, Query } from './types'; */\n/*:: import type { RawQuery } from '../../helpers/query'; */\n/*:: import type { Metric } from '../../store/metrics/actions'; */\n/*:: import type { MeasureEnhanced } from '../../components/measure/types'; */\n\nexport const PROJECT_OVERVEW = 'project_overview';\nexport const DEFAULT_VIEW = 'list';\nexport const DEFAULT_METRIC = PROJECT_OVERVEW;\nexport const KNOWN_DOMAINS = [\n  'Releasability',\n  'Reliability',\n  'Security',\n  'Maintainability',\n  'Coverage',\n  'Duplications',\n  'Size',\n  'Complexity'\n];\nconst BANNED_MEASURES = [\n  'blocker_violations',\n  'new_blocker_violations',\n  'critical_violations',\n  'new_critical_violations',\n  'major_violations',\n  'new_major_violations',\n  'minor_violations',\n  'new_minor_violations',\n  'info_violations',\n  'new_info_violations'\n];\n\nexport function filterMeasures(\n  measures /*: Array<MeasureEnhanced> */\n) /*: Array<MeasureEnhanced> */ {\n  return measures.filter(measure => !BANNED_MEASURES.includes(measure.metric.key));\n}\n\nexport function sortMeasures(\n  domainName /*: string */,\n  measures /*: Array<MeasureEnhanced | string> */\n) /*: Array<MeasureEnhanced | string> */ {\n  const config = domains[domainName] || {};\n  const configOrder = config.order || [];\n  return sortBy(measures, [\n    item => {\n      if (typeof item === 'string') {\n        return configOrder.indexOf(item);\n      }\n      const idx = configOrder.indexOf(item.metric.key);\n      return idx >= 0 ? idx : configOrder.length;\n    },\n    item => (typeof item === 'string' ? item : getLocalizedMetricName(item.metric))\n  ]);\n}\n\nexport function addMeasureCategories(\n  domainName /*: string */,\n  measures /*: Array<MeasureEnhanced> */\n) /*: Array<any> */ {\n  const categories = domains[domainName] && domains[domainName].categories;\n  if (categories && categories.length > 0) {\n    return [...categories, ...measures];\n  }\n  return measures;\n}\n\nexport function enhanceComponent(\n  component /*: Component */,\n  metric /*: ?Metric */,\n  metrics /*: { [string]: Metric } */\n) /*: ComponentEnhanced */ {\n  const enhancedMeasures = component.measures.map(measure => enhanceMeasure(measure, metrics));\n  // $FlowFixMe metric can't be null since there is a guard for it\n  const measure = metric && enhancedMeasures.find(measure => measure.metric.key === metric.key);\n  const value = measure ? measure.value : null;\n  const leak = measure ? measure.leak : null;\n  return { ...component, value, leak, measures: enhancedMeasures };\n}\n\nexport function isFileType(component /*: Component */) /*: boolean */ {\n  return ['FIL', 'UTS'].includes(component.qualifier);\n}\n\nexport function isViewType(component /*: Component */) /*: boolean */ {\n  return ['VW', 'SVW', 'APP'].includes(component.qualifier);\n}\n\nexport const groupByDomains = memoize((measures /*: Array<MeasureEnhanced> */) => {\n  const domains = toPairs(groupBy(measures, measure => measure.metric.domain)).map(r => ({\n    name: r[0],\n    measures: r[1]\n  }));\n\n  return sortBy(domains, [\n    domain => {\n      const idx = KNOWN_DOMAINS.indexOf(domain.name);\n      return idx >= 0 ? idx : KNOWN_DOMAINS.length;\n    },\n    'name'\n  ]);\n});\n\nexport function getDefaultView(metric /*: string */) /*: string */ {\n  if (!hasList(metric)) {\n    return 'tree';\n  }\n  return DEFAULT_VIEW;\n}\n\nexport function hasList(metric /*: string */) /*: boolean */ {\n  return !['releasability_rating', 'releasability_effort'].includes(metric);\n}\n\nexport function hasTree(metric /*: string */) /*: boolean */ {\n  return metric !== 'alert_status';\n}\n\nexport function hasTreemap(metric /*: string */, type /*: string */) /*: boolean */ {\n  return ['PERCENT', 'RATING', 'LEVEL'].includes(type) && hasTree(metric);\n}\n\nexport function hasBubbleChart(domainName /*: string */) /*: boolean */ {\n  return bubbles[domainName] != null;\n}\n\nexport function hasFacetStat(metric /*: string */) /*: boolean */ {\n  return metric !== 'alert_status';\n}\n\nexport function getBubbleMetrics(domain /*: string */, metrics /*: { [string]: Metric } */) {\n  const conf = bubbles[domain];\n  return {\n    x: metrics[conf.x],\n    y: metrics[conf.y],\n    size: metrics[conf.size],\n    colors: conf.colors ? conf.colors.map(color => metrics[color]) : null\n  };\n}\n\nexport function getBubbleYDomain(domain /*: string */) {\n  return bubbles[domain].yDomain;\n}\n\nexport function isProjectOverview(metric /*: string */) {\n  return metric === PROJECT_OVERVEW;\n}\n\nconst parseView = memoize((rawView /*:: ? */ /*: string */, metric /*: string */) => {\n  const view = parseAsString(rawView) || DEFAULT_VIEW;\n  if (!hasTree(metric)) {\n    return 'list';\n  } else if (view === 'list' && !hasList(metric)) {\n    return 'tree';\n  }\n  return view;\n});\n\nexport const parseQuery = memoize((urlQuery /*: RawQuery */) => {\n  const metric = parseAsString(urlQuery['metric']) || DEFAULT_METRIC;\n  return {\n    metric,\n    selected: parseAsString(urlQuery['selected']),\n    view: parseView(urlQuery['view'], metric)\n  };\n});\n\nexport const serializeQuery = memoize((query /*: Query */) => {\n  return cleanQuery({\n    metric: query.metric === DEFAULT_METRIC ? null : serializeString(query.metric),\n    selected: serializeString(query.selected),\n    view: query.view === DEFAULT_VIEW ? null : serializeString(query.view)\n  });\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport ListIcon from '../../../components/icons-components/ListIcon';\nimport TreeIcon from '../../../components/icons-components/TreeIcon';\nimport TreemapIcon from '../../../components/icons-components/TreemapIcon';\nimport Select from '../../../components/controls/Select';\nimport { hasList, hasTree, hasTreemap } from '../utils';\nimport { translate } from '../../../helpers/l10n';\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {\n  className?: string,\n  metric: Metric,\n  handleViewChange: (view: string) => void,\n  view: string\n}; */\n\nexport default class MeasureViewSelect extends React.PureComponent {\n  /*:: props: Props; */\n\n  getOptions = () => {\n    const { metric } = this.props;\n    const options = [];\n    if (hasList(metric.key)) {\n      options.push({\n        value: 'list',\n        label: (\n          <div>\n            <ListIcon className=\"little-spacer-right\" />\n            {translate('component_measures.tab.list')}\n          </div>\n        ),\n        icon: <ListIcon />\n      });\n    }\n    if (hasTree(metric.key)) {\n      options.push({\n        value: 'tree',\n        label: (\n          <div>\n            <TreeIcon className=\"little-spacer-right\" />\n            {translate('component_measures.tab.tree')}\n          </div>\n        ),\n        icon: <TreeIcon />\n      });\n    }\n    if (hasTreemap(metric.key, metric.type)) {\n      options.push({\n        value: 'treemap',\n        label: (\n          <div>\n            <TreemapIcon className=\"little-spacer-right\" />\n            {translate('component_measures.tab.treemap')}\n          </div>\n        ),\n        icon: <TreemapIcon />\n      });\n    }\n    return options;\n  };\n\n  handleChange = (option /*: { value: string } */) => this.props.handleViewChange(option.value);\n\n  renderValue = (value /*: { icon: Element<*> } */) => value.icon;\n\n  render() {\n    return (\n      <Select\n        autoBlur={true}\n        className={this.props.className}\n        clearable={false}\n        searchable={false}\n        value={this.props.view}\n        valueRenderer={this.renderValue}\n        options={this.getOptions()}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { translate } from '../../../helpers/l10n';\n\nexport default function MetricNotFound({ className } /*: { className?: string } */) {\n  return (\n    <div className={className}>\n      <div className=\"alert alert-danger\">{translate('component_measures.not_found')}</div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport { formatMeasure } from '../../../helpers/measures';\n\n/*:: type Props = {\n  className?: string,\n  current: ?number,\n  total: number\n}; */\n\nexport default function FilesCounter({ className, current, total } /*: Props */) {\n  return (\n    <span className={className}>\n      <strong>\n        {current != null && (\n          <span>\n            {formatMeasure(current, 'INT')}\n            {' / '}\n          </span>\n        )}\n        {formatMeasure(total, 'INT')}\n      </strong>{' '}\n      {translate('component_measures.files')}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport FilesCounter from './FilesCounter';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\n/*:: import type { Paging } from '../types'; */\n\n/*:: type Props = {|\n  current: ?number,\n  loading: boolean,\n  isFile: ?boolean,\n  paging: ?Paging,\n  totalLoadedComponents?: number,\n  view?: string\n|}; */\n\nexport default function PageActions(props /*: Props */) {\n  const { isFile, paging, totalLoadedComponents } = props;\n  const showShortcuts = ['list', 'tree'].includes(props.view);\n  return (\n    <div className=\"pull-right\">\n      {!isFile && showShortcuts && renderShortcuts()}\n      {isFile && paging && renderFileShortcuts()}\n      <div className=\"measure-details-page-actions\">\n        <DeferredSpinner loading={props.loading}>\n          <i className=\"spinner-placeholder\" />\n        </DeferredSpinner>\n        {paging != null && (\n          <FilesCounter\n            className=\"spacer-left\"\n            current={props.current}\n            total={isFile && totalLoadedComponents != null ? totalLoadedComponents : paging.total}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction renderShortcuts() {\n  return (\n    <span className=\"note big-spacer-right\">\n      <span className=\"big-spacer-right\">\n        <span className=\"shortcut-button little-spacer-right\">↑</span>\n        <span className=\"shortcut-button little-spacer-right\">↓</span>\n        {translate('component_measures.to_select_files')}\n      </span>\n\n      <span>\n        <span className=\"shortcut-button little-spacer-right\">←</span>\n        <span className=\"shortcut-button little-spacer-right\">→</span>\n        {translate('component_measures.to_navigate')}\n      </span>\n    </span>\n  );\n}\n\nfunction renderFileShortcuts() {\n  return (\n    <span className=\"note spacer-right\">\n      <span>\n        <span className=\"shortcut-button little-spacer-right\">j</span>\n        <span className=\"shortcut-button little-spacer-right\">k</span>\n        {translate('component_measures.to_navigate_files')}\n      </span>\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { Link } from 'react-router';\nimport LinkIcon from '../../../components/icons-components/LinkIcon';\nimport QualifierIcon from '../../../components/icons-components/QualifierIcon';\nimport { splitPath } from '../../../helpers/path';\nimport { getPathUrlAsString, getBranchLikeUrl } from '../../../helpers/urls';\n/*:: import type { ComponentEnhanced } from '../types'; */\n\n/*:: type Props = {\n  branchLike?: { id?: string; name: string },\n  component: ComponentEnhanced,\n  onClick: string => void\n}; */\n\nexport default class ComponentCell extends React.PureComponent {\n  /*:: props: Props; */\n\n  handleClick = (e /*: MouseEvent */) => {\n    const isLeftClickEvent = e.button === 0;\n    const isModifiedEvent = !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n\n    if (isLeftClickEvent && !isModifiedEvent) {\n      e.preventDefault();\n      this.props.onClick(this.props.component.key);\n    }\n  };\n\n  renderInner() {\n    const { component } = this.props;\n    let head = '';\n    let tail = component.name;\n\n    if (['DIR', 'FIL', 'UTS'].includes(component.qualifier)) {\n      const parts = splitPath(component.path);\n      ({ head, tail } = parts);\n    }\n    return (\n      <span title={component.refKey || component.key}>\n        <QualifierIcon qualifier={component.qualifier} />\n        &nbsp;\n        {head.length > 0 && <span className=\"note\">{head}/</span>}\n        <span>{tail}</span>\n      </span>\n    );\n  }\n\n  render() {\n    const { branchLike, component } = this.props;\n    return (\n      <td className=\"measure-details-component-cell\">\n        <div className=\"text-ellipsis\">\n          {/* TODO make this <a> link a react-router <Link /> */}\n          {component.refKey == null ? (\n            <a\n              id={'component-measures-component-link-' + component.key}\n              className=\"link-no-underline\"\n              href={getPathUrlAsString(getBranchLikeUrl(component.key, branchLike))}\n              onClick={this.handleClick}>\n              {this.renderInner()}\n            </a>\n          ) : (\n            <Link\n              className=\"link-no-underline\"\n              id={'component-measures-component-link-' + component.key}\n              to={getBranchLikeUrl(component.refKey, branchLike)}>\n              <span className=\"big-spacer-right\">\n                <LinkIcon />\n              </span>\n              {this.renderInner()}\n            </Link>\n          )}\n        </div>\n      </td>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport Measure from '../../../components/measure/Measure';\nimport { isDiffMetric } from '../../../helpers/measures';\n/*:: import type { ComponentEnhanced } from '../types'; */\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {\n  component: ComponentEnhanced,\n  measure?: MeasureEnhanced,\n  metric: Metric\n}; */\n\nexport default function MeasureCell({ component, measure, metric } /*: Props */) {\n  const getValue = (item /*: { leak?: ?string; value?: string } */) =>\n    isDiffMetric(metric.key) ? item.leak : item.value;\n\n  const value = getValue(measure || component);\n\n  return (\n    <td className=\"thin nowrap text-right\">\n      <span id={`component-measures-component-measure-${component.key}-${metric.key}`}>\n        <Measure value={value} metricKey={metric.key} metricType={metric.type} />\n      </span>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport ComponentCell from './ComponentCell';\nimport MeasureCell from './MeasureCell';\n/*:: import type { ComponentEnhanced } from '../types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  component: ComponentEnhanced,\n  isSelected: boolean,\n  onClick: string => void,\n  otherMetrics: Array<Metric>,\n  metric: Metric\n|}; */\n\nexport default function ComponentsListRow(props /*: Props */) {\n  const { branchLike, component } = props;\n  const otherMeasures = props.otherMetrics.map(metric => {\n    const measure = component.measures.find(measure => measure.metric.key === metric.key);\n    return { ...measure, metric };\n  });\n  const rowClass = classNames('measure-details-component-row', {\n    selected: props.isSelected\n  });\n  return (\n    <tr className={rowClass}>\n      <ComponentCell branchLike={branchLike} component={component} onClick={props.onClick} />\n\n      <MeasureCell component={component} metric={props.metric} />\n\n      {otherMeasures.map(measure => (\n        <MeasureCell\n          key={measure.metric.key}\n          component={component}\n          measure={measure}\n          metric={measure.metric}\n        />\n      ))}\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { translate } from '../../../helpers/l10n';\n\nexport default function EmptyResult() {\n  return <div className=\"note\">{translate('no_results')}</div>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nexport const complementary = {\n  coverage: ['uncovered_lines', 'uncovered_conditions'],\n  line_coverage: ['uncovered_lines'],\n  branch_coverage: ['uncovered_conditions'],\n  uncovered_lines: ['line_coverage'],\n  uncovered_conditions: ['branch_coverage'],\n\n  new_coverage: ['new_uncovered_lines', 'new_uncovered_conditions'],\n  new_line_coverage: ['new_uncovered_lines'],\n  new_branch_coverage: ['new_uncovered_conditions'],\n  new_uncovered_lines: ['new_line_coverage'],\n  new_uncovered_conditions: ['new_branch_coverage'],\n\n  duplicated_lines_density: ['duplicated_lines'],\n  new_duplicated_lines_density: ['new_duplicated_lines'],\n  duplicated_lines: ['duplicated_lines_density'],\n  new_duplicated_lines: ['new_duplicated_lines_density']\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport ComponentsListRow from './ComponentsListRow';\nimport EmptyResult from './EmptyResult';\nimport { complementary } from '../config/complementary';\nimport { getLocalizedMetricName } from '../../../helpers/l10n';\n/*:: import type { ComponentEnhanced } from '../types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  components: Array<ComponentEnhanced>,\n  onClick: string => void,\n  metric: Metric,\n  metrics: { [string]: Metric },\n  selectedComponent?: ?string\n|}; */\n\nexport default function ComponentsList(\n  { branchLike, components, onClick, metrics, metric, selectedComponent } /*: Props */\n) {\n  if (!components.length) {\n    return <EmptyResult />;\n  }\n\n  const otherMetrics = (complementary[metric.key] || []).map(key => metrics[key]);\n  return (\n    <table className=\"data zebra zebra-hover\">\n      {otherMetrics.length > 0 && (\n        <thead>\n          <tr>\n            <th>&nbsp;</th>\n            <th className=\"text-right\">\n              <span className=\"small\">{getLocalizedMetricName(metric)}</span>\n            </th>\n            {otherMetrics.map(metric => (\n              <th key={metric.key} className=\"text-right\">\n                <span className=\"small\">{getLocalizedMetricName(metric)}</span>\n              </th>\n            ))}\n          </tr>\n        </thead>\n      )}\n\n      <tbody>\n        {components.map(component => (\n          <ComponentsListRow\n            key={component.id}\n            branchLike={branchLike}\n            component={component}\n            otherMetrics={otherMetrics}\n            isSelected={component.key === selectedComponent}\n            metric={metric}\n            onClick={onClick}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport key from 'keymaster';\nimport { throttle } from 'lodash';\nimport ComponentsList from './ComponentsList';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport { scrollToElement } from '../../../helpers/scrolling';\n/*:: import type { ComponentEnhanced, Paging } from '../types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  components: Array<ComponentEnhanced>,\n  fetchMore: () => void,\n  handleSelect: string => void,\n  handleOpen: string => void,\n  metric: Metric,\n  metrics: { [string]: Metric },\n  paging: ?Paging,\n  selectedKey: ?string,\n  selectedIdx: ?number\n|}; */\n\nexport default class ListView extends React.PureComponent {\n  /*:: listContainer: HTMLElement; */\n  /*:: props: Props; */\n\n  constructor(props /*: Props */) {\n    super(props);\n    this.selectNext = throttle(this.selectNext, 100);\n    this.selectPrevious = throttle(this.selectPrevious, 100);\n  }\n\n  componentDidMount() {\n    this.attachShortcuts();\n    if (this.props.selectedKey != null) {\n      this.scrollToElement();\n    }\n  }\n\n  componentDidUpdate(prevProps /*: Props */) {\n    if (this.props.selectedKey != null && prevProps.selectedKey !== this.props.selectedKey) {\n      this.scrollToElement();\n    }\n  }\n\n  componentWillUnmount() {\n    this.detachShortcuts();\n  }\n\n  attachShortcuts() {\n    key('up', 'measures-files', () => {\n      this.selectPrevious();\n      return false;\n    });\n    key('down', 'measures-files', () => {\n      this.selectNext();\n      return false;\n    });\n    key('right', 'measures-files', () => {\n      this.openSelected();\n      return false;\n    });\n  }\n\n  detachShortcuts() {\n    ['up', 'down', 'right'].map(action => key.unbind(action, 'measures-files'));\n  }\n\n  openSelected = () => {\n    if (this.props.selectedKey != null) {\n      this.props.handleOpen(this.props.selectedKey);\n    }\n  };\n\n  selectPrevious = () => {\n    const { selectedIdx } = this.props;\n    if (selectedIdx != null && selectedIdx > 0) {\n      this.props.handleSelect(this.props.components[selectedIdx - 1].key);\n    } else {\n      this.props.handleSelect(this.props.components[this.props.components.length - 1].key);\n    }\n  };\n\n  selectNext = () => {\n    const { selectedIdx } = this.props;\n    if (selectedIdx != null && selectedIdx < this.props.components.length - 1) {\n      this.props.handleSelect(this.props.components[selectedIdx + 1].key);\n    } else {\n      this.props.handleSelect(this.props.components[0].key);\n    }\n  };\n\n  scrollToElement = () => {\n    if (this.listContainer) {\n      const elem = this.listContainer.getElementsByClassName('selected')[0];\n      if (elem) {\n        scrollToElement(elem, { topOffset: 215, bottomOffset: 100 });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div ref={elem => (this.listContainer = elem)}>\n        <ComponentsList\n          branchLike={this.props.branchLike}\n          components={this.props.components}\n          metrics={this.props.metrics}\n          metric={this.props.metric}\n          onClick={this.props.handleOpen}\n          selectedComponent={this.props.selectedKey}\n        />\n        {this.props.paging &&\n          this.props.components.length > 0 && (\n            <ListFooter\n              count={this.props.components.length}\n              total={this.props.paging.total}\n              loadMore={this.props.fetchMore}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport key from 'keymaster';\nimport SourceViewer from '../../../components/SourceViewer/SourceViewer';\n/*:: import type { ComponentEnhanced, Paging, Period } from '../types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  component: ComponentEnhanced,\n  components: Array<ComponentEnhanced>,\n  leakPeriod?: Period,\n  metric: Metric,\n  selectedIdx: ?number,\n  updateSelected: string => void,\n|}; */\n\nexport default class CodeView extends React.PureComponent {\n  /*:: props: Props; */\n\n  componentDidMount() {\n    this.attachShortcuts();\n  }\n\n  componentWillUnmount() {\n    this.detachShortcuts();\n  }\n\n  attachShortcuts() {\n    key('j', 'measures-files', () => {\n      this.selectNext();\n      return false;\n    });\n    key('k', 'measures-files', () => {\n      this.selectPrevious();\n      return false;\n    });\n  }\n\n  detachShortcuts() {\n    ['j', 'k'].map(action => key.unbind(action, 'measures-files'));\n  }\n\n  selectPrevious = () => {\n    const { selectedIdx } = this.props;\n    if (selectedIdx != null && selectedIdx > 0) {\n      const prevComponent = this.props.components[selectedIdx - 1];\n      if (prevComponent) {\n        this.props.updateSelected(prevComponent.key);\n      }\n    }\n  };\n\n  selectNext = () => {\n    const { components, selectedIdx } = this.props;\n    if (selectedIdx != null && selectedIdx < components.length - 1) {\n      const nextComponent = components[selectedIdx + 1];\n      if (nextComponent) {\n        this.props.updateSelected(nextComponent.key);\n      }\n    }\n  };\n\n  render() {\n    const { branchLike, component } = this.props;\n    return <SourceViewer branchLike={branchLike} component={component.key} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport { formatMeasure } from '../../helpers/measures';\n\n/*:: type Props = {\n  className?: string,\n  colorScale: Object,\n  colorNA?: string,\n  metricType: string\n}; */\n\nexport default function ColorBoxLegend(\n  { className, colorScale, colorNA, metricType } /*: Props */\n) {\n  const colorDomain = colorScale.domain();\n  const colorRange = colorScale.range();\n  return (\n    <div className={classNames('color-box-legend', className)}>\n      {colorDomain.map((value, idx) => (\n        <div key={value}>\n          <span className=\"color-box-legend-rect\" style={{ borderColor: colorRange[idx] }}>\n            <span\n              className=\"color-box-legend-rect-inner\"\n              style={{ backgroundColor: colorRange[idx] }}\n            />\n          </span>\n          {formatMeasure(value, metricType)}\n        </div>\n      ))}\n      {colorNA && (\n        <div>\n          <span className=\"color-box-legend-rect\" style={{ borderColor: colorNA }}>\n            <span className=\"color-box-legend-rect-inner\" style={{ backgroundColor: colorNA }} />\n          </span>\n          N/A\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\n\n/*:: type Props = {\n  className?: string,\n  colorScale: Object,\n  colorNA?: string,\n  direction?: number,\n  padding?: Array<number>,\n  height: number,\n  width: number\n}; */\n\nconst NA_SPACING = 4;\n\nexport default function ColorGradientLegend(\n  {\n    className,\n    colorScale,\n    colorNA,\n    direction,\n    padding = [12, 24, 0, 0],\n    height,\n    width\n  } /*: Props */\n) {\n  const colorRange = colorScale.range();\n  if (direction === 1) {\n    colorRange.reverse();\n  }\n\n  const colorDomain = colorScale.domain();\n  const lastColorIdx = colorRange.length - 1;\n  const lastDomainIdx = colorDomain.length - 1;\n  const widthNoPadding = width - padding[1];\n  const rectHeight = height - padding[0];\n  return (\n    <svg className={className} width={width} height={height}>\n      <defs>\n        <linearGradient id=\"gradient-legend\">\n          {colorRange.map((color, idx) => (\n            <stop key={idx} offset={idx / lastColorIdx} stopColor={color} />\n          ))}\n        </linearGradient>\n      </defs>\n      <g transform={`translate(${padding[3]}, ${padding[0]})`}>\n        <rect fill=\"url(#gradient-legend)\" x={0} y={0} height={rectHeight} width={widthNoPadding} />\n        {colorDomain.map((d, idx) => (\n          <text\n            className=\"gradient-legend-text\"\n            key={idx}\n            x={widthNoPadding * (idx / lastDomainIdx)}\n            y={0}\n            dy=\"-2px\">\n            {d}\n          </text>\n        ))}\n      </g>\n      {colorNA && (\n        <g transform={`translate(${widthNoPadding}, ${padding[0]})`}>\n          <rect\n            fill={colorNA}\n            x={NA_SPACING}\n            y={0}\n            height={rectHeight}\n            width={padding[1] - NA_SPACING}\n          />\n          <text\n            className=\"gradient-legend-na\"\n            x={NA_SPACING + (padding[1] - NA_SPACING) / 2}\n            y={0}\n            dy=\"-2px\">\n            N/A\n          </text>\n        </g>\n      )}\n    </svg>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { Link } from 'react-router';\nimport classNames from 'classnames';\nimport { scaleLinear } from 'd3-scale';\nimport LinkIcon from '../icons-components/LinkIcon';\nimport Tooltip from '../controls/Tooltip';\n\nconst SIZE_SCALE = scaleLinear()\n  .domain([3, 15])\n  .range([11, 18])\n  .clamp(true);\n\n/*:: type Props = {|\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  fill: string,\n  label: string,\n  prefix: string,\n  icon?: React.Element<*>,\n  tooltip?: string | React.Element<*>,\n  itemKey: string,\n  link?: string,\n  onClick?: string => void,\n  placement?: string\n|}; */\n\nexport default class TreeMapRect extends React.PureComponent {\n  /*:: props: Props; */\n\n  handleLinkClick = (e /*: Event */) => e.stopPropagation();\n\n  handleRectClick = () => {\n    if (this.props.onClick != null) {\n      this.props.onClick(this.props.itemKey);\n    }\n  };\n\n  renderLink = () => {\n    const { link, height, width } = this.props;\n    const hasMinSize = width >= 24 && height >= 24 && (width >= 48 || height >= 50);\n    if (!hasMinSize || link == null) {\n      return null;\n    }\n    return (\n      <Link className=\"treemap-link\" to={link} onClick={this.handleLinkClick}>\n        <LinkIcon />\n      </Link>\n    );\n  };\n\n  renderCell = () => {\n    const cellStyles = {\n      left: this.props.x,\n      top: this.props.y,\n      width: this.props.width,\n      height: this.props.height,\n      backgroundColor: this.props.fill,\n      fontSize: SIZE_SCALE(this.props.width / this.props.label.length),\n      lineHeight: `${this.props.height}px`,\n      cursor: this.props.onClick != null ? 'pointer' : 'default'\n    };\n    const isTextVisible = this.props.width >= 40 && this.props.height >= 45;\n    const isIconVisible = this.props.width >= 24 && this.props.height >= 26;\n\n    const label = this.props.prefix\n      ? `${this.props.prefix}<br>${this.props.label.substr(this.props.prefix.length)}`\n      : this.props.label;\n\n    return (\n      <div\n        className=\"treemap-cell\"\n        style={cellStyles}\n        onClick={this.handleRectClick}\n        role=\"treeitem\"\n        tabIndex={0}>\n        <div className=\"treemap-inner\" style={{ maxWidth: this.props.width }}>\n          {isIconVisible && (\n            <span className={classNames('treemap-icon', { 'spacer-right': isTextVisible })}>\n              {this.props.icon}\n            </span>\n          )}\n          {isTextVisible && (\n            <span className=\"treemap-text\" dangerouslySetInnerHTML={{ __html: label }} />\n          )}\n        </div>\n        {this.renderLink()}\n      </div>\n    );\n  };\n\n  render() {\n    const { placement, tooltip } = this.props;\n    return (\n      <Tooltip overlay={tooltip || undefined} placement={placement || 'left'}>\n        {this.renderCell()}\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { treemap as d3Treemap, hierarchy as d3Hierarchy } from 'd3-hierarchy';\nimport TreeMapRect from './TreeMapRect';\nimport { translate } from '../../helpers/l10n';\n\n/*:: export type TreeMapItem = {\n  key: string,\n  size: number,\n  color: string,\n  icon?: React.Element<*>,\n  tooltip?: string | React.Element<*>,\n  label: string,\n  link?: string\n}; */\n\n/*:: type Props = {|\n  items: Array<TreeMapItem>,\n  onRectangleClick?: string => void,\n  height: number,\n  width: number\n|}; */\n\nexport default class TreeMap extends React.PureComponent {\n  /*:: props: Props; */\n\n  mostCommitPrefix = (labels /*: Array<string> */) => {\n    const sortedLabels = labels.slice(0).sort();\n    const firstLabel = sortedLabels[0];\n    const firstLabelLength = firstLabel.length;\n    const lastLabel = sortedLabels[sortedLabels.length - 1];\n    let i = 0;\n    while (i < firstLabelLength && firstLabel.charAt(i) === lastLabel.charAt(i)) {\n      i++;\n    }\n    const prefix = firstLabel.substr(0, i);\n    const prefixTokens = prefix.split(/[\\s\\\\/]/);\n    const lastPrefixPart = prefixTokens[prefixTokens.length - 1];\n    return prefix.substr(0, prefix.length - lastPrefixPart.length);\n  };\n\n  renderNoData() {\n    return (\n      <div className=\"sonar-d3\">\n        <div\n          className=\"treemap-container\"\n          style={{ width: this.props.width, height: this.props.height }}>\n          {translate('no_data')}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { items, height, width } = this.props;\n    if (items.length <= 0) {\n      return this.renderNoData();\n    }\n\n    const hierarchy = d3Hierarchy({ children: items })\n      .sum(d => d.size)\n      .sort((a, b) => b.value - a.value);\n\n    const treemap = d3Treemap()\n      .round(true)\n      .size([width, height]);\n\n    const nodes = treemap(hierarchy).leaves();\n    const prefix = this.mostCommitPrefix(items.map(item => item.label));\n    const halfWidth = width / 2;\n    return (\n      <div className=\"sonar-d3\">\n        <div className=\"treemap-container\" style={{ width, height }}>\n          {nodes.map(node => (\n            <TreeMapRect\n              key={node.data.key}\n              x={node.x0}\n              y={node.y0}\n              width={node.x1 - node.x0}\n              height={node.y1 - node.y0}\n              fill={node.data.color}\n              label={node.data.label}\n              prefix={prefix}\n              itemKey={node.data.key}\n              icon={node.data.icon}\n              tooltip={node.data.tooltip}\n              link={node.data.link}\n              onClick={this.props.onRectangleClick}\n              placement={node.x0 === 0 || node.x1 < halfWidth ? 'right' : 'left'}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport { scaleLinear, scaleOrdinal } from 'd3-scale';\nimport EmptyResult from './EmptyResult';\nimport * as theme from '../../../app/theme';\nimport ColorBoxLegend from '../../../components/charts/ColorBoxLegend';\nimport ColorGradientLegend from '../../../components/charts/ColorGradientLegend';\nimport QualifierIcon from '../../../components/icons-components/QualifierIcon';\nimport TreeMap from '../../../components/charts/TreeMap';\nimport { translate, translateWithParameters, getLocalizedMetricName } from '../../../helpers/l10n';\nimport { formatMeasure, isDiffMetric } from '../../../helpers/measures';\nimport { getBranchLikeUrl } from '../../../helpers/urls';\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n/*:: import type { ComponentEnhanced } from '../types'; */\n/*:: import type { TreeMapItem } from '../../../components/charts/TreeMap'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  components: Array<ComponentEnhanced>,\n  handleSelect: string => void,\n  metric: Metric\n|}; */\n\n/*:: type State = {\n  treemapItems: Array<TreeMapItem>\n}; */\n\nconst HEIGHT = 500;\nconst COLORS = [theme.green, theme.lightGreen, theme.yellow, theme.orange, theme.red];\nconst LEVEL_COLORS = [theme.red, theme.orange, theme.green, theme.gray71];\n\nexport default class TreeMapView extends React.PureComponent {\n  /*:: props: Props; */\n  /*:: state: State; */\n\n  constructor(props /*: Props */) {\n    super(props);\n    this.state = { treemapItems: this.getTreemapComponents(props) };\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (nextProps.components !== this.props.components || nextProps.metric !== this.props.metric) {\n      this.setState({ treemapItems: this.getTreemapComponents(nextProps) });\n    }\n  }\n\n  getTreemapComponents = ({ branchLike, components, metric } /*: Props */) => {\n    const colorScale = this.getColorScale(metric);\n    return components\n      .map(component => {\n        const colorMeasure = component.measures.find(measure => measure.metric.key === metric.key);\n        const sizeMeasure = component.measures.find(measure => measure.metric.key !== metric.key);\n        if (sizeMeasure == null) {\n          return null;\n        }\n        const colorValue =\n          colorMeasure && (isDiffMetric(metric.key) ? colorMeasure.leak : colorMeasure.value);\n        const sizeValue = isDiffMetric(sizeMeasure.metric.key)\n          ? sizeMeasure.leak\n          : sizeMeasure.value;\n        if (sizeValue == null) {\n          return null;\n        }\n        return {\n          key: component.refKey || component.key,\n          size: sizeValue,\n          color: colorValue != null ? colorScale(colorValue) : theme.secondFontColor,\n          icon: <QualifierIcon color={theme.baseFontColor} qualifier={component.qualifier} />,\n          tooltip: this.getTooltip(\n            component.name,\n            metric,\n            sizeMeasure.metric,\n            colorValue,\n            sizeValue\n          ),\n          label: component.name,\n          link: getBranchLikeUrl(component.refKey || component.key, branchLike)\n        };\n      })\n      .filter(Boolean);\n  };\n\n  getLevelColorScale = () =>\n    scaleOrdinal()\n      .domain(['ERROR', 'WARN', 'OK', 'NONE'])\n      .range(LEVEL_COLORS);\n\n  getPercentColorScale = (metric /*: Metric */) => {\n    const color = scaleLinear().domain([0, 25, 50, 75, 100]);\n    color.range(metric.direction === 1 ? COLORS.reverse() : COLORS);\n    return color;\n  };\n\n  getRatingColorScale = () =>\n    scaleLinear()\n      .domain([1, 2, 3, 4, 5])\n      .range(COLORS);\n\n  getColorScale = (metric /*: Metric */) => {\n    if (metric.type === 'LEVEL') {\n      return this.getLevelColorScale();\n    }\n    if (metric.type === 'RATING') {\n      return this.getRatingColorScale();\n    }\n    return this.getPercentColorScale(metric);\n  };\n\n  getTooltip = (\n    componentName /*: string */,\n    colorMetric /*: Metric */,\n    sizeMetric /*: Metric */,\n    colorValue /*: ?number */,\n    sizeValue /*: number */\n  ) => {\n    const formatted =\n      colorMetric != null && colorValue != null ? formatMeasure(colorValue, colorMetric.type) : '—';\n    return (\n      <div className=\"text-left\">\n        {componentName}\n        <br />\n        {`${getLocalizedMetricName(sizeMetric)}: ${formatMeasure(sizeValue, sizeMetric.type)}`}\n        <br />\n        {`${getLocalizedMetricName(colorMetric)}: ${formatted}`}\n      </div>\n    );\n  };\n\n  renderLegend() {\n    const { metric } = this.props;\n    const colorScale = this.getColorScale(metric);\n    if (['LEVEL', 'RATING'].includes(metric.type)) {\n      return (\n        <ColorBoxLegend\n          className=\"measure-details-treemap-legend color-box-full\"\n          colorScale={colorScale}\n          metricType={metric.type}\n        />\n      );\n    }\n    return (\n      <ColorGradientLegend\n        className=\"measure-details-treemap-legend\"\n        colorScale={colorScale}\n        colorNA={theme.secondFontColor}\n        direction={metric.direction}\n        height={20}\n        width={200}\n      />\n    );\n  }\n\n  render() {\n    const { treemapItems } = this.state;\n    if (treemapItems.length <= 0) {\n      return <EmptyResult />;\n    }\n    const { components, metric } = this.props;\n    const sizeMeasure =\n      components.length > 0\n        ? components[0].measures.find(measure => measure.metric.key !== metric.key)\n        : null;\n    return (\n      <div className=\"measure-details-treemap\">\n        <ul className=\"list-inline note spacer-bottom\">\n          <li>\n            {translateWithParameters(\n              'component_measures.legend.color_x',\n              getLocalizedMetricName(metric)\n            )}\n          </li>\n          <li>\n            {translateWithParameters(\n              'component_measures.legend.size_x',\n              translate(\n                'metric',\n                sizeMeasure && sizeMeasure.metric ? sizeMeasure.metric.key : 'ncloc',\n                'name'\n              )\n            )}\n          </li>\n          <li className=\"pull-right\">{this.renderLegend()}</li>\n        </ul>\n        <AutoSizer disableHeight={true}>\n          {({ width }) => (\n            <TreeMap\n              items={treemapItems}\n              onRectangleClick={this.props.handleSelect}\n              height={HEIGHT}\n              width={width}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport Breadcrumbs from './Breadcrumbs';\nimport MeasureFavoriteContainer from './MeasureFavoriteContainer';\nimport MeasureHeader from './MeasureHeader';\nimport MeasureViewSelect from './MeasureViewSelect';\nimport MetricNotFound from './MetricNotFound';\nimport PageActions from './PageActions';\nimport FilesView from '../drilldown/FilesView';\nimport CodeView from '../drilldown/CodeView';\nimport TreeMapView from '../drilldown/TreeMapView';\nimport { getComponentTree } from '../../../api/components';\nimport { complementary } from '../config/complementary';\nimport { enhanceComponent, isFileType, isViewType } from '../utils';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { isDiffMetric } from '../../../helpers/measures';\nimport { isSameBranchLike, getBranchLikeQuery } from '../../../helpers/branches';\n/*:: import type { Component, ComponentEnhanced, Paging, Period } from '../types'; */\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n// Switching to the following type will make flow crash with :\n// https://github.com/facebook/flow/issues/3147\n// router: { push: ({ pathname: string, query?: RawQuery }) => void }\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  className?: string,\n  component: Component,\n  currentUser: { isLoggedIn: boolean },\n  loading: boolean,\n  leakPeriod?: Period,\n  measure: ?MeasureEnhanced,\n  metric: Metric,\n  metrics: { [string]: Metric },\n  rootComponent: Component,\n  router: Object,\n  secondaryMeasure: ?MeasureEnhanced,\n  updateLoading: ({ [string]: boolean }) => void,\n  updateSelected: string => void,\n  updateView: string => void,\n  view: string\n|}; */\n\n/*:: type State = {\n  components: Array<ComponentEnhanced>,\n  metric: ?Metric,\n  paging?: Paging,\n  selected: ?string,\n  view: ?string\n}; */\n\nexport default class MeasureContent extends React.PureComponent {\n  /*:: container: HTMLElement; */\n  /*:: mounted: boolean; */\n  /*:: props: Props; */\n  state /*: State */ = {\n    components: [],\n    metric: null,\n    paging: null,\n    selected: null,\n    view: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponents(this.props);\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (\n      !isSameBranchLike(nextProps.branchLike, this.props.branchLike) ||\n      nextProps.component !== this.props.component ||\n      nextProps.metric !== this.props.metric\n    ) {\n      this.fetchComponents(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getSelectedIndex = () => {\n    const componentKey = isFileType(this.props.component)\n      ? this.props.component.key\n      : this.state.selected;\n    const index = this.state.components.findIndex(component => component.key === componentKey);\n    return index !== -1 ? index : null;\n  };\n\n  getComponentRequestParams = (\n    view /*: string */,\n    metric /*: Metric */,\n    options /*: Object */ = {}\n  ) => {\n    const strategy = view === 'list' ? 'leaves' : 'children';\n    const metricKeys = [metric.key];\n    const opts /*: Object */ = {\n      ...getBranchLikeQuery(this.props.branchLike),\n      metricSortFilter: 'withMeasuresOnly'\n    };\n    const isDiff = isDiffMetric(metric.key);\n    if (isDiff) {\n      opts.metricPeriodSort = 1;\n    }\n    if (view === 'treemap') {\n      const sizeMetric = isDiff ? 'new_lines' : 'ncloc';\n      metricKeys.push(sizeMetric);\n      opts.metricSort = sizeMetric;\n      opts.s = isDiff ? 'metricPeriod' : 'metric';\n      opts.asc = false;\n    } else {\n      metricKeys.push(...(complementary[metric.key] || []));\n      opts.asc = metric.direction === 1;\n      opts.ps = 100;\n      opts.metricSort = metric.key;\n      opts.s = isDiff ? 'metricPeriod' : 'metric';\n    }\n    return { metricKeys, opts: { ...opts, ...options }, strategy };\n  };\n\n  fetchComponents = ({ component, metric, metrics, view } /*: Props */) => {\n    if (isFileType(component)) {\n      return this.setState({ metric: null, view: null });\n    }\n\n    const { metricKeys, opts, strategy } = this.getComponentRequestParams(view, metric);\n    this.props.updateLoading({ components: true });\n    getComponentTree(strategy, component.key, metricKeys, opts).then(\n      r => {\n        if (metric === this.props.metric) {\n          if (this.mounted) {\n            this.setState(({ selected } /*: State */) => ({\n              components: r.components.map(component =>\n                enhanceComponent(component, metric, metrics)\n              ),\n              metric,\n              paging: r.paging,\n              selected:\n                r.components.length > 0 && !r.components.find(c => c.key === selected)\n                  ? r.components[0].key\n                  : selected,\n              view\n            }));\n          }\n          this.props.updateLoading({ components: false });\n        }\n      },\n      () => this.props.updateLoading({ components: false })\n    );\n  };\n\n  fetchMoreComponents = () => {\n    const { component, metric, metrics, view } = this.props;\n    const { paging } = this.state;\n    if (!paging) {\n      return;\n    }\n    const { metricKeys, opts, strategy } = this.getComponentRequestParams(view, metric, {\n      p: paging.pageIndex + 1\n    });\n    this.props.updateLoading({ components: true });\n    getComponentTree(strategy, component.key, metricKeys, opts).then(\n      r => {\n        if (metric === this.props.metric) {\n          if (this.mounted) {\n            this.setState(state => ({\n              components: [\n                ...state.components,\n                ...r.components.map(component => enhanceComponent(component, metric, metrics))\n              ],\n              metric,\n              paging: r.paging,\n              view\n            }));\n          }\n          this.props.updateLoading({ components: false });\n        }\n      },\n      () => this.props.updateLoading({ components: false })\n    );\n  };\n\n  onOpenComponent = (componentKey /*: string */) => {\n    if (isViewType(this.props.rootComponent)) {\n      const component = this.state.components.find(\n        component => component.refKey === componentKey || component.key === componentKey\n      );\n      if (component && component.refKey != null) {\n        if (this.props.view === 'treemap') {\n          this.props.router.push(getProjectUrl(componentKey));\n        }\n        return;\n      }\n    }\n    this.setState({ selected: this.props.component.key });\n    this.props.updateSelected(componentKey);\n    if (this.container) {\n      this.container.focus();\n    }\n  };\n\n  onSelectComponent = (componentKey /*: string */) => this.setState({ selected: componentKey });\n\n  renderCode() {\n    return (\n      <div className=\"measure-details-viewer\">\n        <CodeView\n          branchLike={this.props.branchLike}\n          component={this.props.component}\n          components={this.state.components}\n          leakPeriod={this.props.leakPeriod}\n          metric={this.props.metric}\n          selectedIdx={this.getSelectedIndex()}\n          updateSelected={this.props.updateSelected}\n        />\n      </div>\n    );\n  }\n\n  renderMeasure() {\n    const { metric, view } = this.state;\n    if (metric != null) {\n      if (['list', 'tree'].includes(view)) {\n        const selectedIdx = this.getSelectedIndex();\n        return (\n          <FilesView\n            branchLike={this.props.branchLike}\n            components={this.state.components}\n            fetchMore={this.fetchMoreComponents}\n            handleOpen={this.onOpenComponent}\n            handleSelect={this.onSelectComponent}\n            metric={metric}\n            metrics={this.props.metrics}\n            paging={this.state.paging}\n            selectedKey={selectedIdx != null ? this.state.selected : null}\n            selectedIdx={selectedIdx}\n          />\n        );\n      }\n\n      if (view === 'treemap') {\n        return (\n          <TreeMapView\n            branchLike={this.props.branchLike}\n            components={this.state.components}\n            handleSelect={this.onOpenComponent}\n            metric={metric}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  render() {\n    const { branchLike, component, currentUser, measure, metric, rootComponent, view } = this.props;\n    const isLoggedIn = currentUser && currentUser.isLoggedIn;\n    const isFile = isFileType(component);\n    const selectedIdx = this.getSelectedIndex();\n    return (\n      <div\n        className={classNames('no-outline', this.props.className)}\n        ref={container => (this.container = container)}\n        tabIndex={0}>\n        <div className=\"layout-page-header-panel layout-page-main-header\">\n          <div className=\"layout-page-header-panel-inner layout-page-main-header-inner\">\n            <div className=\"layout-page-main-inner\">\n              <Breadcrumbs\n                backToFirst={view === 'list'}\n                branchLike={branchLike}\n                className=\"measure-breadcrumbs spacer-right text-ellipsis\"\n                component={component}\n                handleSelect={this.onOpenComponent}\n                rootComponent={rootComponent}\n              />\n              {component.key !== rootComponent.key &&\n                isLoggedIn && (\n                  <MeasureFavoriteContainer\n                    branchLike={branchLike}\n                    component={component.key}\n                    className=\"measure-favorite spacer-right\"\n                  />\n                )}\n              {!isFile && (\n                <MeasureViewSelect\n                  className=\"measure-view-select\"\n                  metric={metric}\n                  handleViewChange={this.props.updateView}\n                  view={view}\n                />\n              )}\n              <PageActions\n                current={selectedIdx != null && view !== 'treemap' ? selectedIdx + 1 : null}\n                loading={this.props.loading}\n                isFile={isFile}\n                paging={this.state.paging}\n                totalLoadedComponents={this.state.components.length}\n                view={view}\n              />\n            </div>\n          </div>\n        </div>\n        {metric == null && (\n          <MetricNotFound className=\"layout-page-main-inner measure-details-content\" />\n        )}\n        {metric != null && (\n          <div className=\"layout-page-main-inner measure-details-content\">\n            <MeasureHeader\n              branchLike={branchLike}\n              component={component}\n              components={this.state.components}\n              leakPeriod={this.props.leakPeriod}\n              // fall back to `undefined` to be compatible with typescript files where we compare with `=== undefined`\n              measure={measure || undefined}\n              metric={metric}\n              secondaryMeasure={this.props.secondaryMeasure}\n            />\n            {isFileType(component) ? this.renderCode() : this.renderMeasure()}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport MeasureContent from './MeasureContent';\n/*:: import type { Component, Period, Query } from '../types'; */\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n/*:: import type { RawQuery } from '../../../helpers/query'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  className?: string,\n  currentUser: { isLoggedIn: boolean },\n  rootComponent: Component,\n  fetchMeasures: (\n    component: string,\n    metricsKey: Array<string>,\n    branchLike?: { id?: string; name: string }\n  ) => Promise<{ component: Component, measures: Array<MeasureEnhanced> }>,\n  leakPeriod?: Period,\n  metric: Metric,\n  metrics: { [string]: Metric },\n  router: {\n    push: ({ pathname: string, query?: RawQuery }) => void\n  },\n  selected: ?string,\n  updateQuery: Query => void,\n  view: string\n|}; */\n\n/*:: type State = {\n  component: ?Component,\n  loading: {\n    measure: boolean,\n    components: boolean\n  },\n  measure: ?MeasureEnhanced,\n  secondaryMeasure: ?MeasureEnhanced\n}; */\n\nexport default class MeasureContentContainer extends React.PureComponent {\n  /*:: mounted: boolean; */\n  /*:: props: Props; */\n  state /*: State */ = {\n    component: null,\n    loading: {\n      measure: false,\n      components: false\n    },\n    measure: null,\n    secondaryMeasure: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchMeasure(this.props);\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    const { component } = this.state;\n    const componentChanged =\n      !component ||\n      nextProps.rootComponent.key !== component.key ||\n      nextProps.selected !== component.key;\n    if (componentChanged || nextProps.metric !== this.props.metric) {\n      this.fetchMeasure(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchMeasure = ({ branchLike, rootComponent, fetchMeasures, metric, selected } /*: Props */) => {\n    this.updateLoading({ measure: true });\n\n    const metricKeys = [metric.key];\n    if (metric.key === 'ncloc') {\n      metricKeys.push('ncloc_language_distribution');\n    }\n\n    fetchMeasures(selected || rootComponent.key, metricKeys, branchLike).then(\n      ({ component, measures }) => {\n        if (this.mounted) {\n          const measure = measures.find(measure => measure.metric.key === metric.key);\n          const secondaryMeasure = measures.find(measure => measure.metric.key !== metric.key);\n          this.setState({ component, measure, secondaryMeasure });\n          this.updateLoading({ measure: false });\n        }\n      },\n      () => this.updateLoading({ measure: false })\n    );\n  };\n\n  updateLoading = (loading /*: { [string]: boolean } */) => {\n    if (this.mounted) {\n      this.setState(state => ({ loading: { ...state.loading, ...loading } }));\n    }\n  };\n\n  updateSelected = (component /*: string */) =>\n    this.props.updateQuery({\n      selected: component !== this.props.rootComponent.key ? component : null\n    });\n\n  updateView = (view /*: string */) => this.props.updateQuery({ view });\n\n  render() {\n    if (!this.state.component) {\n      return null;\n    }\n\n    return (\n      <MeasureContent\n        branchLike={this.props.branchLike}\n        className={this.props.className}\n        component={this.state.component}\n        currentUser={this.props.currentUser}\n        loading={this.state.loading.measure || this.state.loading.components}\n        leakPeriod={this.props.leakPeriod}\n        measure={this.state.measure}\n        metric={this.props.metric}\n        metrics={this.props.metrics}\n        rootComponent={this.props.rootComponent}\n        router={this.props.router}\n        secondaryMeasure={this.state.secondaryMeasure}\n        updateLoading={this.updateLoading}\n        updateSelected={this.updateSelected}\n        updateView={this.updateView}\n        view={this.props.view}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport EmptyResult from './EmptyResult';\nimport OriginalBubbleChart from '../../../components/charts/BubbleChart';\nimport ColorRatingsLegend from '../../../components/charts/ColorRatingsLegend';\nimport { formatMeasure, isDiffMetric } from '../../../helpers/measures';\nimport {\n  getLocalizedMetricDomain,\n  getLocalizedMetricName,\n  translate,\n  translateWithParameters\n} from '../../../helpers/l10n';\nimport { getBubbleMetrics, getBubbleYDomain, isProjectOverview } from '../utils';\nimport { RATING_COLORS } from '../../../helpers/constants';\n/*:: import type { Component, ComponentEnhanced } from '../types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\nconst HEIGHT = 500;\n\n/*:: type Props = {|\n  component: Component,\n  components: Array<ComponentEnhanced>,\n  domain: string,\n  metrics: { [string]: Metric },\n  updateSelected: string => void\n|}; */\n\nexport default class BubbleChart extends React.PureComponent {\n  /*:: props: Props; */\n\n  getMeasureVal = (component /*: ComponentEnhanced */, metric /*: Metric */) => {\n    const measure = component.measures.find(measure => measure.metric.key === metric.key);\n    if (measure) {\n      return Number(isDiffMetric(metric.key) ? measure.leak : measure.value);\n    }\n  };\n\n  getTooltip(\n    componentName /*: string */,\n    values /*: {\n      x: number,\n      y: number,\n      size: number,\n      colors: ?Array<?number>\n    }*/,\n    metrics /*: {\n      x: Metric ,\n      y: Metric ,\n      size: Metric ,\n      colors: ?Array<Metric>\n    }*/\n  ) {\n    const inner = [\n      componentName,\n      `${metrics.x.name}: ${formatMeasure(values.x, metrics.x.type)}`,\n      `${metrics.y.name}: ${formatMeasure(values.y, metrics.y.type)}`,\n      `${metrics.size.name}: ${formatMeasure(values.size, metrics.size.type)}`\n    ];\n    if (values.colors && metrics.colors) {\n      metrics.colors.forEach((metric, idx) => {\n        // $FlowFixMe colors is always defined at this point\n        const colorValue = values.colors[idx];\n        if (colorValue || colorValue === 0) {\n          inner.push(`${metric.name}: ${formatMeasure(colorValue, metric.type)}`);\n        }\n      });\n    }\n    return (\n      <div className=\"text-left\">\n        {inner.map((line, index) => (\n          <React.Fragment key={index}>\n            {line}\n            {index < inner.length - 1 && <br />}\n          </React.Fragment>\n        ))}\n      </div>\n    );\n  }\n\n  handleBubbleClick = (component /*: ComponentEnhanced */) =>\n    this.props.updateSelected(component.refKey || component.key);\n\n  renderBubbleChart(\n    metrics /*: {\n      x: Metric ,\n      y: Metric ,\n      size: Metric ,\n      colors: ?Array<Metric>\n    }*/\n  ) {\n    const items = this.props.components\n      .map(component => {\n        const x = this.getMeasureVal(component, metrics.x);\n        const y = this.getMeasureVal(component, metrics.y);\n        const size = this.getMeasureVal(component, metrics.size);\n        const colors =\n          metrics.colors && metrics.colors.map(metric => this.getMeasureVal(component, metric));\n        if ((!x && x !== 0) || (!y && y !== 0) || (!size && size !== 0)) {\n          return null;\n        }\n        return {\n          x,\n          y,\n          size,\n          color:\n            colors != null ? RATING_COLORS[Math.max(...colors.filter(Boolean)) - 1] : undefined,\n          link: component,\n          tooltip: this.getTooltip(component.name, { x, y, size, colors }, metrics)\n        };\n      })\n      .filter(Boolean);\n\n    const formatXTick = tick => formatMeasure(tick, metrics.x.type);\n    const formatYTick = tick => formatMeasure(tick, metrics.y.type);\n\n    return (\n      <OriginalBubbleChart\n        items={items}\n        height={HEIGHT}\n        padding={[25, 60, 50, 60]}\n        formatXTick={formatXTick}\n        formatYTick={formatYTick}\n        onBubbleClick={this.handleBubbleClick}\n        yDomain={getBubbleYDomain(this.props.domain)}\n      />\n    );\n  }\n\n  renderChartHeader(\n    domain /*: string */,\n    sizeMetric /*: Metric */,\n    colorsMetric /*: ?Array<Metric> */\n  ) {\n    const title = isProjectOverview(domain)\n      ? translate('component_measures.overview', domain, 'title')\n      : translateWithParameters(\n          'component_measures.domain_x_overview',\n          getLocalizedMetricDomain(domain)\n        );\n    return (\n      <div className=\"measure-overview-bubble-chart-header\">\n        <span className=\"measure-overview-bubble-chart-title\">{title}</span>\n        <span className=\"measure-overview-bubble-chart-legend\">\n          <span className=\"note\">\n            {colorsMetric && (\n              <span className=\"spacer-right\">\n                {translateWithParameters(\n                  'component_measures.legend.color_x',\n                  colorsMetric.length > 1\n                    ? translateWithParameters(\n                        'component_measures.legend.worse_of_x_y',\n                        ...colorsMetric.map(metric => getLocalizedMetricName(metric))\n                      )\n                    : getLocalizedMetricName(colorsMetric[0])\n                )}\n              </span>\n            )}\n            {translateWithParameters(\n              'component_measures.legend.size_x',\n              getLocalizedMetricName(sizeMetric)\n            )}\n          </span>\n          {colorsMetric && <ColorRatingsLegend className=\"spacer-top\" />}\n        </span>\n      </div>\n    );\n  }\n\n  renderChartFooter(domain /*: string */) {\n    const description = `component_measures.overview.${domain}.description`;\n    const translatedDescription = translate(description);\n    if (description === translatedDescription) {\n      return null;\n    }\n    return <div className=\"measure-overview-bubble-chart-footer\">{translatedDescription}</div>;\n  }\n\n  render() {\n    if (this.props.components.length <= 0) {\n      return <EmptyResult />;\n    }\n    const { domain } = this.props;\n    const metrics = getBubbleMetrics(domain, this.props.metrics);\n\n    return (\n      <div className=\"measure-overview-bubble-chart\">\n        {this.renderChartHeader(domain, metrics.size, metrics.colors)}\n        <div className=\"measure-overview-bubble-chart-content\">\n          {this.renderBubbleChart(metrics)}\n        </div>\n        <div className=\"measure-overview-bubble-chart-axis x\">\n          {getLocalizedMetricName(metrics.x)}\n        </div>\n        <div className=\"measure-overview-bubble-chart-axis y\">\n          {getLocalizedMetricName(metrics.y)}\n        </div>\n        {this.renderChartFooter(domain)}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport Breadcrumbs from './Breadcrumbs';\nimport LeakPeriodLegend from './LeakPeriodLegend';\nimport MeasureFavoriteContainer from './MeasureFavoriteContainer';\nimport PageActions from './PageActions';\nimport BubbleChart from '../drilldown/BubbleChart';\nimport SourceViewer from '../../../components/SourceViewer/SourceViewer';\nimport { getComponentLeaves } from '../../../api/components';\nimport { enhanceComponent, getBubbleMetrics, isFileType } from '../utils';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n/*:: import type { Component, ComponentEnhanced, Paging, Period } from '../types'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  className?: string,\n  component: Component,\n  currentUser: { isLoggedIn: boolean },\n  domain: string,\n  leakPeriod: Period,\n  loading: boolean,\n  metrics: { [string]: Metric },\n  rootComponent: Component,\n  updateLoading: ({ [string]: boolean }) => void,\n  updateSelected: string => void\n|}; */\n\n/*:: type State = {\n  components: Array<ComponentEnhanced>,\n  paging?: Paging\n}; */\n\nconst BUBBLES_LIMIT = 500;\n\nexport default class MeasureOverview extends React.PureComponent {\n  /*:: mounted: boolean; */\n  /*:: props: Props; */\n  state /*: State */ = {\n    components: [],\n    paging: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponents(this.props);\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (\n      nextProps.component !== this.props.component ||\n      nextProps.metrics !== this.props.metrics ||\n      nextProps.domain !== this.props.domain\n    ) {\n      this.fetchComponents(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchComponents = (props /*: Props */) => {\n    const { branchLike, component, domain, metrics } = props;\n    if (isFileType(component)) {\n      this.setState({ components: [], paging: null });\n      return;\n    }\n    const { x, y, size, colors } = getBubbleMetrics(domain, metrics);\n    const metricsKey = [x.key, y.key, size.key];\n    if (colors) {\n      metricsKey.push(colors.map(metric => metric.key));\n    }\n    const options = {\n      ...getBranchLikeQuery(branchLike),\n      s: 'metric',\n      metricSort: size.key,\n      asc: false,\n      ps: BUBBLES_LIMIT\n    };\n\n    this.props.updateLoading({ bubbles: true });\n    getComponentLeaves(component.key, metricsKey, options).then(\n      r => {\n        if (domain === this.props.domain) {\n          if (this.mounted) {\n            this.setState({\n              components: r.components.map(component => enhanceComponent(component, null, metrics)),\n              paging: r.paging\n            });\n          }\n          this.props.updateLoading({ bubbles: false });\n        }\n      },\n      () => this.props.updateLoading({ bubbles: false })\n    );\n  };\n\n  renderContent() {\n    const { branchLike, component } = this.props;\n    if (isFileType(component)) {\n      return (\n        <div className=\"measure-details-viewer\">\n          <SourceViewer branchLike={branchLike} component={component.key} />\n        </div>\n      );\n    }\n\n    return (\n      <BubbleChart\n        component={this.props.component}\n        components={this.state.components}\n        domain={this.props.domain}\n        metrics={this.props.metrics}\n        updateSelected={this.props.updateSelected}\n      />\n    );\n  }\n\n  render() {\n    const { branchLike, component, currentUser, leakPeriod, rootComponent } = this.props;\n    const isLoggedIn = currentUser && currentUser.isLoggedIn;\n    const isFile = isFileType(component);\n    return (\n      <div className={this.props.className}>\n        <div className=\"layout-page-header-panel layout-page-main-header\">\n          <div className=\"layout-page-header-panel-inner layout-page-main-header-inner\">\n            <div className=\"layout-page-main-inner\">\n              <Breadcrumbs\n                backToFirst={true}\n                branchLike={branchLike}\n                className=\"measure-breadcrumbs spacer-right text-ellipsis\"\n                component={component}\n                handleSelect={this.props.updateSelected}\n                rootComponent={rootComponent}\n              />\n              {component.key !== rootComponent.key &&\n                isLoggedIn && (\n                  <MeasureFavoriteContainer\n                    component={component.key}\n                    className=\"measure-favorite spacer-right\"\n                  />\n                )}\n              <PageActions\n                current={this.state.components.length}\n                loading={this.props.loading}\n                isFile={isFile}\n                paging={this.state.paging}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"layout-page-main-inner measure-details-content\">\n          <div className=\"clearfix big-spacer-bottom\">\n            {leakPeriod != null && (\n              <LeakPeriodLegend className=\"pull-right\" component={component} period={leakPeriod} />\n            )}\n          </div>\n          {!this.props.loading && this.renderContent()}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport MeasureOverview from './MeasureOverview';\nimport { getComponentShow } from '../../../api/components';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { isViewType } from '../utils';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n/*:: import type { Component, Period, Query } from '../types'; */\n/*:: import type { RawQuery } from '../../../helpers/query'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  className?: string,\n  rootComponent: Component,\n  currentUser: { isLoggedIn: boolean },\n  domain: string,\n  leakPeriod: Period,\n  metrics: { [string]: Metric },\n  router: {\n    push: ({ pathname: string, query?: RawQuery }) => void\n  },\n  selected: ?string,\n  updateQuery: Query => void\n|}; */\n\n/*:: type State = {\n  component: ?Component,\n  loading: {\n    component: boolean,\n    bubbles: boolean\n  }\n}; */\n\nexport default class MeasureOverviewContainer extends React.PureComponent {\n  /*:: mounted: boolean; */\n  /*:: props: Props; */\n  state /*: State */ = {\n    component: null,\n    loading: {\n      component: false,\n      bubbles: false\n    }\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent(this.props);\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    const { component } = this.state;\n    const componentChanged =\n      !component ||\n      nextProps.rootComponent.key !== component.key ||\n      nextProps.selected !== component.key;\n    if (componentChanged || nextProps.domain !== this.props.domain) {\n      this.fetchComponent(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchComponent = ({ branchLike, rootComponent, selected } /*: Props */) => {\n    if (!selected || rootComponent.key === selected) {\n      this.setState({ component: rootComponent });\n      this.updateLoading({ component: false });\n      return;\n    }\n    this.updateLoading({ component: true });\n    getComponentShow({ component: selected, ...getBranchLikeQuery(branchLike) }).then(\n      ({ component }) => {\n        if (this.mounted) {\n          this.setState({ component });\n          this.updateLoading({ component: false });\n        }\n      },\n      () => this.updateLoading({ component: false })\n    );\n  };\n\n  updateLoading = (loading /*: { [string]: boolean } */) => {\n    if (this.mounted) {\n      this.setState(state => ({ loading: { ...state.loading, ...loading } }));\n    }\n  };\n\n  updateSelected = (component /*: string */) => {\n    if (this.state.component && isViewType(this.state.component)) {\n      this.props.router.push(getProjectUrl(component));\n    } else {\n      this.props.updateQuery({\n        selected: component !== this.props.rootComponent.key ? component : null\n      });\n    }\n  };\n\n  render() {\n    if (!this.state.component) {\n      return null;\n    }\n\n    return (\n      <MeasureOverview\n        branchLike={this.props.branchLike}\n        className={this.props.className}\n        component={this.state.component}\n        currentUser={this.props.currentUser}\n        domain={this.props.domain}\n        loading={this.state.loading.component || this.state.loading.bubbles}\n        leakPeriod={this.props.leakPeriod}\n        metrics={this.props.metrics}\n        rootComponent={this.props.rootComponent}\n        updateLoading={this.updateLoading}\n        updateSelected={this.updateSelected}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport FacetItemsList from '../../../components/facet/FacetItemsList';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translate } from '../../../helpers/l10n';\n\n/*:: type Props = {|\n  onChange: (metric: string) => void,\n  selected: string,\n  value: string\n|}; */\n\nexport default function ProjectOverviewFacet({ value, selected, onChange } /*: Props */) {\n  const facetName = translate('component_measures.overview', value, 'facet');\n  return (\n    <FacetBox property={value}>\n      <FacetItemsList>\n        <FacetItem\n          active={value === selected}\n          disabled={false}\n          key={value}\n          name={\n            <Tooltip overlay={facetName} mouseEnterDelay={0.5}>\n              <strong id={`measure-overview-${value}-name`}>{facetName}</strong>\n            </Tooltip>\n          }\n          onClick={onChange}\n          value={value}\n        />\n      </FacetItemsList>\n    </FacetBox>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport Measure from '../../../components/measure/Measure';\nimport { isDiffMetric } from '../../../helpers/measures';\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n\nexport default function FacetMeasureValue({ measure } /*: { measure: MeasureEnhanced } */) {\n  if (isDiffMetric(measure.metric.key)) {\n    return (\n      <div\n        id={`measure-${measure.metric.key}-leak`}\n        className=\"domain-measures-value domain-measures-leak\">\n        <Measure\n          value={measure.leak}\n          metricKey={measure.metric.key}\n          metricType={measure.metric.type}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div id={`measure-${measure.metric.key}-value`} className=\"domain-measures-value\">\n      <Measure\n        value={measure.value}\n        metricKey={measure.metric.key}\n        metricType={measure.metric.type}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport FacetMeasureValue from './FacetMeasureValue';\nimport BubblesIcon from '../../../components/icons-components/BubblesIcon';\nimport FacetBox from '../../../components/facet/FacetBox';\nimport FacetHeader from '../../../components/facet/FacetHeader';\nimport FacetItem from '../../../components/facet/FacetItem';\nimport FacetItemsList from '../../../components/facet/FacetItemsList';\nimport {\n  addMeasureCategories,\n  filterMeasures,\n  hasBubbleChart,\n  hasFacetStat,\n  sortMeasures\n} from '../utils';\nimport {\n  getLocalizedCategoryMetricName,\n  getLocalizedMetricDomain,\n  getLocalizedMetricName,\n  translate\n} from '../../../helpers/l10n';\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n\n/*:: type Props = {|\n  onChange: (metric: string) => void,\n  onToggle: (property: string) => void,\n  open: boolean,\n  domain: { name: string, measures: Array<MeasureEnhanced> },\n  selected: string\n|}; */\n\nexport default class DomainFacet extends React.PureComponent {\n  /*:: props: Props; */\n\n  handleHeaderClick = () => this.props.onToggle(this.props.domain.name);\n\n  hasFacetSelected = (\n    domain /*: { name: string } */,\n    measures /*: Array<MeasureEnhanced> */,\n    selected /*: string */\n  ) => {\n    const measureSelected = measures.find(measure => measure.metric.key === selected);\n    const overviewSelected = domain.name === selected && hasBubbleChart(domain.name);\n    return measureSelected || overviewSelected;\n  };\n\n  getValues = () => {\n    const { domain, selected } = this.props;\n    const measureSelected = domain.measures.find(measure => measure.metric.key === selected);\n    const overviewSelected = domain.name === selected && hasBubbleChart(domain.name);\n    if (measureSelected) {\n      return [getLocalizedMetricName(measureSelected.metric)];\n    }\n    return overviewSelected ? [translate('component_measures.domain_overview')] : [];\n  };\n\n  renderItemFacetStat = (item /*: MeasureEnhanced */) =>\n    hasFacetStat(item.metric.key) ? <FacetMeasureValue measure={item} /> : null;\n\n  renderItemsFacet = () => {\n    const { domain, selected } = this.props;\n    const items = addMeasureCategories(domain.name, filterMeasures(domain.measures));\n    const hasCategories = items.some(item => typeof item === 'string');\n    const translateMetric = hasCategories ? getLocalizedCategoryMetricName : getLocalizedMetricName;\n    let sortedItems = sortMeasures(domain.name, items);\n\n    sortedItems = sortedItems.filter((item, index) => {\n      return (\n        typeof item !== 'string' ||\n        (index + 1 !== sortedItems.length && typeof sortedItems[index + 1] !== 'string')\n      );\n    });\n\n    return sortedItems.map(\n      item =>\n        typeof item === 'string' ? (\n          <span className=\"facet search-navigator-facet facet-category\" key={item}>\n            <span className=\"facet-name\">\n              {translate('component_measures.facet_category', item)}\n            </span>\n          </span>\n        ) : (\n          <FacetItem\n            active={item.metric.key === selected}\n            disabled={false}\n            key={item.metric.key}\n            name={\n              <span className=\"big-spacer-left\" id={`measure-${item.metric.key}-name`}>\n                {translateMetric(item.metric)}\n              </span>\n            }\n            onClick={this.props.onChange}\n            stat={this.renderItemFacetStat(item)}\n            value={item.metric.key}\n          />\n        )\n    );\n  };\n\n  renderOverviewFacet = () => {\n    const { domain, selected } = this.props;\n    if (!hasBubbleChart(domain.name)) {\n      return null;\n    }\n    return (\n      <FacetItem\n        active={domain.name === selected}\n        disabled={false}\n        key={domain.name}\n        name={\n          <span id={`measure-overview-${domain.name}-name`}>\n            {translate('component_measures.domain_overview')}\n          </span>\n        }\n        onClick={this.props.onChange}\n        stat={<BubblesIcon size={14} />}\n        value={domain.name}\n      />\n    );\n  };\n\n  render() {\n    const { domain } = this.props;\n    const helper = `component_measures.domain_facets.${domain.name}.help`;\n    const translatedHelper = translate(helper);\n    return (\n      <FacetBox property={domain.name}>\n        <FacetHeader\n          helper={helper !== translatedHelper ? translatedHelper : undefined}\n          name={getLocalizedMetricDomain(domain.name)}\n          onClick={this.handleHeaderClick}\n          open={this.props.open}\n          values={this.getValues()}\n        />\n\n        {this.props.open && (\n          <FacetItemsList>\n            {this.renderOverviewFacet()}\n            {this.renderItemsFacet()}\n          </FacetItemsList>\n        )}\n      </FacetBox>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport ProjectOverviewFacet from './ProjectOverviewFacet';\nimport DomainFacet from './DomainFacet';\nimport { getDefaultView, groupByDomains, KNOWN_DOMAINS, PROJECT_OVERVEW } from '../utils';\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n/*:: import type { Query } from '../types'; */\n\n/*:: type Props = {|\n  measures: Array<MeasureEnhanced>,\n  selectedMetric: string,\n  updateQuery: Query => void\n|}; */\n\n/*:: type State = {|\n  openFacets: { [string]: boolean }\n|}; */\n\nexport default class Sidebar extends React.PureComponent {\n  /*:: props: Props; */\n  /*:: state: State; */\n\n  constructor(props /*: Props */) {\n    super(props);\n    this.state = { openFacets: this.getOpenFacets({}, props) };\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (nextProps.selectedMetric !== this.props.selectedMetric) {\n      this.setState(state => this.getOpenFacets(state.openFacets, nextProps));\n    }\n  }\n\n  getOpenFacets = (\n    openFacets /*: { [string]: boolean } */,\n    { measures, selectedMetric } /*: Props */\n  ) => {\n    const newOpenFacets = { ...openFacets };\n    const measure = measures.find(measure => measure.metric.key === selectedMetric);\n    if (measure && measure.metric && measure.metric.domain) {\n      newOpenFacets[measure.metric.domain] = true;\n    } else if (KNOWN_DOMAINS.includes(selectedMetric)) {\n      newOpenFacets[selectedMetric] = true;\n    }\n    return newOpenFacets;\n  };\n\n  toggleFacet = (name /*: string */) => {\n    this.setState(({ openFacets } /*: State */) => ({\n      openFacets: { ...openFacets, [name]: !openFacets[name] }\n    }));\n  };\n\n  resetSelection = (metric /*: string */) => ({ selected: null, view: getDefaultView(metric) });\n\n  changeMetric = (metric /*: string */) =>\n    this.props.updateQuery({ metric, ...this.resetSelection(metric) });\n\n  render() {\n    return (\n      <div className=\"search-navigator-facets-list\">\n        <ProjectOverviewFacet\n          onChange={this.changeMetric}\n          selected={this.props.selectedMetric}\n          value={PROJECT_OVERVEW}\n        />\n        {groupByDomains(this.props.measures).map(domain => (\n          <DomainFacet\n            key={domain.name}\n            domain={domain}\n            onChange={this.changeMetric}\n            onToggle={this.toggleFacet}\n            open={this.state.openFacets[domain.name] === true}\n            selected={this.props.selectedMetric}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport key from 'keymaster';\nimport MeasureContentContainer from './MeasureContentContainer';\nimport MeasureOverviewContainer from './MeasureOverviewContainer';\nimport Sidebar from '../sidebar/Sidebar';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { hasBubbleChart, parseQuery, serializeQuery } from '../utils';\nimport { isSameBranchLike, getBranchLikeQuery } from '../../../helpers/branches';\nimport { translate } from '../../../helpers/l10n';\nimport { getDisplayMetrics } from '../../../helpers/measures';\n/*:: import type { Component, Query, Period } from '../types'; */\n/*:: import type { RawQuery } from '../../../helpers/query'; */\n/*:: import type { Metric } from '../../../store/metrics/actions'; */\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\nimport '../style.css';\n\n/*:: type Props = {|\n  branchLike?: { id?: string; name: string },\n  component: Component,\n  currentUser: { isLoggedIn: boolean },\n  location: { pathname: string, query: RawQuery },\n  fetchMeasures: (\n    component: string,\n    metricsKey: Array<string>,\n    branchLike?: { id?: string; name: string }\n  ) => Promise<{ component: Component, measures: Array<MeasureEnhanced>, leakPeriod: ?Period }>,\n  fetchMetrics: () => void,\n  metrics: { [string]: Metric },\n  metricsKey: Array<string>,\n  router: {\n    push: ({ pathname: string, query?: RawQuery }) => void\n  }\n|}; */\n\n/*:: type State = {|\n  loading: boolean,\n  measures: Array<MeasureEnhanced>,\n  leakPeriod: ?Period\n|}; */\n\nexport default class App extends React.PureComponent {\n  /*:: mounted: boolean; */\n  /*:: props: Props; */\n  /*:: state: State; */\n\n  constructor(props /*: Props */) {\n    super(props);\n    this.state = {\n      loading: true,\n      measures: [],\n      leakPeriod: null\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    // $FlowFixMe\n    document.body.classList.add('white-page');\n    // $FlowFixMe\n    document.documentElement.classList.add('white-page');\n    this.props.fetchMetrics();\n    this.fetchMeasures(this.props);\n    key.setScope('measures-files');\n    const footer = document.getElementById('footer');\n    if (footer) {\n      footer.classList.add('page-footer-with-sidebar');\n    }\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (\n      !isSameBranchLike(nextProps.branchLike, this.props.branchLike) ||\n      nextProps.component.key !== this.props.component.key ||\n      nextProps.metrics !== this.props.metrics\n    ) {\n      this.fetchMeasures(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    // $FlowFixMe\n    document.body.classList.remove('white-page');\n    // $FlowFixMe\n    document.documentElement.classList.remove('white-page');\n    key.deleteScope('measures-files');\n    const footer = document.getElementById('footer');\n    if (footer) {\n      footer.classList.remove('page-footer-with-sidebar');\n    }\n  }\n\n  fetchMeasures = ({ branchLike, component, fetchMeasures, metrics } /*: Props */) => {\n    this.setState({ loading: true });\n    const filteredKeys = getDisplayMetrics(Object.values(metrics)).map(metric => metric.key);\n    fetchMeasures(component.key, filteredKeys, branchLike).then(\n      ({ measures, leakPeriod }) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            leakPeriod,\n            measures: measures.filter(measure => measure.value != null || measure.leak != null)\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  updateQuery = (newQuery /*: Query */) => {\n    const query = serializeQuery({\n      ...parseQuery(this.props.location.query),\n      ...newQuery\n    });\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: {\n        ...query,\n        ...getBranchLikeQuery(this.props.branchLike),\n        id: this.props.component.key\n      }\n    });\n  };\n\n  render() {\n    const isLoading = this.state.loading || this.props.metricsKey.length <= 0;\n    if (isLoading) {\n      return <i className=\"spinner spinner-margin\" />;\n    }\n    const { branchLike, component, fetchMeasures, metrics } = this.props;\n    const { leakPeriod } = this.state;\n    const query = parseQuery(this.props.location.query);\n    const metric = metrics[query.metric];\n    return (\n      <div className=\"layout-page\" id=\"component-measures\">\n        <Helmet title={translate('layout.measures')} />\n\n        <ScreenPositionHelper className=\"layout-page-side-outer\">\n          {({ top }) => (\n            <div className=\"layout-page-side\" style={{ top }}>\n              <div className=\"layout-page-side-inner\">\n                <div className=\"layout-page-filters\">\n                  <Sidebar\n                    measures={this.state.measures}\n                    selectedMetric={query.metric}\n                    updateQuery={this.updateQuery}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </ScreenPositionHelper>\n\n        {metric != null && (\n          <MeasureContentContainer\n            branchLike={branchLike}\n            className=\"layout-page-main\"\n            currentUser={this.props.currentUser}\n            rootComponent={component}\n            fetchMeasures={fetchMeasures}\n            leakPeriod={leakPeriod}\n            metric={metric}\n            metrics={metrics}\n            router={this.props.router}\n            selected={query.selected}\n            updateQuery={this.updateQuery}\n            view={query.view}\n          />\n        )}\n        {metric == null &&\n          hasBubbleChart(query.metric) && (\n            <MeasureOverviewContainer\n              branchLike={branchLike}\n              className=\"layout-page-main\"\n              rootComponent={component}\n              currentUser={this.props.currentUser}\n              domain={query.metric}\n              leakPeriod={leakPeriod}\n              metrics={metrics}\n              router={this.props.router}\n              selected={query.selected}\n              updateQuery={this.updateQuery}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport App from './App';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport { getCurrentUser, getMetrics, getMetricsKey } from '../../../store/rootReducer';\nimport { fetchMetrics } from '../../../store/rootActions';\nimport { getMeasuresAndMeta } from '../../../api/measures';\nimport { getLeakPeriod } from '../../../helpers/periods';\nimport { enhanceMeasure } from '../../../components/measure/utils';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n/*:: import type { Component, Period } from '../types'; */\n/*:: import type { Measure, MeasureEnhanced } from '../../../components/measure/types'; */\n\nconst mapStateToProps = state => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state),\n  metricsKey: getMetricsKey(state)\n});\n\nfunction banQualityGate(component /*: Component */) /*: Array<Measure> */ {\n  const bannedMetrics = [];\n  if (!['VW', 'SVW'].includes(component.qualifier)) {\n    bannedMetrics.push('alert_status');\n  }\n  if (component.qualifier === 'APP') {\n    bannedMetrics.push('releasability_rating', 'releasability_effort');\n  }\n  return component.measures.filter(measure => !bannedMetrics.includes(measure.metric));\n}\n\nconst fetchMeasures = (\n  component /*: string */,\n  metricsKey /*: Array<string> */,\n  branchLike /*: { id?: string; name: string } | void */\n) => (dispatch, getState) => {\n  if (metricsKey.length <= 0) {\n    return Promise.resolve({ component: {}, measures: [], leakPeriod: null });\n  }\n\n  return getMeasuresAndMeta(component, metricsKey, {\n    additionalFields: 'periods',\n    ...getBranchLikeQuery(branchLike)\n  }).then(r => {\n    const measures = banQualityGate(r.component).map(measure =>\n      enhanceMeasure(measure, getMetrics(getState()))\n    );\n\n    const newBugs = measures.find(measure => measure.metric.key === 'new_bugs');\n    const applicationPeriods = newBugs ? [{ index: 1 }] : [];\n    const periods = r.component.qualifier === 'APP' ? applicationPeriods : r.periods;\n    return { component: r.component, measures, leakPeriod: getLeakPeriod(periods) };\n  }, throwGlobalError);\n};\n\nconst mapDispatchToProps = { fetchMeasures, fetchMetrics };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\ninterface Props {\n  className?: string;\n  children: React.ReactNode;\n  property: string;\n}\n\nexport default function FacetBox(props: Props) {\n  return (\n    <div\n      className={classNames('search-navigator-facet-box', props.className)}\n      data-property={props.property}>\n      {props.children}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface Props {\n  active?: boolean;\n  className?: string;\n  disabled?: boolean;\n  halfWidth?: boolean;\n  name: React.ReactNode;\n  onClick: (x: string) => void;\n  stat?: React.ReactNode;\n  value: string;\n}\n\nexport default class FacetItem extends React.PureComponent<Props> {\n  static defaultProps = {\n    disabled: false,\n    halfWidth: false\n  };\n\n  handleClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onClick(this.props.value);\n  };\n\n  render() {\n    const className = classNames('facet', 'search-navigator-facet', this.props.className, {\n      active: this.props.active,\n      'search-navigator-facet-half': this.props.halfWidth\n    });\n\n    return this.props.disabled ? (\n      <span className={className} data-facet={this.props.value}>\n        <span className=\"facet-name\">{this.props.name}</span>\n        {this.props.stat != null && <span className=\"facet-stat\">{this.props.stat}</span>}\n      </span>\n    ) : (\n      <a className={className} data-facet={this.props.value} href=\"#\" onClick={this.handleClick}>\n        <span className=\"facet-name\">{this.props.name}</span>\n        {this.props.stat != null && <span className=\"facet-stat\">{this.props.stat}</span>}\n      </a>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\nimport HelpIcon from '../icons-components/HelpIcon';\nimport Tooltip from '../controls/Tooltip';\nimport { Button } from '../ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n\ninterface Props {\n  helper?: string;\n  name: string;\n  onClear?: () => void;\n  onClick?: () => void;\n  open: boolean;\n  values?: string[];\n}\n\nexport default class FacetHeader extends React.PureComponent<Props> {\n  handleClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  renderHelper() {\n    if (!this.props.helper) {\n      return null;\n    }\n    return (\n      <Tooltip overlay={this.props.helper}>\n        <span>\n          <HelpIcon className=\"spacer-left text-info\" />\n        </span>\n      </Tooltip>\n    );\n  }\n\n  renderValueIndicator() {\n    const { values } = this.props;\n    if (this.props.open || !values || !values.length) {\n      return null;\n    }\n    const value =\n      values.length === 1 ? values[0] : translateWithParameters('x_selected', values.length);\n    return (\n      <span className=\"badge badge-secondary is-rounded text-ellipsis\" title={value}>\n        {value}\n      </span>\n    );\n  }\n\n  render() {\n    const showClearButton =\n      this.props.values != null && this.props.values.length > 0 && this.props.onClear != null;\n\n    return (\n      <div className=\"search-navigator-facet-header-wrapper\">\n        {this.props.onClick ? (\n          <span className=\"search-navigator-facet-header\">\n            <a href=\"#\" onClick={this.handleClick}>\n              <OpenCloseIcon className=\"little-spacer-right\" open={this.props.open} />\n              {this.props.name}\n            </a>\n            {this.renderHelper()}\n          </span>\n        ) : (\n          <span className=\"search-navigator-facet-header\">\n            {this.props.name}\n            {this.renderHelper()}\n          </span>\n        )}\n\n        <span className=\"search-navigator-facet-header-value spacer-left spacer-right \">\n          {this.renderValueIndicator()}\n        </span>\n\n        {showClearButton && (\n          <Button\n            className=\"search-navigator-facet-header-button button-small button-red\"\n            onClick={this.props.onClear}>\n            {translate('clear')}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default function FacetItemsList(props: Props) {\n  return <div className=\"search-navigator-facet-list\">{props.children}</div>;\n}\n"],"sourceRoot":""}