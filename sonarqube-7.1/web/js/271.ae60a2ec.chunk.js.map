{"version":3,"sources":["webpack:///./src/main/js/components/ui/IssueTypeIcon.tsx","webpack:///./src/main/js/components/measure/Measure.tsx","webpack:///./src/main/js/api/rules.ts","webpack:///./src/main/js/api/quality-gates.ts","webpack:///./src/main/js/api/measures.ts","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/components/measure/utils.ts","webpack:///./src/main/js/components/controls/ClipboardButton.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/helpers/periods.ts","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/charts/Histogram.tsx","webpack:///./src/main/js/components/charts/LanguageDistribution.tsx","webpack:///./src/main/js/components/charts/LanguageDistributionContainer.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/components/ui/SizeRating.tsx","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/components/preview-graph/PreviewGraphTooltipsContent.js","webpack:///./src/main/js/components/preview-graph/PreviewGraphTooltips.js","webpack:///./src/main/js/components/preview-graph/PreviewGraph.js","webpack:///./src/main/js/api/projectActivity.ts","webpack:///./src/main/js/components/shared/DrilldownLink.tsx","webpack:///./src/main/js/apps/overview/qualityGate/QualityGateCondition.js","webpack:///./src/main/js/apps/overview/propTypes.js","webpack:///./src/main/js/apps/overview/qualityGate/QualityGateConditions.js","webpack:///./src/main/js/apps/overview/qualityGate/EmptyQualityGate.js","webpack:///./src/main/js/apps/overview/qualityGate/QualityGate.js","webpack:///./src/main/js/apps/overview/qualityGate/ApplicationQualityGateProject.tsx","webpack:///./src/main/js/apps/overview/qualityGate/ApplicationQualityGate.tsx","webpack:///./src/main/js/components/charts/line-chart.js","webpack:///./src/main/js/apps/overview/components/Timeline.tsx","webpack:///./src/main/js/apps/overview/main/enhance.tsx","webpack:///./src/main/js/apps/overview/components/ApplicationLeakPeriodLegend.tsx","webpack:///./src/main/js/api/application.ts","webpack:///./src/main/js/apps/overview/components/LeakPeriodLegend.js","webpack:///./src/main/js/apps/overview/helpers/metrics.js","webpack:///./src/main/js/apps/overview/main/BugsAndVulnerabilities.tsx","webpack:///./src/main/js/apps/overview/main/CodeSmells.tsx","webpack:///./src/main/js/apps/overview/main/Coverage.tsx","webpack:///./src/main/js/apps/overview/main/Duplications.tsx","webpack:///./src/main/js/apps/overview/meta/MetaKey.tsx","webpack:///./src/main/js/apps/overview/meta/MetaOrganizationKey.tsx","webpack:///./src/main/js/apps/overview/meta/MetaLink.tsx","webpack:///./src/main/js/apps/overview/meta/MetaLinks.tsx","webpack:///./src/main/js/apps/overview/meta/MetaQualityGate.tsx","webpack:///./src/main/js/apps/overview/badges/utils.ts","webpack:///./src/main/js/apps/overview/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/apps/overview/meta/MetaSize.tsx","webpack:///./src/main/js/apps/overview/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/apps/overview/meta/MetaTags.tsx","webpack:///./src/main/js/apps/overview/badges/BadgeButton.tsx","webpack:///./src/main/js/apps/overview/badges/BadgeParams.tsx","webpack:///./src/main/js/apps/overview/badges/BadgesModal.tsx","webpack:///./src/main/js/apps/overview/events/Event.tsx","webpack:///./src/main/js/apps/overview/events/Analysis.tsx","webpack:///./src/main/js/apps/overview/events/AnalysesList.tsx","webpack:///./src/main/js/apps/overview/meta/Meta.tsx","webpack:///./src/main/js/apps/overview/utils.js","webpack:///./src/main/js/apps/overview/components/OverviewApp.tsx","webpack:///./src/main/js/apps/overview/components/EmptyOverview.tsx","webpack:///./src/main/js/apps/overview/components/App.tsx"],"names":["_icons_components_CodeSmellIcon__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","IssueTypeIcon","_a","icon","className","query","size","toLowerCase","react__WEBPACK_IMPORTED_MODULE_0__","_icons_components_BugIcon__WEBPACK_IMPORTED_MODULE_1__","_icons_components_VulnerabilityIcon__WEBPACK_IMPORTED_MODULE_2__","_helpers_measures__WEBPACK_IMPORTED_MODULE_5__","Measure","decimals","metricKey","metricType","small","value","undefined","_ui_Level__WEBPACK_IMPORTED_MODULE_3__","level","formattedValue","Object","tooltip","_utils__WEBPACK_IMPORTED_MODULE_1__","Number","rating","_ui_Rating__WEBPACK_IMPORTED_MODULE_2__","_controls_Tooltip__WEBPACK_IMPORTED_MODULE_4__","overlay","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getRulesApp","data","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","searchRules","takeFacet","response","property","facet","facets","find","values","getRuleDetails","parameters","getRuleTags","then","r","tags","createRule","rule","error","status","Promise","reject","deleteRule","updateRule","fetchQualityGates","fetchQualityGate","createQualityGate","deleteQualityGate","renameQualityGate","copyQualityGate","setQualityGateAsDefault","createCondition","updateCondition","deleteCondition","getGateForProject","qualityGate","__assign","isDefault","default","searchGates","associateGateWithProject","dissociateGateWithProject","getApplicationQualityGate","getMeasures","component","measures","getMeasuresAndMeta","componentKey","metrics","additional","metricKeys","join","getMeasuresForProjects","projectKeys","getCustomMeasures","customMeasures","paging","pageIndex","p","pageSize","ps","total","createCustomMeasure","updateCustomMeasure","deleteCustomMeasure","s","CodeSnippet","isOneLine","noCopy","snippet","snippetArray","Array","isArray","filter","line","finalSnippet","classnames__WEBPACK_IMPORTED_MODULE_1__","code-snippet-oneline","_controls_ClipboardButton__WEBPACK_IMPORTED_MODULE_2__","copyValue","KNOWN_RATINGS","enhanceMeasure","measure","metric","leak","periods","period","index","getLeakValue","getRatingTooltip","finalMetricKey","_helpers_measures__WEBPACK_IMPORTED_MODULE_0__","substr","includes","ClipboardButton","_super","_this","apply","this","arguments","mounted","state","tooltipShown","showTooltip","setState","setTimeout","__extends","prototype","componentDidMount","copyButton","clipboard","clipboard__WEBPACK_IMPORTED_MODULE_2__","on","componentDidUpdate","destroy","componentWillUnmount","render","_Tooltip__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","visible","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","props","data-clipboard-text","innerRef","node","_icons_components_DropdownIcon__WEBPACK_IMPORTED_MODULE_3__","TagsList","_b","allowUpdate","title","_dates__WEBPACK_IMPORTED_MODULE_1__","getLeakPeriod","getPeriod","getPeriodLabel","parameter","modeParam","mode","_l10n__WEBPACK_IMPORTED_MODULE_0__","getPeriodDate","date","MultiSelectOption","handleSelect","evt","stopPropagation","preventDefault","currentTarget","blur","disabled","onSelectChange","element","selected","handleHover","onHover","MultiSelectOption_extends","classnames","icon-checkbox-checked","icon-checkbox-invisible","activeClass","active","index_js_exposed","href","onClick","onFocus","onMouseOver","custom","renderLabel","MultiSelect_MultiSelect","MultiSelect","call","handleSelectChange","item","onSelectItem","onUnselectItem","handleSearchChange","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","indexOf","handleKeyboard","keyCode","selectNextElement","selectPreviousElement","toggleSelect","loading","onSearch","stopLoading","isNewElement","onSelect","onUnselect","elem","selectedElements","elements","length","updateSelectedElements","filterSelected","slice","updateUnselectedElements","listSize","unselectedElements","lodash_js_exposed","concat","setElementActive","idx","allElements","MultiSelect_extends","container","addEventListener","componentWillReceiveProps","nextProps","totalElements","searchInput","focus","removeEventListener","allowSelection","_c","allowNewElements","_d","footerNode","_e","activeElement","showNewElement","infiniteList","listClasses","menu-vertically-limited","spacer-top","with-top-separator","with-bottom-separator","Boolean","ref","div","SearchBox","autoFocus","onChange","placeholder","map","common_MultiSelectOption","key","l10n","defaultProps","Histogram_DEFAULT_PADDING","Histogram","Histogram_extends","renderBar","d","xScale","yScale","alignTicks","padding","width","Math","round","x","range","y","bandwidth","height","renderValue","yValues","Histogram_BAR_HEIGHT","Tooltip","yTooltips","dx","dy","renderTick","yTicks","tick","historyTickClass","renderBars","bars","availableWidth","d3_scale","domain","d3_array","availableHeight","_","rangeRound","transform","LanguageDistribution_cutLanguageName","name","__webpack_exports__","es","languages","rootReducer","distribution","split","point","tokens","language","lines","parseInt","langKey","lang","getLanguageName","charts_Histogram","fetchWebApi","showInternal","include_internals","webServices","deprecated","actions","action","deprecatedSince","internal","fetchResponseExample","controller","SizeRating","letter","muted","lodash__WEBPACK_IMPORTED_MODULE_2__","size-rating-small","size-rating-muted","TagsSelector","_common_BubblePopup__WEBPACK_IMPORTED_MODULE_1__","customClass","position","_common_MultiSelect__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","selectedTags","validateTag","replace","PreviewGraphTooltipsContent_PreviewGraphTooltipsContent","style","translatedName","index_js_exposed_default","a","createElement","ChartLegendIcon","PreviewGraphTooltips","PreviewGraphTooltips_extends","tooltipIdx","left","tooltipPos","graphWidth","BubblePopup","classnames_default","top","DateFormatter","selectedDate","long","series","serie","toString","formatValue","PureComponent","PreviewGraph_GRAPH_PADDING","PreviewGraph_MAX_GRAPH_NB","PreviewGraph_MAX_SERIES_PER_GRAPH","PreviewGraph_PreviewGraph","PreviewGraph","utils","getDisplayedMetrics","graph","customMetrics","getSeries","history","myHistory","displayedMetrics","firstValid","measureHistory","handleClick","context","router","push","pathname","PreviewGraph_assign","id","project","branches","branchLike","updateTooltip","tooltipXPos","storage","PreviewGraph_extends","renderTimeline","AutoSizer_default","disableHeight","AdvancedTimeline","endDate","startDate","hideGrid","hideXAxis","interpolate","showAreas","preview_graph_PreviewGraphTooltips","tabIndex","role","renderWhenEmpty","contextTypes","prop_types","getProjectActivity","createEvent","analysis","category","description","event","deleteEvent","changeEvent","deleteAnalysis","DrilldownLink_ISSUE_MEASURES","DrilldownLink","isIssueMeasure","propsToIssueParams","params","sinceLeakPeriod","assign","resolved","severities","statuses","resolutions","types","renderIssuesLink","url","urls","DrilldownLink_assign","react_router_es","to","children","DrilldownLink_extends","QualityGateCondition","getIssuesUrl","customQuery","QualityGateCondition_assign","QualityGateCondition_extends","getDecimalsNumber","threshold","delta","abs","toFixed","match","getUrlForCodeSmells","getUrlForBugsOrVulnerabilities","type","condition","warning","getUrlForType","wrapWithLink","overview-quality-gate-condition-leak","RATING_METRICS_MAPPING","reliability_rating","new_reliability_rating","security_rating","new_security_rating","sqale_rating","new_maintainability_rating","shared_DrilldownLink","isDiff","helpers_measures","actual","operator","op","parseFloat","propTypes_ComponentType","isRequired","propTypes_MetricType","propTypes_MeasureType","propTypes_ConditionType","propTypes_EnhancedConditionType","propTypes_ConditionsListType","propTypes_PeriodType","text","QualityGateConditions_LEVEL_ORDER","QualityGateConditions","QualityGateConditions_extends","loadFailedMeasures","prevProps","conditions","failedConditions","c","api_measures","QualityGateConditions_assign","additionalFields","QualityGateConditions_enhanceConditions","sortedConditions","qualityGate_QualityGateCondition","propTypes","prop_types_default","object","qualityGate_EmptyQualityGate","QualityGate_QualityGate","statusMeasure","detailsMeasure","qualifier","QualityGate_isProject","rawDetails","ignoredConditions","details","JSON","parse","Level","HelpIcon","fill","theme","qualityGate_QualityGateConditions","ApplicationQualityGateProject","renderCondition","metricName","errorThreshold","warningThreshold","is-on-leak","onLeak","text-danger","text-warning","comparator","ApplicationQualityGateProject_extends","ApplicationQualityGate","fetchDetails","quality_gates","application","organization","projects","ApplicationQualityGate_extends","overview_qualityGate_ApplicationQualityGateProject","line_chart_LineChart","create_react_class_default","displayName","arrayOf","xTicks","any","xValues","number","backdropConstraints","displayBackdrop","bool","displayPoints","displayVerticalGrid","mixins","resize_mixin","getDefaultProps","getInitialState","renderBackdrop","area","d3_shape","y0","y1","defined","curve","c_1","renderPoints","points","cx","cy","renderVerticalGrid","y2","x1","x2","renderXTicks","ticks","renderXValues","renderLine","maxY","Timeline","Timeline_extends","filterSnapshots","before","after","matchBefore","matchAfter","snapshots","snapshot","enhance_enhance","ComposedComponent","class_1","getValue","leakPeriod","renderHeader","label","BubblesIcon","renderMeasure","renderHistoryLink","renderRating","Rating","renderIssues","enhance_assign","HistoryIcon","helpers_periods","components_Timeline","enhance_extends","ApplicationLeakPeriodLegend","fetchLeaks","leaks","request","throwGlobalError","renderOverlay","projectName","DateTooltipFormatter","ApplicationLeakPeriodLegend_extends","onShow","LeakPeriodLegend_LeakPeriodLegend","leakPeriodLabel","leakPeriodDate","formattedLeakPeriodDate","DateFromNow","fromNow","metrics_getMetricName","main_BugsAndVulnerabilities","BugsAndVulnerabilities","BugsAndVulnerabilities_extends","renderLeak","components_ApplicationLeakPeriodLegend","marginLeft","BugIcon","VulnerabilityIcon","renderNutshell","main_CodeSmells","CodeSmells","CodeSmells_extends","renderDebt","CodeSmells_assign","facetMode","renderTimelineStartDate","historyStartDate","displayDate","CodeSmellIcon","main_Coverage","Coverage","Coverage_extends","getCoverage","renderTests","renderCoverage","coverage","CoverageRating","renderNewCoverage","newCoverageMeasure","newCoverageValue","newLinesToCover","newLinesToCoverValue","main_Duplications","Duplications","Duplications_extends","renderDuplicatedBlocks","renderDuplications","duplications","DuplicationsRating","renderNewDuplications","newDuplicationsMeasure","newDuplicationsValue","newLinesMeasure","newLinesValue","MetaKey_MetaKey","readOnly","MetaOrganizationKey_MetaOrganizationKey","MetaLink_MetaLink","link","rel","target","MetaLink_MetaLinkIcon","BugTrackerIcon","MetaLinks","loadLinks","projectLinks","links","MetaLinks_extends","orderedLinks","MetaQualityGate_MetaQualityGate","utils_BadgeType","BadgeType","MetaQualityProfiles_MetaQualityProfiles","MetaQualityProfiles","deprecatedByKey","MetaQualityProfiles_extends","loadDeprecatedRules","requests","profiles","profile","loadDeprecatedRulesForProfile","all","responses","deprecatedByKey_1","forEach","count","i","profileKey","activation","qprofile","rules","getDeprecatedRulesCount","renderProfile","languageFromStore","languageName","path","inner","headerClassName","meta_MetaQualityProfiles","MetaSize","renderLoC","ncloc","is-half-width","renderLoCDistribution","languageDistribution","LanguageDistributionContainer","renderProjects","MetaSize_extends","MetaTagsSelector_LIST_SIZE","MetaTagsSelector","searchResult","components","q","min","tag","setProjectTags","MetaTagsSelector_extends","availableTags","MetaTags","popupOpen","popupPosition","right","handleKey","handleOutsideClick","tagsSelector","contains","canUpdateTags","configuration","showSettings","getPopupPos","eltPos","containerPos","handleSetProjectTags","onComponentChange","MetaTags_extends","tagsList","card","buttonPos","getBoundingClientRect","cardPos","window","buttons","meta_MetaTagsSelector","utils_getBadgeUrl","branch","color","pullRequest","marketing","querystring_es3","BadgeButton","BadgeButton_extends","alt","src","BadgeParams","badgeMetrics","getColorOptions","getMetricOptions","handleColorChange","updateOptions","handleMetricChange","BadgeParams_extends","fetchBadgeMetrics","web_api","webservices","ws","param","possibleValues","options","htmlFor","Select","clearable","searchable","BadgesModal","open","selectedType","badgeOptions","handleClose","handleOpen","handleSelectBadge","handleUpdateOptions","BadgesModal_assign","BadgesModal_extends","header","fullBadgeOptions","badges","onSonarCloud","Modal","contentLabel","onRequestClose","badges_BadgeButton","badges_BadgeParams","Event_Event","mouseEnterDelay","Analysis_Analysis","Analysis_rest","sortedEvents","events","AnalysesList_PAGE_SIZE","AnalysesList","analyses","getTopLevelComponent","current","breadcrumbs","fetchData","projectActivity","AnalysesList_assign","AnalysesList_extends","renderList","Meta","Meta_extends","organizationsEnabled","qualityProfiles","isProject","isPrivate","visibility","Private","meta_MetaTags","meta_MetaSize","events_AnalysesList","meta_MetaLinks","badges_BadgesModal","METRICS","HISTORY_METRICS_LIST","OverviewApp_OverviewApp","OverviewApp","loadHistory","graphMetrics","projectActivity_utils","time_machine","OverviewApp_assign","history_1","dates","getApplicationLeakPeriod","OverviewApp_extends","fetchMetrics","loadMeasures","renderLoading","domainProps","qualityGate_ApplicationQualityGate","meta_Meta","OverviewApp_mapDispatchToProps","rootActions","components_OverviewApp","EmptyOverview_EmptyOverview","hasBranches","showWarning","rawMessage","head","tail","index_es","defaultMessage","App_App","App","isPortfolio","isFile","App_extends","branchLikes","analysisDate","isPending","isInProgress"],"mappings":"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","file":"js/271.ae60a2ec.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BugIcon from '../icons-components/BugIcon';\nimport VulnerabilityIcon from '../icons-components/VulnerabilityIcon';\nimport CodeSmellIcon from '../icons-components/CodeSmellIcon';\n\ninterface Props {\n  className?: string;\n  query: string;\n  size?: number;\n}\n\nexport default function IssueTypeIcon({ className, query, size }: Props) {\n  let icon;\n\n  switch (query.toLowerCase()) {\n    case 'bug':\n    case 'bugs':\n    case 'new_bugs':\n      icon = <BugIcon size={size} />;\n      break;\n    case 'vulnerability':\n    case 'vulnerabilities':\n    case 'new_vulnerabilities':\n      icon = <VulnerabilityIcon size={size} />;\n      break;\n    case 'code_smell':\n    case 'code_smells':\n    case 'new_code_smells':\n      icon = <CodeSmellIcon size={size} />;\n      break;\n  }\n\n  if (!icon) {\n    return null;\n  }\n\n  return className ? <span className={className}>{icon}</span> : icon;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getRatingTooltip } from './utils';\nimport Rating from '../ui/Rating';\nimport Level from '../ui/Level';\nimport Tooltips from '../controls/Tooltip';\nimport { formatMeasure } from '../../helpers/measures';\n\ninterface Props {\n  className?: string;\n  decimals?: number | null;\n  metricKey: string;\n  metricType: string;\n  small?: boolean;\n  value: string | undefined;\n}\n\nexport default function Measure({\n  className,\n  decimals,\n  metricKey,\n  metricType,\n  small,\n  value\n}: Props) {\n  if (value === undefined) {\n    return <span>{'–'}</span>;\n  }\n\n  if (metricType === 'LEVEL') {\n    return <Level className={className} level={value} small={small} />;\n  }\n\n  if (metricType !== 'RATING') {\n    const formattedValue = formatMeasure(value, metricType, { decimals });\n    return <span className={className}>{formattedValue != null ? formattedValue : '–'}</span>;\n  }\n\n  const tooltip = getRatingTooltip(metricKey, Number(value));\n  const rating = <Rating small={small} value={value} />;\n  if (tooltip) {\n    return (\n      <Tooltips overlay={tooltip}>\n        <span className={className}>{rating}</span>\n      </Tooltips>\n    );\n  }\n  return rating;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { post, getJSON, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Rule, RuleDetails, RuleActivation } from '../app/types';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: { [rule: string]: RuleActivation[] };\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: RuleActivation[]; rule: RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    error => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (error && error.response && error.response.status === 409) {\n        return Promise.reject(error.response);\n      } else {\n        return throwGlobalError(error);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Metric } from '../app/types';\n\nexport interface ConditionBase {\n  error: string;\n  metric: string;\n  op?: string;\n  period?: number;\n  warning: string;\n}\n\nexport interface Condition extends ConditionBase {\n  id: number;\n}\n\nexport interface QualityGate {\n  actions?: {\n    associateProjects: boolean;\n    copy: boolean;\n    delete: boolean;\n    manageConditions: boolean;\n    rename: boolean;\n    setAsDefault: boolean;\n  };\n  conditions?: Condition[];\n  id: number;\n  isBuiltIn?: boolean;\n  isDefault?: boolean;\n  name: string;\n}\n\nexport function fetchQualityGates(data: {\n  organization?: string;\n}): Promise<{\n  actions: { create: boolean };\n  qualitygates: QualityGate[];\n}> {\n  return getJSON('/api/qualitygates/list', data).catch(throwGlobalError);\n}\n\nexport function fetchQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<QualityGate> {\n  return getJSON('/api/qualitygates/show', data).catch(throwGlobalError);\n}\n\nexport function createQualityGate(data: {\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/create', data).catch(throwGlobalError);\n}\n\nexport function deleteQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/destroy', data).catch(throwGlobalError);\n}\n\nexport function renameQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/rename', data).catch(throwGlobalError);\n}\n\nexport function copyQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/copy', data).catch(throwGlobalError);\n}\n\nexport function setQualityGateAsDefault(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/set_as_default', data).catch(throwGlobalError);\n}\n\nexport function createCondition(\n  data: {\n    gateId: number;\n    organization?: string;\n  } & ConditionBase\n): Promise<Condition> {\n  return postJSON('/api/qualitygates/create_condition', data);\n}\n\nexport function updateCondition(data: { organization?: string } & Condition): Promise<Condition> {\n  return postJSON('/api/qualitygates/update_condition', data);\n}\n\nexport function deleteCondition(data: { id: number; organization?: string }): Promise<void> {\n  return post('/api/qualitygates/delete_condition', data);\n}\n\nexport function getGateForProject(data: {\n  organization?: string;\n  project: string;\n}): Promise<QualityGate | undefined> {\n  return getJSON('/api/qualitygates/get_by_project', data).then(\n    ({ qualityGate }) =>\n      qualityGate && {\n        ...qualityGate,\n        isDefault: qualityGate.default\n      },\n    throwGlobalError\n  );\n}\n\nexport function searchGates(data: {\n  gateId: number;\n  organization?: string;\n  page: number;\n  pageSize: number;\n  selected: string;\n}): Promise<void | Response> {\n  return getJSON('/api/qualitygates/search', data).catch(throwGlobalError);\n}\n\nexport function associateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/select', data).catch(throwGlobalError);\n}\n\nexport function dissociateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/deselect', data).catch(throwGlobalError);\n}\n\nexport interface ConditionAnalysis {\n  comparator: string;\n  errorThreshold?: string;\n  metric: string;\n  periodIndex?: number;\n  onLeak?: boolean;\n  status: string;\n  value: string;\n  warningThreshold?: string;\n}\n\nexport interface ApplicationProject {\n  key: string;\n  name: string;\n  status: string;\n  conditions: ConditionAnalysis[];\n}\n\nexport interface ApplicationQualityGate {\n  metrics: Metric[];\n  projects: ApplicationProject[];\n  status: string;\n}\n\nexport function getApplicationQualityGate(data: {\n  application: string;\n  organization?: string;\n}): Promise<ApplicationQualityGate> {\n  return getJSON('/api/qualitygates/application_status', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, RequestData, postJSON, post } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Measure, MeasurePeriod } from '../helpers/measures';\nimport { Metric, CustomMeasure, Paging, BranchParameters } from '../app/types';\nimport { Period } from '../helpers/periods';\n\nexport function getMeasures(\n  data: { componentKey: string; metricKeys: string } & BranchParameters\n): Promise<{ metric: string; value?: string }[]> {\n  return getJSON('/api/measures/component', data).then(r => r.component.measures, throwGlobalError);\n}\n\nexport interface MeasureComponent {\n  key: string;\n  description?: string;\n  measures: Measure[];\n  name: string;\n  qualifier: string;\n}\n\nexport function getMeasuresAndMeta(\n  componentKey: string,\n  metrics: string[],\n  additional: RequestData = {}\n): Promise<{ component: MeasureComponent; metrics?: Metric[]; periods?: Period[] }> {\n  const data = { ...additional, componentKey, metricKeys: metrics.join(',') };\n  return getJSON('/api/measures/component', data);\n}\n\ninterface MeasuresForProjects {\n  component: string;\n  metric: string;\n  periods?: MeasurePeriod[];\n  value?: string;\n}\n\nexport function getMeasuresForProjects(\n  projectKeys: string[],\n  metricKeys: string[]\n): Promise<MeasuresForProjects[]> {\n  return getJSON('/api/measures/search', {\n    projectKeys: projectKeys.join(),\n    metricKeys: metricKeys.join()\n  }).then(r => r.measures);\n}\n\nexport function getCustomMeasures(data: {\n  f?: string;\n  p?: number;\n  projectKey: string;\n  ps?: number;\n}): Promise<{ customMeasures: CustomMeasure[]; paging: Paging }> {\n  return getJSON('/api/custom_measures/search', data).then(\n    r =>\n      ({\n        customMeasures: r.customMeasures,\n        paging: { pageIndex: r.p, pageSize: r.ps, total: r.total }\n      } as any),\n    throwGlobalError\n  );\n}\n\nexport function createCustomMeasure(data: {\n  description?: string;\n  metricKey: string;\n  projectKey: string;\n  value: string;\n}): Promise<CustomMeasure> {\n  return postJSON('/api/custom_measures/create', data).catch(throwGlobalError);\n}\n\nexport function updateCustomMeasure(data: { description?: string; id: string; value?: string }) {\n  return post('/api/custom_measures/update', data).catch(throwGlobalError);\n}\n\nexport function deleteCustomMeasure(data: { id: string }) {\n  return post('/api/custom_measures/delete', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ClipboardButton from '../controls/ClipboardButton';\nimport './CodeSnippet.css';\n\ninterface Props {\n  className?: string;\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  snippet: string | (string | undefined)[];\n}\n\n// keep this \"useless\" concatentation for the readability reason\n// eslint-disable-next-line no-useless-concat\nconst s = ' \\\\' + '\\n  ';\n\nexport default function CodeSnippet({ className, isOneLine, noCopy, snippet }: Props) {\n  const snippetArray = Array.isArray(snippet)\n    ? snippet.filter(line => line !== undefined)\n    : [snippet];\n  const finalSnippet = isOneLine ? snippetArray.join(' ') : snippetArray.join(s);\n  return (\n    <div className={classNames('code-snippet', { 'code-snippet-oneline': isOneLine }, className)}>\n      <pre>{finalSnippet}</pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getRatingTooltip as nextGetRatingTooltip,\n  isDiffMetric,\n  Measure,\n  MeasureEnhanced\n} from '../../helpers/measures';\nimport { Metric } from '../../app/types';\n\nconst KNOWN_RATINGS = ['sqale_rating', 'reliability_rating', 'security_rating'];\n\nexport function enhanceMeasure(\n  measure: Measure,\n  metrics: { [key: string]: Metric }\n): MeasureEnhanced {\n  return {\n    ...measure,\n    metric: metrics[measure.metric],\n    leak: getLeakValue(measure)\n  };\n}\n\nexport function getLeakValue(measure: Measure | undefined): string | undefined {\n  if (!measure || !measure.periods) {\n    return undefined;\n  }\n  const period = measure.periods.find(period => period.index === 1);\n  return period && period.value;\n}\n\nexport function getRatingTooltip(metricKey: string, value: number): string | undefined {\n  const finalMetricKey = isDiffMetric(metricKey) ? metricKey.substr(4) : metricKey;\n  if (KNOWN_RATINGS.includes(finalMetricKey)) {\n    return nextGetRatingTooltip(finalMetricKey, value);\n  }\n  return undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as Clipboard from 'clipboard';\nimport Tooltip from './Tooltip';\nimport { Button } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  copyValue: string;\n}\n\ninterface State {\n  tooltipShown: boolean;\n}\n\nexport default class ClipboardButton extends React.PureComponent<Props, State> {\n  clipboard?: Clipboard;\n  copyButton?: HTMLElement | null;\n  mounted = false;\n  state: State = { tooltipShown: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n  }\n\n  showTooltip = () => {\n    if (this.mounted) {\n      this.setState({ tooltipShown: true });\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setState({ tooltipShown: false });\n        }\n      }, 1000);\n    }\n  };\n\n  render() {\n    return (\n      <Tooltip overlay={translate('copied_action')} visible={this.state.tooltipShown}>\n        <Button\n          className={classNames('js-copy-to-clipboard no-select', this.props.className)}\n          data-clipboard-text={this.props.copyValue}\n          innerRef={node => (this.copyButton = node)}>\n          {translate('copy')}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './TagsList.css';\nimport DropdownIcon from '../icons-components/DropdownIcon';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span className={classNames('tags-list', className)} title={tags.join(', ')}>\n      <i className=\"icon-tags\" />\n      <span className=\"text-ellipsis\">{tags.join(', ')}</span>\n      {allowUpdate && <DropdownIcon />}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { translate, translateWithParameters } from './l10n';\nimport { parseDate } from './dates';\n\nexport interface Period {\n  date: string;\n  index: number;\n  mode: string;\n  modeParam?: string;\n  parameter: string;\n}\n\nexport function getPeriod(periods: Period[] | undefined, index: number): Period | undefined {\n  if (!Array.isArray(periods)) {\n    return undefined;\n  }\n\n  return periods.find(period => period.index === index);\n}\n\nexport function getLeakPeriod(periods: Period[] | undefined): Period | undefined {\n  return getPeriod(periods, 1);\n}\n\nexport function getPeriodLabel(period: Period | undefined): string | undefined {\n  if (!period) {\n    return undefined;\n  }\n\n  const parameter = period.modeParam || period.parameter;\n\n  if (period.mode === 'previous_version' && !parameter) {\n    return translate('overview.period.previous_version_only_date');\n  }\n\n  return translateWithParameters(`overview.period.${period.mode}`, parameter);\n}\n\nexport function getPeriodDate(period?: { date?: string }): Date | undefined {\n  return period && period.date ? parseDate(period.date) : undefined;\n}\n\nexport function getLeakPeriodLabel(periods: Period[]): string | undefined {\n  return getPeriodLabel(getLeakPeriod(periods));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\ninterface Props {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (elem: string) => void;\n  onSelectChange: (elem: string, selected: boolean) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default class MultiSelectOption extends React.PureComponent<Props> {\n  handleSelect = (evt: React.SyntheticEvent<HTMLAnchorElement>) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    evt.currentTarget.blur();\n\n    if (!this.props.disabled) {\n      this.props.onSelectChange(this.props.element, !this.props.selected);\n    }\n  };\n\n  handleHover = () => this.props.onHover(this.props.element);\n\n  render() {\n    const { selected, disabled } = this.props;\n    const className = classNames('icon-checkbox', {\n      'icon-checkbox-checked': selected,\n      'icon-checkbox-invisible': disabled\n    });\n    const activeClass = classNames({ active: this.props.active, disabled });\n\n    return (\n      <li>\n        <a\n          className={activeClass}\n          href=\"#\"\n          onClick={this.handleSelect}\n          onFocus={this.handleHover}\n          onMouseOver={this.handleHover}>\n          <i className={className} /> {this.props.custom && '+ '}\n          {this.props.renderLabel(this.props.element)}\n        </a>\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport MultiSelectOption from './MultiSelectOption';\nimport SearchBox from '../controls/SearchBox';\nimport { translateWithParameters } from '../../helpers/l10n';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (item: string, selected: boolean) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement &&\n            selectedElements.length < 1 &&\n            unselectedElements.length < 1 && (\n              <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n            )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { max } from 'd3-array';\nimport { scaleLinear, scaleBand, ScaleLinear, ScaleBand } from 'd3-scale';\nimport Tooltip from '../controls/Tooltip';\n\ninterface Props {\n  alignTicks?: boolean;\n  bars: number[];\n  height: number;\n  padding?: [number, number, number, number];\n  yTicks?: string[];\n  yTooltips?: string[];\n  yValues?: string[];\n  width: number;\n}\n\nconst BAR_HEIGHT = 10;\nconst DEFAULT_PADDING = [10, 10, 10, 10];\n\ntype XScale = ScaleLinear<number, number>;\ntype YScale = ScaleBand<number>;\n\nexport default class Histogram extends React.PureComponent<Props> {\n  renderBar(d: number, index: number, xScale: XScale, yScale: YScale) {\n    const { alignTicks, padding = DEFAULT_PADDING } = this.props;\n\n    const width = Math.round(xScale(d)) + /* minimum bar width */ 1;\n    const x = xScale.range()[0] + (alignTicks ? padding[3] : 0);\n    const y = Math.round(yScale(index)! + yScale.bandwidth() / 2);\n\n    return <rect className=\"bar-chart-bar\" x={x} y={y} width={width} height={BAR_HEIGHT} />;\n  }\n\n  renderValue(d: number, index: number, xScale: XScale, yScale: YScale) {\n    const { alignTicks, padding = DEFAULT_PADDING, yValues } = this.props;\n\n    const value = yValues && yValues[index];\n\n    if (!value) {\n      return null;\n    }\n\n    const x = xScale(d) + (alignTicks ? padding[3] : 0);\n    const y = Math.round(yScale(index)! + yScale.bandwidth() / 2 + BAR_HEIGHT / 2);\n\n    return (\n      <Tooltip overlay={this.props.yTooltips && this.props.yTooltips[index]}>\n        <text className=\"bar-chart-tick histogram-value\" x={x} y={y} dx=\"1em\" dy=\"0.3em\">\n          {value}\n        </text>\n      </Tooltip>\n    );\n  }\n\n  renderTick(index: number, xScale: XScale, yScale: YScale) {\n    const { alignTicks, yTicks } = this.props;\n\n    const tick = yTicks && yTicks[index];\n\n    if (!tick) {\n      return null;\n    }\n\n    const x = xScale.range()[0];\n    const y = Math.round(yScale(index)! + yScale.bandwidth() / 2 + BAR_HEIGHT / 2);\n    const historyTickClass = alignTicks ? 'histogram-tick-start' : 'histogram-tick';\n\n    return (\n      <text\n        className={'bar-chart-tick ' + historyTickClass}\n        x={x}\n        y={y}\n        dx={alignTicks ? 0 : '-1em'}\n        dy=\"0.3em\">\n        {tick}\n      </text>\n    );\n  }\n\n  renderBars(xScale: XScale, yScale: YScale) {\n    return (\n      <g>\n        {this.props.bars.map((d, index) => {\n          return (\n            <g key={index}>\n              {this.renderBar(d, index, xScale, yScale)}\n              {this.renderValue(d, index, xScale, yScale)}\n              {this.renderTick(index, xScale, yScale)}\n            </g>\n          );\n        })}\n      </g>\n    );\n  }\n\n  render() {\n    const { bars, width, height, padding = DEFAULT_PADDING } = this.props;\n\n    const availableWidth = width - padding[1] - padding[3];\n    const xScale: XScale = scaleLinear()\n      .domain([0, max(bars)!])\n      .range([0, availableWidth]);\n\n    const availableHeight = height - padding[0] - padding[2];\n    const yScale: YScale = scaleBand<number>()\n      .domain(bars.map((_, index) => index))\n      .rangeRound([0, availableHeight]);\n\n    return (\n      <svg className=\"bar-chart\" width={this.props.width} height={this.props.height}>\n        <g transform={`translate(${this.props.alignTicks ? 4 : padding[3]}, ${padding[0]})`}>\n          {this.renderBars(xScale, yScale)}\n        </g>\n      </svg>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { find, sortBy } from 'lodash';\nimport Histogram from './Histogram';\nimport { formatMeasure } from '../../helpers/measures';\nimport { Language } from '../../api/languages';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  alignTicks?: boolean;\n  distribution: string;\n  languages?: Language[];\n  width: number;\n}\n\nexport default function LanguageDistribution(props: Props) {\n  let distribution = props.distribution.split(';').map(point => {\n    const tokens = point.split('=');\n    return { language: tokens[0], lines: parseInt(tokens[1], 10) };\n  });\n\n  distribution = sortBy(distribution, d => -d.lines);\n\n  const data = distribution.map(d => d.lines);\n  const yTicks = distribution.map(d => getLanguageName(d.language)).map(cutLanguageName);\n  const yTooltips = distribution.map(d => (d.lines > 1000 ? formatMeasure(d.lines, 'INT') : ''));\n  const yValues = distribution.map(d => formatMeasure(d.lines, 'SHORT_INT'));\n\n  return (\n    <Histogram\n      alignTicks={props.alignTicks}\n      bars={data}\n      height={distribution.length * 25}\n      padding={[0, 60, 0, 80]}\n      yTicks={yTicks}\n      yTooltips={yTooltips}\n      yValues={yValues}\n      width={props.width}\n    />\n  );\n\n  function getLanguageName(langKey: string) {\n    if (langKey === '<null>') {\n      return translate('unknown');\n    }\n    const lang = find(props.languages, { key: langKey });\n    return lang ? lang.name : langKey;\n  }\n}\n\nfunction cutLanguageName(name: string) {\n  return name.length > 10 ? `${name.substr(0, 7)}...` : name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport LanguageDistribution from './LanguageDistribution';\nimport { getLanguages } from '../../store/rootReducer';\n\nconst mapStateToProps = (state: any) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect<any, any, any>(mapStateToProps)(LanguageDistribution);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface Changelog {\n  description: string;\n  version: string;\n}\n\nexport interface Param {\n  key: string;\n  defaultValue?: string;\n  description: string;\n  deprecatedKey?: string;\n  deprecatedKeySince?: string;\n  deprecatedSince?: string;\n  exampleValue?: string;\n  internal: boolean;\n  maxValuesAllowed?: number;\n  possibleValues?: string[];\n  required: boolean;\n  since?: string;\n}\n\nexport interface Action {\n  key: string;\n  changelog: Changelog[];\n  description: string;\n  deprecatedSince?: string;\n  hasResponseExample: boolean;\n  internal: boolean;\n  params?: Param[];\n  post: boolean;\n  since?: string;\n}\n\nexport interface Domain {\n  actions: Action[];\n  description: string;\n  deprecated: boolean;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport interface Example {\n  example: string;\n  format: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<Domain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r =>\n      r.webServices.map((domain: any) => {\n        const deprecated = !domain.actions.find((action: any) => !action.deprecatedSince);\n        const internal = !domain.actions.find((action: any) => !action.internal);\n        return { ...domain, deprecated, internal };\n      })\n    )\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { inRange } from 'lodash';\nimport './SizeRating.css';\n\ninterface Props {\n  muted?: boolean;\n  small?: boolean;\n  value: number | null | undefined;\n}\n\nexport default function SizeRating({ small = false, muted = false, value }: Props) {\n  if (value == null) {\n    return <div className=\"size-rating size-rating-muted\">&nbsp;</div>;\n  }\n\n  let letter;\n  if (inRange(value, 0, 1000)) {\n    letter = 'XS';\n  } else if (inRange(value, 1000, 10000)) {\n    letter = 'S';\n  } else if (inRange(value, 10000, 100000)) {\n    letter = 'M';\n  } else if (inRange(value, 100000, 500000)) {\n    letter = 'L';\n  } else if (value >= 500000) {\n    letter = 'XL';\n  }\n\n  const className = classNames('size-rating', {\n    'size-rating-small': small,\n    'size-rating-muted': muted\n  });\n\n  return <div className={className}>{letter}</div>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BubblePopup, { BubblePopupPosition } from '../common/BubblePopup';\nimport MultiSelect from '../common/MultiSelect';\nimport { translate } from '../../helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  position: BubblePopupPosition;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <BubblePopup\n      customClass=\"bubble-popup-bottom-right bubble-popup-menu abs-width-300\"\n      position={props.position}>\n      <MultiSelect\n        elements={props.tags}\n        listSize={props.listSize}\n        onSearch={props.onSearch}\n        onSelect={props.onSelect}\n        onUnselect={props.onUnselect}\n        placeholder={translate('search.search_for_tags')}\n        selectedElements={props.selectedTags}\n        validateSearchInput={validateTag}\n      />\n    </BubblePopup>\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport ChartLegendIcon from '../icons-components/ChartLegendIcon';\n\n/*::\ntype Props = {\n  style: string,\n  translatedName: string,\n  value: string\n};\n*/\n\nexport default function PreviewGraphTooltipsContent({ style, translatedName, value } /*: Props */) {\n  return (\n    <tr className=\"overview-analysis-graph-tooltip-line\">\n      <td className=\"thin\">\n        <ChartLegendIcon\n          className={'little-spacer-right line-chart-legend line-chart-legend-' + style}\n        />\n      </td>\n      <td className=\"overview-analysis-graph-tooltip-value text-right little-spacer-right thin\">\n        {value}\n      </td>\n      <td className=\"text-ellipsis overview-analysis-graph-tooltip-description\">\n        {translatedName}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport PreviewGraphTooltipsContent from './PreviewGraphTooltipsContent';\nimport BubblePopup from '../common/BubblePopup';\nimport DateFormatter from '../intl/DateFormatter';\n/*:: import type { Metric } from '../types'; */\n/*:: import type { Serie } from '../charts/AdvancedTimeline'; */\n\n/*::\ntype Props = {\n  formatValue: (number | string) => string,\n  graph: string,\n  graphWidth: number,\n  metrics: Array<Metric>,\n  selectedDate: Date,\n  series: Array<Serie & { translatedName: string }>,\n  tooltipIdx: number,\n  tooltipPos: number\n};\n*/\n\nconst TOOLTIP_WIDTH = 160;\n\nexport default class PreviewGraphTooltips extends React.PureComponent {\n  /*:: props: Props; */\n\n  render() {\n    const { tooltipIdx } = this.props;\n    const top = 16;\n    let left = this.props.tooltipPos;\n    let customClass;\n    if (left > this.props.graphWidth - TOOLTIP_WIDTH) {\n      left -= TOOLTIP_WIDTH;\n      customClass = 'bubble-popup-right';\n    }\n\n    return (\n      <BubblePopup\n        customClass={classNames(customClass, 'disabled-pointer-events')}\n        position={{ top, left, width: TOOLTIP_WIDTH }}>\n        <div className=\"overview-analysis-graph-tooltip\">\n          <div className=\"overview-analysis-graph-tooltip-title\">\n            <DateFormatter date={this.props.selectedDate} long={true} />\n          </div>\n          <table className=\"width-100\">\n            <tbody>\n              {this.props.series.map((serie, idx) => {\n                const point = serie.data[tooltipIdx];\n                if (!point || (!point.y && point.y !== 0)) {\n                  return null;\n                }\n                return (\n                  <PreviewGraphTooltipsContent\n                    key={serie.name}\n                    style={idx.toString()}\n                    translatedName={serie.translatedName}\n                    value={this.props.formatValue(point.y)}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </BubblePopup>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport { minBy } from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport PreviewGraphTooltips from './PreviewGraphTooltips';\nimport AdvancedTimeline from '../charts/AdvancedTimeline';\nimport {\n  DEFAULT_GRAPH,\n  getDisplayedHistoryMetrics,\n  generateSeries,\n  getSeriesMetricType,\n  hasHistoryDataValue,\n  splitSeriesInGraphs\n} from '../../apps/projectActivity/utils';\nimport { getCustomGraph, getGraph } from '../../helpers/storage';\nimport { formatMeasure, getShortType } from '../../helpers/measures';\nimport { getBranchLikeQuery } from '../../helpers/branches';\n/*:: import type { Serie } from '../charts/AdvancedTimeline'; */\n/*:: import type { History, Metric } from '../../apps/overview/types'; */\n\n/*::\ntype Props = {\n  branchLike?: { id?: string; name: string },\n  history: ?History,\n  metrics: { [string]: Metric },\n  project: string,\n  renderWhenEmpty?: () => void\n};\n*/\n\n/*::\ntype State = {\n  customMetrics: Array<string>,\n  graph: string,\n  selectedDate: ?Date,\n  series: Array<Serie>,\n  tooltipIdx: ?number,\n  tooltipXPos: ?number\n};\n*/\n\nconst GRAPH_PADDING = [4, 0, 4, 0];\nconst MAX_GRAPH_NB = 1;\nconst MAX_SERIES_PER_GRAPH = 3;\n\nexport default class PreviewGraph extends React.PureComponent {\n  /*:: props: Props; */\n  /*:: state: State; */\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n    const graph = getGraph();\n    const customMetrics = getCustomGraph();\n    const series = splitSeriesInGraphs(\n      this.getSeries(props.history, graph, customMetrics, props.metrics),\n      MAX_GRAPH_NB,\n      MAX_SERIES_PER_GRAPH\n    );\n    this.state = {\n      customMetrics,\n      graph,\n      selectedDate: null,\n      series: series.length > 0 ? series[0] : [],\n      tooltipIdx: null,\n      tooltipXPos: null\n    };\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    if (nextProps.history !== this.props.history || nextProps.metrics !== this.props.metrics) {\n      const graph = getGraph();\n      const customMetrics = getCustomGraph();\n      const series = splitSeriesInGraphs(\n        this.getSeries(nextProps.history, graph, customMetrics, nextProps.metrics),\n        MAX_GRAPH_NB,\n        MAX_SERIES_PER_GRAPH\n      );\n      this.setState({\n        customMetrics,\n        graph,\n        series: series.length > 0 ? series[0] : []\n      });\n    }\n  }\n\n  formatValue = (tick /*: number | string */) =>\n    formatMeasure(tick, getShortType(getSeriesMetricType(this.state.series)));\n\n  getDisplayedMetrics = (graph /*: string */, customMetrics /*: Array<string> */) => {\n    const metrics /*: Array<string> */ = getDisplayedHistoryMetrics(graph, customMetrics);\n    if (!metrics || metrics.length <= 0) {\n      return getDisplayedHistoryMetrics(DEFAULT_GRAPH, customMetrics);\n    }\n    return metrics;\n  };\n\n  getSeries = (\n    history /*: ?History */,\n    graph /*: string */,\n    customMetrics /*: Array<string> */,\n    metrics /*: { [string]: Metric } */\n  ) => {\n    const myHistory = history;\n    if (!myHistory) {\n      return [];\n    }\n    const displayedMetrics = this.getDisplayedMetrics(graph, customMetrics);\n    const firstValid = minBy(\n      displayedMetrics.map(metric => myHistory[metric].find(p => p.value || p.value === 0)),\n      'date'\n    );\n    const measureHistory = displayedMetrics.map(metric => ({\n      metric,\n      history: firstValid\n        ? myHistory[metric].filter(p => p.date >= firstValid.date)\n        : myHistory[metric]\n    }));\n    return generateSeries(measureHistory, graph, metrics, displayedMetrics);\n  };\n\n  handleClick = () => {\n    this.context.router.push({\n      pathname: '/project/activity',\n      query: { id: this.props.project, ...getBranchLikeQuery(this.props.branchLike) }\n    });\n  };\n\n  updateTooltip = (\n    selectedDate /*: ?Date */,\n    tooltipXPos /*: ?number */,\n    tooltipIdx /*: ?number */\n  ) => this.setState({ selectedDate, tooltipXPos, tooltipIdx });\n\n  renderTimeline() {\n    const { graph, selectedDate, series, tooltipIdx, tooltipXPos } = this.state;\n    return (\n      <AutoSizer disableHeight={true}>\n        {({ width }) => (\n          <div>\n            <AdvancedTimeline\n              endDate={null}\n              startDate={null}\n              height={80}\n              width={width}\n              hideGrid={true}\n              hideXAxis={true}\n              interpolate=\"linear\"\n              metricType={getSeriesMetricType(series)}\n              padding={GRAPH_PADDING}\n              series={series}\n              showAreas={['coverage', 'duplications'].includes(graph)}\n              updateTooltip={this.updateTooltip}\n            />\n            {selectedDate != null &&\n              tooltipXPos != null &&\n              tooltipIdx != null && (\n                <PreviewGraphTooltips\n                  formatValue={this.formatValue}\n                  graph={graph}\n                  graphWidth={width}\n                  metrics={this.props.metrics}\n                  selectedDate={selectedDate}\n                  series={series}\n                  tooltipIdx={tooltipIdx}\n                  tooltipPos={tooltipXPos}\n                />\n              )}\n          </div>\n        )}\n      </AutoSizer>\n    );\n  }\n\n  render() {\n    const { series } = this.state;\n    if (!hasHistoryDataValue(series)) {\n      return this.props.renderWhenEmpty ? this.props.renderWhenEmpty() : null;\n    }\n\n    return (\n      <div\n        className=\"overview-analysis-graph big-spacer-bottom spacer-top\"\n        onClick={this.handleClick}\n        tabIndex={0}\n        role=\"link\">\n        {this.renderTimeline()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, postJSON, post, RequestData } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Paging, BranchParameters } from '../app/types';\n\nexport interface Event {\n  key: string;\n  name: string;\n  category: string;\n  description?: string;\n}\n\nexport interface Analysis {\n  key: string;\n  date: string;\n  events: Event[];\n}\n\nexport function getProjectActivity(\n  data: { project: string; category?: string; p?: number; ps?: number } & BranchParameters\n): Promise<{ analyses: Analysis[]; paging: Paging }> {\n  return getJSON('/api/project_analyses/search', data).catch(throwGlobalError);\n}\n\ninterface CreateEventResponse {\n  analysis: string;\n  key: string;\n  name: string;\n  category: string;\n  description?: string;\n}\n\nexport function createEvent(\n  analysis: string,\n  name: string,\n  category?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { analysis, name };\n  if (category) {\n    data.category = category;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/create_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteEvent(event: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete_event', { event }).catch(throwGlobalError);\n}\n\nexport function changeEvent(\n  event: string,\n  name?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { event };\n  if (name) {\n    data.name = name;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/update_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteAnalysis(analysis: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete', { analysis }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../app/types';\nimport { getBranchLikeQuery } from '../../helpers/branches';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: { [key: string]: string | boolean } = {};\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    switch (this.props.metric) {\n      case 'blocker_violations':\n      case 'new_blocker_violations':\n        Object.assign(params, { resolved: 'false', severities: 'BLOCKER' });\n        break;\n      case 'critical_violations':\n      case 'new_critical_violations':\n        Object.assign(params, { resolved: 'false', severities: 'CRITICAL' });\n        break;\n      case 'major_violations':\n      case 'new_major_violations':\n        Object.assign(params, { resolved: 'false', severities: 'MAJOR' });\n        break;\n      case 'minor_violations':\n      case 'new_minor_violations':\n        Object.assign(params, { resolved: 'false', severities: 'MINOR' });\n        break;\n      case 'info_violations':\n      case 'new_info_violations':\n        Object.assign(params, { resolved: 'false', severities: 'INFO' });\n        break;\n      case 'open_issues':\n        Object.assign(params, { resolved: 'false', statuses: 'OPEN' });\n        break;\n      case 'reopened_issues':\n        Object.assign(params, { resolved: 'false', statuses: 'REOPENED' });\n        break;\n      case 'confirmed_issues':\n        Object.assign(params, { resolved: 'false', statuses: 'CONFIRMED' });\n        break;\n      case 'false_positive_issues':\n        Object.assign(params, { resolutions: 'FALSE-POSITIVE' });\n        break;\n      case 'code_smells':\n      case 'new_code_smells':\n        Object.assign(params, { resolved: 'false', types: 'CODE_SMELL' });\n        break;\n      case 'bugs':\n      case 'new_bugs':\n        Object.assign(params, { resolved: 'false', types: 'BUG' });\n        break;\n      case 'vulnerabilities':\n      case 'new_vulnerabilities':\n        Object.assign(params, { resolved: 'false', types: 'VULNERABILITY' });\n        break;\n      default:\n        Object.assign(params, { resolved: 'false' });\n    }\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link to={url} className={this.props.className}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl(\n      this.props.component,\n      this.props.metric,\n      this.props.branchLike\n    );\n    return (\n      <Link to={url} className={this.props.className}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router';\nimport DrilldownLink from '../../../components/shared/DrilldownLink';\nimport Measure from '../../../components/measure/Measure';\nimport IssueTypeIcon from '../../../components/ui/IssueTypeIcon';\nimport { getPeriodValue, isDiffMetric, formatMeasure } from '../../../helpers/measures';\nimport { translate } from '../../../helpers/l10n';\nimport { getComponentIssuesUrl } from '../../../helpers/urls';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n/*:: import type { Component } from '../types'; */\n/*:: import type { MeasureEnhanced } from '../../../components/measure/types'; */\n\nexport default class QualityGateCondition extends React.PureComponent {\n  /*:: props: {\n    branchLike?: { id?: string; name: string },\n    component: Component,\n    condition: {\n      level: string,\n      measure: MeasureEnhanced,\n      op: string,\n      period: number,\n      error: string,\n      warning: string\n    }\n  };\n*/\n\n  getDecimalsNumber(threshold /*: number */, value /*: number */) /*: ?number */ {\n    const delta = Math.abs(threshold - value);\n    if (delta < 0.1 && delta > 0) {\n      //$FlowFixMe The matching result can't be null because of the previous check\n      return delta.toFixed(20).match('[^0.]').index - 1;\n    }\n  }\n\n  getIssuesUrl = (sinceLeakPeriod /*: boolean */, customQuery /*: {} */) => {\n    const query /*: Object */ = {\n      resolved: 'false',\n      ...getBranchLikeQuery(this.props.branchLike),\n      ...customQuery\n    };\n    if (sinceLeakPeriod) {\n      Object.assign(query, { sinceLeakPeriod: 'true' });\n    }\n    return getComponentIssuesUrl(this.props.component.key, query);\n  };\n\n  getUrlForCodeSmells(sinceLeakPeriod /*: boolean */) {\n    return this.getIssuesUrl(sinceLeakPeriod, { types: 'CODE_SMELL' });\n  }\n\n  getUrlForBugsOrVulnerabilities(type /*: string */, sinceLeakPeriod /*: boolean */) {\n    const RATING_TO_SEVERITIES_MAPPING = [\n      'BLOCKER,CRITICAL,MAJOR,MINOR',\n      'BLOCKER,CRITICAL,MAJOR',\n      'BLOCKER,CRITICAL',\n      'BLOCKER'\n    ];\n\n    const { condition } = this.props;\n    const threshold = condition.level === 'ERROR' ? condition.error : condition.warning;\n\n    return this.getIssuesUrl(sinceLeakPeriod, {\n      types: type,\n      severities: RATING_TO_SEVERITIES_MAPPING[Number(threshold) - 1]\n    });\n  }\n\n  getUrlForType(type /*: string */, sinceLeakPeriod /*: boolean */) {\n    return type === 'CODE_SMELL'\n      ? this.getUrlForCodeSmells(sinceLeakPeriod)\n      : this.getUrlForBugsOrVulnerabilities(type, sinceLeakPeriod);\n  }\n\n  wrapWithLink(children /*: React.Element<*> */) {\n    const { branchLike, component, condition } = this.props;\n\n    const className = classNames(\n      'overview-quality-gate-condition',\n      'overview-quality-gate-condition-' + condition.level.toLowerCase(),\n      { 'overview-quality-gate-condition-leak': condition.period != null }\n    );\n\n    const metricKey = condition.measure.metric.key;\n\n    const RATING_METRICS_MAPPING = {\n      reliability_rating: ['BUG', false],\n      new_reliability_rating: ['BUG', true],\n      security_rating: ['VULNERABILITY', false],\n      new_security_rating: ['VULNERABILITY', true],\n      sqale_rating: ['CODE_SMELL', false],\n      new_maintainability_rating: ['CODE_SMELL', true]\n    };\n\n    return RATING_METRICS_MAPPING[metricKey] ? (\n      <Link to={this.getUrlForType(...RATING_METRICS_MAPPING[metricKey])} className={className}>\n        {children}\n      </Link>\n    ) : (\n      <DrilldownLink\n        branchLike={branchLike}\n        className={className}\n        component={component.key}\n        metric={condition.measure.metric.key}\n        sinceLeakPeriod={condition.period != null}>\n        {children}\n      </DrilldownLink>\n    );\n  }\n\n  render() {\n    const { condition } = this.props;\n    const { measure } = condition;\n    const { metric } = measure;\n\n    const isDiff = isDiffMetric(metric.key);\n\n    const threshold = condition.level === 'ERROR' ? condition.error : condition.warning;\n    const actual = condition.period ? getPeriodValue(measure, condition.period) : measure.value;\n\n    let operator = translate('quality_gates.operator', condition.op);\n    let decimals = null;\n\n    if (metric.type === 'RATING') {\n      operator = translate('quality_gates.operator', condition.op, 'rating');\n    } else if (metric.type === 'PERCENT') {\n      decimals = this.getDecimalsNumber(parseFloat(condition.error), parseFloat(actual));\n    }\n\n    return this.wrapWithLink(\n      <div className=\"overview-quality-gate-condition-container\">\n        <div className=\"overview-quality-gate-condition-value\">\n          <Measure\n            decimals={decimals}\n            value={actual}\n            metricKey={measure.metric.key}\n            metricType={measure.metric.type}\n          />\n        </div>\n\n        <div>\n          <div className=\"overview-quality-gate-condition-metric\">\n            <IssueTypeIcon query={metric.key} className=\"little-spacer-right\" />\n            {metric.name}\n          </div>\n          {!isDiff &&\n            condition.period != null && (\n              <div className=\"overview-quality-gate-condition-period\">\n                {translate('quality_gates.conditions.leak')}\n              </div>\n            )}\n          <div className=\"overview-quality-gate-threshold\">\n            {operator} {formatMeasure(threshold, metric.type)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { shape, arrayOf, array, string, number, object } from 'prop-types';\n\nexport const ComponentType = shape({\n  id: string.isRequired\n});\n\nexport const MetricType = shape({\n  key: string.isRequired,\n  name: string.isRequired,\n  type: string.isRequired\n});\n\nexport const MeasureType = shape({\n  metric: MetricType.isRequired,\n  value: string,\n  periods: array\n});\n\nexport const MeasuresListType = arrayOf(MeasureType);\n\nexport const ConditionType = shape({\n  metric: string.isRequired\n});\n\nexport const EnhancedConditionType = shape({\n  measure: MeasureType.isRequired\n});\n\nexport const ConditionsListType = arrayOf(ConditionType);\n\nexport const EnhancedConditionsListType = arrayOf(EnhancedConditionType);\n\nexport const PeriodType = shape({\n  index: number.isRequired,\n  date: string.isRequired,\n  mode: string.isRequired,\n  parameter: string\n});\n\nexport const PeriodsListType = arrayOf(PeriodType);\n\nexport const EventType = shape({\n  id: string.isRequired,\n  date: object.isRequired,\n  type: string.isRequired,\n  name: string.isRequired,\n  text: string\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { sortBy } from 'lodash';\nimport PropTypes from 'prop-types';\nimport QualityGateCondition from './QualityGateCondition';\nimport { ComponentType, ConditionsListType } from '../propTypes';\nimport { getMeasuresAndMeta } from '../../../api/measures';\nimport { enhanceMeasuresWithMetrics } from '../../../helpers/measures';\nimport { isSameBranchLike, getBranchLikeQuery } from '../../../helpers/branches';\n\nconst LEVEL_ORDER = ['ERROR', 'WARN'];\n\nfunction enhanceConditions(conditions, measures) {\n  return conditions.map(c => {\n    const measure = measures.find(measure => measure.metric.key === c.metric);\n    return { ...c, measure };\n  });\n}\n\nexport default class QualityGateConditions extends React.PureComponent {\n  static propTypes = {\n    branchLike: PropTypes.object,\n    component: ComponentType.isRequired,\n    conditions: ConditionsListType.isRequired\n  };\n\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadFailedMeasures();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isSameBranchLike(prevProps.branchLike, this.props.branchLike) ||\n      prevProps.conditions !== this.props.conditions ||\n      prevProps.component !== this.props.component\n    ) {\n      this.loadFailedMeasures();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadFailedMeasures() {\n    const { branchLike, component, conditions } = this.props;\n    const failedConditions = conditions.filter(c => c.level !== 'OK');\n    if (failedConditions.length > 0) {\n      const metrics = failedConditions.map(condition => condition.metric);\n      getMeasuresAndMeta(component.key, metrics, {\n        additionalFields: 'metrics',\n        ...getBranchLikeQuery(branchLike)\n      }).then(r => {\n        if (this.mounted) {\n          const measures = enhanceMeasuresWithMetrics(r.component.measures, r.metrics);\n          this.setState({\n            conditions: enhanceConditions(failedConditions, measures),\n            loading: false\n          });\n        }\n      });\n    } else {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { branchLike, component } = this.props;\n    const { loading, conditions } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    const sortedConditions = sortBy(\n      conditions,\n      condition => LEVEL_ORDER.indexOf(condition.level),\n      condition => condition.metric.name\n    );\n\n    return (\n      <div\n        className=\"overview-quality-gate-conditions-list clearfix\"\n        id=\"overview-quality-gate-conditions-list\">\n        {sortedConditions.map(condition => (\n          <QualityGateCondition\n            branchLike={branchLike}\n            component={component}\n            condition={condition}\n            key={condition.measure.metric.key}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { translate } from '../../../helpers/l10n';\n\nconst EmptyQualityGate = () => {\n  return (\n    <div className=\"overview-quality-gate\">\n      <h2 className=\"overview-title\">{translate('overview.quality_gate')}</h2>\n      <p className=\"overview-quality-gate-warning\">\n        {translate('overview.you_should_define_quality_gate')}\n      </p>\n    </div>\n  );\n};\n\nexport default EmptyQualityGate;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n//@flow\nimport React from 'react';\nimport QualityGateConditions from './QualityGateConditions';\nimport EmptyQualityGate from './EmptyQualityGate';\nimport * as theme from '../../../app/theme';\nimport { translate } from '../../../helpers/l10n';\nimport Level from '../../../components/ui/Level';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport HelpIcon from '../../../components/icons-components/HelpIcon';\n/*:: import type { Component, MeasuresList } from '../types'; */\n\nfunction parseQualityGateDetails(rawDetails /*: string */) {\n  return JSON.parse(rawDetails);\n}\n\nfunction isProject(component /*: Component */) {\n  return component.qualifier === 'TRK';\n}\n\n/*::\ntype Props = {\n  branchLike?: {id?: string; name: string },\n  component: Component,\n  measures: MeasuresList\n};\n*/\n\nexport default function QualityGate({ branchLike, component, measures } /*: Props */) {\n  const statusMeasure = measures.find(measure => measure.metric.key === 'alert_status');\n  const detailsMeasure = measures.find(measure => measure.metric.key === 'quality_gate_details');\n\n  if (!statusMeasure) {\n    return isProject(component) ? <EmptyQualityGate /> : null;\n  }\n\n  const level = statusMeasure.value;\n\n  let conditions = [];\n  let ignoredConditions = false;\n  if (detailsMeasure && detailsMeasure.value) {\n    const details = parseQualityGateDetails(detailsMeasure.value);\n    conditions = details.conditions || [];\n    ignoredConditions = details.ignoredConditions;\n  }\n\n  return (\n    <div className=\"overview-quality-gate\" id=\"overview-quality-gate\">\n      <h2 className=\"overview-title\">\n        {translate('overview.quality_gate')}\n        <Level level={level} />\n      </h2>\n\n      {ignoredConditions && (\n        <div className=\"alert alert-info display-inline-block big-spacer-top\">\n          {translate('overview.quality_gate.ignored_conditions')}\n          <Tooltip overlay={translate('overview.quality_gate.ignored_conditions.tooltip')}>\n            <span className=\"spacer-left\">\n              <HelpIcon fill={theme.blue} />\n            </span>\n          </Tooltip>\n        </div>\n      )}\n\n      {conditions.length > 0 && (\n        <QualityGateConditions\n          branchLike={branchLike}\n          component={component}\n          conditions={conditions}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router';\nimport { getLocalizedMetricName, translate } from '../../../helpers/l10n';\nimport { formatMeasure, isDiffMetric } from '../../../helpers/measures';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport './ApplicationQualityGateProject.css';\nimport { Metric } from '../../../app/types';\nimport { ApplicationProject, ConditionAnalysis } from '../../../api/quality-gates';\n\ninterface Props {\n  metrics: { [key: string]: Metric };\n  project: ApplicationProject;\n}\n\nexport default class ApplicationQualityGateProject extends React.PureComponent<Props> {\n  renderCondition = (condition: ConditionAnalysis) => {\n    const metric = this.props.metrics[condition.metric];\n    const metricName = getLocalizedMetricName(metric);\n    const threshold = condition.errorThreshold || condition.warningThreshold;\n    const isDiff = isDiffMetric(condition.metric);\n\n    return (\n      <li className={classNames({ 'is-on-leak': isDiff })} key={condition.metric}>\n        <span className=\"text-limited\">\n          <strong>{formatMeasure(condition.value, metric.type)}</strong> {metricName}\n          {!isDiff && condition.onLeak && ' ' + translate('quality_gates.conditions.leak')}\n        </span>\n        <span\n          className={classNames('big-spacer-left', {\n            'text-danger': condition.status === 'ERROR',\n            'text-warning': condition.status === 'WARN'\n          })}>\n          {translate('quality_gates.operator', condition.comparator, 'short')}{' '}\n          {formatMeasure(threshold, metric.type)}\n        </span>\n      </li>\n    );\n  };\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <Link\n        className={classNames(\n          'overview-quality-gate-condition',\n          'overview-quality-gate-condition-' + project.status.toLowerCase()\n        )}\n        to={getProjectUrl(project.key)}>\n        <div className=\"application-quality-gate-project\">\n          <h4>{project.name}</h4>\n          <ul className=\"application-quality-gate-project-conditions\">\n            {project.conditions.filter(c => c.status !== 'OK').map(this.renderCondition)}\n          </ul>\n        </div>\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { keyBy } from 'lodash';\nimport ApplicationQualityGateProject from './ApplicationQualityGateProject';\nimport Level from '../../../components/ui/Level';\nimport { getApplicationQualityGate, ApplicationProject } from '../../../api/quality-gates';\nimport { translate } from '../../../helpers/l10n';\nimport { LightComponent, Metric } from '../../../app/types';\n\ninterface Props {\n  component: LightComponent;\n}\n\ntype State = {\n  loading: boolean;\n  metrics?: { [key: string]: Metric };\n  projects?: ApplicationProject[];\n  status?: string;\n};\n\nexport default class ApplicationQualityGate extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDetails();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.fetchDetails();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDetails = () => {\n    const { component } = this.props;\n    this.setState({ loading: true });\n    getApplicationQualityGate({\n      application: component.key,\n      organization: component.organization\n    }).then(\n      ({ status, projects, metrics }) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            metrics: keyBy(metrics, 'key'),\n            status,\n            projects\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { metrics, status, projects } = this.state;\n\n    return (\n      <div className=\"overview-quality-gate\" id=\"overview-quality-gate\">\n        <h2 className=\"overview-title\">\n          {translate('overview.quality_gate')}\n          {this.state.loading && <i className=\"spinner spacer-left\" />}\n          {status != null && <Level level={status} />}\n        </h2>\n\n        {projects &&\n          metrics && (\n            <div\n              id=\"overview-quality-gate-conditions-list\"\n              className=\"overview-quality-gate-conditions-list clearfix\">\n              {projects\n                .filter(project => project.status !== 'OK')\n                .map(project => (\n                  <ApplicationQualityGateProject\n                    key={project.key}\n                    metrics={metrics}\n                    project={project}\n                  />\n                ))}\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport { extent, max } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\nimport { area as d3Area, line as d3Line, curveBasis } from 'd3-shape';\nimport { ResizeMixin } from './../mixins/resize-mixin';\n\nexport const LineChart = createReactClass({\n  displayName: 'LineChart',\n\n  propTypes: {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    xTicks: PropTypes.arrayOf(PropTypes.any),\n    xValues: PropTypes.arrayOf(PropTypes.any),\n    padding: PropTypes.arrayOf(PropTypes.number),\n    backdropConstraints: PropTypes.arrayOf(PropTypes.number),\n    displayBackdrop: PropTypes.bool,\n    displayPoints: PropTypes.bool,\n    displayVerticalGrid: PropTypes.bool,\n    height: PropTypes.number\n  },\n\n  mixins: [ResizeMixin],\n\n  getDefaultProps() {\n    return {\n      displayBackdrop: true,\n      displayPoints: true,\n      displayVerticalGrid: true,\n      xTicks: [],\n      xValues: [],\n      padding: [10, 10, 10, 10]\n    };\n  },\n\n  getInitialState() {\n    return { width: this.props.width, height: this.props.height };\n  },\n\n  renderBackdrop(xScale, yScale) {\n    if (!this.props.displayBackdrop) {\n      return null;\n    }\n\n    const area = d3Area()\n      .x(d => xScale(d.x))\n      .y0(yScale.range()[0])\n      .y1(d => yScale(d.y))\n      .defined(d => d.y != null)\n      .curve(curveBasis);\n\n    let data = this.props.data;\n    if (this.props.backdropConstraints) {\n      const c = this.props.backdropConstraints;\n      data = data.filter(d => c[0] <= d.x && d.x <= c[1]);\n    }\n    return <path className=\"line-chart-backdrop\" d={area(data)} />;\n  },\n\n  renderPoints(xScale, yScale) {\n    if (!this.props.displayPoints) {\n      return null;\n    }\n    const points = this.props.data.filter(point => point.y != null).map((point, index) => {\n      const x = xScale(point.x);\n      const y = yScale(point.y);\n      return <circle key={index} className=\"line-chart-point\" r=\"3\" cx={x} cy={y} />;\n    });\n    return <g>{points}</g>;\n  },\n\n  renderVerticalGrid(xScale, yScale) {\n    if (!this.props.displayVerticalGrid) {\n      return null;\n    }\n    const lines = this.props.data.map((point, index) => {\n      const x = xScale(point.x);\n      const y1 = yScale.range()[0];\n      const y2 = yScale(point.y);\n      return <line key={index} className=\"line-chart-grid\" x1={x} x2={x} y1={y1} y2={y2} />;\n    });\n    return <g>{lines}</g>;\n  },\n\n  renderXTicks(xScale, yScale) {\n    if (!this.props.xTicks.length) {\n      return null;\n    }\n    const ticks = this.props.xTicks.map((tick, index) => {\n      const point = this.props.data[index];\n      const x = xScale(point.x);\n      const y = yScale.range()[0];\n      return (\n        <text key={index} className=\"line-chart-tick\" x={x} y={y} dy=\"1.5em\">\n          {tick}\n        </text>\n      );\n    });\n    return <g>{ticks}</g>;\n  },\n\n  renderXValues(xScale, yScale) {\n    if (!this.props.xValues.length) {\n      return null;\n    }\n    const ticks = this.props.xValues.map((value, index) => {\n      const point = this.props.data[index];\n      const x = xScale(point.x);\n      const y = yScale(point.y);\n      return (\n        <text key={index} className=\"line-chart-tick\" x={x} y={y} dy=\"-1em\">\n          {value}\n        </text>\n      );\n    });\n    return <g>{ticks}</g>;\n  },\n\n  renderLine(xScale, yScale) {\n    const p = d3Line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y))\n      .defined(d => d.y != null)\n      .curve(curveBasis);\n    return <path className=\"line-chart-path\" d={p(this.props.data)} />;\n  },\n\n  render() {\n    if (!this.state.width || !this.state.height) {\n      return <div />;\n    }\n\n    const availableWidth = this.state.width - this.props.padding[1] - this.props.padding[3];\n    const availableHeight = this.state.height - this.props.padding[0] - this.props.padding[2];\n\n    let maxY;\n    const xScale = scaleLinear()\n      .domain(extent(this.props.data, d => d.x))\n      .range([0, availableWidth]);\n    const yScale = scaleLinear().range([availableHeight, 0]);\n\n    if (this.props.domain) {\n      maxY = this.props.domain[1];\n      yScale.domain(this.props.domain);\n    } else {\n      maxY = max(this.props.data, d => d.y);\n      yScale.domain([0, maxY]);\n    }\n\n    return (\n      <svg className=\"line-chart\" width={this.state.width} height={this.state.height}>\n        <g transform={`translate(${this.props.padding[3]}, ${this.props.padding[0]})`}>\n          {this.renderVerticalGrid(xScale, yScale, maxY)}\n          {this.renderBackdrop(xScale, yScale)}\n          {this.renderLine(xScale, yScale)}\n          {this.renderPoints(xScale, yScale)}\n          {this.renderXTicks(xScale, yScale)}\n          {this.renderXValues(xScale, yScale)}\n        </g>\n      </svg>\n    );\n  }\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { max } from 'd3-array';\nimport { LineChart } from '../../../components/charts/line-chart';\nimport { HistoryItem } from '../../../api/time-machine';\n\nconst HEIGHT = 80;\n\ninterface Props {\n  history: HistoryItem[];\n  before?: Date;\n  after?: Date;\n}\n\nexport default class Timeline extends React.PureComponent<Props> {\n  filterSnapshots() {\n    const { history, before, after } = this.props;\n\n    return history.filter(s => {\n      const matchBefore = !before || s.date <= before;\n      const matchAfter = !after || s.date >= after;\n      return matchBefore && matchAfter;\n    });\n  }\n\n  render() {\n    const snapshots = this.filterSnapshots();\n\n    if (snapshots.length < 2) {\n      return null;\n    }\n\n    const data = snapshots.map((snapshot, index) => {\n      return { x: index, y: snapshot.value };\n    });\n    const domain = [0, max(this.props.history, d => parseFloat(d.value))];\n    return (\n      <LineChart\n        data={data}\n        domain={domain}\n        interpolate=\"basis\"\n        displayBackdrop={true}\n        displayPoints={false}\n        displayVerticalGrid={false}\n        height={HEIGHT}\n        padding={[0, 0, 0, 0]}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport DrilldownLink from '../../../components/shared/DrilldownLink';\nimport BubblesIcon from '../../../components/icons-components/BubblesIcon';\nimport HistoryIcon from '../../../components/icons-components/HistoryIcon';\nimport Rating from '../../../components/ui/Rating';\nimport Timeline from '../components/Timeline';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport {\n  formatMeasure,\n  isDiffMetric,\n  getPeriodValue,\n  getShortType,\n  getRatingTooltip,\n  MeasureEnhanced\n} from '../../../helpers/measures';\nimport { getLocalizedMetricName } from '../../../helpers/l10n';\nimport { getPeriodDate } from '../../../helpers/periods';\nimport {\n  getComponentDrilldownUrl,\n  getComponentIssuesUrl,\n  getMeasureHistoryUrl\n} from '../../../helpers/urls';\nimport { Component, BranchLike } from '../../../app/types';\nimport { History } from '../../../api/time-machine';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n\nexport interface EnhanceProps {\n  branchLike?: BranchLike;\n  component: Component;\n  measures: MeasureEnhanced[];\n  leakPeriod?: { index: number; date?: string };\n  history?: History;\n  historyStartDate?: Date;\n}\n\nexport interface ComposedProps extends EnhanceProps {\n  getValue: (measure: MeasureEnhanced) => string | undefined;\n  renderHeader: (domain: string, label: string) => React.ReactNode;\n  renderMeasure: (metricKey: string) => React.ReactNode;\n  renderRating: (metricKey: string) => React.ReactNode;\n  renderIssues: (metric: string, type: string) => React.ReactNode;\n  renderHistoryLink: (metricKey: string) => React.ReactNode;\n  renderTimeline: (metricKey: string, range: string, children?: React.ReactNode) => React.ReactNode;\n}\n\nexport default function enhance(ComposedComponent: React.ComponentType<ComposedProps>) {\n  return class extends React.PureComponent<EnhanceProps> {\n    static displayName = `enhance(${ComposedComponent.displayName})}`;\n\n    getValue = (measure: MeasureEnhanced) => {\n      const { leakPeriod } = this.props;\n      if (!measure) {\n        return '0';\n      }\n      return isDiffMetric(measure.metric.key)\n        ? getPeriodValue(measure, leakPeriod ? leakPeriod.index : 0)\n        : measure.value;\n    };\n\n    renderHeader = (domain: string, label: string) => {\n      const { branchLike, component } = this.props;\n      return (\n        <div className=\"overview-card-header\">\n          <div className=\"overview-title\">\n            <span>{label}</span>\n            <Link\n              className=\"button button-small spacer-left text-text-bottom\"\n              to={getComponentDrilldownUrl(component.key, domain, branchLike)}>\n              <BubblesIcon size={14} />\n            </Link>\n          </div>\n        </div>\n      );\n    };\n\n    renderMeasure = (metricKey: string) => {\n      const { branchLike, measures, component } = this.props;\n      const measure = measures.find(measure => measure.metric.key === metricKey);\n      if (!measure) {\n        return null;\n      }\n\n      return (\n        <div className=\"overview-domain-measure\">\n          <div className=\"overview-domain-measure-value\">\n            <DrilldownLink branchLike={branchLike} component={component.key} metric={metricKey}>\n              <span className=\"js-overview-main-tests\">\n                {formatMeasure(measure.value, getShortType(measure.metric.type))}\n              </span>\n            </DrilldownLink>\n          </div>\n\n          <div className=\"overview-domain-measure-label offset-left\">\n            {getLocalizedMetricName(measure.metric)}\n            {this.renderHistoryLink(measure.metric.key)}\n          </div>\n        </div>\n      );\n    };\n\n    renderRating = (metricKey: string) => {\n      const { branchLike, component, measures } = this.props;\n      const measure = measures.find(measure => measure.metric.key === metricKey);\n      if (!measure) {\n        return null;\n      }\n\n      const value = this.getValue(measure);\n      const title = value && getRatingTooltip(metricKey, value);\n      return (\n        <Tooltip overlay={title}>\n          <div className=\"overview-domain-measure-sup\">\n            <DrilldownLink\n              branchLike={branchLike}\n              className=\"link-no-underline\"\n              component={component.key}\n              metric={metricKey}>\n              <Rating value={value} />\n            </DrilldownLink>\n          </div>\n        </Tooltip>\n      );\n    };\n\n    renderIssues = (metric: string, type: string) => {\n      const { branchLike, measures, component } = this.props;\n      const measure = measures.find(measure => measure.metric.key === metric);\n      if (!measure) {\n        return null;\n      }\n\n      const value = this.getValue(measure);\n      const params = { ...getBranchLikeQuery(branchLike), resolved: 'false', types: type };\n      if (isDiffMetric(metric)) {\n        Object.assign(params, { sinceLeakPeriod: 'true' });\n      }\n\n      return (\n        <Link to={getComponentIssuesUrl(component.key, params)}>\n          {formatMeasure(value, 'SHORT_INT')}\n        </Link>\n      );\n    };\n\n    renderHistoryLink = (metricKey: string) => {\n      const linkClass = 'button button-small spacer-left overview-domain-measure-history-link';\n      return (\n        <Link\n          className={linkClass}\n          to={getMeasureHistoryUrl(this.props.component.key, metricKey, this.props.branchLike)}>\n          <HistoryIcon />\n        </Link>\n      );\n    };\n\n    renderTimeline = (metricKey: string, range: 'before' | 'after', children?: React.ReactNode) => {\n      if (!this.props.history) {\n        return null;\n      }\n      const history = this.props.history[metricKey];\n      if (!history) {\n        return null;\n      }\n      const props = { history, [range]: getPeriodDate(this.props.leakPeriod) };\n      return (\n        <div className=\"overview-domain-timeline\">\n          <Timeline {...props} />\n          {children}\n        </div>\n      );\n    };\n\n    render() {\n      return (\n        <ComposedComponent\n          {...this.props}\n          getValue={this.getValue}\n          renderHeader={this.renderHeader}\n          renderHistoryLink={this.renderHistoryLink}\n          renderIssues={this.renderIssues}\n          renderMeasure={this.renderMeasure}\n          renderRating={this.renderRating}\n          renderTimeline={this.renderTimeline}\n        />\n      );\n    }\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport DateTooltipFormatter from '../../../components/intl/DateTooltipFormatter';\nimport { getApplicationLeak } from '../../../api/application';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  component: string;\n}\n\ninterface State {\n  leaks?: Array<{ date: string; project: string; projectName: string }>;\n}\n\nexport default class ApplicationLeakPeriodLegend extends React.Component<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.component !== this.props.component) {\n      this.setState({ leaks: undefined });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchLeaks = () => {\n    if (!this.state.leaks) {\n      getApplicationLeak(this.props.component).then(\n        leaks => {\n          if (this.mounted) {\n            this.setState({ leaks });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ leaks: [] });\n          }\n        }\n      );\n    }\n  };\n\n  renderOverlay = () =>\n    this.state.leaks != null ? (\n      <ul className=\"text-left\">\n        {this.state.leaks.map(leak => (\n          <li key={leak.project}>\n            {leak.projectName}: <DateTooltipFormatter date={leak.date} />\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <i className=\"spinner spinner-margin\" />\n    );\n\n  render() {\n    return (\n      <Tooltip onShow={this.fetchLeaks} overlay={this.renderOverlay()}>\n        <div className=\"overview-legend  overview-legend-spaced-line\">\n          {translate('issues.leak_period')}\n        </div>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface ApplicationLeak {\n  date: string;\n  project: string;\n  projectName: string;\n}\n\nexport function getApplicationLeak(application: string): Promise<Array<ApplicationLeak>> {\n  return getJSON('/api/views/show_leak', { application }).then(r => r.leaks, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { getPeriodDate, getPeriodLabel } from '../../../helpers/periods';\nimport { translateWithParameters } from '../../../helpers/l10n';\n\n/*::\ntype DaysPeriod = {\n  date: string,\n  mode: 'days',\n  parameter: string\n};\n*/\n\n/*::\ntype DatePeriod = {\n  date: string,\n  mode: 'date',\n  parameter: string\n};\n*/\n\n/*::\ntype VersionPeriod = {\n  date: string,\n  mode: 'version',\n  parameter: string\n};\n*/\n\n/*::\ntype PreviousAnalysisPeriod = {\n  date: string,\n  mode: 'previous_analysis'\n};\n*/\n\n/*::\ntype PreviousVersionPeriod = {\n  date: string,\n  mode: 'previous_version'\n};\n*/\n\n/*::\ntype Period =\n  | DaysPeriod\n  | DatePeriod\n  | VersionPeriod\n  | PreviousAnalysisPeriod\n  | PreviousVersionPeriod; */\n\nexport default function LeakPeriodLegend({ period } /*: { period: Period } */) {\n  const leakPeriodLabel = getPeriodLabel(period);\n\n  if (period.mode === 'days') {\n    return (\n      <div className=\"overview-legend overview-legend-spaced-line\">\n        {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}\n      </div>\n    );\n  }\n\n  const leakPeriodDate = getPeriodDate(period);\n  const tooltip = (\n    <DateFormatter date={leakPeriodDate} long={true}>\n      {formattedLeakPeriodDate => (\n        <span>\n          {translateWithParameters(\n            ['date'].includes(period.mode)\n              ? 'overview.last_analysis_on_x'\n              : 'overview.started_on_x',\n            formattedLeakPeriodDate\n          )}\n        </span>\n      )}\n    </DateFormatter>\n  );\n  return (\n    <Tooltip overlay={tooltip}>\n      <div className=\"overview-legend\">\n        {translateWithParameters('overview.leak_period_x', leakPeriodLabel)}\n        <br />\n        <DateFromNow date={leakPeriodDate}>\n          {fromNow => (\n            <span className=\"note\">\n              {translateWithParameters(\n                ['date'].includes(period.mode) ? 'overview.last_analysis_x' : 'overview.started_x',\n                fromNow\n              )}\n            </span>\n          )}\n        </DateFromNow>\n      </div>\n    </Tooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { translate } from '../../../helpers/l10n';\n\nexport function getMetricName(metricKey) {\n  return translate('overview.metric', metricKey);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport enhance, { ComposedProps } from './enhance';\nimport ApplicationLeakPeriodLegend from '../components/ApplicationLeakPeriodLegend';\nimport BubblesIcon from '../../../components/icons-components/BubblesIcon';\nimport BugIcon from '../../../components/icons-components/BugIcon';\nimport LeakPeriodLegend from '../components/LeakPeriodLegend';\nimport VulnerabilityIcon from '../../../components/icons-components/VulnerabilityIcon';\nimport { getMetricName } from '../helpers/metrics';\nimport { getComponentDrilldownUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\n\nexport class BugsAndVulnerabilities extends React.PureComponent<ComposedProps> {\n  renderHeader() {\n    const { branchLike, component } = this.props;\n\n    return (\n      <div className=\"overview-card-header\">\n        <div className=\"overview-title\">\n          <span>{translate('metric.bugs.name')}</span>\n          <Link\n            className=\"button button-small spacer-left text-text-bottom\"\n            to={getComponentDrilldownUrl(component.key, 'Reliability', branchLike)}>\n            <BubblesIcon size={14} />\n          </Link>\n          <span className=\"big-spacer-left\">{translate('metric.vulnerabilities.name')}</span>\n          <Link\n            className=\"button button-small spacer-left text-text-bottom\"\n            to={getComponentDrilldownUrl(component.key, 'Security', branchLike)}>\n            <BubblesIcon size={14} />\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  renderLeak() {\n    const { component, leakPeriod } = this.props;\n    if (!leakPeriod) {\n      return null;\n    }\n\n    return (\n      <div className=\"overview-domain-leak\">\n        {component.qualifier === 'APP' ? (\n          <ApplicationLeakPeriodLegend component={component.key} />\n        ) : (\n          <LeakPeriodLegend period={leakPeriod} />\n        )}\n\n        <div className=\"overview-domain-measures\">\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              <span style={{ marginLeft: 30 }}>{this.props.renderIssues('new_bugs', 'BUG')}</span>\n              {this.props.renderRating('new_reliability_rating')}\n            </div>\n            <div className=\"overview-domain-measure-label\">\n              <BugIcon className=\"little-spacer-right\" />\n              {getMetricName('new_bugs')}\n            </div>\n          </div>\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              <span style={{ marginLeft: 30 }}>\n                {this.props.renderIssues('new_vulnerabilities', 'VULNERABILITY')}\n              </span>\n              {this.props.renderRating('new_security_rating')}\n            </div>\n            <div className=\"overview-domain-measure-label\">\n              <VulnerabilityIcon className=\"little-spacer-right\" />\n              {getMetricName('new_vulnerabilities')}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderNutshell() {\n    return (\n      <div className=\"overview-domain-nutshell\">\n        <div className=\"overview-domain-measures\">\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              {this.props.renderIssues('bugs', 'BUG')}\n              {this.props.renderRating('reliability_rating')}\n            </div>\n            <div className=\"overview-domain-measure-label\">\n              <BugIcon className=\"little-spacer-right \" />\n              {getMetricName('bugs')}\n              {this.props.renderHistoryLink('bugs')}\n            </div>\n          </div>\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              {this.props.renderIssues('vulnerabilities', 'VULNERABILITY')}\n              {this.props.renderRating('security_rating')}\n            </div>\n            <div className=\"overview-domain-measure-label\">\n              <VulnerabilityIcon className=\"little-spacer-right \" />\n              {getMetricName('vulnerabilities')}\n              {this.props.renderHistoryLink('vulnerabilities')}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { measures } = this.props;\n    const bugsMeasure = measures.find(measure => measure.metric.key === 'bugs');\n    if (!bugsMeasure) {\n      return null;\n    }\n    return (\n      <div className=\"overview-card overview-card-special\">\n        {this.renderHeader()}\n\n        <div className=\"overview-domain-panel\">\n          {this.renderNutshell()}\n          {this.renderLeak()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(BugsAndVulnerabilities);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport enhance, { ComposedProps } from './enhance';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport { getMetricName } from '../helpers/metrics';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { formatMeasure, isDiffMetric } from '../../../helpers/measures';\nimport { getComponentIssuesUrl } from '../../../helpers/urls';\nimport CodeSmellIcon from '../../../components/icons-components/CodeSmellIcon';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\n\nexport class CodeSmells extends React.PureComponent<ComposedProps> {\n  renderHeader() {\n    return this.props.renderHeader('Maintainability', translate('metric.code_smells.name'));\n  }\n\n  renderDebt(metric: string, type: string) {\n    const { branchLike, measures, component } = this.props;\n    const measure = measures.find(measure => measure.metric.key === metric);\n    const value = measure ? this.props.getValue(measure) : undefined;\n    const params = {\n      ...getBranchLikeQuery(branchLike),\n      resolved: 'false',\n      facetMode: 'effort',\n      types: type\n    };\n\n    if (isDiffMetric(metric)) {\n      Object.assign(params, { sinceLeakPeriod: 'true' });\n    }\n\n    return (\n      <Link to={getComponentIssuesUrl(component.key, params)}>\n        {formatMeasure(value, 'SHORT_WORK_DUR')}\n      </Link>\n    );\n  }\n\n  renderTimelineStartDate() {\n    if (!this.props.historyStartDate) {\n      return null;\n    }\n    return (\n      <DateFromNow date={this.props.historyStartDate}>\n        {fromNow => (\n          <span className=\"overview-domain-timeline-date\">\n            {translateWithParameters('overview.started_x', fromNow)}\n          </span>\n        )}\n      </DateFromNow>\n    );\n  }\n\n  renderTimeline(range: string, displayDate?: boolean) {\n    return this.props.renderTimeline(\n      'sqale_index',\n      range,\n      displayDate ? this.renderTimelineStartDate() : null\n    );\n  }\n\n  renderLeak() {\n    const { leakPeriod } = this.props;\n    if (!leakPeriod) {\n      return null;\n    }\n\n    return (\n      <div className=\"overview-domain-leak\">\n        <div className=\"overview-domain-measures\">\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              <span style={{ marginLeft: 30 }}>\n                {this.renderDebt('new_technical_debt', 'CODE_SMELL')}\n              </span>\n              {this.props.renderRating('new_maintainability_rating')}\n            </div>\n            <div className=\"overview-domain-measure-label\">{getMetricName('new_effort')}</div>\n          </div>\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              {this.props.renderIssues('new_code_smells', 'CODE_SMELL')}\n            </div>\n            <div className=\"overview-domain-measure-label\">\n              <CodeSmellIcon className=\"little-spacer-right\" />\n              {getMetricName('new_code_smells')}\n            </div>\n          </div>\n        </div>\n\n        {this.renderTimeline('after')}\n      </div>\n    );\n  }\n\n  renderNutshell() {\n    return (\n      <div className=\"overview-domain-nutshell\">\n        <div className=\"overview-domain-measures\">\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              {this.renderDebt('sqale_index', 'CODE_SMELL')}\n              {this.props.renderRating('sqale_rating')}\n            </div>\n            <div className=\"overview-domain-measure-label\">\n              {getMetricName('effort')}\n              {this.props.renderHistoryLink('sqale_index')}\n            </div>\n          </div>\n          <div className=\"overview-domain-measure\">\n            <div className=\"overview-domain-measure-value\">\n              {this.props.renderIssues('code_smells', 'CODE_SMELL')}\n            </div>\n            <div className=\"overview-domain-measure-label offset-left\">\n              <CodeSmellIcon className=\"little-spacer-right \" />\n              {getMetricName('code_smells')}\n              {this.props.renderHistoryLink('code_smells')}\n            </div>\n          </div>\n        </div>\n\n        {this.renderTimeline('before', true)}\n      </div>\n    );\n  }\n\n  render() {\n    const { measures } = this.props;\n    const codeSmellsMeasure = measures.find(measure => measure.metric.key === 'code_smells');\n    if (!codeSmellsMeasure) {\n      return null;\n    }\n    return (\n      <div className=\"overview-card\" id=\"overview-code-smells\">\n        {this.renderHeader()}\n\n        <div className=\"overview-domain-panel\">\n          {this.renderNutshell()}\n          {this.renderLeak()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(CodeSmells);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport enhance, { ComposedProps } from './enhance';\nimport DrilldownLink from '../../../components/shared/DrilldownLink';\nimport { getMetricName } from '../helpers/metrics';\nimport { formatMeasure, getPeriodValue } from '../../../helpers/measures';\nimport { translate } from '../../../helpers/l10n';\nimport CoverageRating from '../../../components/ui/CoverageRating';\n\nexport class Coverage extends React.PureComponent<ComposedProps> {\n  getCoverage() {\n    const measure = this.props.measures.find(measure => measure.metric.key === 'coverage');\n    return Number(measure ? measure.value : undefined);\n  }\n\n  renderHeader() {\n    return this.props.renderHeader('Coverage', translate('metric.coverage.name'));\n  }\n\n  renderTimeline(range: string) {\n    return this.props.renderTimeline('coverage', range);\n  }\n\n  renderTests() {\n    return this.props.renderMeasure('tests');\n  }\n\n  renderCoverage() {\n    const { branchLike, component } = this.props;\n    const metric = 'coverage';\n    const coverage = this.getCoverage();\n\n    return (\n      <div className=\"overview-domain-measure\">\n        <div className=\"display-inline-block text-middle big-spacer-right\">\n          <CoverageRating size=\"big\" value={coverage} />\n        </div>\n\n        <div className=\"display-inline-block text-middle\">\n          <div className=\"overview-domain-measure-value\">\n            <DrilldownLink branchLike={branchLike} component={component.key} metric={metric}>\n              <span className=\"js-overview-main-coverage\">\n                {formatMeasure(coverage, 'PERCENT')}\n              </span>\n            </DrilldownLink>\n          </div>\n\n          <div className=\"overview-domain-measure-label\">\n            {getMetricName('coverage')}\n            {this.props.renderHistoryLink('coverage')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderNewCoverage() {\n    const { branchLike, component, leakPeriod, measures } = this.props;\n    if (!leakPeriod) {\n      return null;\n    }\n\n    const newCoverageMeasure = measures.find(measure => measure.metric.key === 'new_coverage');\n    const newCoverageValue =\n      newCoverageMeasure && getPeriodValue(newCoverageMeasure, leakPeriod.index);\n    const formattedValue =\n      newCoverageMeasure && newCoverageValue !== undefined ? (\n        <div>\n          <DrilldownLink\n            branchLike={branchLike}\n            component={component.key}\n            metric={newCoverageMeasure.metric.key}>\n            <span className=\"js-overview-main-new-coverage\">\n              {formatMeasure(newCoverageValue, 'PERCENT')}\n            </span>\n          </DrilldownLink>\n        </div>\n      ) : (\n        <span>—</span>\n      );\n\n    const newLinesToCover = measures.find(measure => measure.metric.key === 'new_lines_to_cover');\n    const newLinesToCoverValue =\n      newLinesToCover && getPeriodValue(newLinesToCover, leakPeriod.index);\n    const label =\n      newLinesToCover && newLinesToCoverValue !== undefined && Number(newLinesToCoverValue) > 0 ? (\n        <div className=\"overview-domain-measure-label\">\n          {translate('overview.coverage_on')}\n          <br />\n          <DrilldownLink\n            branchLike={branchLike}\n            className=\"spacer-right overview-domain-secondary-measure-value\"\n            component={component.key}\n            metric={newLinesToCover.metric.key}>\n            <span className=\"js-overview-main-new-coverage\">\n              {formatMeasure(newLinesToCoverValue, 'SHORT_INT')}\n            </span>\n          </DrilldownLink>\n          {getMetricName('new_lines_to_cover')}\n        </div>\n      ) : (\n        <div className=\"overview-domain-measure-label\">{getMetricName('new_coverage')}</div>\n      );\n\n    return (\n      <div className=\"overview-domain-measure\">\n        <div className=\"overview-domain-measure-value\">{formattedValue}</div>\n        {label}\n      </div>\n    );\n  }\n\n  renderNutshell() {\n    return (\n      <div className=\"overview-domain-nutshell\">\n        <div className=\"overview-domain-measures\">\n          {this.renderCoverage()}\n          {this.renderTests()}\n        </div>\n\n        {this.renderTimeline('before')}\n      </div>\n    );\n  }\n\n  renderLeak() {\n    const { leakPeriod } = this.props;\n    if (!leakPeriod) {\n      return null;\n    }\n    return (\n      <div className=\"overview-domain-leak\">\n        <div className=\"overview-domain-measures\">{this.renderNewCoverage()}</div>\n\n        {this.renderTimeline('after')}\n      </div>\n    );\n  }\n\n  render() {\n    const { measures } = this.props;\n    const coverageMeasure = measures.find(measure => measure.metric.key === 'coverage');\n    if (!coverageMeasure) {\n      return null;\n    }\n    return (\n      <div className=\"overview-card\">\n        {this.renderHeader()}\n\n        <div className=\"overview-domain-panel\">\n          {this.renderNutshell()}\n          {this.renderLeak()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(Coverage);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport enhance, { ComposedProps } from './enhance';\nimport DrilldownLink from '../../../components/shared/DrilldownLink';\nimport { getMetricName } from '../helpers/metrics';\nimport { formatMeasure, getPeriodValue } from '../../../helpers/measures';\nimport { translate } from '../../../helpers/l10n';\nimport DuplicationsRating from '../../../components/ui/DuplicationsRating';\n\nexport class Duplications extends React.PureComponent<ComposedProps> {\n  renderHeader() {\n    return this.props.renderHeader('Duplications', translate('overview.domain.duplications'));\n  }\n\n  renderTimeline(range: string) {\n    return this.props.renderTimeline('duplicated_lines_density', range);\n  }\n\n  renderDuplicatedBlocks() {\n    return this.props.renderMeasure('duplicated_blocks');\n  }\n\n  renderDuplications() {\n    const { branchLike, component, measures } = this.props;\n    const measure = measures.find(measure => measure.metric.key === 'duplicated_lines_density');\n    if (!measure) {\n      return null;\n    }\n\n    const duplications = Number(measure.value);\n\n    return (\n      <div className=\"overview-domain-measure\">\n        <div className=\"display-inline-block text-middle big-spacer-right\">\n          <DuplicationsRating size=\"big\" value={duplications} />\n        </div>\n\n        <div className=\"display-inline-block text-middle\">\n          <div className=\"overview-domain-measure-value\">\n            <DrilldownLink\n              branchLike={branchLike}\n              component={component.key}\n              metric=\"duplicated_lines_density\">\n              {formatMeasure(duplications, 'PERCENT')}\n            </DrilldownLink>\n          </div>\n\n          <div className=\"overview-domain-measure-label offset-left\">\n            {getMetricName('duplications')}\n            {this.props.renderHistoryLink('duplicated_lines_density')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderNewDuplications() {\n    const { branchLike, component, measures, leakPeriod } = this.props;\n    if (!leakPeriod) {\n      return null;\n    }\n    const newDuplicationsMeasure = measures.find(\n      measure => measure.metric.key === 'new_duplicated_lines_density'\n    );\n    const newDuplicationsValue =\n      newDuplicationsMeasure && getPeriodValue(newDuplicationsMeasure, leakPeriod.index);\n    const formattedValue =\n      newDuplicationsMeasure && newDuplicationsValue ? (\n        <div>\n          <DrilldownLink\n            branchLike={branchLike}\n            component={component.key}\n            metric={newDuplicationsMeasure.metric.key}>\n            <span className=\"js-overview-main-new-duplications\">\n              {formatMeasure(newDuplicationsValue, 'PERCENT')}\n            </span>\n          </DrilldownLink>\n        </div>\n      ) : (\n        <span>—</span>\n      );\n\n    const newLinesMeasure = measures.find(measure => measure.metric.key === 'new_lines');\n    const newLinesValue = newLinesMeasure && getPeriodValue(newLinesMeasure, leakPeriod.index);\n    const label =\n      newLinesMeasure && newLinesValue !== undefined && Number(newLinesValue) > 0 ? (\n        <div className=\"overview-domain-measure-label\">\n          {translate('overview.duplications_on')}\n          <br />\n          <DrilldownLink\n            branchLike={branchLike}\n            className=\"spacer-right overview-domain-secondary-measure-value\"\n            component={component.key}\n            metric={newLinesMeasure.metric.key}>\n            <span className=\"js-overview-main-new-lines\">\n              {formatMeasure(newLinesValue, 'SHORT_INT')}\n            </span>\n          </DrilldownLink>\n          {getMetricName('new_lines')}\n        </div>\n      ) : (\n        <div className=\"overview-domain-measure-label\">{getMetricName('new_duplications')}</div>\n      );\n\n    return (\n      <div className=\"overview-domain-measure\">\n        <div className=\"overview-domain-measure-value\">{formattedValue}</div>\n        {label}\n      </div>\n    );\n  }\n\n  renderNutshell() {\n    return (\n      <div className=\"overview-domain-nutshell\">\n        <div className=\"overview-domain-measures\">\n          {this.renderDuplications()}\n          {this.renderDuplicatedBlocks()}\n        </div>\n\n        {this.renderTimeline('before')}\n      </div>\n    );\n  }\n\n  renderLeak() {\n    const { leakPeriod } = this.props;\n    if (leakPeriod == null) {\n      return null;\n    }\n    return (\n      <div className=\"overview-domain-leak\">\n        <div className=\"overview-domain-measures\">{this.renderNewDuplications()}</div>\n\n        {this.renderTimeline('after')}\n      </div>\n    );\n  }\n\n  render() {\n    const { measures } = this.props;\n    const duplications = measures.find(\n      measure => measure.metric.key === 'duplicated_lines_density'\n    );\n    if (duplications == null) {\n      return null;\n    }\n    return (\n      <div className=\"overview-card\">\n        {this.renderHeader()}\n\n        <div className=\"overview-domain-panel\">\n          {this.renderNutshell()}\n          {this.renderLeak()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(Duplications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ClipboardButton from '../../../components/controls/ClipboardButton';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h4 className=\"overview-meta-header\">{translate('overview.project_key', qualifier)}</h4>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" type=\"text\" value={componentKey} readOnly={true} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport ClipboardButton from '../../../components/controls/ClipboardButton';\n\ninterface Props {\n  organization: string;\n}\n\nexport default function MetaOrganizationKey({ organization }: Props) {\n  return (\n    <>\n      <h4 className=\"overview-meta-header big-spacer-top\">{translate('organization_key')}</h4>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" type=\"text\" value={organization} readOnly={true} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={organization} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { isProvided, getLinkName } from '../../project-admin/links/utils';\nimport { ProjectLink } from '../../../app/types';\nimport BugTrackerIcon from '../../../components/ui/BugTrackerIcon';\n\ninterface Props {\n  link: ProjectLink;\n}\n\nexport default function MetaLink({ link }: Props) {\n  return (\n    <li>\n      <a className=\"link-with-icon\" href={link.url} rel=\"nofollow\" target=\"_blank\">\n        <MetaLinkIcon link={link} /> {getLinkName(link)}\n      </a>\n    </li>\n  );\n}\n\nfunction MetaLinkIcon({ link }: Props) {\n  if (link.type === 'issue') {\n    return <BugTrackerIcon />;\n  }\n\n  return isProvided(link) ? (\n    <i className={`icon-color-link icon-${link.type}`} />\n  ) : (\n    <i className=\"icon-color-link icon-detach\" />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport MetaLink from './MetaLink';\nimport { getProjectLinks } from '../../../api/projectLinks';\nimport { orderLinks } from '../../project-admin/links/utils';\nimport { LightComponent, ProjectLink } from '../../../app/types';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  component: LightComponent;\n}\n\ninterface State {\n  links?: ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <div className=\"overview-meta-card\">\n        <h4 className=\"overview-meta-header\">{translate('overview.external_links')}</h4>\n        <ul className=\"overview-meta-list\">\n          {orderedLinks.map(link => <MetaLink key={link.id} link={link} />)}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from '../../../helpers/l10n';\nimport { getQualityGateUrl } from '../../../helpers/urls';\n\ninterface Props {\n  organization?: string;\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate, organization }: Props) {\n  return (\n    <>\n      <h4 className=\"overview-meta-header\">{translate('overview.quality_gate')}</h4>\n\n      <ul className=\"overview-meta-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">{'(' + translate('default') + ')'}</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key, organization)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { omitNil } from '../../../helpers/request';\nimport { getHostUrl } from '../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { getQualityProfileUrl } from '../../../helpers/urls';\nimport { searchRules } from '../../../api/rules';\nimport { getLanguages } from '../../../store/rootReducer';\n\ninterface StateProps {\n  languages: { [key: string]: { name: string } };\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  organization?: string;\n  profiles: { key: string; language: string; name: string }[];\n}\n\ninterface State {\n  deprecatedByKey: { [key: string]: number };\n}\n\nclass MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const requests = this.props.profiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: { [key: string]: number } = {};\n          responses.forEach((count, i) => {\n            const profileKey = this.props.profiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      organization: this.props.organization,\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: { key: string; language: string; name: string }) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const path = getQualityProfileUrl(profile.name, profile.language, this.props.organization);\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">{'(' + languageName + ')'}</span>\n        <Link to={path}>{profile.name}</Link>\n      </div>\n    );\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"overview-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h4 className={classNames('overview-meta-header', headerClassName)}>\n          {translate('overview.quality_profiles')}\n        </h4>\n\n        <ul className=\"overview-meta-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect<StateProps, {}, OwnProps>(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport DrilldownLink from '../../../components/shared/DrilldownLink';\nimport LanguageDistributionContainer from '../../../components/charts/LanguageDistributionContainer';\nimport SizeRating from '../../../components/ui/SizeRating';\nimport { formatMeasure, MeasureEnhanced } from '../../../helpers/measures';\nimport { getMetricName } from '../helpers/metrics';\nimport { translate } from '../../../helpers/l10n';\nimport { LightComponent, BranchLike } from '../../../app/types';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: LightComponent;\n  measures: MeasureEnhanced[];\n}\n\nexport default class MetaSize extends React.PureComponent<Props> {\n  renderLoC = (ncloc: MeasureEnhanced) => (\n    <div\n      id=\"overview-ncloc\"\n      className={classNames('overview-meta-size-ncloc', {\n        'is-half-width': this.props.component.qualifier === 'APP'\n      })}>\n      <span className=\"spacer-right\">\n        <SizeRating value={Number(ncloc.value)} />\n      </span>\n      <DrilldownLink\n        branchLike={this.props.branchLike}\n        component={this.props.component.key}\n        metric=\"ncloc\">\n        {formatMeasure(ncloc.value, 'SHORT_INT')}\n      </DrilldownLink>\n      <div className=\"spacer-top text-muted\">{getMetricName('ncloc')}</div>\n    </div>\n  );\n\n  renderLoCDistribution = () => {\n    const languageDistribution = this.props.measures.find(\n      measure => measure.metric.key === 'ncloc_language_distribution'\n    );\n\n    const className =\n      this.props.component.qualifier === 'TRK' ? 'overview-meta-size-lang-dist' : 'big-spacer-top';\n\n    return languageDistribution ? (\n      <div id=\"overview-language-distribution\" className={className}>\n        <LanguageDistributionContainer distribution={languageDistribution.value} width={160} />\n      </div>\n    ) : null;\n  };\n\n  renderProjects = () => {\n    const projects = this.props.measures.find(measure => measure.metric.key === 'projects');\n\n    return projects ? (\n      <div id=\"overview-projects\" className=\"overview-meta-size-ncloc is-half-width\">\n        <DrilldownLink\n          branchLike={this.props.branchLike}\n          component={this.props.component.key}\n          metric=\"projects\">\n          {formatMeasure(projects.value, 'SHORT_INT')}\n        </DrilldownLink>\n        <div className=\"spacer-top text-muted\">{translate('metric.projects.name')}</div>\n      </div>\n    ) : null;\n  };\n\n  render() {\n    const ncloc = this.props.measures.find(measure => measure.metric.key === 'ncloc');\n\n    if (ncloc == null) {\n      return null;\n    }\n\n    return (\n      <div className=\"big-spacer-top\" id=\"overview-size\">\n        {this.props.component.qualifier === 'APP' && this.renderProjects()}\n        {this.renderLoC(ncloc)}\n        {this.renderLoCDistribution()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { without, difference } from 'lodash';\nimport TagsSelector from '../../../components/tags/TagsSelector';\nimport { BubblePopupPosition } from '../../../components/common/BubblePopup';\nimport { searchProjectTags } from '../../../api/components';\n\ninterface Props {\n  position: BubblePopupPosition;\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        position={this.props.position}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport MetaTagsSelector from './MetaTagsSelector';\nimport { setProjectTags } from '../../../api/components';\nimport { translate } from '../../../helpers/l10n';\nimport TagsList from '../../../components/tags/TagsList';\nimport { BubblePopupPosition } from '../../../components/common/BubblePopup';\nimport { Component } from '../../../app/types';\nimport { Button } from '../../../components/ui/buttons';\n\ninterface Props {\n  component: Component;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface State {\n  popupOpen: boolean;\n  popupPosition: BubblePopupPosition;\n}\n\nexport default class MetaTags extends React.PureComponent<Props, State> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n  state: State = { popupOpen: false, popupPosition: { top: 0, right: 0 } };\n\n  componentDidMount() {\n    if (this.canUpdateTags() && this.tagsList && this.card) {\n      const buttonPos = this.tagsList.getBoundingClientRect();\n      const cardPos = this.card.getBoundingClientRect();\n      this.setState({ popupPosition: this.getPopupPos(buttonPos, cardPos) });\n\n      window.addEventListener('keydown', this.handleKey, false);\n      window.addEventListener('click', this.handleOutsideClick, false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKey);\n    window.removeEventListener('click', this.handleOutsideClick);\n  }\n\n  handleKey = (evt: KeyboardEvent) => {\n    // Escape key\n    if (evt.keyCode === 27) {\n      this.setState({ popupOpen: false });\n    }\n  };\n\n  handleOutsideClick = (evt: Event) => {\n    if (!this.tagsSelector || !this.tagsSelector.contains(evt.target as Node)) {\n      this.setState({ popupOpen: false });\n    }\n  };\n\n  handleClick = () => {\n    this.setState(state => ({ popupOpen: !state.popupOpen }));\n  };\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  handleSetProjectTags = (values: string[]) => {\n    setProjectTags({\n      project: this.props.component.key,\n      tags: values.join(',')\n    }).then(() => this.props.onComponentChange({ tags: values }), () => {});\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const { popupOpen, popupPosition } = this.state;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"big-spacer-top overview-meta-tags\" ref={card => (this.card = card)}>\n          <Button\n            className=\"button-link\"\n            innerRef={tagsList => (this.tagsList = tagsList)}\n            onClick={this.handleClick}\n            stopPropagation={true}>\n            <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n          </Button>\n          {popupOpen && (\n            <div ref={tagsSelector => (this.tagsSelector = tagsSelector)}>\n              <MetaTagsSelector\n                position={popupPosition}\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top overview-meta-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { BadgeType } from './utils';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BadgeColors, BadgeType, BadgeOptions } from './utils';\nimport Select from '../../../components/controls/Select';\nimport { fetchWebApi } from '../../../api/web-api';\nimport { getLocalizedMetricName, translate } from '../../../helpers/l10n';\nimport { Metric } from '../../../app/types';\n\ninterface Props {\n  className?: string;\n  metrics: { [key: string]: Metric };\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(domain => domain.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(ws => ws.key === 'measure');\n          const param = ws && ws.params && ws.params.find(param => param.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () =>\n    ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n\n  getMetricOptions = () =>\n    this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n\n  handleColorChange = ({ value }: { value: BadgeColors }) =>\n    this.props.updateOptions({ color: value });\n\n  handleMetricChange = ({ value }: { value: string }) =>\n    this.props.updateOptions({ metric: value });\n\n  render() {\n    const { className, options, type } = this.props;\n    switch (type) {\n      case BadgeType.marketing:\n        return (\n          <div className={className}>\n            <label className=\"big-spacer-right\" htmlFor=\"badge-color\">\n              {translate('color')}\n            </label>\n            <Select\n              className=\"input-medium\"\n              clearable={false}\n              name=\"badge-color\"\n              onChange={this.handleColorChange}\n              options={this.getColorOptions()}\n              searchable={false}\n              value={options.color}\n            />\n          </div>\n        );\n      case BadgeType.measure:\n        return (\n          <div className={className}>\n            <label className=\"big-spacer-right\" htmlFor=\"badge-metric\">\n              {translate('overview.badges.metric')}\n            </label>\n            <Select\n              className=\"input-medium\"\n              clearable={false}\n              name=\"badge-metric\"\n              onChange={this.handleMetricChange}\n              options={this.getMetricOptions()}\n              searchable={false}\n              value={options.metric}\n            />\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport { BadgeType, BadgeOptions, getBadgeUrl } from './utils';\nimport { Metric, BranchLike } from '../../../app/types';\nimport CodeSnippet from '../../../components/common/CodeSnippet';\nimport Modal from '../../../components/controls/Modal';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\nimport { translate } from '../../../helpers/l10n';\nimport './styles.css';\nimport { Button, ResetButtonLink } from '../../../components/ui/buttons';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: { [key: string]: Metric };\n  onSonarCloud: boolean;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  open: boolean;\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class BadgesModal extends React.PureComponent<Props, State> {\n  state: State = {\n    open: false,\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: 'alert_status' }\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const header = translate('overview.badges.title');\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n    const badges = this.props.onSonarCloud\n      ? [BadgeType.measure, BadgeType.qualityGate, BadgeType.marketing]\n      : [BadgeType.measure, BadgeType.qualityGate];\n    return (\n      <div className=\"overview-meta-card\">\n        <Button className=\"js-project-badges\" onClick={this.handleOpen}>\n          {translate('overview.badges.get_badge', qualifier)}\n        </Button>\n        {this.state.open && (\n          <Modal contentLabel={header} onRequestClose={this.handleClose}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body\">\n              <p className=\"huge-spacer-bottom\">\n                {translate('overview.badges.description', qualifier)}\n              </p>\n              <div className=\"badges-list spacer-bottom\">\n                {badges.map(type => (\n                  <BadgeButton\n                    key={type}\n                    onClick={this.handleSelectBadge}\n                    selected={type === selectedType}\n                    type={type}\n                    url={getBadgeUrl(type, fullBadgeOptions)}\n                  />\n                ))}\n              </div>\n              <p className=\"text-center note huge-spacer-bottom\">\n                {translate('overview.badges', selectedType, 'description', qualifier)}\n              </p>\n              <BadgeParams\n                className=\"big-spacer-bottom\"\n                metrics={this.props.metrics}\n                options={badgeOptions}\n                type={selectedType}\n                updateOptions={this.handleUpdateOptions}\n              />\n              <CodeSnippet isOneLine={true} snippet={getBadgeUrl(selectedType, fullBadgeOptions)} />\n            </div>\n            <footer className=\"modal-foot\">\n              <ResetButtonLink className=\"js-modal-close\" onClick={this.handleClose}>\n                {translate('close')}\n              </ResetButtonLink>\n            </footer>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { Event as IEvent } from '../../../api/projectActivity';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  event: IEvent;\n}\n\nexport default function Event({ event }: Props) {\n  if (event.category === 'VERSION') {\n    return (\n      <Tooltip mouseEnterDelay={0.5} overlay={`${translate('version')} ${event.name}`}>\n        <span className=\"overview-analysis-event badge\">{event.name}</span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <div className=\"overview-analysis-event\">\n      <span className=\"note\">{translate('event.category', event.category)}:</span>{' '}\n      {event.description ? (\n        <Tooltip mouseEnterDelay={0.5} overlay={event.description}>\n          <strong>{event.name}</strong>\n        </Tooltip>\n      ) : (\n        <strong>{event.name}</strong>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport Event from './Event';\nimport DateTooltipFormatter from '../../../components/intl/DateTooltipFormatter';\nimport { Analysis as IAnalysis, Event as IEvent } from '../../../api/projectActivity';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  analysis: IAnalysis;\n  qualifier: string;\n}\n\nexport default function Analysis({ analysis, ...props }: Props) {\n  const sortedEvents: Array<IEvent> = sortBy(\n    analysis.events,\n    // versions first\n    (event: IEvent) => (event.category === 'VERSION' ? 0 : 1),\n    // then the rest sorted by category\n    'category'\n  );\n\n  // use `TRK` for all components but applications\n  const qualifier = props.qualifier === 'APP' ? 'APP' : 'TRK';\n\n  return (\n    <li className=\"overview-analysis\">\n      <div className=\"small little-spacer-bottom\">\n        <strong>\n          <DateTooltipFormatter date={analysis.date} />\n        </strong>\n      </div>\n\n      {sortedEvents.length > 0 ? (\n        <div className=\"project-activity-events\">\n          {sortedEvents.map(event => <Event event={event} key={event.key} />)}\n        </div>\n      ) : (\n        <span className=\"note\">{translate('project_activity.analyzed', qualifier)}</span>\n      )}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Analysis from './Analysis';\nimport { getProjectActivity, Analysis as IAnalysis } from '../../../api/projectActivity';\nimport PreviewGraph from '../../../components/preview-graph/PreviewGraph';\nimport { translate } from '../../../helpers/l10n';\nimport { Metric, Component, BranchLike } from '../../../app/types';\nimport { History } from '../../../api/time-machine';\nimport { getBranchLikeQuery } from '../../../helpers/branches';\nimport { getActivityUrl } from '../../../helpers/urls';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: Component;\n  history?: History;\n  metrics: { [key: string]: Metric };\n  qualifier: string;\n}\n\ninterface State {\n  analyses: IAnalysis[];\n  loading: boolean;\n}\n\nconst PAGE_SIZE = 3;\n\nexport default class AnalysesList extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { analyses: [], loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getTopLevelComponent = () => {\n    const { component } = this.props;\n    let current = component.breadcrumbs.length - 1;\n    while (\n      current > 0 &&\n      !['TRK', 'VW', 'APP'].includes(component.breadcrumbs[current].qualifier)\n    ) {\n      current--;\n    }\n    return component.breadcrumbs[current].key;\n  };\n\n  fetchData = () => {\n    this.setState({ loading: true });\n\n    getProjectActivity({\n      ...getBranchLikeQuery(this.props.branchLike),\n      project: this.getTopLevelComponent(),\n      ps: PAGE_SIZE\n    }).then(\n      ({ analyses }) => {\n        if (this.mounted) {\n          this.setState({ analyses, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  renderList(analyses: IAnalysis[]) {\n    if (!analyses.length) {\n      return <p className=\"spacer-top note\">{translate('no_results')}</p>;\n    }\n\n    return (\n      <ul className=\"spacer-top\">\n        {analyses.map(analysis => (\n          <Analysis analysis={analysis} key={analysis.key} qualifier={this.props.qualifier} />\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    const { analyses, loading } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    return (\n      <div className=\"overview-meta-card\">\n        <h4 className=\"overview-meta-header\">\n          {translate('overview.project_activity', this.props.component.qualifier)}\n        </h4>\n\n        <PreviewGraph\n          branchLike={this.props.branchLike}\n          history={this.props.history}\n          metrics={this.props.metrics}\n          project={this.props.component.key}\n        />\n\n        {this.renderList(analyses)}\n\n        <div className=\"spacer-top small\">\n          <Link to={getActivityUrl(this.props.component.key, this.props.branchLike)}>\n            {translate('show_more')}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport MetaKey from './MetaKey';\nimport MetaOrganizationKey from './MetaOrganizationKey';\nimport MetaLinks from './MetaLinks';\nimport MetaQualityGate from './MetaQualityGate';\nimport MetaQualityProfiles from './MetaQualityProfiles';\nimport MetaSize from './MetaSize';\nimport MetaTags from './MetaTags';\nimport BadgesModal from '../badges/BadgesModal';\nimport AnalysesList from '../events/AnalysesList';\nimport { Visibility, Component, Metric, BranchLike } from '../../../app/types';\nimport { History } from '../../../api/time-machine';\nimport { translate } from '../../../helpers/l10n';\nimport { MeasureEnhanced } from '../../../helpers/measures';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: Component;\n  history?: History;\n  measures: MeasureEnhanced[];\n  metrics: { [key: string]: Metric };\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class Meta extends React.PureComponent<Props> {\n  static contextTypes = {\n    onSonarCloud: PropTypes.bool,\n    organizationsEnabled: PropTypes.bool\n  };\n\n  render() {\n    const { onSonarCloud, organizationsEnabled } = this.context;\n    const { branchLike, component, metrics } = this.props;\n    const { qualifier, description, qualityProfiles, qualityGate, visibility } = component;\n\n    const isProject = qualifier === 'TRK';\n    const isPrivate = visibility === Visibility.Private;\n\n    return (\n      <div className=\"overview-meta\">\n        <div className=\"overview-meta-card\">\n          <h4 className=\"overview-meta-header\">\n            {translate('overview.about_this_project', qualifier)}\n          </h4>\n          {description !== undefined && <p className=\"overview-meta-description\">{description}</p>}\n          {isProject && (\n            <MetaTags component={component} onComponentChange={this.props.onComponentChange} />\n          )}\n          <MetaSize branchLike={branchLike} component={component} measures={this.props.measures} />\n        </div>\n\n        <AnalysesList\n          branchLike={branchLike}\n          component={component}\n          history={this.props.history}\n          metrics={metrics}\n          qualifier={component.qualifier}\n        />\n\n        {isProject && (\n          <div className=\"overview-meta-card\">\n            {qualityGate && (\n              <MetaQualityGate\n                organization={organizationsEnabled ? component.organization : undefined}\n                qualityGate={qualityGate}\n              />\n            )}\n\n            {qualityProfiles &&\n              qualityProfiles.length > 0 && (\n                <MetaQualityProfiles\n                  headerClassName={qualityGate ? 'big-spacer-top' : undefined}\n                  organization={organizationsEnabled ? component.organization : undefined}\n                  profiles={qualityProfiles}\n                />\n              )}\n          </div>\n        )}\n\n        {isProject && <MetaLinks component={component} />}\n\n        <div className=\"overview-meta-card\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n          {organizationsEnabled && <MetaOrganizationKey organization={component.organization} />}\n        </div>\n\n        {!isPrivate && (\n          <BadgesModal\n            branchLike={branchLike}\n            metrics={metrics}\n            onSonarCloud={onSonarCloud}\n            project={component.key}\n            qualifier={component.qualifier}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n//@flow\n\nexport const METRICS = [\n  // quality gate\n  'alert_status',\n  'quality_gate_details',\n\n  // bugs\n  'bugs',\n  'new_bugs',\n  'reliability_rating',\n  'new_reliability_rating',\n\n  // vulnerabilities\n  'vulnerabilities',\n  'new_vulnerabilities',\n  'security_rating',\n  'new_security_rating',\n\n  // code smells\n  'code_smells',\n  'new_code_smells',\n  'sqale_rating',\n  'new_maintainability_rating',\n  'sqale_index',\n  'new_technical_debt',\n\n  // coverage\n  'coverage',\n  'new_coverage',\n  'new_lines_to_cover',\n  'tests',\n\n  // duplications\n  'duplicated_lines_density',\n  'new_duplicated_lines_density',\n  'duplicated_blocks',\n\n  // size\n  'ncloc',\n  'ncloc_language_distribution',\n  'projects',\n  'new_lines'\n];\n\nexport const HISTORY_METRICS_LIST = [\n  'sqale_index',\n  'duplicated_lines_density',\n  'ncloc',\n  'coverage'\n];\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { uniq } from 'lodash';\nimport { connect } from 'react-redux';\nimport QualityGate from '../qualityGate/QualityGate';\nimport ApplicationQualityGate from '../qualityGate/ApplicationQualityGate';\nimport BugsAndVulnerabilities from '../main/BugsAndVulnerabilities';\nimport CodeSmells from '../main/CodeSmells';\nimport Coverage from '../main/Coverage';\nimport Duplications from '../main/Duplications';\nimport Meta from '../meta/Meta';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport { getMeasuresAndMeta } from '../../../api/measures';\nimport { getAllTimeMachineData, History } from '../../../api/time-machine';\nimport { parseDate } from '../../../helpers/dates';\nimport { enhanceMeasuresWithMetrics, MeasureEnhanced } from '../../../helpers/measures';\nimport { getLeakPeriod, Period } from '../../../helpers/periods';\nimport { getCustomGraph, getGraph } from '../../../helpers/storage';\nimport { METRICS, HISTORY_METRICS_LIST } from '../utils';\nimport { DEFAULT_GRAPH, getDisplayedHistoryMetrics } from '../../projectActivity/utils';\nimport { isSameBranchLike, getBranchLikeQuery } from '../../../helpers/branches';\nimport { fetchMetrics } from '../../../store/rootActions';\nimport { getMetrics } from '../../../store/rootReducer';\nimport { BranchLike, Component, Metric } from '../../../app/types';\nimport '../styles.css';\n\ninterface OwnProps {\n  branchLike?: BranchLike;\n  component: Component;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface StateToProps {\n  metrics: { [key: string]: Metric };\n}\n\ninterface DispatchToProps {\n  fetchMetrics: () => void;\n}\n\ntype Props = StateToProps & DispatchToProps & OwnProps;\n\ninterface State {\n  history?: History;\n  historyStartDate?: Date;\n  loading: boolean;\n  measures: MeasureEnhanced[];\n  periods?: Period[];\n}\n\nexport class OverviewApp extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true, measures: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures().then(this.loadHistory, () => {});\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      this.props.component.key !== prevProps.component.key ||\n      !isSameBranchLike(this.props.branchLike, prevProps.branchLike)\n    ) {\n      this.loadMeasures().then(this.loadHistory, () => {});\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadMeasures() {\n    const { branchLike, component } = this.props;\n    this.setState({ loading: true });\n\n    return getMeasuresAndMeta(component.key, METRICS, {\n      additionalFields: 'metrics,periods',\n      ...getBranchLikeQuery(branchLike)\n    }).then(\n      r => {\n        if (this.mounted && r.metrics) {\n          this.setState({\n            loading: false,\n            measures: enhanceMeasuresWithMetrics(r.component.measures, r.metrics),\n            periods: r.periods\n          });\n        }\n      },\n      error => {\n        throwGlobalError(error);\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  loadHistory = () => {\n    const { branchLike, component } = this.props;\n\n    let graphMetrics = getDisplayedHistoryMetrics(getGraph(), getCustomGraph());\n    if (!graphMetrics || graphMetrics.length <= 0) {\n      graphMetrics = getDisplayedHistoryMetrics(DEFAULT_GRAPH, []);\n    }\n\n    const metrics = uniq(HISTORY_METRICS_LIST.concat(graphMetrics));\n    return getAllTimeMachineData({\n      ...getBranchLikeQuery(branchLike),\n      component: component.key,\n      metrics: metrics.join()\n    }).then(r => {\n      if (this.mounted) {\n        const history: History = {};\n        r.measures.forEach(measure => {\n          const measureHistory = measure.history.map(analysis => ({\n            date: parseDate(analysis.date),\n            value: analysis.value\n          }));\n          history[measure.metric] = measureHistory;\n        });\n        const historyStartDate = history[HISTORY_METRICS_LIST[0]][0].date;\n        this.setState({ history, historyStartDate });\n      }\n    });\n  };\n\n  getApplicationLeakPeriod = () =>\n    this.state.measures.find(measure => measure.metric.key === 'new_bugs')\n      ? { index: 1 }\n      : undefined;\n\n  renderLoading() {\n    return (\n      <div className=\"text-center\">\n        <i className=\"spinner spinner-margin\" />\n      </div>\n    );\n  }\n\n  render() {\n    const { branchLike, component } = this.props;\n    const { loading, measures, periods, history, historyStartDate } = this.state;\n\n    if (loading) {\n      return this.renderLoading();\n    }\n\n    const leakPeriod =\n      component.qualifier === 'APP' ? this.getApplicationLeakPeriod() : getLeakPeriod(periods);\n    const domainProps = {\n      branchLike,\n      component,\n      measures,\n      leakPeriod,\n      history,\n      historyStartDate\n    };\n\n    return (\n      <div className=\"page page-limited\">\n        <div className=\"overview page-with-sidebar\">\n          <div className=\"overview-main page-main\">\n            {component.qualifier === 'APP' ? (\n              <ApplicationQualityGate component={component} />\n            ) : (\n              <QualityGate branchLike={branchLike} component={component} measures={measures} />\n            )}\n\n            <div className=\"overview-domains-list\">\n              <BugsAndVulnerabilities {...domainProps} />\n              <CodeSmells {...domainProps} />\n              <Coverage {...domainProps} />\n              <Duplications {...domainProps} />\n            </div>\n          </div>\n\n          <div className=\"overview-sidebar page-sidebar-fixed\">\n            <Meta\n              branchLike={branchLike}\n              component={component}\n              history={history}\n              measures={measures}\n              metrics={this.props.metrics}\n              onComponentChange={this.props.onComponentChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: any): StateToProps => ({\n  metrics: getMetrics(state)\n});\n\nexport default connect<StateToProps, DispatchToProps, OwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(OverviewApp);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  component: string;\n  hasBranches?: boolean;\n  showWarning?: boolean;\n}\n\nexport default function EmptyOverview({ component, hasBranches, showWarning }: Props) {\n  const rawMessage = translate('provisioning.no_analysis.delete');\n  const head = rawMessage.substr(0, rawMessage.indexOf('{0}'));\n  const tail = rawMessage.substr(rawMessage.indexOf('{0}') + 3);\n\n  return (\n    <div className=\"page page-limited\">\n      {showWarning && (\n        <div className=\"big-spacer-bottom\">\n          <div className=\"alert alert-warning\">\n            {hasBranches ? (\n              <FormattedMessage\n                defaultMessage={translate('provisioning.no_analysis_on_main_branch')}\n                id=\"provisioning.no_analysis_on_main_branch\"\n                values={{\n                  branch: (\n                    <div className=\"outline-badge text-baseline little-spacer-right\">\n                      {translate('branches.main_branch')}\n                    </div>\n                  )\n                }}\n              />\n            ) : (\n              translate('provisioning.no_analysis')\n            )}\n          </div>\n\n          {!hasBranches && (\n            <div className=\"big-spacer-top\">\n              {head}\n              <Link\n                className=\"text-danger\"\n                to={{ pathname: '/project/deletion', query: { id: component } }}>\n                {translate('provisioning.no_analysis.delete_project')}\n              </Link>\n              {tail}\n            </div>\n          )}\n        </div>\n      )}\n\n      <div>\n        <h4>{translate('key')}</h4>\n        <code>{component}</code>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport OverviewApp from './OverviewApp';\nimport EmptyOverview from './EmptyOverview';\nimport { Component, BranchLike } from '../../../app/types';\nimport { isShortLivingBranch } from '../../../helpers/branches';\nimport { getShortLivingBranchUrl, getCodeUrl } from '../../../helpers/urls';\n\ninterface Props {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component: Component;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<Component>) => void;\n}\n\nexport default class App extends React.PureComponent<Props> {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { branchLike, component } = this.props;\n\n    if (this.isPortfolio()) {\n      this.context.router.replace({\n        pathname: '/portfolio',\n        query: { id: component.key }\n      });\n    } else if (this.isFile()) {\n      this.context.router.replace(\n        getCodeUrl(component.breadcrumbs[0].key, branchLike, component.key)\n      );\n    } else if (isShortLivingBranch(branchLike)) {\n      this.context.router.replace(getShortLivingBranchUrl(component.key, branchLike.name));\n    }\n  }\n\n  isPortfolio = () => ['VW', 'SVW'].includes(this.props.component.qualifier);\n\n  isFile = () => ['FIL', 'UTS'].includes(this.props.component.qualifier);\n\n  render() {\n    const { branchLike, branchLikes, component } = this.props;\n\n    if (this.isPortfolio() || this.isFile() || isShortLivingBranch(branchLike)) {\n      return null;\n    }\n\n    if (!component.analysisDate) {\n      return (\n        <EmptyOverview\n          component={component.key}\n          hasBranches={branchLikes.length > 1}\n          showWarning={!this.props.isPending && !this.props.isInProgress}\n        />\n      );\n    }\n\n    return (\n      <OverviewApp\n        branchLike={branchLike}\n        component={component}\n        onComponentChange={this.props.onComponentChange}\n      />\n    );\n  }\n}\n"],"sourceRoot":""}