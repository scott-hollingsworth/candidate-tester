{"version":3,"sources":["webpack:///./src/main/js/apps/settings/encryption/GenerateSecretKeyForm.js","webpack:///./src/main/js/apps/settings/encryption/EncryptionForm.js","webpack:///./src/main/js/apps/settings/encryption/EncryptionApp.js","webpack:///./src/main/js/apps/settings/encryption/EncryptionAppContainer.js"],"names":["_super","GenerateSecretKeyForm","this","GenerateSecretKeyForm_extends","prototype","handleSubmit","e","preventDefault","props","generateSecretKey","render","_this","index_js_exposed_default","a","createElement","id","secretKey","className","Object","l10n","type","readOnly","value","dangerouslySetInnerHTML","__html","onSubmit","propTypes","prop_types_default","string","func","isRequired","PureComponent","EncryptionForm","apply","arguments","state","EncryptionForm_extends","handleEncrypt","encryptValue","handleGenerateNewKey","autoFocus","onChange","setState","target","required","rows","encryptedValue","EncryptionApp","EncryptionApp_extends","componentDidMount","checkSecretKey","Helmet_default","title","loading","secretKeyAvailable","encryption_GenerateSecretKeyForm","encryption_EncryptionForm","startGeneration","bool","__webpack_exports__","es","rootReducer","actions","encryption_EncryptionApp"],"mappings":"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","file":"js/291.d6c4957d.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '../../../helpers/l10n';\n\nexport default class GenerateSecretKeyForm extends React.PureComponent {\n  static propTypes = {\n    secretKey: PropTypes.string,\n    generateSecretKey: PropTypes.func.isRequired\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.generateSecretKey();\n  }\n\n  render() {\n    return (\n      <div id=\"generate-secret-key-form-container\">\n        {this.props.secretKey != null ? (\n          <div>\n            <div className=\"big-spacer-bottom\">\n              <h3 className=\"spacer-bottom\">{translate('encryption.secret_key')}</h3>\n              <input\n                id=\"secret-key\"\n                className=\"input-large\"\n                type=\"text\"\n                readOnly={true}\n                value={this.props.secretKey}\n              />\n            </div>\n\n            <h3 className=\"spacer-bottom\">{translate('encryption.how_to_use')}</h3>\n\n            <div\n              className=\"markdown\"\n              dangerouslySetInnerHTML={{ __html: translate('encryption.how_to_use.content') }}\n            />\n          </div>\n        ) : (\n          <div>\n            <p\n              className=\"spacer-bottom\"\n              dangerouslySetInnerHTML={{ __html: translate('ecryption.secret_key_description') }}\n            />\n\n            <form id=\"generate-secret-key-form\" onSubmit={e => this.handleSubmit(e)}>\n              <button>{translate('encryption.generate_secret_key')}s</button>\n            </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '../../../helpers/l10n';\n\nexport default class EncryptionForm extends React.PureComponent {\n  static propTypes = {\n    encryptedValue: PropTypes.string,\n    encryptValue: PropTypes.func.isRequired,\n    generateSecretKey: PropTypes.func.isRequired\n  };\n\n  state = { value: '' };\n\n  handleEncrypt(e) {\n    e.preventDefault();\n    this.props.encryptValue(this.state.value);\n  }\n\n  handleGenerateNewKey(e) {\n    e.preventDefault();\n    this.props.generateSecretKey();\n  }\n\n  render() {\n    return (\n      <div id=\"encryption-form-container\">\n        <div className=\"spacer-bottom\">{translate('encryption.form_intro')}</div>\n\n        <form\n          id=\"encryption-form\"\n          className=\"big-spacer-bottom\"\n          onSubmit={e => this.handleEncrypt(e)}>\n          <textarea\n            autoFocus={true}\n            className=\"input-super-large\"\n            id=\"encryption-form-value\"\n            onChange={e => this.setState({ value: e.target.value })}\n            required={true}\n            rows={3}\n            value={this.state.value}\n          />\n          <div className=\"spacer-top\">\n            <button>{translate('encryption.encrypt')}</button>\n          </div>\n        </form>\n\n        {this.props.encryptedValue != null && (\n          <div>\n            {translate('encryption.encrypted_value')}\n            {': '}\n            <input\n              id=\"encrypted-value\"\n              className=\"input-clear input-code input-super-large\"\n              type=\"text\"\n              readOnly={true}\n              value={this.props.encryptedValue}\n            />\n          </div>\n        )}\n\n        <div className=\"huge-spacer-top bordered-top\">\n          <div\n            className=\"big-spacer-top spacer-bottom\"\n            dangerouslySetInnerHTML={{ __html: translate('encryption.form_note') }}\n          />\n          <form id=\"encryption-new-key-form\" onSubmit={e => this.handleGenerateNewKey(e)}>\n            <button>{translate('encryption.generate_new_secret_key')}</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport GenerateSecretKeyForm from './GenerateSecretKeyForm';\nimport EncryptionForm from './EncryptionForm';\nimport { translate } from '../../../helpers/l10n';\n\nexport default class EncryptionApp extends React.PureComponent {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    secretKeyAvailable: PropTypes.bool,\n    secretKey: PropTypes.string,\n    encryptedValue: PropTypes.string,\n\n    checkSecretKey: PropTypes.func.isRequired,\n    generateSecretKey: PropTypes.func.isRequired,\n    encryptValue: PropTypes.func.isRequired,\n    startGeneration: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    this.props.checkSecretKey();\n  }\n\n  render() {\n    return (\n      <div id=\"encryption-page\" className=\"page page-limited\">\n        <Helmet title={translate('property.category.security.encryption')} />\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('property.category.security.encryption')}</h1>\n          {this.props.loading && <i className=\"spinner\" />}\n        </header>\n\n        {!this.props.loading &&\n          !this.props.secretKeyAvailable && (\n            <GenerateSecretKeyForm\n              secretKey={this.props.secretKey}\n              generateSecretKey={this.props.generateSecretKey}\n            />\n          )}\n\n        {this.props.secretKeyAvailable && (\n          <EncryptionForm\n            encryptedValue={this.props.encryptedValue}\n            encryptValue={this.props.encryptValue}\n            generateSecretKey={this.props.startGeneration}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport EncryptionApp from './EncryptionApp';\nimport {\n  checkSecretKey,\n  generateSecretKey,\n  encryptValue,\n  startGeneration\n} from '../store/encryptionPage/actions';\nimport { getSettingsAppEncryptionState } from '../../../store/rootReducer';\n\nexport default connect(state => getSettingsAppEncryptionState(state), {\n  checkSecretKey,\n  generateSecretKey,\n  encryptValue,\n  startGeneration\n})(EncryptionApp);\n"],"sourceRoot":""}