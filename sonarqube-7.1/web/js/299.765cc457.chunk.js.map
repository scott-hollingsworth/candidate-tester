{"version":3,"sources":["webpack:///./src/main/js/apps/background-tasks/constants.js","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/components/controls/FavoriteBase.tsx","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranchesMenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranchesMenu.tsx","webpack:///./src/main/js/app/components/nav/component/SingleBranchHelperPopup.tsx","webpack:///./src/main/js/app/components/nav/component/NoBranchSupportPopup.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranch.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavHeader.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavMeta.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavMenu.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/common/BubblePopup.tsx","webpack:///./src/main/js/components/common/BubblePopupHelper.tsx"],"names":["__webpack_require__","d","__webpack_exports__","DEBOUNCE_DELAY","STATUSES","ALL","ALL_EXCEPT_PENDING","PENDING","IN_PROGRESS","SUCCESS","FAILED","CANCELED","ALL_TYPES","CURRENTS","ONLY_CURRENTS","DEFAULT_FILTERS","status","taskType","currents","minSubmittedAt","undefined","maxExecutedAt","query","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getActivity","data","Object","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","getStatus","componentId","assign","getTask","id","additionalFields","then","r","task","cancelTask","cancelAllTasks","getTasksForComponent","componentKey","catch","getTypes","taskTypes","getWorkers","setWorkerCount","count","StatusIndicator","_a","className","color","size","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","small-status-indicator","big-status-indicator","_super","FavoriteBase","props","_this","call","this","mounted","toggleFavorite","event","preventDefault","state","favorite","removeFavorite","addFavorite","FavoriteBase_extends","prototype","componentDidMount","componentWillReceiveProps","nextProps","setState","componentWillUnmount","render","tooltip","l10n","qualifier","index_js_exposed","Tooltip","overlay","classnames","href","onClick","FavoriteIcon","Favorite_Favorite","component","other","Favorite_rest","controls_FavoriteBase","Favorite_assign","favorites","BranchStatus","branchLike","_b","concise","_helpers_branches__WEBPACK_IMPORTED_MODULE_8__","totalIssues","bugs","vulnerabilities","codeSmells","qualityGateStatus","indicatorColor","getQualityGateColor","shouldDisplayHelper","label","_helpers_l10n__WEBPACK_IMPORTED_MODULE_9__","_helpers_measures__WEBPACK_IMPORTED_MODULE_10__","_controls_Tooltip__WEBPACK_IMPORTED_MODULE_6__","placement","_StatusIndicator__WEBPACK_IMPORTED_MODULE_1__","_icons_components_BugIcon__WEBPACK_IMPORTED_MODULE_3__","_icons_components_VulnerabilityIcon__WEBPACK_IMPORTED_MODULE_7__","_icons_components_CodeSmellIcon__WEBPACK_IMPORTED_MODULE_4__","_icons_components_HelpIcon__WEBPACK_IMPORTED_MODULE_5__","_ui_Level__WEBPACK_IMPORTED_MODULE_2__","level","small","getBranches","project","branches","getPullRequests","pullRequests","deleteBranch","deletePullRequest","renameBranch","name","ComponentContainerNotFound_ComponentContainerNotFound","react_router_es","to","ComponentNavBranchesMenuItem_ComponentNavBranchesMenuItem","ComponentNavBranchesMenuItem_rest","displayName","helpers_branches","shouldBeIndented","isOrphan","key","onMouseEnter","onSelect","active","selected","urls","mouseEnterDelay","BranchIcon","big-spacer-left","ComponentNavBranchesMenu","getFilteredBranchLikes","toLowerCase","branchLikes","filter","matchBranchName","includes","matchPullRequestTitleOrId","title","handleClickOutside","node","contains","target","onClose","handleSearchChange","handleKeyDown","keyCode","openSelected","selectPrevious","selectNext","getSelected","context","router","push","getProjectBranchUrl","index","findIndex","b","length","handleSelect","find","currentBranchLike","renderSearch","SearchBox","autoFocus","onChange","onKeyDown","placeholder","value","renderBranchesList","items","map","previous","isPreviousOrphan","showDivider","showOrphanHeader","showPullRequestHeader","showShortLivingBranchHeader","ComponentNavBranchesMenu_extends","window","addEventListener","removeEventListener","showManageLink","configuration","showSettings","ref","pathname","contextTypes","prop_types","SingleBranchHelperPopup_SingleBranchHelperPopup","BubblePopup","position","popupPosition","customClass","NoBranchSupportPopup_NoBranchSupportPopup","ComponentNavBranch","handleClick","stopPropagation","currentTarget","blur","dropdownOpen","closeDropdown","toggleSingleBranchPopup","show","singleBranchPopupOpen","toggleNoBranchSupportPopup","noBranchSupportPopupOpen","handleSingleBranchClick","handleNoBranchSupportClick","renderDropdown","component_ComponentNavBranchesMenu","canAdmin","renderMergeBranch","mergeBranch","index_es","defaultMessage","values","base","branch","renderSingleBranchPopup","HelpIcon","fill","theme","BubblePopupHelper","isOpen","popup","togglePopup","renderNoBranchSupportPopup","ComponentNavBranch_extends","location","onSonarCloud","branchesEnabled","open","isRequired","component_ComponentNavHeader","es","ownProps","organization","rootReducer","shouldOrganizationBeDisplayed","breadcrumbs","lastItem","OrganizationHelmet","OrganizationAvatar","OrganizationLink","item","isPath","itemName","path","QualifierIcon","visibility","PrivateBadge","component_ComponentNavBranch","component_ComponentNavMeta","currentUser","mainBranch","longBranch","currentPage","type","types","Portfolio","Application","Project","ComponentNavMeta_getCurrentPage","displayVersion","version","analysisDate","DateTimeFormatter","date","Favorite","Boolean","isFavorite","HomePageSelect","url","rel","ComponentNavMenu_SETTINGS_URLS","ComponentNavMenu","apply","arguments","getQuery","ComponentNavMenu_assign","renderExtension","isAdmin","activeClassName","ComponentNavMenu_extends","isProject","isDeveloper","isPortfolio","isApplication","getConfiguration","renderDashboardLink","renderCodeLink","renderActivityLink","renderIssuesLink","isIssuesActive","startsWith","resolved","renderComponentMeasuresLink","renderAdministration","isSettingsActive","some","indexOf","adminLinks","renderAdministrationLinks","link","Dropdown","data-test","onToggleClick","renderSettingsLink","renderBranchesLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","concat","renderAdminExtensions","renderDeletionLink","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showBackgroundTasks","showUpdateKey","extensions","e","renderExtensions","NavBarTabs","ComponentNavBgTaskNotif","ComponentNavBgTaskNotif_extends","renderMessage","messageKey","canSeeBackgroundTasks","bgTaskUrl","currentTask","isInProgress","isPending","NavBarNotif","PendingIcon","constants","errorType","errorMessage","ComponentNav","populateRecentHistory","RecentHistory","add","ComponentNav_extends","componentDidUpdate","prevProps","notifComponent","component_ComponentNavBgTaskNotif","ContextNavBar","height","notif","component_ComponentNavMenu","ComponentContainer_ComponentContainer","ComponentContainer","addQualifier","ComponentContainer_assign","fetchBranches","Promise","all","api_branches","resolve","fetchStatus","ce","current","queue","handleComponentChange","changes","handleBranchesChange","loading","ComponentContainer_extends","fetchComponent","pullRequest","onError","error","response","handleRequiredAuthorization","nav","components","organizationsEnabled","fetchOrganizations","isMain","nav_component_ComponentNav","children","onBranchesChange","onComponentChange","ComponentContainer_mapDispatchToProps","rootActions","popupClass","popupStyle","__assign","style","top","right","handleKey","handleOutsideClick","popupContainer","__extends","getPosition","container","containerPos","getBoundingClientRect","offset","vertical","horizontal","left","role","tabIndex"],"mappings":"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","file":"js/299.765cc457.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/* @flow */\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface PendingTask {\n  componentKey: string;\n  componentName: string;\n  componentQualifier: string;\n  id: string;\n  logs: boolean;\n  organization: string;\n  status: string;\n  submittedAt: Date;\n  submitterLogin?: string;\n  type: string;\n}\n\nexport interface Task extends PendingTask {\n  analysisId?: string;\n  errorMessage?: string;\n  errorType?: string;\n  executionTimeMs: number;\n  executedAt: Date;\n  hasErrorStacktrace: boolean;\n  hasScannerContext: boolean;\n  startedAt: Date;\n}\n\nexport function getActivity(data: RequestData): Promise<any> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(componentId?: string): Promise<any> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<any> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(() => getTask(id), () => getTask(id));\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  componentKey: string\n): Promise<{ queue: PendingTask[]; current: Task }> {\n  return getJSON('/api/ce/component', { componentKey }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<any> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from './Tooltip';\nimport FavoriteIcon from '../icons-components/FavoriteIcon';\nimport { translate } from '../../helpers/l10n';\n\nexport interface Props {\n  addFavorite: () => Promise<void>;\n  className?: string;\n  favorite: boolean;\n  qualifier: string;\n  removeFavorite: () => Promise<void>;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class FavoriteBase extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { favorite: this.props.favorite };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.favorite !== this.props.favorite && nextProps.favorite !== this.state.favorite) {\n      this.setState({ favorite: nextProps.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    if (this.state.favorite) {\n      this.removeFavorite();\n    } else {\n      this.addFavorite();\n    }\n  };\n\n  addFavorite() {\n    this.props.addFavorite().then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: true });\n      }\n    });\n  }\n\n  removeFavorite() {\n    this.props.removeFavorite().then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: false });\n      }\n    });\n  }\n\n  render() {\n    const tooltip = this.state.favorite\n      ? translate('favorite.current', this.props.qualifier)\n      : translate('favorite.check', this.props.qualifier);\n    return (\n      <Tooltip overlay={tooltip}>\n        <a\n          className={classNames('display-inline-block', 'link-no-underline', this.props.className)}\n          href=\"#\"\n          onClick={this.toggleFavorite}>\n          <FavoriteIcon favorite={this.state.favorite} />\n        </a>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteBase from './FavoriteBase';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n}\n\nexport default function Favorite({ component, ...other }: Props) {\n  return (\n    <FavoriteBase\n      {...other}\n      addFavorite={() => addFavorite(component)}\n      removeFavorite={() => removeFavorite(component)}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport StatusIndicator from './StatusIndicator';\nimport Level from '../ui/Level';\nimport BugIcon from '../icons-components/BugIcon';\nimport CodeSmellIcon from '../icons-components/CodeSmellIcon';\nimport HelpIcon from '../icons-components/HelpIcon';\nimport Tooltip from '../controls/Tooltip';\nimport VulnerabilityIcon from '../icons-components/VulnerabilityIcon';\nimport { BranchLike } from '../../app/types';\nimport { isShortLivingBranch, isPullRequest, isLongLivingBranch } from '../../helpers/branches';\nimport { translateWithParameters } from '../../helpers/l10n';\nimport { formatMeasure } from '../../helpers/measures';\nimport './BranchStatus.css';\n\ninterface Props {\n  branchLike: BranchLike;\n  concise?: boolean;\n}\n\nexport default function BranchStatus({ branchLike, concise = false }: Props) {\n  if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n    if (!branchLike.status) {\n      return null;\n    }\n\n    const totalIssues =\n      branchLike.status.bugs + branchLike.status.vulnerabilities + branchLike.status.codeSmells;\n    const status = branchLike.status.qualityGateStatus;\n    const indicatorColor = getQualityGateColor(status);\n    const shouldDisplayHelper = status === 'OK' && totalIssues > 0;\n\n    const label =\n      translateWithParameters('overview.quality_gate_x', formatMeasure(status, 'LEVEL')) +\n      (status !== 'OK'\n        ? ' ' + translateWithParameters('overview.quality_gate_failed_with_x', totalIssues)\n        : '');\n\n    return concise ? (\n      <Tooltip overlay={label} placement=\"right\">\n        <ul className=\"branch-status\">\n          <li>{totalIssues}</li>\n          <li className=\"spacer-left\">\n            <StatusIndicator color={indicatorColor} size=\"small\" />\n          </li>\n        </ul>\n      </Tooltip>\n    ) : (\n      <ul className=\"branch-status\">\n        <li className=\"little-spacer-right\">\n          <StatusIndicator color={indicatorColor} size=\"small\" />\n        </li>\n        <li className=\"spacer-left\">\n          {branchLike.status.bugs}\n          <BugIcon className=\"little-spacer-left\" />\n        </li>\n        <li className=\"spacer-left\">\n          {branchLike.status.vulnerabilities}\n          <VulnerabilityIcon className=\"little-spacer-left\" />\n        </li>\n        <li className=\"spacer-left\">\n          {branchLike.status.codeSmells}\n          <CodeSmellIcon className=\"little-spacer-left\" />\n        </li>\n        {shouldDisplayHelper && (\n          <Tooltip\n            overlay={translateWithParameters(\n              'branches.short_lived.quality_gate.description',\n              totalIssues\n            )}>\n            <li className=\"spacer-left\">\n              <HelpIcon className=\"text-info\" />\n            </li>\n          </Tooltip>\n        )}\n      </ul>\n    );\n  } else if (isLongLivingBranch(branchLike)) {\n    if (!branchLike.status) {\n      return null;\n    }\n\n    return <Level level={branchLike.status.qualityGateStatus} small={true} />;\n  } else {\n    return null;\n  }\n}\n\nfunction getQualityGateColor(status: string) {\n  let indicatorColor = 'gray';\n  if (status === 'ERROR') {\n    indicatorColor = 'red';\n  } else if (status === 'WARN') {\n    indicatorColor = 'orange';\n  } else if (status === 'OK') {\n    indicatorColor = 'green';\n  }\n  return indicatorColor;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from '../helpers/request';\nimport { Branch, PullRequest } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from '../../helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <div id=\"bd\" className=\"page-wrapper-simple\">\n      <div id=\"nonav\" className=\"page-simple\">\n        <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n        <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n        <p>\n          <Link to=\"/\">Go back to the homepage</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport { BranchLike, Component } from '../../../types';\nimport BranchIcon from '../../../../components/icons-components/BranchIcon';\nimport {\n  isShortLivingBranch,\n  getBranchLikeDisplayName,\n  getBranchLikeKey,\n  isMainBranch,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { getBranchLikeUrl } from '../../../../helpers/urls';\nimport Tooltip from '../../../../components/controls/Tooltip';\n\nexport interface Props {\n  branchLike: BranchLike;\n  component: Component;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n}\n\nexport default function ComponentNavBranchesMenuItem({ branchLike, ...props }: Props) {\n  const handleMouseEnter = () => {\n    props.onSelect(branchLike);\n  };\n\n  const displayName = getBranchLikeDisplayName(branchLike);\n  const shouldBeIndented =\n    (isShortLivingBranch(branchLike) && !branchLike.isOrphan) || isPullRequest(branchLike);\n\n  return (\n    <li key={getBranchLikeKey(branchLike)} onMouseEnter={handleMouseEnter}>\n      <Link\n        className={classNames('navbar-context-meta-branch-menu-item', {\n          active: props.selected\n        })}\n        to={getBranchLikeUrl(props.component.key, branchLike)}>\n        <Tooltip mouseEnterDelay={0.5} overlay={displayName} placement=\"left\">\n          <div className=\"navbar-context-meta-branch-menu-item-name text-ellipsis\">\n            <BranchIcon\n              branchLike={branchLike}\n              className={classNames('little-spacer-right', { 'big-spacer-left': shouldBeIndented })}\n            />\n            {displayName}\n            {isMainBranch(branchLike) && (\n              <div className=\"outline-badge spacer-left\">{translate('branches.main_branch')}</div>\n            )}\n          </div>\n        </Tooltip>\n        <div className=\"big-spacer-left note\">\n          <BranchStatus branchLike={branchLike} concise={true} />\n        </div>\n      </Link>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport ComponentNavBranchesMenuItem from './ComponentNavBranchesMenuItem';\nimport { BranchLike, Component } from '../../../types';\nimport {\n  sortBranchesAsTree,\n  isLongLivingBranch,\n  isShortLivingBranch,\n  isSameBranchLike,\n  getBranchLikeKey,\n  isPullRequest,\n  isBranch\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { getBranchLikeUrl } from '../../../../helpers/urls';\nimport SearchBox from '../../../../components/controls/SearchBox';\nimport Tooltip from '../../../../components/controls/Tooltip';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdmin?: boolean;\n  component: Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n}\n\ninterface State {\n  query: string;\n  selected: BranchLike | undefined;\n}\n\nexport default class ComponentNavBranchesMenu extends React.PureComponent<Props, State> {\n  private node?: HTMLElement | null;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { query: '', selected: undefined };\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.handleClickOutside);\n  }\n\n  getFilteredBranchLikes = () => {\n    const query = this.state.query.toLowerCase();\n    return sortBranchesAsTree(this.props.branchLikes).filter(branchLike => {\n      const matchBranchName = isBranch(branchLike) && branchLike.name.toLowerCase().includes(query);\n      const matchPullRequestTitleOrId =\n        isPullRequest(branchLike) &&\n        (branchLike.title.includes(query) || branchLike.key.includes(query));\n      return matchBranchName || matchPullRequestTitleOrId;\n    });\n  };\n\n  handleClickOutside = (event: Event) => {\n    if (!this.node || !this.node.contains(event.target as HTMLElement)) {\n      this.props.onClose();\n    }\n  };\n\n  handleSearchChange = (query: string) => this.setState({ query, selected: undefined });\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (event.keyCode) {\n      case 13:\n        event.preventDefault();\n        this.openSelected();\n        return;\n      case 38:\n        event.preventDefault();\n        this.selectPrevious();\n        return;\n      case 40:\n        event.preventDefault();\n        this.selectNext();\n        // keep this return to prevent fall-through in case more cases will be adder later\n        // eslint-disable-next-line no-useless-return\n        return;\n    }\n  };\n\n  openSelected = () => {\n    const selected = this.getSelected();\n    if (selected) {\n      this.context.router.push(this.getProjectBranchUrl(selected));\n    }\n  };\n\n  selectPrevious = () => {\n    const selected = this.getSelected();\n    const branchLikes = this.getFilteredBranchLikes();\n    const index = branchLikes.findIndex(b => isSameBranchLike(b, selected));\n    if (index > 0) {\n      this.setState({ selected: branchLikes[index - 1] });\n    }\n  };\n\n  selectNext = () => {\n    const selected = this.getSelected();\n    const branches = this.getFilteredBranchLikes();\n    const index = branches.findIndex(b => isSameBranchLike(b, selected));\n    if (index >= 0 && index < branches.length - 1) {\n      this.setState({ selected: branches[index + 1] });\n    }\n  };\n\n  handleSelect = (branchLike: BranchLike) => {\n    this.setState({ selected: branchLike });\n  };\n\n  getSelected = () => {\n    if (this.state.selected) {\n      return this.state.selected;\n    }\n\n    const branchLikes = this.getFilteredBranchLikes();\n    if (branchLikes.find(b => isSameBranchLike(b, this.props.currentBranchLike))) {\n      return this.props.currentBranchLike;\n    }\n\n    if (branchLikes.length > 0) {\n      return branchLikes[0];\n    }\n\n    return undefined;\n  };\n\n  getProjectBranchUrl = (branchLike: BranchLike) =>\n    getBranchLikeUrl(this.props.component.key, branchLike);\n\n  isOrphan = (branchLike: BranchLike) => {\n    return (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) && branchLike.isOrphan;\n  };\n\n  renderSearch = () => (\n    <div className=\"menu-search\">\n      <SearchBox\n        autoFocus={true}\n        onChange={this.handleSearchChange}\n        onKeyDown={this.handleKeyDown}\n        placeholder={translate('branches.search_for_branches')}\n        value={this.state.query}\n      />\n    </div>\n  );\n\n  renderBranchesList = () => {\n    const branchLikes = this.getFilteredBranchLikes();\n    const selected = this.getSelected();\n\n    if (branchLikes.length === 0) {\n      return <div className=\"menu-message note\">{translate('no_results')}</div>;\n    }\n\n    const items = branchLikes.map((branchLike, index) => {\n      const isOrphan = this.isOrphan(branchLike);\n      const previous = index > 0 ? branchLikes[index - 1] : undefined;\n      const isPreviousOrphan = previous !== undefined && this.isOrphan(previous);\n      const showDivider = isLongLivingBranch(branchLike) || (isOrphan && !isPreviousOrphan);\n      const showOrphanHeader = isOrphan && !isPreviousOrphan;\n      const showPullRequestHeader =\n        !showOrphanHeader && isPullRequest(branchLike) && !isPullRequest(previous);\n      const showShortLivingBranchHeader =\n        !showOrphanHeader && isShortLivingBranch(branchLike) && !isShortLivingBranch(previous);\n\n      return (\n        <React.Fragment key={getBranchLikeKey(branchLike)}>\n          {showDivider && <li className=\"divider\" />}\n          {showOrphanHeader && (\n            <li className=\"dropdown-header\">\n              {translate('branches.orphan_branches')}\n              <Tooltip overlay={translate('branches.orphan_branches.tooltip')}>\n                <i className=\"icon-help spacer-left\" />\n              </Tooltip>\n            </li>\n          )}\n          {showPullRequestHeader && (\n            <li className=\"dropdown-header navbar-context-meta-branch-menu-title\">\n              {translate('branches.pull_requests')}\n            </li>\n          )}\n          {showShortLivingBranchHeader && (\n            <li className=\"dropdown-header navbar-context-meta-branch-menu-title\">\n              {translate('branches.short_lived_branches')}\n            </li>\n          )}\n          <ComponentNavBranchesMenuItem\n            branchLike={branchLike}\n            component={this.props.component}\n            key={getBranchLikeKey(branchLike)}\n            onSelect={this.handleSelect}\n            selected={isSameBranchLike(branchLike, selected)}\n          />\n        </React.Fragment>\n      );\n    });\n\n    return <ul className=\"menu menu-vertically-limited\">{items}</ul>;\n  };\n\n  render() {\n    const { component } = this.props;\n    const showManageLink =\n      component.qualifier === 'TRK' &&\n      component.configuration &&\n      component.configuration.showSettings;\n\n    return (\n      <div className=\"dropdown-menu\" ref={node => (this.node = node)}>\n        {this.renderSearch()}\n        {this.renderBranchesList()}\n        {showManageLink && (\n          <div className=\"dropdown-bottom-hint text-right\">\n            <Link\n              className=\"text-muted\"\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branches.manage')}\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BubblePopup from '../../../../components/common/BubblePopup';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  popupPosition?: any;\n}\n\nexport default function SingleBranchHelperPopup(props: Props) {\n  return (\n    <BubblePopup position={props.popupPosition} customClass=\"bubble-popup-bottom\">\n      <div className=\"abs-width-400\">\n        <h6 className=\"spacer-bottom\">{translate('branches.learn_how_to_analyze')}</h6>\n        <p className=\"big-spacer-bottom markdown\">\n          {translate('branches.learn_how_to_analyze.text')}\n        </p>\n        <a\n          className=\"button\"\n          href=\"https://redirect.sonarsource.com/doc/branches.html\"\n          target=\"_blank\">\n          {translate('about_page.read_documentation')}\n        </a>\n      </div>\n    </BubblePopup>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BubblePopup from '../../../../components/common/BubblePopup';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  popupPosition?: any;\n}\n\nexport default function NoBranchSupportPopup(props: Props) {\n  return (\n    <BubblePopup position={props.popupPosition} customClass=\"bubble-popup-bottom\">\n      <div className=\"abs-width-400\">\n        <h6 className=\"spacer-bottom\">{translate('branches.no_support.header')}</h6>\n        <p className=\"big-spacer-bottom markdown\">{translate('branches.no_support.header.text')}</p>\n        <p>\n          <a href=\"https://redirect.sonarsource.com/editions/developer.html\" target=\"_blank\">\n            {translate('learn_more')}\n          </a>\n        </p>\n      </div>\n    </BubblePopup>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport ComponentNavBranchesMenu from './ComponentNavBranchesMenu';\nimport SingleBranchHelperPopup from './SingleBranchHelperPopup';\nimport NoBranchSupportPopup from './NoBranchSupportPopup';\nimport { BranchLike, Component } from '../../../types';\nimport * as theme from '../../../theme';\nimport BranchIcon from '../../../../components/icons-components/BranchIcon';\nimport {\n  isShortLivingBranch,\n  isSameBranchLike,\n  getBranchLikeDisplayName,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport HelpIcon from '../../../../components/icons-components/HelpIcon';\nimport BubblePopupHelper from '../../../../components/common/BubblePopupHelper';\nimport Tooltip from '../../../../components/controls/Tooltip';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  component: Component;\n  currentBranchLike: BranchLike;\n  location?: any;\n}\n\ninterface State {\n  dropdownOpen: boolean;\n  noBranchSupportPopupOpen: boolean;\n  singleBranchPopupOpen: boolean;\n}\n\nexport default class ComponentNavBranch extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    branchesEnabled: PropTypes.bool.isRequired,\n    onSonarCloud: PropTypes.bool\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      noBranchSupportPopupOpen: false,\n      singleBranchPopupOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.component !== this.props.component ||\n      !isSameBranchLike(nextProps.currentBranchLike, this.props.currentBranchLike) ||\n      nextProps.location !== this.props.location\n    ) {\n      this.setState({ dropdownOpen: false, singleBranchPopupOpen: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.blur();\n    this.setState(state => ({ dropdownOpen: !state.dropdownOpen }));\n  };\n\n  closeDropdown = () => {\n    if (this.mounted) {\n      this.setState({ dropdownOpen: false });\n    }\n  };\n\n  toggleSingleBranchPopup = (show?: boolean) => {\n    if (show !== undefined) {\n      this.setState({ singleBranchPopupOpen: show });\n    } else {\n      this.setState(state => ({ singleBranchPopupOpen: !state.singleBranchPopupOpen }));\n    }\n  };\n\n  toggleNoBranchSupportPopup = (show?: boolean) => {\n    if (show !== undefined) {\n      this.setState({ noBranchSupportPopupOpen: show });\n    } else {\n      this.setState(state => ({ noBranchSupportPopupOpen: !state.noBranchSupportPopupOpen }));\n    }\n  };\n\n  handleSingleBranchClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleSingleBranchPopup();\n  };\n\n  handleNoBranchSupportClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleNoBranchSupportPopup();\n  };\n\n  renderDropdown = () => {\n    const { configuration } = this.props.component;\n    return this.state.dropdownOpen ? (\n      <ComponentNavBranchesMenu\n        branchLikes={this.props.branchLikes}\n        canAdmin={configuration && configuration.showSettings}\n        component={this.props.component}\n        currentBranchLike={this.props.currentBranchLike}\n        onClose={this.closeDropdown}\n      />\n    ) : null;\n  };\n\n  renderMergeBranch = () => {\n    const { currentBranchLike } = this.props;\n    if (isShortLivingBranch(currentBranchLike)) {\n      return currentBranchLike.isOrphan ? (\n        <span className=\"note big-spacer-left text-ellipsis flex-shrink\">\n          {translate('branches.orphan_branch')}\n          <Tooltip overlay={translate('branches.orphan_branches.tooltip')}>\n            <i className=\"icon-help spacer-left\" />\n          </Tooltip>\n        </span>\n      ) : (\n        <span className=\"note big-spacer-left\">\n          {translate('from')} <strong>{currentBranchLike.mergeBranch}</strong>\n        </span>\n      );\n    } else if (isPullRequest(currentBranchLike)) {\n      return (\n        <span className=\"note big-spacer-left text-ellipsis flex-shrink\">\n          <FormattedMessage\n            defaultMessage={translate('branches.pull_request.for_merge_into_x_from_y')}\n            id=\"branches.pull_request.for_merge_into_x_from_y\"\n            values={{\n              base: <strong>{currentBranchLike.base}</strong>,\n              branch: <strong>{currentBranchLike.branch}</strong>\n            }}\n          />\n        </span>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  renderSingleBranchPopup = () => (\n    <div className=\"display-inline-block spacer-left\">\n      <a className=\"link-no-underline\" href=\"#\" onClick={this.handleSingleBranchClick}>\n        <HelpIcon fill={theme.blue} />\n      </a>\n      <BubblePopupHelper\n        isOpen={this.state.singleBranchPopupOpen}\n        popup={<SingleBranchHelperPopup />}\n        position=\"bottomleft\"\n        togglePopup={this.toggleSingleBranchPopup}\n      />\n    </div>\n  );\n\n  renderNoBranchSupportPopup = () => (\n    <div className=\"display-inline-block spacer-left\">\n      <a className=\"link-no-underline\" href=\"#\" onClick={this.handleNoBranchSupportClick}>\n        <HelpIcon fill={theme.gray80} />\n      </a>\n      <BubblePopupHelper\n        isOpen={this.state.noBranchSupportPopupOpen}\n        popup={<NoBranchSupportPopup />}\n        position=\"bottomleft\"\n        togglePopup={this.toggleNoBranchSupportPopup}\n      />\n    </div>\n  );\n\n  render() {\n    const { branchLikes, currentBranchLike } = this.props;\n\n    if (this.context.onSonarCloud && !this.context.branchesEnabled) {\n      return null;\n    }\n\n    const displayName = getBranchLikeDisplayName(currentBranchLike);\n\n    if (!this.context.branchesEnabled) {\n      return (\n        <div className=\"navbar-context-branches\">\n          <BranchIcon\n            branchLike={currentBranchLike}\n            className=\"little-spacer-right\"\n            fill={theme.gray80}\n          />\n          <span className=\"note\">{displayName}</span>\n          {this.renderNoBranchSupportPopup()}\n        </div>\n      );\n    }\n\n    if (branchLikes.length < 2) {\n      return (\n        <div className=\"navbar-context-branches\">\n          <BranchIcon branchLike={currentBranchLike} className=\"little-spacer-right\" />\n          <span className=\"note\">{displayName}</span>\n          {this.renderSingleBranchPopup()}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={classNames('navbar-context-branches', 'dropdown', {\n          open: this.state.dropdownOpen\n        })}>\n        <a className=\"link-base-color link-no-underline nowrap\" href=\"#\" onClick={this.handleClick}>\n          <BranchIcon branchLike={currentBranchLike} className=\"little-spacer-right\" />\n          <Tooltip mouseEnterDelay={1} overlay={displayName}>\n            <span className=\"text-limited text-top\">{displayName}</span>\n          </Tooltip>\n          <i className=\"icon-dropdown little-spacer-left\" />\n        </a>\n        {this.renderDropdown()}\n        {this.renderMergeBranch()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport ComponentNavBranch from './ComponentNavBranch';\nimport { Component, Organization, BranchLike, Breadcrumb } from '../../../types';\nimport QualifierIcon from '../../../../components/shared/QualifierIcon';\nimport { getOrganizationByKey, areThereCustomOrganizations } from '../../../../store/rootReducer';\nimport OrganizationAvatar from '../../../../components/common/OrganizationAvatar';\nimport OrganizationHelmet from '../../../../components/common/OrganizationHelmet';\nimport OrganizationLink from '../../../../components/ui/OrganizationLink';\nimport PrivateBadge from '../../../../components/common/PrivateBadge';\nimport { collapsePath, limitComponentName } from '../../../../helpers/path';\nimport { getProjectUrl } from '../../../../helpers/urls';\n\ninterface StateProps {\n  organization?: Organization;\n  shouldOrganizationBeDisplayed: boolean;\n}\n\ninterface OwnProps {\n  branchLikes: BranchLike[];\n  component: Component;\n  currentBranchLike: BranchLike | undefined;\n  location?: any;\n}\n\ninterface Props extends StateProps, OwnProps {}\n\nexport function ComponentNavHeader(props: Props) {\n  const { component, organization, shouldOrganizationBeDisplayed } = props;\n\n  return (\n    <header className=\"navbar-context-header\">\n      <OrganizationHelmet\n        organization={organization && shouldOrganizationBeDisplayed ? organization : undefined}\n        title={component.name}\n      />\n      {organization &&\n        shouldOrganizationBeDisplayed && (\n          <>\n            <OrganizationAvatar organization={organization} />\n            <OrganizationLink\n              className=\"navbar-context-header-breadcrumb-link link-base-color link-no-underline spacer-left\"\n              organization={organization}>\n              {organization.name}\n            </OrganizationLink>\n            <span className=\"slash-separator\" />\n          </>\n        )}\n      {renderBreadcrumbs(component.breadcrumbs)}\n      {component.visibility === 'private' && (\n        <PrivateBadge className=\"spacer-left\" qualifier={component.qualifier} />\n      )}\n      {props.currentBranchLike && (\n        <ComponentNavBranch\n          branchLikes={props.branchLikes}\n          component={component}\n          currentBranchLike={props.currentBranchLike}\n          // to close dropdown on any location change\n          location={props.location}\n        />\n      )}\n    </header>\n  );\n}\n\nfunction renderBreadcrumbs(breadcrumbs: Breadcrumb[]) {\n  const lastItem = breadcrumbs[breadcrumbs.length - 1];\n  return breadcrumbs.map((item, index) => {\n    const isPath = item.qualifier === 'DIR';\n    const itemName = isPath ? collapsePath(item.name, 15) : limitComponentName(item.name);\n\n    return (\n      <React.Fragment key={item.key}>\n        {index === 0 && <QualifierIcon className=\"spacer-right\" qualifier={lastItem.qualifier} />}\n        <Link\n          className=\"navbar-context-header-breadcrumb-link link-base-color link-no-underline\"\n          title={item.name}\n          to={getProjectUrl(item.key)}>\n          {itemName}\n        </Link>\n        {index < breadcrumbs.length - 1 && <span className=\"slash-separator\" />}\n      </React.Fragment>\n    );\n  });\n}\n\nconst mapStateToProps = (state: any, ownProps: OwnProps): StateProps => ({\n  organization:\n    ownProps.component.organization && getOrganizationByKey(state, ownProps.component.organization),\n  shouldOrganizationBeDisplayed: areThereCustomOrganizations(state)\n});\n\nexport default connect(mapStateToProps)(ComponentNavHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BranchLike,\n  Component,\n  CurrentUser,\n  isLoggedIn,\n  HomePageType,\n  HomePage\n} from '../../../types';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport DateTimeFormatter from '../../../../components/intl/DateTimeFormatter';\nimport Favorite from '../../../../components/controls/Favorite';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport {\n  isShortLivingBranch,\n  isLongLivingBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { getCurrentUser } from '../../../../store/rootReducer';\n\ninterface StateProps {\n  currentUser: CurrentUser;\n}\n\ninterface Props extends StateProps {\n  branchLike?: BranchLike;\n  component: Component;\n}\n\nexport function ComponentNavMeta({ branchLike, component, currentUser }: Props) {\n  const mainBranch = !branchLike || isMainBranch(branchLike);\n  const longBranch = isLongLivingBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && (mainBranch || longBranch);\n\n  return (\n    <div className=\"navbar-context-meta\">\n      {component.analysisDate && (\n        <div className=\"spacer-left text-ellipsis\">\n          <DateTimeFormatter date={component.analysisDate} />\n        </div>\n      )}\n      {displayVersion && (\n        <Tooltip mouseEnterDelay={0.5} overlay={`${translate('version')} ${component.version}`}>\n          <div className=\"spacer-left text-limited\">\n            {translate('version')} {component.version}\n          </div>\n        </Tooltip>\n      )}\n      {isLoggedIn(currentUser) && (\n        <div className=\"navbar-context-meta-secondary\">\n          {mainBranch && (\n            <Favorite\n              component={component.key}\n              favorite={Boolean(component.isFavorite)}\n              qualifier={component.qualifier}\n            />\n          )}\n          {(mainBranch || longBranch) &&\n            currentPage !== undefined && (\n              <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n            )}\n        </div>\n      )}\n      {(isShortLivingBranch(branchLike) || isPullRequest(branchLike)) && (\n        <div className=\"navbar-context-meta-secondary\">\n          {isPullRequest(branchLike) &&\n            branchLike.url !== undefined && (\n              <a className=\"big-spacer-right\" href={branchLike.url} rel=\"nofollow\" target=\"_blank\">\n                {translate('branches.see_the_pr')}\n                <i className=\"icon-detach little-spacer-left\" />\n              </a>\n            )}\n          <BranchStatus branchLike={branchLike} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction getCurrentPage(component: Component, branchLike: BranchLike | undefined) {\n  let currentPage: HomePage | undefined;\n  if (component.qualifier === 'VW' || component.qualifier === 'SVW') {\n    currentPage = { type: HomePageType.Portfolio, component: component.key };\n  } else if (component.qualifier === 'APP') {\n    currentPage = { type: HomePageType.Application, component: component.key };\n  } else if (component.qualifier === 'TRK') {\n    // when home page is set to the default branch of a project, its name is returned as `undefined`\n    const branch = isLongLivingBranch(branchLike) ? branchLike.name : undefined;\n    currentPage = { type: HomePageType.Project, component: component.key, branch };\n  }\n  return currentPage;\n}\n\nconst mapStateToProps = (state: any): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(ComponentNavMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport { BranchLike, Component, Extension } from '../../../types';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport NavBarTabs from '../../../../components/nav/NavBarTabs';\nimport {\n  isShortLivingBranch,\n  isPullRequest,\n  isMainBranch,\n  getBranchLikeQuery\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  component: Component;\n  location?: any;\n}\n\nexport default class ComponentNavMenu extends React.PureComponent<Props> {\n  static contextTypes = {\n    branchesEnabled: PropTypes.bool.isRequired\n  };\n\n  isProject() {\n    return this.props.component.qualifier === 'TRK';\n  }\n\n  isDeveloper() {\n    return this.props.component.qualifier === 'DEV';\n  }\n\n  isPortfolio() {\n    const { qualifier } = this.props.component;\n    return qualifier === 'VW' || qualifier === 'SVW';\n  }\n\n  isApplication() {\n    return this.props.component.qualifier === 'APP';\n  }\n\n  getConfiguration() {\n    return this.props.component.configuration || {};\n  }\n\n  getQuery = () => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink() {\n    const { branchLike } = this.props;\n\n    if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const pathname = this.isPortfolio() ? '/portfolio' : '/dashboard';\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname, query: this.getQuery() }}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCodeLink() {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link to={{ pathname: '/code', query: this.getQuery() }} activeClassName=\"active\">\n          {this.isPortfolio() || this.isApplication()\n            ? translate('view_projects.page')\n            : translate('code.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderActivityLink() {\n    const { branchLike } = this.props;\n\n    if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          to={{ pathname: '/project/activity', query: this.getQuery() }}\n          activeClassName=\"active\">\n          {translate('project_activity.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderIssuesLink() {\n    const { location = { pathname: '' } } = this.props;\n    const isIssuesActive = location.pathname.startsWith('project/issues');\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          className={classNames({ active: isIssuesActive })}\n          to={{ pathname: '/project/issues', query: { ...this.getQuery(), resolved: 'false' } }}>\n          {translate('issues.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderComponentMeasuresLink() {\n    const { branchLike } = this.props;\n\n    if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          to={{ pathname: '/component_measures', query: this.getQuery() }}\n          activeClassName=\"active\">\n          {translate('layout.measures')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderAdministration() {\n    const { branchLike } = this.props;\n\n    if (!this.getConfiguration().showSettings || (branchLike && !isMainBranch(branchLike))) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks();\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown data-test=\"extensions\">\n        {({ onToggleClick, open }) => (\n          <li className={classNames('dropdown', { open })}>\n            <a\n              className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n              href=\"#\"\n              id=\"component-navigation-admin\"\n              onClick={onToggleClick}>\n              {translate('layout.settings')}\n              <i className=\"icon-dropdown little-spacer-left\" />\n            </a>\n            <ul className=\"dropdown-menu\">{adminLinks}</ul>\n          </li>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderAdministrationLinks() {\n    return [\n      this.renderSettingsLink(),\n      this.renderBranchesLink(),\n      this.renderProfilesLink(),\n      this.renderQualityGateLink(),\n      this.renderCustomMeasuresLink(),\n      this.renderLinksLink(),\n      this.renderPermissionsLink(),\n      this.renderBackgroundTasksLink(),\n      this.renderUpdateKeyLink(),\n      this.renderWebhooksLink(),\n      ...this.renderAdminExtensions(),\n      this.renderDeletionLink()\n    ];\n  }\n\n  renderSettingsLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link\n          to={{ pathname: '/project/settings', query: this.getQuery() }}\n          activeClassName=\"active\">\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBranchesLink() {\n    if (\n      !this.context.branchesEnabled ||\n      !this.isProject() ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link\n          to={{ pathname: '/project/branches', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('project_branches.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderProfilesLink() {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link\n          to={{ pathname: '/project/quality_profiles', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderQualityGateLink() {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link\n          to={{ pathname: '/project/quality_gate', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCustomMeasuresLink() {\n    if (!this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link\n          to={{ pathname: '/custom_measures', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderLinksLink() {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link\n          to={{ pathname: '/project/links', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderPermissionsLink() {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link\n          to={{ pathname: '/project_roles', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBackgroundTasksLink() {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link\n          to={{ pathname: '/project/background_tasks', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderUpdateKeyLink() {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link\n          to={{ pathname: '/project/key', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderWebhooksLink() {\n    if (!this.getConfiguration().showSettings || !this.isProject()) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link\n          to={{ pathname: '/project/webhooks', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderDeletionLink() {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (qualifier !== 'TRK' && qualifier !== 'VW' && qualifier !== 'APP') {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link\n          to={{ pathname: '/project/deletion', query: { id: this.props.component.key } }}\n          activeClassName=\"active\">\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderExtension = ({ key, name }: Extension, isAdmin: boolean) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    return (\n      <li key={key}>\n        <Link to={{ pathname, query: { id: this.props.component.key } }} activeClassName=\"active\">\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions() {\n    if (this.props.branchLike && !isMainBranch(this.props.branchLike)) {\n      return [];\n    }\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true));\n  }\n\n  renderExtensions() {\n    const extensions = this.props.component.extensions || [];\n    if (!extensions.length || (this.props.branchLike && !isMainBranch(this.props.branchLike))) {\n      return null;\n    }\n\n    return (\n      <Dropdown data-test=\"admin-extensions\">\n        {({ onToggleClick, open }) => (\n          <li className={classNames('dropdown', { open })}>\n            <a\n              className={classNames('dropdown-toggle', { active: open })}\n              href=\"#\"\n              id=\"component-navigation-more\"\n              onClick={onToggleClick}>\n              {translate('more')}\n              <i className=\"icon-dropdown little-spacer-left\" />\n            </a>\n            <ul className=\"dropdown-menu\">{extensions.map(e => this.renderExtension(e, false))}</ul>\n          </li>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    return (\n      <NavBarTabs>\n        {this.renderDashboardLink()}\n        {this.renderIssuesLink()}\n        {this.renderComponentMeasuresLink()}\n        {this.renderCodeLink()}\n        {this.renderActivityLink()}\n        {this.renderAdministration()}\n        {this.renderExtensions()}\n      </NavBarTabs>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { FormattedMessage } from 'react-intl';\nimport * as PropTypes from 'prop-types';\nimport NavBarNotif from '../../../../components/nav/NavBarNotif';\nimport PendingIcon from '../../../../components/icons-components/PendingIcon';\nimport { Component } from '../../../types';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport { hasMessage, translate } from '../../../../helpers/l10n';\nimport { Task } from '../../../../api/ce';\n\ninterface Props {\n  component: Component;\n  currentTask?: Task;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  static contextTypes = {\n    canAdmin: PropTypes.bool.isRequired\n  };\n\n  renderMessage(messageKey: string, status?: string) {\n    const { component } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n    const bgTaskUrl = getComponentBackgroundTaskUrl(component.key, status);\n\n    if (canSeeBackgroundTasks) {\n      return (\n        <FormattedMessage\n          defaultMessage={translate(messageKey, 'admin')}\n          id={messageKey + '.admin'}\n          values={{\n            url: <Link to={bgTaskUrl}>{translate('background_tasks.page')}</Link>\n          }}\n        />\n      );\n    }\n\n    return <span>{translate(messageKey)}</span>;\n  }\n\n  render() {\n    const { currentTask, isInProgress, isPending } = this.props;\n\n    if (isInProgress) {\n      return (\n        <NavBarNotif className=\"alert alert-info\">\n          <i className=\"spinner spacer-right text-bottom\" />\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </NavBarNotif>\n      );\n    } else if (isPending) {\n      return (\n        <NavBarNotif className=\"alert alert-info\">\n          <PendingIcon className=\"spacer-right\" />\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </NavBarNotif>\n      );\n    } else if (currentTask && currentTask.status === STATUSES.FAILED) {\n      if (\n        currentTask.errorType &&\n        currentTask.errorType.includes('LICENSING') &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return (\n          <NavBarNotif className=\"alert alert-danger\">\n            <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n            {this.context.canAdmin ? (\n              <Link to=\"/admin/extension/license/app\">\n                {translate('license.component_navigation.button', currentTask.errorType)}.\n              </Link>\n            ) : (\n              translate('please_contact_administrator')\n            )}\n          </NavBarNotif>\n        );\n      }\n\n      return (\n        <NavBarNotif className=\"alert alert-danger\">\n          {this.renderMessage('component_navigation.status.failed')}\n        </NavBarNotif>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ComponentNavHeader from './ComponentNavHeader';\nimport ComponentNavMeta from './ComponentNavMeta';\nimport ComponentNavMenu from './ComponentNavMenu';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport RecentHistory from '../../RecentHistory';\nimport * as theme from '../../../theme';\nimport { BranchLike, Component } from '../../../types';\nimport ContextNavBar from '../../../../components/nav/ContextNavBar';\nimport { Task } from '../../../../api/ce';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport './ComponentNav.css';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: Component;\n  currentTask?: Task;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  location: {};\n}\n\nexport default class ComponentNav extends React.PureComponent<Props> {\n  mounted = false;\n\n  componentDidMount() {\n    this.populateRecentHistory();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.component.key !== prevProps.component.key) {\n      this.populateRecentHistory();\n    }\n  }\n\n  populateRecentHistory = () => {\n    const { breadcrumbs } = this.props.component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (['TRK', 'VW', 'APP', 'DEV'].indexOf(qualifier) !== -1) {\n      RecentHistory.add(\n        this.props.component.key,\n        this.props.component.name,\n        qualifier.toLowerCase(),\n        this.props.component.organization\n      );\n    }\n  };\n\n  render() {\n    const { currentTask, isInProgress, isPending } = this.props;\n    let notifComponent;\n    if (isInProgress || isPending || (currentTask && currentTask.status === STATUSES.FAILED)) {\n      notifComponent = (\n        <ComponentNavBgTaskNotif\n          component={this.props.component}\n          currentTask={currentTask}\n          isInProgress={isInProgress}\n          isPending={isPending}\n        />\n      );\n    }\n    return (\n      <ContextNavBar\n        height={notifComponent ? theme.contextNavHeightRaw + 20 : theme.contextNavHeightRaw}\n        id=\"context-navigation\"\n        notif={notifComponent}>\n        <div className=\"navbar-context-justified\">\n          <ComponentNavHeader\n            branchLikes={this.props.branchLikes}\n            component={this.props.component}\n            currentBranchLike={this.props.currentBranchLike}\n            // to close dropdown on any location change\n            location={this.props.location}\n          />\n          <ComponentNavMeta\n            branchLike={this.props.currentBranchLike}\n            component={this.props.component}\n          />\n        </div>\n        <ComponentNavMenu\n          branchLike={this.props.currentBranchLike}\n          component={this.props.component}\n          // to re-render selected menu item\n          location={this.props.location}\n        />\n      </ContextNavBar>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport ComponentNav from './nav/component/ComponentNav';\nimport { Component, BranchLike } from '../types';\nimport handleRequiredAuthorization from '../utils/handleRequiredAuthorization';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { Task, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { fetchOrganizations } from '../../store/rootActions';\nimport { STATUSES } from '../../apps/background-tasks/constants';\nimport { isPullRequest, isBranch } from '../../helpers/branches';\n\ninterface Props {\n  children: any;\n  fetchOrganizations: (organizations: string[]) => void;\n  location: {\n    query: { branch?: string; id: string; pullRequest?: string };\n  };\n}\n\ninterface State {\n  branchLikes: BranchLike[];\n  loading: boolean;\n  component?: Component;\n  currentTask?: Task;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    organizationsEnabled: PropTypes.bool\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { branchLikes: [], loading: true };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent(this.props);\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.location.query.id !== this.props.location.query.id ||\n      nextProps.location.query.branch !== this.props.location.query.branch ||\n      nextProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  addQualifier = (component: Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent(props: Props) {\n    const { branch, id: key, pullRequest } = props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (error: any) => {\n      if (this.mounted) {\n        if (error.response && error.response.status === 403) {\n          handleRequiredAuthorization();\n        } else {\n          this.setState({ loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ componentKey: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ]).then(([nav, data]) => {\n      const component = this.addQualifier({ ...nav, ...data });\n\n      if (this.context.organizationsEnabled) {\n        this.props.fetchOrganizations([component.organization]);\n      }\n\n      this.fetchBranches(component).then(branchLikes => {\n        if (this.mounted) {\n          this.setState({ loading: false, branchLikes, component });\n        }\n      }, onError);\n\n      this.fetchStatus(component);\n    }, onError);\n  }\n\n  fetchBranches = (component: Component): Promise<BranchLike[]> => {\n    const project = component.breadcrumbs.find(({ qualifier }) => qualifier === 'TRK');\n    return project\n      ? Promise.all([getBranches(project.key), getPullRequests(project.key)]).then(\n          ([branches, pullRequests]) => [...branches, ...pullRequests]\n        )\n      : Promise.resolve([]);\n  };\n\n  fetchStatus = (component: Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          this.setState({\n            currentTask: current,\n            isInProgress: queue.some(task => task.status === STATUSES.IN_PROGRESS),\n            isPending: queue.some(task => task.status === STATUSES.PENDING)\n          });\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleComponentChange = (changes: {}) => {\n    if (this.mounted) {\n      this.setState(state => ({ component: { ...state.component, ...changes } }));\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        branchLikes => {\n          if (this.mounted) {\n            this.setState({ branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { query } = this.props.location;\n    const { branchLikes, component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    const branchLike = query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n\n    return (\n      <div>\n        {component &&\n          !['FIL', 'UTS'].includes(component.qualifier) && (\n            <ComponentNav\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={branchLike}\n              currentTask={this.state.currentTask}\n              isInProgress={this.state.isInProgress}\n              isPending={this.state.isPending}\n              location={this.props.location}\n            />\n          )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          React.cloneElement(this.props.children, {\n            branchLike,\n            branchLikes,\n            component,\n            isInProgress: this.state.isInProgress,\n            isPending: this.state.isPending,\n            onBranchesChange: this.handleBranchesChange,\n            onComponentChange: this.handleComponentChange\n          })\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganizations };\n\nexport default connect<any, any, any>(null, mapDispatchToProps)(ComponentContainer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface BubblePopupPosition {\n  top?: number;\n  left?: number;\n  right?: number;\n}\n\ninterface Props {\n  customClass?: string;\n  children: React.ReactNode;\n  position: BubblePopupPosition;\n}\n\nexport default function BubblePopup(props: Props) {\n  const popupClass = classNames('bubble-popup', props.customClass);\n  const popupStyle = { ...props.position };\n\n  return (\n    <div className={popupClass} style={popupStyle}>\n      {props.children}\n      <div className=\"bubble-popup-arrow\" />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  isOpen: boolean;\n  offset?: { vertical: number; horizontal: number };\n  popup: JSX.Element;\n  position: 'bottomleft' | 'bottomright';\n  togglePopup: (show: boolean) => void;\n}\n\ninterface State {\n  position: { top: number; left?: number; right?: number };\n}\n\nexport default class BubblePopupHelper extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  popupContainer?: HTMLElement | null;\n  state: State = {\n    position: { top: 0, right: 0 }\n  };\n\n  componentDidMount() {\n    this.setState({ position: this.getPosition(this.props) });\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (!this.props.isOpen && nextProps.isOpen) {\n      window.addEventListener('keydown', this.handleKey, false);\n      window.addEventListener('click', this.handleOutsideClick, false);\n    } else if (this.props.isOpen && !nextProps.isOpen) {\n      window.removeEventListener('keydown', this.handleKey);\n      window.removeEventListener('click', this.handleOutsideClick);\n    }\n  }\n\n  handleKey = (event: KeyboardEvent) => {\n    // Escape key\n    if (event.keyCode === 27) {\n      this.props.togglePopup(false);\n    }\n  };\n\n  handleOutsideClick = (event: MouseEvent) => {\n    if (!this.popupContainer || !this.popupContainer.contains(event.target as Node)) {\n      this.props.togglePopup(false);\n    }\n  };\n\n  handleClick(event: React.SyntheticEvent<HTMLElement>) {\n    event.stopPropagation();\n  }\n\n  getPosition(props: Props) {\n    if (this.container) {\n      const containerPos = this.container.getBoundingClientRect();\n      const { position } = props;\n      const offset = props.offset || { vertical: 0, horizontal: 0 };\n      if (position === 'bottomleft') {\n        return { top: containerPos.height + offset.vertical, left: offset.horizontal };\n      } else {\n        // if (position === 'bottomright')\n        return { top: containerPos.height + offset.vertical, right: offset.horizontal };\n      }\n    } else {\n      return { top: 0, right: 0 };\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={classNames(this.props.className, 'bubble-popup-helper')}\n        onClick={this.handleClick}\n        ref={container => (this.container = container)}\n        role=\"tooltip\"\n        tabIndex={0}>\n        {this.props.children}\n        {this.props.isOpen && (\n          <div ref={popupContainer => (this.popupContainer = popupContainer)}>\n            {React.cloneElement(this.props.popup, {\n              popupPosition: this.state.position\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}