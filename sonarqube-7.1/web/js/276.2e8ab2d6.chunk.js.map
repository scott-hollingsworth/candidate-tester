{"version":3,"sources":["webpack:///./src/main/js/helpers/csv.ts","webpack:///./src/main/js/apps/projectQualityProfiles/Header.tsx","webpack:///./src/main/js/apps/projectQualityProfiles/ProfileRow.tsx","webpack:///./src/main/js/apps/projectQualityProfiles/Table.tsx","webpack:///./src/main/js/apps/projectQualityProfiles/App.tsx","webpack:///./src/main/js/api/quality-profiles.ts"],"names":["csvEscape","value","replace","__webpack_require__","d","__webpack_exports__","Header_Header","index_js_exposed","className","Object","l10n","_super","ProfileRow","_this","apply","this","arguments","mounted","state","loading","stopLoading","setState","handleChange","option","props","profile","key","onChangeProfile","then","renderProfileName","profileOption","isDefault","label","ProfileRow_extends","prototype","componentDidMount","componentWillUnmount","renderProfileSelect","_a","options","possibleProfiles","map","name","Select","clearable","disabled","onChange","optionRenderer","style","width","valueRenderer","render","data-key","language","languageName","Table_Table","profilesByLanguage","lodash_js_exposed","allProfiles","profileRows","profiles","projectQualityProfiles_ProfileRow","App_QualityProfiles","QualityProfiles","handleChangeProfile","oldKey","newKey","component","newProfile","find","quality_profiles","nextProfiles","filter","concat","addGlobalSuccessMessage","App_extends","checkPermissions","fetchProfiles","handleRequiredAuthorization","configuration","showQualityProfiles","organization","Promise","all","r","project","Helmet_default","a","title","searchQualityProfiles","parameters","_helpers_request__WEBPACK_IMPORTED_MODULE_2__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_3__","getQualityProfile","data","createQualityProfile","setMethod","setData","submit","restoreQualityProfile","getProfileProjects","getProfileInheritance","profileKey","setDefaultProfile","renameProfile","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentKey","getImporters","importers","getExporters","exporters","getProfileChangelog","compareProfiles","leftKey","rightKey","associateProject","projectKey","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","params","lodash__WEBPACK_IMPORTED_MODULE_0__","_helpers_csv__WEBPACK_IMPORTED_MODULE_1__","join","__assign","deactivateRule"],"mappings":"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","file":"js/276.2e8ab2d6.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function csvEscape(value: string): string {\n  const escaped = value.replace(/\"/g, '\\\\\"');\n  return `\"${escaped}\"`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\n\nexport default function Header() {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('project_quality_profiles.page')}</h1>\n      <div className=\"page-description\">\n        {translate('project_quality_profiles.page.description')}\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Profile } from '../../api/quality-profiles';\nimport Select from '../../components/controls/Select';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  onChangeProfile: (oldProfile: string, newProfile: string) => Promise<void>;\n  possibleProfiles: Profile[];\n  profile: Profile;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class ProfileRow extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleChange = (option: { value: string }) => {\n    if (this.props.profile.key !== option.value) {\n      this.setState({ loading: true });\n      this.props\n        .onChangeProfile(this.props.profile.key, option.value)\n        .then(this.stopLoading, this.stopLoading);\n    }\n  };\n\n  renderProfileName = (profileOption: { isDefault: boolean; label: string }) => {\n    if (profileOption.isDefault) {\n      return (\n        <span>\n          <strong>{translate('default')}</strong>\n          {': '}\n          {profileOption.label}\n        </span>\n      );\n    }\n\n    return <span>{profileOption.label}</span>;\n  };\n\n  renderProfileSelect() {\n    const { profile, possibleProfiles } = this.props;\n\n    const options = possibleProfiles.map(profile => ({\n      value: profile.key,\n      label: profile.name,\n      isDefault: profile.isDefault\n    }));\n\n    return (\n      <Select\n        clearable={false}\n        disabled={this.state.loading}\n        onChange={this.handleChange}\n        optionRenderer={this.renderProfileName}\n        options={options}\n        style={{ width: 300 }}\n        valueRenderer={this.renderProfileName}\n        value={profile.key}\n      />\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n\n    return (\n      <tr data-key={profile.language}>\n        <td className=\"thin nowrap\">{profile.languageName}</td>\n        <td className=\"thin nowrap\">{this.renderProfileSelect()}</td>\n        <td>{this.state.loading && <i className=\"spinner\" />}</td>\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { groupBy, orderBy } from 'lodash';\nimport ProfileRow from './ProfileRow';\nimport { Profile } from '../../api/quality-profiles';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  allProfiles: Profile[];\n  profiles: Profile[];\n  onChangeProfile: (oldProfile: string, newProfile: string) => Promise<void>;\n}\n\nexport default function Table(props: Props) {\n  const profilesByLanguage = groupBy(props.allProfiles, 'language');\n  const orderedProfiles = orderBy(props.profiles, 'languageName');\n\n  // set key to language to avoid destroying of component\n  const profileRows = orderedProfiles.map(profile => (\n    <ProfileRow\n      key={profile.language}\n      profile={profile}\n      possibleProfiles={profilesByLanguage[profile.language]}\n      onChangeProfile={props.onChangeProfile}\n    />\n  ));\n\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra\">\n        <thead>\n          <tr>\n            <th className=\"thin nowrap\">{translate('language')}</th>\n            <th className=\"thin nowrap\">{translate('quality_profile')}</th>\n            {/* keep one empty cell for the spinner */}\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>{profileRows}</tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\nimport Table from './Table';\nimport {\n  associateProject,\n  dissociateProject,\n  searchQualityProfiles,\n  Profile\n} from '../../api/quality-profiles';\nimport { Component } from '../../app/types';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport handleRequiredAuthorization from '../../app/utils/handleRequiredAuthorization';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n\ninterface Props {\n  component: Component;\n}\n\ninterface State {\n  allProfiles?: Profile[];\n  loading: boolean;\n  profiles?: Profile[];\n}\n\nexport default class QualityProfiles extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.checkPermissions()) {\n      this.fetchProfiles();\n    } else {\n      handleRequiredAuthorization();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkPermissions() {\n    const { configuration } = this.props.component;\n    const hasPermission = configuration && configuration.showQualityProfiles;\n    return !!hasPermission;\n  }\n\n  fetchProfiles() {\n    const { key, organization } = this.props.component;\n    Promise.all([\n      searchQualityProfiles({ organization }).then(r => r.profiles),\n      searchQualityProfiles({ organization, project: key }).then(r => r.profiles)\n    ]).then(\n      ([allProfiles, profiles]) => {\n        if (this.mounted) {\n          this.setState({ loading: false, allProfiles, profiles });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeProfile = (oldKey: string, newKey: string) => {\n    const { component } = this.props;\n    const { allProfiles, profiles } = this.state;\n    const newProfile = allProfiles && allProfiles.find(profile => profile.key === newKey);\n    const request =\n      newProfile && newProfile.isDefault\n        ? dissociateProject(oldKey, component.key)\n        : associateProject(newKey, component.key);\n\n    return request.then(() => {\n      if (this.mounted && profiles && newProfile) {\n        // remove old profile, add new one\n        const nextProfiles = [...profiles.filter(profile => profile.key !== oldKey), newProfile];\n        this.setState({ profiles: nextProfiles });\n\n        addGlobalSuccessMessage(\n          translateWithParameters(\n            'project_quality_profile.successfully_updated',\n            newProfile.languageName\n          )\n        );\n      }\n    });\n  };\n\n  render() {\n    if (!this.checkPermissions()) {\n      return null;\n    }\n\n    const { allProfiles, loading, profiles } = this.state;\n\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={translate('project_quality_profiles.page')} />\n\n        <Header />\n\n        {loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          allProfiles &&\n          profiles && (\n            <Table\n              allProfiles={allProfiles}\n              profiles={profiles}\n              onChangeProfile={this.handleChangeProfile}\n            />\n          )\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from '../helpers/csv';\nimport {\n  request,\n  checkStatus,\n  parseJSON,\n  getJSON,\n  post,\n  postJSON,\n  RequestData\n} from '../helpers/request';\nimport { Paging } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  organization: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  organization?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile(data: {\n  compareToSonarWay?: boolean;\n  profile: string;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', data);\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/create')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/restore')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport interface ProfileProject {\n  id: number;\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance(profileKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/inheritance', { profileKey }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/set_default', { profileKey });\n}\n\nexport function renameProfile(key: string, name: string): Promise<void> {\n  return post('/api/qualityprofiles/rename', { key, name });\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName });\n}\n\nexport function deleteProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/delete', { profileKey });\n}\n\nexport function changeProfileParent(profileKey: string, parentKey: string): Promise<void> {\n  return post('/api/qualityprofiles/change_parent', { profileKey, parentKey });\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(data: RequestData): Promise<any> {\n  return getJSON('/api/qualityprofiles/changelog', data);\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/add_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport function dissociateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/remove_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\nexport interface SearchUsersResponse {\n  users: Array<{\n    avatar?: string;\n    login: string;\n    name: string;\n    selected?: boolean;\n  }>;\n  paging: Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  /* eslint-disable camelcase */\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  organization: string | undefined;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n  /* eslint-enable camelcase */\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  organization: string | undefined;\n  params?: { [key: string]: string };\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: {\n  key: string;\n  organization: string | undefined;\n  rule: string;\n}) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}