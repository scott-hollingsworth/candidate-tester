{"version":3,"sources":["webpack:///./src/main/js/api/rules.ts","webpack:///./src/main/js/apps/quality-profiles/home/CreateProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/home/RestoreProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/home/PageHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionDeprecated.tsx","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionStagnant.tsx","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionRules.tsx","webpack:///./src/main/js/apps/quality-profiles/home/Evolution.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesListRow.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesListHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesList.tsx","webpack:///./src/main/js/apps/quality-profiles/home/HomeContainer.tsx"],"names":["_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","getRulesApp","data","Object","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","searchRules","takeFacet","response","property","facet","facets","find","values","getRuleDetails","parameters","getRuleTags","then","r","tags","createRule","rule","error","status","Promise","reject","deleteRule","updateRule","_super","CreateProfileForm","_this","apply","this","arguments","mounted","state","importers","loading","name","preloading","handleNameChange","event","setState","currentTarget","value","handleLanguageChange","option","language","handleFormSubmit","preventDefault","FormData","props","organization","append","quality_profiles","onCreate","profile","onRequestFail","CreateProfileForm_extends","prototype","componentDidMount","fetchImporters","componentWillUnmount","render","header","l10n","languages","lodash_js_exposed","selectedLanguage","key","filter","importer","includes","index_js_exposed","Modal","contentLabel","onRequestClose","onClose","id","onSubmit","className","htmlFor","autoFocus","maxLength","onChange","required","size","type","Select","clearable","options","map","label","data-key","buttons","disabled","onClick","RestoreProfileForm","ruleFailures","ruleSuccesses","onRestore","RestoreProfileForm_extends","_a","PageHeader","createFormOpen","restoreFormOpen","handleCreateClick","handleCreate","updateProfiles","context","router","push","utils","closeCreateForm","handleRestoreClick","closeRestoreForm","PageHeader_extends","actions","create","home_RestoreProfileForm","home_CreateProfileForm","contextTypes","prop_types","EvolutionDeprecated_EvolutionDeprecated","profilesWithDeprecations","profiles","activeDeprecatedRuleCount","length","sortedProfiles","p","ProfileLink","languageName","es","to","urls","qprofile","EvolutionStagnant_EvolutionStagnant","outdated","rulesUpdatedAt","DateFormatter","date","long","formattedDate","EvolutionRules","call","startDate","Date","setFullYear","getFullYear","periodStartDate","dates","EvolutionRules_extends","loadLatestRules","asc","available_since","f","undefined","ps","s","rules","latestRules","actives","activations","EvolutionRules_assign","EvolutionRules_parseRules","latestRulesTotal","total","newRulesUrl","rule_key","langName","measures","Evolution_Evolution","home_EvolutionRules","ProfilesListRow","ProfilesListRow_extends","renderName","offset","depth","style","paddingLeft","isBuiltIn","BuiltInQualityProfileBadge","renderProjects","isDefault","projectCount","renderRules","activeRulesUrl","activation","deprecatedRulesUrl","statuses","Tooltip","overlay","activeRuleCount","renderUpdateDate","ProfileDate","userUpdatedAt","renderUsageDate","lastUsed","data-name","ProfileActions","fromList","ProfilesListHeader_ProfilesListHeader","currentFilter","currentLanguage","l","Dropdown","onToggleClick","open","classnames","href","data-language","ProfilesList","renderLanguage","languageKey","renderHeader","renderProfiles","ProfilesList_extends","home_ProfilesListRow","profilesCount","location","query","profilesIndex","profilesToShow","languagesToShow","keys","HomeContainer_HomeContainer","home_PageHeader","HomeContainer_assign","home_ProfilesList"],"mappings":"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","file":"js/285.6c942cfd.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { post, getJSON, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Rule, RuleDetails, RuleActivation } from '../app/types';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: { [rule: string]: RuleActivation[] };\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: RuleActivation[]; rule: RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    error => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (error && error.response && error.response.status === 409) {\n        return Promise.reject(error.response);\n      } else {\n        return throwGlobalError(error);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport { getImporters, createQualityProfile } from '../../../api/quality-profiles';\nimport Modal from '../../../components/controls/Modal';\nimport Select from '../../../components/controls/Select';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  languages: Array<{ key: string; name: string }>;\n  onClose: () => void;\n  onCreate: Function;\n  onRequestFail: (reasong: any) => void;\n  organization: string | null;\n}\n\ninterface State {\n  importers: Array<{ key: string; languages: Array<string>; name: string }>;\n  language?: string;\n  loading: boolean;\n  name: string;\n  preloading: boolean;\n}\n\nexport default class CreateProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { importers: [], loading: false, name: '', preloading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchImporters();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchImporters() {\n    getImporters().then(\n      importers => {\n        if (this.mounted) {\n          this.setState({ importers, preloading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ preloading: false });\n        }\n      }\n    );\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleLanguageChange = (option: { value: string }) => {\n    this.setState({ language: option.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState({ loading: true });\n\n    const data = new FormData(event.currentTarget);\n    if (this.props.organization) {\n      data.append('organization', this.props.organization);\n    }\n\n    createQualityProfile(data).then(\n      (response: any) => this.props.onCreate(response.profile),\n      (error: any) => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n        this.props.onRequestFail(error);\n      }\n    );\n  };\n\n  render() {\n    const header = translate('quality_profiles.new_profile');\n\n    const languages = sortBy(this.props.languages, 'name');\n    const selectedLanguage = this.state.language || languages[0].key;\n    const importers = this.state.importers.filter(importer =>\n      importer.languages.includes(selectedLanguage)\n    );\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"create-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          {this.state.preloading ? (\n            <div className=\"modal-body\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <div className=\"modal-body\">\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-profile-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-profile-name\"\n                  maxLength={100}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  size={50}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field spacer-bottom\">\n                <label htmlFor=\"create-profile-language\">\n                  {translate('language')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <Select\n                  clearable={false}\n                  name=\"language\"\n                  onChange={this.handleLanguageChange}\n                  options={languages.map(language => ({\n                    label: language.name,\n                    value: language.key\n                  }))}\n                  value={selectedLanguage}\n                />\n              </div>\n              {importers.map(importer => (\n                <div\n                  className=\"modal-field spacer-bottom js-importer\"\n                  data-key={importer.key}\n                  key={importer.key}>\n                  <label htmlFor={'create-profile-form-backup-' + importer.key}>\n                    {importer.name}\n                  </label>\n                  <input\n                    id={'create-profile-form-backup-' + importer.key}\n                    name={'backup_' + importer.key}\n                    type=\"file\"\n                  />\n                  <p className=\"note\">\n                    {translate('quality_profiles.optional_configuration_file')}\n                  </p>\n                </div>\n              ))}\n              {/* drop me when we stop supporting ie11 */}\n              <input name=\"hello-ie11\" type=\"hidden\" value=\"\" />\n            </div>\n          )}\n\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            {!this.state.preloading && (\n              <SubmitButton disabled={this.state.loading} id=\"create-profile-submit\">\n                {translate('create')}\n              </SubmitButton>\n            )}\n            <ResetButtonLink id=\"create-profile-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { restoreQualityProfile } from '../../../api/quality-profiles';\nimport Modal from '../../../components/controls/Modal';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\n\ninterface Props {\n  onClose: () => void;\n  onRequestFail: (reason: any) => void;\n  onRestore: () => void;\n  organization: string | null;\n}\n\ninterface State {\n  loading: boolean;\n  profile?: { name: string };\n  ruleFailures?: number;\n  ruleSuccesses?: number;\n}\n\nexport default class RestoreProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState({ loading: true });\n\n    const data = new FormData(event.currentTarget);\n    if (this.props.organization) {\n      data.append('organization', this.props.organization);\n    }\n\n    restoreQualityProfile(data).then(\n      (response: any) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            profile: response.profile,\n            ruleFailures: response.ruleFailures,\n            ruleSuccesses: response.ruleSuccesses\n          });\n        }\n        this.props.onRestore();\n      },\n      (error: any) => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n        this.props.onRequestFail(error);\n      }\n    );\n  };\n\n  render() {\n    const header = translate('quality_profiles.restore_profile');\n\n    const { loading, profile, ruleFailures, ruleSuccesses } = this.state;\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"restore-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body\">\n            {profile != null && ruleSuccesses != null ? (\n              ruleFailures ? (\n                <div className=\"alert alert-warning\">\n                  {translateWithParameters(\n                    'quality_profiles.restore_profile.warning',\n                    profile.name,\n                    ruleSuccesses,\n                    ruleFailures\n                  )}\n                </div>\n              ) : (\n                <div className=\"alert alert-success\">\n                  {translateWithParameters(\n                    'quality_profiles.restore_profile.success',\n                    profile.name,\n                    ruleSuccesses\n                  )}\n                </div>\n              )\n            ) : (\n              <div className=\"modal-field\">\n                <label htmlFor=\"restore-profile-backup\">\n                  {translate('backup')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input id=\"restore-profile-backup\" name=\"backup\" required={true} type=\"file\" />\n              </div>\n            )}\n          </div>\n\n          {ruleSuccesses == null ? (\n            <div className=\"modal-foot\">\n              {loading && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={loading} id=\"restore-profile-submit\">\n                {translate('restore')}\n              </SubmitButton>\n              <ResetButtonLink id=\"restore-profile-cancel\" onClick={this.props.onClose}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </div>\n          ) : (\n            <div className=\"modal-foot\">\n              <ResetButtonLink id=\"restore-profile-cancel\" onClick={this.props.onClose}>\n                {translate('close')}\n              </ResetButtonLink>\n            </div>\n          )}\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport CreateProfileForm from './CreateProfileForm';\nimport RestoreProfileForm from './RestoreProfileForm';\nimport { Profile } from '../types';\nimport { getProfilePath } from '../utils';\nimport { Actions } from '../../../api/quality-profiles';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  actions: Actions;\n  languages: Array<{ key: string; name: string }>;\n  onRequestFail: (reason: any) => void;\n  organization: string | null;\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  createFormOpen: boolean;\n  restoreFormOpen: boolean;\n}\n\nexport default class PageHeader extends React.PureComponent<Props, State> {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  state = {\n    createFormOpen: false,\n    restoreFormOpen: false\n  };\n\n  handleCreateClick = () => {\n    this.setState({ createFormOpen: true });\n  };\n\n  handleCreate = (profile: Profile) => {\n    this.props.updateProfiles().then(\n      () => {\n        this.context.router.push(\n          getProfilePath(profile.name, profile.language, this.props.organization)\n        );\n      },\n      () => {}\n    );\n  };\n\n  closeCreateForm = () => {\n    this.setState({ createFormOpen: false });\n  };\n\n  handleRestoreClick = () => {\n    this.setState({ restoreFormOpen: true });\n  };\n\n  closeRestoreForm = () => {\n    this.setState({ restoreFormOpen: false });\n  };\n\n  render() {\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('quality_profiles.page')}</h1>\n\n        {this.props.actions.create && (\n          <div className=\"page-actions\">\n            <Button id=\"quality-profiles-create\" onClick={this.handleCreateClick}>\n              {translate('create')}\n            </Button>\n            <Button\n              className=\"little-spacer-left\"\n              id=\"quality-profiles-restore\"\n              onClick={this.handleRestoreClick}>\n              {translate('restore')}\n            </Button>\n          </div>\n        )}\n\n        <div className=\"page-description markdown\">\n          {translate('quality_profiles.intro1')}\n          <br />\n          {translate('quality_profiles.intro2')}\n        </div>\n\n        {this.state.restoreFormOpen && (\n          <RestoreProfileForm\n            onClose={this.closeRestoreForm}\n            onRequestFail={this.props.onRequestFail}\n            onRestore={this.props.updateProfiles}\n            organization={this.props.organization}\n          />\n        )}\n\n        {this.state.createFormOpen && (\n          <CreateProfileForm\n            languages={this.props.languages}\n            onClose={this.closeCreateForm}\n            onCreate={this.handleCreate}\n            onRequestFail={this.props.onRequestFail}\n            organization={this.props.organization}\n          />\n        )}\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { sortBy } from 'lodash';\nimport ProfileLink from '../components/ProfileLink';\nimport { getDeprecatedActiveRulesUrl } from '../../../helpers/urls';\nimport { translateWithParameters, translate } from '../../../helpers/l10n';\nimport { Profile } from '../types';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\nexport default function EvolutionDeprecated(props: Props) {\n  const profilesWithDeprecations = props.profiles.filter(\n    profile => profile.activeDeprecatedRuleCount > 0\n  );\n\n  if (profilesWithDeprecations.length === 0) {\n    return null;\n  }\n\n  const sortedProfiles = sortBy(profilesWithDeprecations, p => -p.activeDeprecatedRuleCount);\n\n  return (\n    <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-deprecated\">\n      <div className=\"spacer-bottom\">\n        <strong>{translate('quality_profiles.deprecated_rules')}</strong>\n      </div>\n      <div className=\"spacer-bottom\">\n        {translateWithParameters(\n          'quality_profiles.deprecated_rules_are_still_activated',\n          profilesWithDeprecations.length\n        )}\n      </div>\n      <ul>\n        {sortedProfiles.map(profile => (\n          <li key={profile.key} className=\"spacer-top\">\n            <div className=\"text-ellipsis\">\n              <ProfileLink\n                className=\"link-no-underline\"\n                language={profile.language}\n                name={profile.name}\n                organization={props.organization}>\n                {profile.name}\n              </ProfileLink>\n            </div>\n            <div className=\"note\">\n              {profile.languageName}\n              {', '}\n              <Link\n                to={getDeprecatedActiveRulesUrl({ qprofile: profile.key }, props.organization)}\n                className=\"text-muted\">\n                {translateWithParameters(\n                  'quality_profile.x_rules',\n                  profile.activeDeprecatedRuleCount\n                )}\n              </Link>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport ProfileLink from '../components/ProfileLink';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { isStagnant } from '../utils';\nimport { Profile } from '../types';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\nexport default function EvolutionStagnant(props: Props) {\n  // TODO filter built-in out\n\n  const outdated = props.profiles.filter(isStagnant);\n\n  if (outdated.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-stagnant\">\n      <div className=\"spacer-bottom\">\n        <strong>{translate('quality_profiles.stagnant_profiles')}</strong>\n      </div>\n      <div className=\"spacer-bottom\">\n        {translate('quality_profiles.not_updated_more_than_year')}\n      </div>\n      <ul>\n        {outdated.map(profile => (\n          <li key={profile.key} className=\"spacer-top\">\n            <div className=\"text-ellipsis\">\n              <ProfileLink\n                className=\"link-no-underline\"\n                language={profile.language}\n                name={profile.name}\n                organization={props.organization}>\n                {profile.name}\n              </ProfileLink>\n            </div>\n            {profile.rulesUpdatedAt && (\n              <DateFormatter date={profile.rulesUpdatedAt} long={true}>\n                {formattedDate => (\n                  <div className=\"note\">\n                    {translateWithParameters(\n                      'quality_profiles.x_updated_on_y',\n                      profile.languageName,\n                      formattedDate\n                    )}\n                  </div>\n                )}\n              </DateFormatter>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { sortBy } from 'lodash';\nimport { searchRules } from '../../../api/rules';\nimport { translateWithParameters, translate } from '../../../helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport { toShortNotSoISOString } from '../../../helpers/dates';\nimport { formatMeasure } from '../../../helpers/measures';\n\nconst RULES_LIMIT = 10;\n\nfunction parseRules(r: any) {\n  const { rules, actives } = r;\n  return rules.map((rule: any) => {\n    const activations = actives[rule.key];\n    return { ...rule, activations: activations ? activations.length : 0 };\n  });\n}\n\ninterface Props {\n  organization: string | null;\n}\n\ninterface Rule {\n  activations: number;\n  key: string;\n  langName: string;\n  name: string;\n}\n\ninterface State {\n  latestRules?: Array<Rule>;\n  latestRulesTotal?: number;\n}\n\nexport default class EvolutionRules extends React.PureComponent<Props, State> {\n  periodStartDate: string;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    const startDate = new Date();\n    startDate.setFullYear(startDate.getFullYear() - 1);\n    this.periodStartDate = toShortNotSoISOString(startDate);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLatestRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLatestRules() {\n    const data = {\n      asc: false,\n      available_since: this.periodStartDate,\n      f: 'name,langName,actives',\n      organization: this.props.organization || undefined,\n      ps: RULES_LIMIT,\n      s: 'createdAt'\n    };\n\n    searchRules(data).then(\n      (r: any) => {\n        if (this.mounted) {\n          this.setState({\n            latestRules: sortBy<Rule>(parseRules(r), 'langName'),\n            latestRulesTotal: r.total\n          });\n        }\n      },\n      () => {}\n    );\n  }\n\n  render() {\n    if (!this.state.latestRulesTotal || !this.state.latestRules) {\n      return null;\n    }\n\n    const newRulesUrl = getRulesUrl(\n      { available_since: this.periodStartDate },\n      this.props.organization\n    );\n\n    return (\n      <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-rules\">\n        <div className=\"clearfix\">\n          <strong className=\"pull-left\">{translate('quality_profiles.latest_new_rules')}</strong>\n        </div>\n        <ul>\n          {this.state.latestRules.map(rule => (\n            <li key={rule.key} className=\"spacer-top\">\n              <div className=\"text-ellipsis\">\n                <Link\n                  to={getRulesUrl({ rule_key: rule.key }, this.props.organization)}\n                  className=\"link-no-underline\">\n                  {' '}\n                  {rule.name}\n                </Link>\n                <div className=\"note\">\n                  {rule.activations\n                    ? translateWithParameters(\n                        'quality_profiles.latest_new_rules.activated',\n                        rule.langName,\n                        rule.activations\n                      )\n                    : translateWithParameters(\n                        'quality_profiles.latest_new_rules.not_activated',\n                        rule.langName\n                      )}\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n        {this.state.latestRulesTotal > RULES_LIMIT && (\n          <div className=\"spacer-top\">\n            <Link to={newRulesUrl} className=\"small\">\n              {translate('see_all')} {formatMeasure(this.state.latestRulesTotal, 'SHORT_INT', null)}\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport EvolutionDeprecated from './EvolutionDeprecated';\nimport EvolutionStagnant from './EvolutionStagnant';\nimport EvolutionRules from './EvolutionRules';\nimport { Profile } from '../types';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\nexport default function Evolution({ organization, profiles }: Props) {\n  return (\n    <div className=\"quality-profiles-evolution\">\n      <EvolutionDeprecated organization={organization} profiles={profiles} />\n      <EvolutionStagnant organization={organization} profiles={profiles} />\n      <EvolutionRules organization={organization} />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport ProfileLink from '../components/ProfileLink';\nimport ProfileDate from '../components/ProfileDate';\nimport ProfileActions from '../components/ProfileActions';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport { translate } from '../../../helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport { isStagnant } from '../utils';\nimport { Profile } from '../types';\nimport Tooltip from '../../../components/controls/Tooltip';\n\ninterface Props {\n  onRequestFail: (reason: any) => void;\n  organization: string | null;\n  profile: Profile;\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfilesListRow extends React.PureComponent<Props> {\n  renderName() {\n    const { profile } = this.props;\n    const offset = 25 * (profile.depth - 1);\n    return (\n      <div style={{ paddingLeft: offset }}>\n        <ProfileLink\n          language={profile.language}\n          name={profile.name}\n          organization={this.props.organization}>\n          {profile.name}\n        </ProfileLink>\n        {profile.isBuiltIn && <BuiltInQualityProfileBadge className=\"spacer-left\" />}\n      </div>\n    );\n  }\n\n  renderProjects() {\n    const { profile } = this.props;\n\n    if (profile.isDefault) {\n      return <span className=\"badge\">{translate('default')}</span>;\n    }\n\n    return <span>{profile.projectCount}</span>;\n  }\n\n  renderRules() {\n    const { profile } = this.props;\n\n    const activeRulesUrl = getRulesUrl(\n      {\n        qprofile: profile.key,\n        activation: 'true'\n      },\n      this.props.organization\n    );\n\n    const deprecatedRulesUrl = getRulesUrl(\n      {\n        qprofile: profile.key,\n        activation: 'true',\n        statuses: 'DEPRECATED'\n      },\n      this.props.organization\n    );\n\n    return (\n      <div>\n        {profile.activeDeprecatedRuleCount > 0 && (\n          <span className=\"spacer-right\">\n            <Tooltip overlay={translate('quality_profiles.deprecated_rules')}>\n              <Link to={deprecatedRulesUrl} className=\"badge badge-normal-size badge-danger-light\">\n                {profile.activeDeprecatedRuleCount}\n              </Link>\n            </Tooltip>\n          </span>\n        )}\n\n        <Link to={activeRulesUrl}>{profile.activeRuleCount}</Link>\n      </div>\n    );\n  }\n\n  renderUpdateDate() {\n    const date = <ProfileDate date={this.props.profile.userUpdatedAt} />;\n    if (isStagnant(this.props.profile)) {\n      return <span className=\"badge badge-normal-size badge-focus\">{date}</span>;\n    } else {\n      return date;\n    }\n  }\n\n  renderUsageDate() {\n    const { lastUsed } = this.props.profile;\n    const date = <ProfileDate date={lastUsed} />;\n    if (!lastUsed) {\n      return <span className=\"badge badge-normal-size badge-focus\">{date}</span>;\n    } else {\n      return date;\n    }\n  }\n\n  render() {\n    return (\n      <tr\n        className=\"quality-profiles-table-row\"\n        data-key={this.props.profile.key}\n        data-name={this.props.profile.name}>\n        <td className=\"quality-profiles-table-name\">{this.renderName()}</td>\n        <td className=\"quality-profiles-table-projects thin nowrap text-right\">\n          {this.renderProjects()}\n        </td>\n        <td className=\"quality-profiles-table-rules thin nowrap text-right\">\n          {this.renderRules()}\n        </td>\n        <td className=\"quality-profiles-table-date thin nowrap text-right\">\n          {this.renderUpdateDate()}\n        </td>\n        <td className=\"quality-profiles-table-date thin nowrap text-right\">\n          {this.renderUsageDate()}\n        </td>\n        <td className=\"quality-profiles-table-actions thin nowrap text-right\">\n          <ProfileActions\n            fromList={true}\n            onRequestFail={this.props.onRequestFail}\n            organization={this.props.organization}\n            profile={this.props.profile}\n            updateProfiles={this.props.updateProfiles}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IndexLink } from 'react-router';\nimport * as classNames from 'classnames';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { getProfilesPath, getProfilesForLanguagePath } from '../utils';\nimport Dropdown from '../../../components/controls/Dropdown';\n\ninterface Props {\n  currentFilter?: string;\n  languages: Array<{ key: string; name: string }>;\n  organization: string | null;\n}\n\nexport default function ProfilesListHeader({ currentFilter, languages, organization }: Props) {\n  if (languages.length < 2) {\n    return null;\n  }\n\n  const currentLanguage = currentFilter && languages.find(l => l.key === currentFilter);\n\n  // if unknown language, then\n  if (currentFilter && !currentLanguage) {\n    return null;\n  }\n\n  const label = currentLanguage\n    ? translateWithParameters('quality_profiles.x_Profiles', currentLanguage.name)\n    : translate('quality_profiles.all_profiles');\n\n  return (\n    <header className=\"quality-profiles-list-header clearfix\">\n      <Dropdown>\n        {({ onToggleClick, open }) => (\n          <div className={classNames('dropdown', { open })}>\n            <a\n              className=\"dropdown-toggle link-no-underline js-language-filter\"\n              href=\"#\"\n              onClick={onToggleClick}>\n              {label}\n              <i className=\"icon-dropdown little-spacer-left\" />\n            </a>\n\n            <ul className=\"dropdown-menu\">\n              <li>\n                <IndexLink to={getProfilesPath(organization)}>\n                  {translate('quality_profiles.all_profiles')}\n                </IndexLink>\n              </li>\n              {languages.map(language => (\n                <li key={language.key}>\n                  <IndexLink\n                    className=\"js-language-filter-option\"\n                    data-language={language.key}\n                    to={getProfilesForLanguagePath(language.key, organization)}>\n                    {language.name}\n                  </IndexLink>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </Dropdown>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { groupBy, pick, sortBy } from 'lodash';\nimport ProfilesListRow from './ProfilesListRow';\nimport ProfilesListHeader from './ProfilesListHeader';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { Profile } from '../types';\n\ninterface Props {\n  languages: Array<{ key: string; name: string }>;\n  location: { query: { [p: string]: string } };\n  onRequestFail: (reason: any) => void;\n  organization: string | null;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfilesList extends React.PureComponent<Props> {\n  renderProfiles(profiles: Profile[]) {\n    return profiles.map(profile => (\n      <ProfilesListRow\n        key={profile.key}\n        onRequestFail={this.props.onRequestFail}\n        organization={this.props.organization}\n        profile={profile}\n        updateProfiles={this.props.updateProfiles}\n      />\n    ));\n  }\n\n  renderHeader(languageKey: string, profilesCount: number) {\n    const language = this.props.languages.find(l => l.key === languageKey);\n\n    if (!language) {\n      return null;\n    }\n\n    return (\n      <thead>\n        <tr>\n          <th>\n            {language.name}\n            {', '}\n            {translateWithParameters('quality_profiles.x_profiles', profilesCount)}\n          </th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.projects')}</th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.rules')}</th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.updated')}</th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.used')}</th>\n          <th>&nbsp;</th>\n        </tr>\n      </thead>\n    );\n  }\n\n  renderLanguage = (languageKey: string, profiles: Profile[] | undefined) => {\n    return (\n      <div key={languageKey} className=\"boxed-group boxed-group-inner quality-profiles-table\">\n        <table data-language={languageKey} className=\"data zebra zebra-hover\">\n          {profiles !== undefined && this.renderHeader(languageKey, profiles.length)}\n          <tbody>{profiles !== undefined && this.renderProfiles(profiles)}</tbody>\n        </table>\n      </div>\n    );\n  };\n\n  render() {\n    const { profiles, languages } = this.props;\n    const { language } = this.props.location.query;\n\n    const profilesIndex: { [language: string]: Profile[] } = groupBy<Profile>(\n      profiles,\n      profile => profile.language\n    );\n\n    const profilesToShow = language ? pick(profilesIndex, language) : profilesIndex;\n\n    const languagesToShow = sortBy(Object.keys(profilesToShow));\n\n    return (\n      <div>\n        <ProfilesListHeader\n          currentFilter={language}\n          languages={languages}\n          organization={this.props.organization}\n        />\n\n        {Object.keys(profilesToShow).length === 0 && (\n          <div className=\"alert alert-warning spacer-top\">{translate('no_results')}</div>\n        )}\n\n        {languagesToShow.map(languageKey =>\n          this.renderLanguage(languageKey, profilesToShow[languageKey])\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageHeader from './PageHeader';\nimport Evolution from './Evolution';\nimport ProfilesList from './ProfilesList';\nimport { Profile } from '../types';\nimport { Actions } from '../../../api/quality-profiles';\n\ninterface Props {\n  actions: Actions;\n  languages: Array<{ key: string; name: string }>;\n  location: { query: { [p: string]: string } };\n  onRequestFail: (reason: any) => void;\n  organization: string | null;\n  profiles: Array<Profile>;\n  updateProfiles: () => Promise<void>;\n}\n\nexport default function HomeContainer(props: Props) {\n  return (\n    <div>\n      <PageHeader {...props} />\n\n      <div className=\"page-with-sidebar\">\n        <div className=\"page-main\">\n          <ProfilesList {...props} />\n        </div>\n        <div className=\"page-sidebar\">\n          <Evolution {...props} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}