{"version":3,"sources":["webpack:///./src/main/js/helpers/csv.ts","webpack:///./src/main/js/components/shared/SeverityIcon.js","webpack:///./src/main/js/apps/quality-profiles/compare/ComparisonForm.tsx","webpack:///./src/main/js/apps/quality-profiles/compare/ComparisonEmpty.tsx","webpack:///./src/main/js/apps/quality-profiles/compare/ComparisonResults.tsx","webpack:///./src/main/js/apps/quality-profiles/compare/ComparisonContainer.tsx","webpack:///./src/main/js/api/quality-profiles.ts"],"names":["csvEscape","value","replace","__webpack_require__","d","__webpack_exports__","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","SeverityIcon","props","severity","className","toLowerCase","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_super","ComparisonForm","this","ComparisonForm_extends","prototype","handleChange","option","onCompare","render","_a","profile","profiles","withKey","options","filter","p","language","map","key","label","name","index_js_exposed","Object","l10n","Select","placeholder","clearable","onChange","bind","ComparisonEmpty_ComparisonEmpty","ComparisonResults","ComparisonResults_extends","renderRule","rule","es","to","urls","rule_key","organization","renderParameters","params","keys","renderLeft","_this","inLeft","length","left","renderRight","inRight","right","renderModified","modified","colSpan","ComparisonContainer_ComparisonContainer","ComparisonContainer","call","mounted","handleCompare","path","utils","context","router","push","state","loading","ComparisonContainer_extends","componentDidMount","loadResults","componentDidUpdate","prevProps","location","componentWillUnmount","query","setState","quality_profiles","then","r","undefined","_b","compare_ComparisonForm","compare_ComparisonResults","contextTypes","prop_types","searchQualityProfiles","parameters","_helpers_request__WEBPACK_IMPORTED_MODULE_2__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_3__","getQualityProfile","data","createQualityProfile","setMethod","setData","submit","restoreQualityProfile","getProfileProjects","getProfileInheritance","profileKey","setDefaultProfile","renameProfile","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentKey","getImporters","importers","getExporters","exporters","getProfileChangelog","compareProfiles","leftKey","rightKey","associateProject","projectKey","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","lodash__WEBPACK_IMPORTED_MODULE_0__","_helpers_csv__WEBPACK_IMPORTED_MODULE_1__","join","__assign","deactivateRule"],"mappings":"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","file":"js/281.149c7d63.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function csvEscape(value: string): string {\n  const escaped = value.replace(/\"/g, '\\\\\"');\n  return `\"${escaped}\"`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n//@flow\nimport React from 'react';\nimport classNames from 'classnames';\n\nexport default function SeverityIcon(props /*: { severity: ?string, className?: string } */) {\n  if (!props.severity) {\n    return null;\n  }\n  const className = classNames('icon-severity-' + props.severity.toLowerCase(), props.className);\n  return <i className={className} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from '../../../components/controls/Select';\nimport { translate } from '../../../helpers/l10n';\nimport { Profile } from '../types';\n\ninterface Props {\n  profile: Profile;\n  profiles: Profile[];\n  onCompare: (rule: string) => void;\n  withKey?: string;\n}\n\nexport default class ComparisonForm extends React.PureComponent<Props> {\n  handleChange(option: { value: string }) {\n    this.props.onCompare(option.value);\n  }\n\n  render() {\n    const { profile, profiles, withKey } = this.props;\n    const options = profiles\n      .filter(p => p.language === profile.language && p !== profile)\n      .map(p => ({ value: p.key, label: p.name }));\n\n    return (\n      <div className=\"display-inline-block\">\n        <label className=\"spacer-right\">{translate('quality_profiles.compare_with')}</label>\n        <Select\n          value={withKey}\n          options={options}\n          placeholder={translate('select_verb')}\n          clearable={false}\n          className=\"input-large\"\n          onChange={this.handleChange.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\n\nexport default function ComparisonEmpty() {\n  return <div className=\"big-spacer-top\">{translate('quality_profile.empty_comparison')}</div>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport ComparisonEmpty from './ComparisonEmpty';\nimport SeverityIcon from '../../../components/shared/SeverityIcon';\nimport { translateWithParameters } from '../../../helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ntype Params = { [p: string]: string };\n\ninterface Props {\n  left: { name: string };\n  right: { name: string };\n  inLeft: Array<{ key: string; name: string; severity: string }>;\n  inRight: Array<{ key: string; name: string; severity: string }>;\n  modified: Array<{\n    key: string;\n    name: string;\n    left: { params: Params; severity: string };\n    right: { params: Params; severity: string };\n  }>;\n  organization: string | null;\n}\n\nexport default class ComparisonResults extends React.PureComponent<Props> {\n  renderRule(rule: { key: string; name: string }, severity: string) {\n    return (\n      <div>\n        <SeverityIcon severity={severity} />{' '}\n        <Link to={getRulesUrl({ rule_key: rule.key }, this.props.organization)}>{rule.name}</Link>\n      </div>\n    );\n  }\n\n  renderParameters(params: Params) {\n    if (!params) {\n      return null;\n    }\n    return (\n      <ul>\n        {Object.keys(params).map(key => (\n          <li key={key} className=\"spacer-top\">\n            <code>\n              {key}\n              {': '}\n              {params[key]}\n            </code>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  renderLeft() {\n    if (this.props.inLeft.length === 0) {\n      return null;\n    }\n    return (\n      <>\n        <tr>\n          <td>\n            <h6>\n              {translateWithParameters(\n                'quality_profiles.x_rules_only_in',\n                this.props.inLeft.length\n              )}{' '}\n              {this.props.left.name}\n            </h6>\n          </td>\n          <td>&nbsp;</td>\n        </tr>\n        {this.props.inLeft.map(rule => (\n          <tr key={`left-${rule.key}`} className=\"js-comparison-in-left\">\n            <td>{this.renderRule(rule, rule.severity)}</td>\n            <td>&nbsp;</td>\n          </tr>\n        ))}\n      </>\n    );\n  }\n\n  renderRight() {\n    if (this.props.inRight.length === 0) {\n      return null;\n    }\n    return (\n      <>\n        <tr>\n          <td>&nbsp;</td>\n          <td>\n            <h6>\n              {translateWithParameters(\n                'quality_profiles.x_rules_only_in',\n                this.props.inRight.length\n              )}{' '}\n              {this.props.right.name}\n            </h6>\n          </td>\n        </tr>\n        {this.props.inRight.map(rule => (\n          <tr key={`right-${rule.key}`} className=\"js-comparison-in-right\">\n            <td>&nbsp;</td>\n            <td>{this.renderRule(rule, rule.severity)}</td>\n          </tr>\n        ))}\n      </>\n    );\n  }\n\n  renderModified() {\n    if (this.props.modified.length === 0) {\n      return null;\n    }\n    return (\n      <>\n        <tr>\n          <td colSpan={2} className=\"text-center\">\n            <h6>\n              {translateWithParameters(\n                'quality_profiles.x_rules_have_different_configuration',\n                this.props.modified.length\n              )}\n            </h6>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <h6>{this.props.left.name}</h6>\n          </td>\n          <td>\n            <h6>{this.props.right.name}</h6>\n          </td>\n        </tr>\n        {this.props.modified.map(rule => (\n          <tr key={`modified-${rule.key}`} className=\"js-comparison-modified\">\n            <td>\n              {this.renderRule(rule, rule.left.severity)}\n              {this.renderParameters(rule.left.params)}\n            </td>\n            <td>\n              {this.renderRule(rule, rule.right.severity)}\n              {this.renderParameters(rule.right.params)}\n            </td>\n          </tr>\n        ))}\n      </>\n    );\n  }\n\n  render() {\n    if (!this.props.inLeft.length && !this.props.inRight.length && !this.props.modified.length) {\n      return <ComparisonEmpty />;\n    }\n\n    return (\n      <table className=\"data zebra quality-profile-comparison-table\">\n        <tbody>\n          {this.renderLeft()}\n          {this.renderRight()}\n          {this.renderModified()}\n        </tbody>\n      </table>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport ComparisonForm from './ComparisonForm';\nimport ComparisonResults from './ComparisonResults';\nimport { compareProfiles } from '../../../api/quality-profiles';\nimport { getProfileComparePath } from '../utils';\nimport { Profile } from '../types';\n\ninterface Props {\n  location: { query: { withKey?: string } };\n  organization: string | null;\n  profile: Profile;\n  profiles: Profile[];\n}\n\ntype Params = { [p: string]: string };\n\ninterface State {\n  loading: boolean;\n  left?: { name: string };\n  right?: { name: string };\n  inLeft?: Array<{ key: string; name: string; severity: string }>;\n  inRight?: Array<{ key: string; name: string; severity: string }>;\n  modified?: Array<{\n    key: string;\n    name: string;\n    left: { params: Params; severity: string };\n    right: { params: Params; severity: string };\n  }>;\n}\n\nexport default class ComparisonContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: false };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadResults();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile !== this.props.profile || prevProps.location !== this.props.location) {\n      this.loadResults();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadResults() {\n    const { withKey } = this.props.location.query;\n    if (!withKey) {\n      this.setState({ left: undefined, loading: false });\n      return;\n    }\n\n    this.setState({ loading: true });\n    compareProfiles(this.props.profile.key, withKey).then((r: any) => {\n      if (this.mounted) {\n        this.setState({\n          left: r.left,\n          right: r.right,\n          inLeft: r.inLeft,\n          inRight: r.inRight,\n          modified: r.modified,\n          loading: false\n        });\n      }\n    });\n  }\n\n  handleCompare = (withKey: string) => {\n    const path = getProfileComparePath(\n      this.props.profile.name,\n      this.props.profile.language,\n      this.props.organization,\n      withKey\n    );\n    this.context.router.push(path);\n  };\n\n  render() {\n    const { profile, profiles, location } = this.props;\n    const { withKey } = location.query;\n    const { left, right, inLeft, inRight, modified } = this.state;\n\n    return (\n      <div className=\"boxed-group boxed-group-inner js-profile-comparison\">\n        <header>\n          <ComparisonForm\n            withKey={withKey}\n            profile={profile}\n            profiles={profiles}\n            onCompare={this.handleCompare}\n          />\n\n          {this.state.loading && <i className=\"spinner spacer-left\" />}\n        </header>\n\n        {left != null &&\n          inLeft != null &&\n          right != null &&\n          inRight != null &&\n          modified != null && (\n            <div className=\"spacer-top\">\n              <ComparisonResults\n                left={left}\n                right={right}\n                inLeft={inLeft}\n                inRight={inRight}\n                modified={modified}\n                organization={this.props.organization}\n              />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from '../helpers/csv';\nimport {\n  request,\n  checkStatus,\n  parseJSON,\n  getJSON,\n  post,\n  postJSON,\n  RequestData\n} from '../helpers/request';\nimport { Paging } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  organization: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  organization?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile(data: {\n  compareToSonarWay?: boolean;\n  profile: string;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', data);\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/create')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/restore')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport interface ProfileProject {\n  id: number;\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance(profileKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/inheritance', { profileKey }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/set_default', { profileKey });\n}\n\nexport function renameProfile(key: string, name: string): Promise<void> {\n  return post('/api/qualityprofiles/rename', { key, name });\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName });\n}\n\nexport function deleteProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/delete', { profileKey });\n}\n\nexport function changeProfileParent(profileKey: string, parentKey: string): Promise<void> {\n  return post('/api/qualityprofiles/change_parent', { profileKey, parentKey });\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(data: RequestData): Promise<any> {\n  return getJSON('/api/qualityprofiles/changelog', data);\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/add_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport function dissociateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/remove_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\nexport interface SearchUsersResponse {\n  users: Array<{\n    avatar?: string;\n    login: string;\n    name: string;\n    selected?: boolean;\n  }>;\n  paging: Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  /* eslint-disable camelcase */\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  organization: string | undefined;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n  /* eslint-enable camelcase */\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  organization: string | undefined;\n  params?: { [key: string]: string };\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: {\n  key: string;\n  organization: string | undefined;\n  rule: string;\n}) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}