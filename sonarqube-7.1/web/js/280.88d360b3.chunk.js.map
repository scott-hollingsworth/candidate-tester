{"version":3,"sources":["webpack:///./src/main/js/api/quality-gates.ts","webpack:///./src/main/js/components/common/ScreenPositionHelper.tsx","webpack:///./src/main/js/apps/quality-gates/components/BuiltInQualityGateBadge.tsx","webpack:///./src/main/js/apps/quality-gates/components/CreateQualityGateForm.tsx","webpack:///./src/main/js/apps/quality-gates/components/ListHeader.tsx","webpack:///./src/main/js/apps/quality-gates/components/List.js","webpack:///./src/main/js/apps/quality-gates/components/QualityGatesApp.js","webpack:///./src/main/js/apps/quality-gates/containers/QualityGatesAppContainer.js"],"names":["fetchQualityGates","data","Object","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","fetchQualityGate","createQualityGate","deleteQualityGate","renameQualityGate","copyQualityGate","setQualityGateAsDefault","createCondition","updateCondition","deleteCondition","getGateForProject","then","_a","qualityGate","__assign","isDefault","default","searchGates","associateGateWithProject","dissociateGateWithProject","getApplicationQualityGate","ScreenPositionHelper","_super","props","_this","call","this","getPosition","containerPos","container","getBoundingClientRect","top","window","pageYOffset","left","pageXOffset","debouncedOnResize","lodash__WEBPACK_IMPORTED_MODULE_1__","forceUpdate","__extends","prototype","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","react__WEBPACK_IMPORTED_MODULE_0__","className","ref","children","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","BuiltInQualityGateBadge","_b","tooltip","badge","classnames__WEBPACK_IMPORTED_MODULE_1__","overlay","_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_2__","undefined","CreateQualityGateForm","apply","arguments","mounted","state","loading","name","handleNameChange","event","setState","currentTarget","value","handleFormSubmit","preventDefault","organization","quality_gates","onCreate","context","router","push","urls","String","id","onClose","CreateQualityGateForm_extends","header","l10n","submitDisabled","index_js_exposed","Modal","contentLabel","onRequestClose","onSubmit","htmlFor","autoFocus","maxLength","onChange","required","size","type","buttons","disabled","onClick","contextTypes","prop_types","ListHeader","createQualityGateOpen","openCreateQualityGateForm","closeCreateQualityGateForm","ListHeader_extends","canCreate","components_CreateQualityGateForm","onAdd","key","List_List","qualityGates","index_js_exposed_default","a","createElement","map","react_router_es","activeClassName","data-id","to","isBuiltIn","QualityGatesApp","actions","qualitygates","updateStore","length","create","replace","QualityGatesApp_extends","document","body","classList","add","documentElement","footer","getElementById","remove","defaultTitle","Helmet_default","titleTemplate","style","components_ListHeader","addQualityGate","Children","child","cloneElement","prop_types_default","object","isRequired","__webpack_exports__","es","rootReducer","dispatch","nextState","store_actions","components_QualityGatesApp"],"mappings":"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","file":"js/280.88d360b3.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Metric } from '../app/types';\n\nexport interface ConditionBase {\n  error: string;\n  metric: string;\n  op?: string;\n  period?: number;\n  warning: string;\n}\n\nexport interface Condition extends ConditionBase {\n  id: number;\n}\n\nexport interface QualityGate {\n  actions?: {\n    associateProjects: boolean;\n    copy: boolean;\n    delete: boolean;\n    manageConditions: boolean;\n    rename: boolean;\n    setAsDefault: boolean;\n  };\n  conditions?: Condition[];\n  id: number;\n  isBuiltIn?: boolean;\n  isDefault?: boolean;\n  name: string;\n}\n\nexport function fetchQualityGates(data: {\n  organization?: string;\n}): Promise<{\n  actions: { create: boolean };\n  qualitygates: QualityGate[];\n}> {\n  return getJSON('/api/qualitygates/list', data).catch(throwGlobalError);\n}\n\nexport function fetchQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<QualityGate> {\n  return getJSON('/api/qualitygates/show', data).catch(throwGlobalError);\n}\n\nexport function createQualityGate(data: {\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/create', data).catch(throwGlobalError);\n}\n\nexport function deleteQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/destroy', data).catch(throwGlobalError);\n}\n\nexport function renameQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/rename', data).catch(throwGlobalError);\n}\n\nexport function copyQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/copy', data).catch(throwGlobalError);\n}\n\nexport function setQualityGateAsDefault(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/set_as_default', data).catch(throwGlobalError);\n}\n\nexport function createCondition(\n  data: {\n    gateId: number;\n    organization?: string;\n  } & ConditionBase\n): Promise<Condition> {\n  return postJSON('/api/qualitygates/create_condition', data);\n}\n\nexport function updateCondition(data: { organization?: string } & Condition): Promise<Condition> {\n  return postJSON('/api/qualitygates/update_condition', data);\n}\n\nexport function deleteCondition(data: { id: number; organization?: string }): Promise<void> {\n  return post('/api/qualitygates/delete_condition', data);\n}\n\nexport function getGateForProject(data: {\n  organization?: string;\n  project: string;\n}): Promise<QualityGate | undefined> {\n  return getJSON('/api/qualitygates/get_by_project', data).then(\n    ({ qualityGate }) =>\n      qualityGate && {\n        ...qualityGate,\n        isDefault: qualityGate.default\n      },\n    throwGlobalError\n  );\n}\n\nexport function searchGates(data: {\n  gateId: number;\n  organization?: string;\n  page: number;\n  pageSize: number;\n  selected: string;\n}): Promise<void | Response> {\n  return getJSON('/api/qualitygates/search', data).catch(throwGlobalError);\n}\n\nexport function associateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/select', data).catch(throwGlobalError);\n}\n\nexport function dissociateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/deselect', data).catch(throwGlobalError);\n}\n\nexport interface ConditionAnalysis {\n  comparator: string;\n  errorThreshold?: string;\n  metric: string;\n  periodIndex?: number;\n  onLeak?: boolean;\n  status: string;\n  value: string;\n  warningThreshold?: string;\n}\n\nexport interface ApplicationProject {\n  key: string;\n  name: string;\n  status: string;\n  conditions: ConditionAnalysis[];\n}\n\nexport interface ApplicationQualityGate {\n  metrics: Metric[];\n  projects: ApplicationProject[];\n  status: string;\n}\n\nexport function getApplicationQualityGate(data: {\n  application: string;\n  organization?: string;\n}): Promise<ApplicationQualityGate> {\n  return getJSON('/api/qualitygates/application_status', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { debounce } from 'lodash';\n\ninterface Props {\n  className?: string;\n  children: (position: { top: number; left: number }) => React.ReactElement<any>;\n}\n\nexport default class ScreenPositionHelper extends React.PureComponent<Props> {\n  container?: HTMLDivElement;\n  debouncedOnResize: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedOnResize = debounce(() => this.forceUpdate(), 250);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    window.addEventListener('resize', this.debouncedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedOnResize);\n  }\n\n  getPosition = () => {\n    const containerPos = this.container && this.container.getBoundingClientRect();\n    if (!containerPos) {\n      return { top: 0, left: 0 };\n    }\n    return {\n      top: window.pageYOffset + containerPos.top,\n      left: window.pageXOffset + containerPos.left\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={container => (this.container = container as HTMLDivElement)}>\n        {this.props.children(this.getPosition())}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  tooltip?: boolean;\n}\n\nexport default function BuiltInQualityGateBadge({ className, tooltip = true }: Props) {\n  const badge = (\n    <div className={classNames('outline-badge', className)}>\n      {translate('quality_gates.built_in')}\n    </div>\n  );\n\n  const overlay = (\n    <div>\n      <span>{translate('quality_gates.built_in.description.1')}</span>\n      <span className=\"little-spacer-left\">\n        {translate('quality_gates.built_in.description.2')}\n      </span>\n    </div>\n  );\n\n  return <Tooltip overlay={tooltip ? overlay : undefined}>{badge}</Tooltip>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { createQualityGate, QualityGate } from '../../../api/quality-gates';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { getQualityGateUrl } from '../../../helpers/urls';\n\ninterface Props {\n  onCreate: (qualityGate: QualityGate) => void;\n  onClose: () => void;\n  organization?: string;\n}\n\ninterface State {\n  loading: boolean;\n  name: string;\n}\n\nexport default class CreateQualityGateForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  state = { loading: false, name: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { organization } = this.props;\n    const { name } = this.state;\n    if (name) {\n      this.setState({ loading: true });\n      createQualityGate({ name, organization }).then(\n        qualityGate => {\n          this.props.onCreate(qualityGate);\n          this.context.router.push(getQualityGateUrl(String(qualityGate.id), organization));\n          this.props.onClose();\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const { loading, name } = this.state;\n    const header = translate('quality_gates.create');\n    const submitDisabled = loading || !name;\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"quality-gate-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"quality-gate-form-name\">\n                {translate('name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                autoFocus={true}\n                id=\"quality-gate-form-name\"\n                maxLength={100}\n                onChange={this.handleNameChange}\n                required={true}\n                size={50}\n                type=\"text\"\n                value={name}\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"js-confirm\" disabled={submitDisabled}>\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CreateQualityGateForm from '../components/CreateQualityGateForm';\nimport { QualityGate } from '../../../api/quality-gates';\nimport { Organization } from '../../../app/types';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  canCreate: boolean;\n  onAdd: (qualityGate: QualityGate) => void;\n  organization?: Organization;\n}\n\ninterface State {\n  createQualityGateOpen: boolean;\n}\n\nexport default class ListHeader extends React.PureComponent<Props, State> {\n  state = { createQualityGateOpen: false };\n\n  openCreateQualityGateForm = () => {\n    this.setState({ createQualityGateOpen: true });\n  };\n\n  closeCreateQualityGateForm = () => {\n    this.setState({ createQualityGateOpen: false });\n  };\n\n  render() {\n    const { organization } = this.props;\n\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('quality_gates.page')}</h1>\n        {this.props.canCreate && (\n          <div className=\"page-actions\">\n            <Button id=\"quality-gate-add\" onClick={this.openCreateQualityGateForm}>\n              {translate('create')}\n            </Button>\n          </div>\n        )}\n        {this.state.createQualityGateOpen && (\n          <CreateQualityGateForm\n            onClose={this.closeCreateQualityGateForm}\n            onCreate={this.props.onAdd}\n            organization={organization && organization.key}\n          />\n        )}\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { Link } from 'react-router';\nimport BuiltInQualityGateBadge from './BuiltInQualityGateBadge';\nimport { translate } from '../../../helpers/l10n';\nimport { getQualityGateUrl } from '../../../helpers/urls';\n\nexport default function List({ organization, qualityGates }) {\n  return (\n    <div className=\"list-group\">\n      {qualityGates.map(qualityGate => (\n        <Link\n          activeClassName=\"active\"\n          className=\"list-group-item\"\n          data-id={qualityGate.id}\n          key={qualityGate.id}\n          to={getQualityGateUrl(String(qualityGate.id), organization && organization.key)}>\n          <table>\n            <tbody>\n              <tr>\n                <td>{qualityGate.name}</td>\n                <td className=\"thin nowrap spacer-left text-right\">\n                  {qualityGate.isDefault && <span className=\"badge\">{translate('default')}</span>}\n                  {qualityGate.isBuiltIn && (\n                    <BuiltInQualityGateBadge className=\"little-spacer-left\" tooltip={false} />\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </Link>\n      ))}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport ListHeader from './ListHeader';\nimport List from './List';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { fetchQualityGates } from '../../../api/quality-gates';\nimport { translate } from '../../../helpers/l10n';\nimport { getQualityGateUrl } from '../../../helpers/urls';\nimport '../styles.css';\n\nexport default class QualityGatesApp extends Component {\n  static contextTypes = {\n    router: PropTypes.object.isRequired\n  };\n\n  state = {};\n\n  componentDidMount() {\n    this.fetchQualityGates();\n    // $FlowFixMe\n    document.body.classList.add('white-page');\n    // $FlowFixMe\n    document.documentElement.classList.add('white-page');\n    const footer = document.getElementById('footer');\n    if (footer) {\n      footer.classList.add('page-footer-with-sidebar');\n    }\n  }\n\n  componentWillUnmount() {\n    // $FlowFixMe\n    document.body.classList.remove('white-page');\n    // $FlowFixMe\n    document.documentElement.classList.remove('white-page');\n    const footer = document.getElementById('footer');\n    if (footer) {\n      footer.classList.remove('page-footer-with-sidebar');\n    }\n  }\n\n  fetchQualityGates = () =>\n    fetchQualityGates({\n      organization: this.props.organization && this.props.organization.key\n    }).then(\n      ({ actions, qualitygates: qualityGates }) => {\n        const { organization, updateStore } = this.props;\n        updateStore({ actions, qualityGates });\n        if (qualityGates && qualityGates.length === 1 && !actions.create) {\n          this.context.router.replace(\n            getQualityGateUrl(String(qualityGates[0].id), organization && organization.key)\n          );\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { children, qualityGates, actions, organization } = this.props;\n    const defaultTitle = translate('quality_gates.page');\n    return (\n      <div id=\"quality-gates-page\" className=\"layout-page\">\n        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} />\n\n        <ScreenPositionHelper className=\"layout-page-side-outer\">\n          {({ top }) => (\n            <div className=\"layout-page-side\" style={{ top }}>\n              <div className=\"layout-page-side-inner\">\n                <div className=\"layout-page-filters\">\n                  <ListHeader\n                    canCreate={actions && actions.create}\n                    onAdd={this.props.addQualityGate}\n                    organization={organization}\n                  />\n                  {qualityGates && <List organization={organization} qualityGates={qualityGates} />}\n                </div>\n              </div>\n            </div>\n          )}\n        </ScreenPositionHelper>\n        {qualityGates != null &&\n          React.Children.map(children, child => React.cloneElement(child, { organization }))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { setState, addQualityGate, deleteQualityGate } from '../store/actions';\nimport QualityGateApp from '../components/QualityGatesApp';\nimport { getQualityGatesAppState } from '../../../store/rootReducer';\n\nconst mapStateToProps = state => getQualityGatesAppState(state);\n\nconst mapDispatchToProps = dispatch => ({\n  updateStore: nextState => dispatch(setState(nextState)),\n  addQualityGate: qualityGate => dispatch(addQualityGate(qualityGate)),\n  deleteQualityGate: qualityGate => dispatch(deleteQualityGate(qualityGate))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QualityGateApp);\n"],"sourceRoot":""}