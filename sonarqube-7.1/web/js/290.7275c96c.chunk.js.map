{"version":3,"sources":["webpack:///./src/main/js/apps/sessions/components/OAuthProviders.tsx","webpack:///./src/main/js/apps/sessions/components/LoginForm.tsx","webpack:///./src/main/js/apps/sessions/components/LoginFormContainer.tsx"],"names":["OAuthProviders_OAuthProviders","props","index_js_exposed","className","identityProviders","map","identityProvider","key","href","Object","urls","encodeURIComponent","returnTo","style","backgroundColor","color","colors","theme","alt","name","width","height","src","iconPath","l10n","helpMessage","Tooltip","overlay","HelpIcon","fill","_super","LoginForm","_this","call","this","stopLoading","setState","loading","handleSubmit","event","preventDefault","onSubmit","state","login","password","then","handleMoreOptionsClick","collapsed","handleLoginChange","currentTarget","value","handlePwdChange","length","LoginForm_extends","prototype","render","loginTitle","onSonarCloud","id","onClick","GlobalMessagesContainer","htmlFor","autoFocus","maxLength","onChange","placeholder","required","type","DeferredSpinner","buttons","classnames","disabled","react_router_es","to","LoginFormContainer_LoginFormContainer","LoginFormContainer","apply","arguments","mounted","getReturnUrl","location","queryReturnTo","query","hash","handleSuccessfulLogin","window","doLogin","LoginFormContainer_extends","componentDidMount","users","identityProvidersResponse","componentWillUnmount","sessions_components_LoginForm","context","contextTypes","prop_types","LoginFormContainer_mapDispatchToProps","rootActions","__webpack_exports__","es"],"mappings":"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","file":"js/290.7275c96c.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from '../../../helpers/l10n';\nimport * as theme from '../../../app/theme';\nimport { IdentityProvider } from '../../../app/types';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport HelpIcon from '../../../components/icons-components/HelpIcon';\nimport { getTextColor } from '../../../helpers/colors';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport './OAuthProviders.css';\n\ninterface Props {\n  identityProviders: IdentityProvider[];\n  returnTo: string;\n}\n\nexport default function OAuthProviders(props: Props) {\n  return (\n    <section className=\"oauth-providers\">\n      <ul>\n        {props.identityProviders.map(identityProvider => (\n          <li key={identityProvider.key}>\n            <a\n              href={\n                `${getBaseUrl()}/sessions/init/${identityProvider.key}` +\n                `?return_to=${encodeURIComponent(props.returnTo)}`\n              }\n              style={{\n                backgroundColor: identityProvider.backgroundColor,\n                color: getTextColor(identityProvider.backgroundColor, theme.secondFontColor)\n              }}>\n              <img\n                alt={identityProvider.name}\n                width=\"20\"\n                height=\"20\"\n                src={getBaseUrl() + identityProvider.iconPath}\n              />\n              <span>{defaultFormatLabel(identityProvider.name)}</span>\n            </a>\n            {identityProvider.helpMessage && (\n              <Tooltip overlay={identityProvider.helpMessage}>\n                <div className=\"oauth-providers-help\">\n                  <HelpIcon fill={theme.blue} />\n                </div>\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nfunction defaultFormatLabel(name: string) {\n  return translateWithParameters('login.login_with_x', name);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport OAuthProviders from './OAuthProviders';\nimport GlobalMessagesContainer from '../../../app/components/GlobalMessagesContainer';\nimport { IdentityProvider } from '../../../app/types';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport './LoginForm.css';\n\ninterface Props {\n  onSonarCloud: boolean;\n  identityProviders: IdentityProvider[];\n  onSubmit: (login: string, password: string) => Promise<void>;\n  returnTo: string;\n}\n\ninterface State {\n  collapsed: boolean;\n  loading: boolean;\n  login: string;\n  password: string;\n}\n\nexport default class LoginForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      collapsed: props.identityProviders.length > 0,\n      loading: false,\n      login: '',\n      password: ''\n    };\n  }\n\n  stopLoading = () => {\n    this.setState({ loading: false });\n  };\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    this.props\n      .onSubmit(this.state.login, this.state.password)\n      .then(this.stopLoading, this.stopLoading);\n  };\n\n  handleMoreOptionsClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ collapsed: false });\n  };\n\n  handleLoginChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ login: event.currentTarget.value });\n\n  handlePwdChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ password: event.currentTarget.value });\n\n  render() {\n    const loginTitle = this.props.onSonarCloud\n      ? translate('login.login_to_sonarcloud')\n      : translate('login.login_to_sonarqube');\n\n    return (\n      <div className=\"login-page\" id=\"login_form\">\n        <h1 className=\"login-title text-center\">{loginTitle}</h1>\n\n        {this.props.identityProviders.length > 0 && (\n          <OAuthProviders\n            identityProviders={this.props.identityProviders}\n            returnTo={this.props.returnTo}\n          />\n        )}\n\n        {this.state.collapsed ? (\n          <div className=\"text-center\">\n            <a\n              className=\"small text-muted js-more-options\"\n              href=\"#\"\n              onClick={this.handleMoreOptionsClick}>\n              {translate('login.more_options')}\n            </a>\n          </div>\n        ) : (\n          <form className=\"login-form\" onSubmit={this.handleSubmit}>\n            <GlobalMessagesContainer />\n\n            <div className=\"big-spacer-bottom\">\n              <label className=\"login-label\" htmlFor=\"login\">\n                {translate('login')}\n              </label>\n              <input\n                autoFocus={true}\n                className=\"login-input\"\n                id=\"login\"\n                maxLength={255}\n                name=\"login\"\n                onChange={this.handleLoginChange}\n                placeholder={translate('login')}\n                required={true}\n                type=\"text\"\n                value={this.state.login}\n              />\n            </div>\n\n            <div className=\"big-spacer-bottom\">\n              <label className=\"login-label\" htmlFor=\"password\">\n                {translate('password')}\n              </label>\n              <input\n                className=\"login-input\"\n                id=\"password\"\n                name=\"password\"\n                onChange={this.handlePwdChange}\n                placeholder={translate('password')}\n                required={true}\n                type=\"password\"\n                value={this.state.password}\n              />\n            </div>\n\n            <div>\n              <div className=\"text-right overflow-hidden\">\n                <DeferredSpinner className=\"spacer-right\" loading={this.state.loading} />\n                <SubmitButton className={classNames({ disabled: this.state.loading })}>\n                  {translate('sessions.log_in')}\n                </SubmitButton>\n                <Link className=\"spacer-left\" to=\"/\">\n                  {translate('cancel')}\n                </Link>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoginForm from './LoginForm';\nimport { doLogin } from '../../../store/rootActions';\nimport { getIdentityProviders } from '../../../api/users';\nimport { IdentityProvider } from '../../../app/types';\nimport { getBaseUrl } from '../../../helpers/urls';\n\ninterface Props {\n  doLogin: (login: string, password: string) => Promise<void>;\n  location: { hash?: string; pathName: string; query: { return_to?: string } };\n}\n\ninterface State {\n  identityProviders?: IdentityProvider[];\n}\n\nclass LoginFormContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    onSonarCloud: PropTypes.bool\n  };\n\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    getIdentityProviders().then(\n      identityProvidersResponse => {\n        if (this.mounted) {\n          this.setState({\n            identityProviders: identityProvidersResponse.identityProviders\n          });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getReturnUrl = () => {\n    const { location } = this.props;\n    const queryReturnTo = location.query['return_to'];\n    return queryReturnTo ? `${queryReturnTo}${location.hash}` : `${getBaseUrl()}/`;\n  };\n\n  handleSuccessfulLogin = () => {\n    window.location.href = this.getReturnUrl();\n  };\n\n  handleSubmit = (login: string, password: string) => {\n    return this.props.doLogin(login, password).then(this.handleSuccessfulLogin, () => {});\n  };\n\n  render() {\n    const { identityProviders } = this.state;\n    if (!identityProviders) {\n      return null;\n    }\n\n    return (\n      <LoginForm\n        identityProviders={identityProviders}\n        onSonarCloud={this.context.onSonarCloud}\n        onSubmit={this.handleSubmit}\n        returnTo={this.getReturnUrl()}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = null;\nconst mapDispatchToProps = { doLogin };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer as any);\n"],"sourceRoot":""}