{"version":3,"sources":["webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/apps/projectBranches/components/DeleteBranchModal.tsx","webpack:///./src/main/js/apps/projectBranches/components/SettingForm.tsx","webpack:///./src/main/js/apps/projectBranches/components/LeakPeriodForm.tsx","webpack:///./src/main/js/apps/projectBranches/components/RenameBranchModal.tsx","webpack:///./src/main/js/apps/projectBranches/components/BranchRow.tsx","webpack:///./src/main/js/apps/projectBranches/components/LongBranchesPatternForm.tsx","webpack:///./src/main/js/apps/projectBranches/components/LongBranchesPattern.tsx","webpack:///./src/main/js/apps/projectBranches/components/App.tsx","webpack:///./src/main/js/apps/projectBranches/components/AppContainer.ts"],"names":["__webpack_require__","StatusIndicator","_a","className","color","size","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","small-status-indicator","big-status-indicator","BranchStatus","branchLike","_b","concise","Object","_helpers_branches__WEBPACK_IMPORTED_MODULE_8__","status","totalIssues","bugs","vulnerabilities","codeSmells","qualityGateStatus","indicatorColor","getQualityGateColor","shouldDisplayHelper","label","_helpers_l10n__WEBPACK_IMPORTED_MODULE_9__","_helpers_measures__WEBPACK_IMPORTED_MODULE_10__","_controls_Tooltip__WEBPACK_IMPORTED_MODULE_6__","overlay","placement","_StatusIndicator__WEBPACK_IMPORTED_MODULE_1__","_icons_components_BugIcon__WEBPACK_IMPORTED_MODULE_3__","_icons_components_VulnerabilityIcon__WEBPACK_IMPORTED_MODULE_7__","_icons_components_CodeSmellIcon__WEBPACK_IMPORTED_MODULE_4__","_icons_components_HelpIcon__WEBPACK_IMPORTED_MODULE_5__","_ui_Level__WEBPACK_IMPORTED_MODULE_2__","level","small","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getBranches","project","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","then","r","branches","getPullRequests","pullRequests","deleteBranch","data","catch","deletePullRequest","renameBranch","name","_super","DeleteBranchModal","_this","apply","this","arguments","mounted","state","loading","handleSubmit","event","preventDefault","setState","helpers_branches","props","component","pullRequest","key","branch","onDelete","DeleteBranchModal_extends","prototype","componentDidMount","componentWillUnmount","render","header","l10n","index_js_exposed","Modal","contentLabel","onRequestClose","onClose","onSubmit","buttons","disabled","onClick","SettingForm","call","stopLoading","submitting","value","settings","setting","onChange","handleValueChange","currentTarget","handleResetClick","keys","SettingForm_extends","submitDisabled","dangerouslySetInnerHTML","__html","autoFocus","required","type","inherited","parentValue","LeakPeriodForm","handleCancelClick","LeakPeriodForm_extends","fetchSetting","components_SettingForm","RenameBranchModal","onRename","handleNameChange","RenameBranchModal_extends","htmlFor","id","maxLength","undefined","BranchRow","changingLeak","deleting","renaming","handleDeleteClick","handleDeletingStop","handleRenameClick","handleChange","handleRenamingStop","handleChangeLeakClick","handleChangingLeakStop","BranchRow_extends","renderActions","ActionsDropdown","destructive","components_DeleteBranchModal","components_RenameBranchModal","components_LeakPeriodForm","isOrphan","indented","BranchIcon","classnames","big-spacer-left","analysisDate","DateFromNow","date","LongBranchesPatternForm_LongBranchesPatternForm","LongBranchesPatternForm_assign","LongBranchesPattern","formOpen","closeForm","handleChangeClick","LongBranchesPattern_extends","App","App_extends","fetchPurgeSetting","branchLifeTime","length","renderBranchLifeTime","index_es","defaultMessage","values","days","measures","canAdmin","react_router_es","to","branchLikes","onBranchesChange","components_LongBranchesPattern","map","components_BranchRow","__webpack_exports__","es","rootReducer","components_App"],"mappings":"sKAkBGA,EAAA,MAWW,SAAAC,EAA2DC,OAA/BC,EAAAD,EAASC,UAAEC,EAAAF,EAAKE,MAAEC,EAAAH,EAAIG,KACvD,OACLC,EAAA,mBACWH,UAAAI,EACW,mBACbH,GAEqBI,yBAAkB,UAAZH,EACRI,uBACvB,QAD6BJ,GAMtCF,0KCzBGH,EAAA,MAoBW,SAAAU,EAA6DR,OAApCS,EAAAT,EAAUS,WAAEC,EAAAV,EAAeW,QAAfA,OAAA,IAAAD,GAAeA,EAChE,GAAuBE,OAAAC,EAAA,EAAAD,CAAYH,IAAiBG,OAAAC,EAAA,EAAAD,CAAYH,GAAE,CAChE,IAAeA,EAAOK,OACpB,OAAY,KAGd,IAAiBC,EACLN,EAAOK,OAAKE,KAAaP,EAAOK,OAAgBG,gBAAaR,EAAOK,OAAYI,WAChFJ,EAAaL,EAAOK,OAAmBK,kBAC/BC,EA2DxB,SAA2CN,GACzC,IAAkBM,EAAU,OACN,UAAZN,EACMM,EAAS,MACG,SAAXN,EACDM,EAAY,SACF,OAATN,IACDM,EAAW,SAE3B,OACFA,EArE8CC,CAASP,GAC1BQ,EAAkB,OAATR,GAAwBC,EAAK,EAEpDQ,EACcX,OAAAY,EAAA,EAAAZ,CAA0B,0BAAeA,OAAAa,EAAA,cAAAb,CAAOE,EACvE,WACG,OADIA,EACA,IAA0BF,OAAAY,EAAA,EAAAZ,CAAsC,sCACpEG,GAAK,IAEV,OAAiBJ,EACfP,EAAA,cAAQsB,EAAA,GAAQC,QAAOJ,EAAWK,UAAQ,SACxCxB,EAAA,oBAAaH,UAAgB,iBAC3BG,EAAA,wBAAsBW,GACtBX,EAAA,oBAAaH,UAAc,eACzBG,EAAA,cAAgByB,EAAA,GAAM3B,MAAgBkB,EAAMjB,KAIhD,aACFC,EAAA,oBAAaH,UAAgB,iBAC3BG,EAAA,oBAAaH,UAAsB,uBACjCG,EAAA,cAAgByB,EAAA,GAAM3B,MAAgBkB,EAAMjB,KACzC,WACLC,EAAA,oBAAaH,UAAc,eACdQ,EAAOK,OAAKE,KACvBZ,EAAA,cAAQ0B,EAAA,GAAU7B,UACf,wBACLG,EAAA,oBAAaH,UAAc,eACdQ,EAAOK,OAAgBG,gBAClCb,EAAA,cAAkB2B,EAAA,GAAU9B,UACzB,wBACLG,EAAA,oBAAaH,UAAc,eACdQ,EAAOK,OAAWI,WAC7Bd,EAAA,cAAc4B,EAAA,GAAU/B,UACrB,wBACmBqB,GACtBlB,EAAA,cAAQsB,EAAA,GACCC,QAAyBf,OAAAY,EAAA,EAAAZ,CACiB,gDAEhDG,IACDX,EAAA,oBAAaH,UAAc,eACzBG,EAAA,cAAS6B,EAAA,GAAUhC,UAK3B,iBACH,OAA4BW,OAAAC,EAAA,EAAAD,CAAYH,IACxBA,EAAOK,OAIfV,EAAA,cAAM8B,EAAA,GAAMC,MAAY1B,EAAOK,OAAkBK,kBAAOiB,OAAW,IAE9D,oNCpFbC,EAAAvC,EAAA,IAKG,SAAAwC,EAAqCC,GACzC,OAAA3B,OAAA4B,EAAA,QAAA5B,CAA2C,8BAAW2B,QAAGA,IAAKE,KAAC,SAACC,GAAI,OAACA,EAASC,UAChFN,EAAA,GAEM,SAAAO,EAAyCL,GAC7C,OAAA3B,OAAA4B,EAAA,QAAA5B,CAAgD,mCAAW2B,QAAGA,IAAKE,KACjE,SAACC,GAAI,OAACA,EAAaG,cAGvBR,EAAA,GAEM,SAAAS,EAAgEC,GACpE,OAAWnC,OAAA4B,EAAA,KAAA5B,CAA+B,+BAAOmC,GAAMC,MACzDX,EAAA,GAEM,SAAAY,EAA0EF,GAC9E,OAAWnC,OAAA4B,EAAA,KAAA5B,CAAoC,oCAAOmC,GAAMC,MAC9DX,EAAA,GAEM,SAAAa,EAAsCX,EAAcY,GACxD,OAAWvC,OAAA4B,EAAA,KAAA5B,CAA+B,gCAAW2B,UAAMY,KAAGA,IAAMH,MACtEX,EAAA,ibCNA,SAAAe,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAsECD,YArECF,EAAOI,SAAS,EAChBJ,EAAKK,OAAmBC,SAAU,GAUlCN,EAAYO,aAAG,SAA6CC,GACrDA,EAAkBC,iBACnBT,EAASU,UAAUJ,SAAU,KACpBhD,OAAAqD,EAAA,EAAArD,CAAqB0C,EAAMY,MACrCzD,YAAAG,OAAA+B,EAAA,EAAA/B,EACU2B,QAAMe,EAAMY,MAAUC,UAClBC,YAAMd,EAAMY,MAAWzD,WAErC4D,MAL0BzD,OAAA+B,EAAA,EAAA/B,EAMjB0D,OAAMhB,EAAMY,MAAWzD,WAAK0C,KAC3BZ,QAAMe,EAAMY,MAClBC,aACK1B,KACV,WACUa,EAAQI,UACVJ,EAASU,UAAUJ,SAAW,IAC9BN,EAAMY,MAAYK,aAG1B,WACUjB,EAAQI,SACVJ,EAASU,UAAUJ,SAAW,OAqC5CN,EAAA,OAtE+CkB,EAAAnB,EAAiCD,GAI9EC,EAAAoB,UAAiBC,kBAAjB,WACMlB,KAAQE,SACd,GAEAL,EAAAoB,UAAoBE,qBAApB,WACMnB,KAAQE,SACd,GA6BAL,EAAAoB,UAAMG,OAAN,WACU,IAAAnE,EAAA+C,KAAAU,MAA0BzD,WACtBoE,EAAYjE,OAAAkE,EAAA,EAAAlE,CACTA,OAAAqD,EAAA,EAAArD,CAAcH,GAAiC,+BAC5D,mBAEK,OACLsE,EAAA,cAAMC,EAAA,GAAaC,aAAQJ,EAAgBK,eAAM1B,KAAMU,MAAQiB,SAC7DJ,EAAA,wBAAiB9E,UAAa,cAC5B8E,EAAA,wBACOF,IACTE,EAAA,sBAAcK,SAAM5B,KAAaK,cAC/BkB,EAAA,qBAAc9E,UAAa,cACDW,OAAAkE,EAAA,EAAAlE,CACTA,OAAAqD,EAAA,EAAArD,CACVH,GACA,4CAA+B,+BACVG,OAAAqD,EAAA,EAAArD,CAEtBH,KACNsE,EAAA,wBAAiB9E,UAAa,cACvBuD,KAAMG,MAAQC,SAAImB,EAAA,mBAAY9E,UAA0B,yBAC7D8E,EAAA,cAAaM,EAAA,GAAUpF,UAAa,aAASqF,SAAM9B,KAAMG,MAAQC,SACrDhD,OAAAkE,EAAA,EAAAlE,CACG,WACfmE,EAAA,cAAgBM,EAAA,GAAQE,QAAM/B,KAAMU,MAAQiB,SAAYvE,OAAAkE,EAAA,EAAAlE,CAKlE,eACDyC,EAtED,CAAoD0B,EAAA,uUCDpD,SAAA3B,GAGE,SAAAoC,EAAwBtB,GAAxB,IAAAZ,EACEF,EAAAqC,KAAAjC,KAAYU,IAEbV,YALDF,EAAOI,SAAS,EAehBJ,EAAWoC,YAAG,WACJpC,EAAQI,SACVJ,EAASU,UAAa2B,YAAW,KAIzCrC,EAAYO,aAAG,SAA6CC,GACrDA,EAAkBC,iBAEf,IAAA6B,EAAAtC,EAAAK,MAAqBiC,MACnBA,IAINtC,EAASU,UAAa2B,YAAU,IACf/E,OAAAiF,EAAA,EAAAjF,EACb0D,OAAMhB,EAAMY,MAAOI,OAChBH,UAAMb,EAAMY,MAAQ3B,QAC1B8B,IAAMf,EAAMY,MAAQ4B,QAAIzB,IACtBuB,MACLA,IAAKnD,KAAKa,EAAMY,MAAS6B,SAAMzC,EACnCoC,eAEApC,EAAiB0C,kBAAG,SAA8ClC,GAC5DR,EAASU,UAAQ4B,MAAO9B,EAAcmC,cAC5CL,SAEAtC,EAAgB4C,iBAAG,WACb5C,EAASU,UAAa2B,YAAU,IACnB/E,OAAAiF,EAAA,EAAAjF,EACXuF,KAAM7C,EAAMY,MAAQ4B,QAAIzB,IACnBF,UAAMb,EAAMY,MAAQ3B,QACvB+B,OAAMhB,EAAMY,MAClBI,SAAK7B,KAAKa,EAAMY,MAAS6B,SAAMzC,EACnCoC,cA7CMpC,EAAMK,OAAegC,YAAO,EAAOC,MAAO1B,EAAQ4B,QAASF,OACjEtC,EA+FF,OArGyC8C,EAAAZ,EAAiCpC,GAQxEoC,EAAAf,UAAiBC,kBAAjB,WACMlB,KAAQE,SACd,GAEA8B,EAAAf,UAAoBE,qBAApB,WACMnB,KAAQE,SACd,GAsCA8B,EAAAf,UAAMG,OAAN,WACU,IAAAkB,EAAAtC,KAAAU,MAAuB4B,QACXO,EAAO7C,KAAMG,MAAWgC,YAAQnC,KAAMG,MAAMiC,QAAYE,EAAOF,MAE5E,OACLb,EAAA,sBAAcK,SAAM5B,KAAaK,cAC/BkB,EAAA,qBAAc9E,UAAa,cACzB8E,EAAA,qBACW9E,UAA6B,6BACfqG,yBAAUC,OAAW3F,OAAAkE,EAAA,EAAAlE,CAAC,YAAmBkF,EAAIzB,IACpE,mBACFU,EAAA,qBAAc9E,UAAoB,qBAChC8E,EAAA,uBACWyB,WAAM,EACNvG,UAAoB,oBACrB8F,SAAMvC,KAAkBwC,kBACxBS,UAAM,EACVC,KAAO,OACNd,MAAMpC,KAAMG,MACjBiC,QACME,EAAca,WACpB5B,EAAA,qBAAc9E,UAAkB,mBAAWW,OAAAkE,EAAA,EAAAlE,CAC5C,uBACQkF,EAAUa,WACVb,EAAgBc,aACrB7B,EAAA,qBAAc9E,UAAkB,mBACNW,OAAAkE,EAAA,EAAAlE,CAAqB,qBAASkF,EAI1Dc,gBACN7B,EAAA,wBAAiB9E,UAAa,eACnB6F,EAAUa,WACVb,EAAgBc,aACrB7B,EAAA,cAAOM,EAAA,GACIpF,UAAY,YACbqF,SAAM9B,KAAMG,MAAWgC,WACxBJ,QAAM/B,KAAiB0C,iBAC1BQ,KAAQ,SACF9F,OAAAkE,EAAA,EAAAlE,CAEb,qBACE4C,KAAMG,MAAWgC,YAAIZ,EAAA,mBAAY9E,UAA0B,yBAChE8E,EAAA,cAAaM,EAAA,GAASC,SAAgBe,GAAYzF,OAAAkE,EAAA,EAAAlE,CAAwB,SAC1EmE,EAAA,cAAgBM,EAAA,GAAQE,QAAM/B,KAAMU,MAAQiB,SAAYvE,OAAAkE,EAAA,EAAAlE,CAIhE,cACD4E,EArGD,CAA8CT,EAAA,8TCG9C,SAAA3B,GAAA,SAAAyD,IAAA,IAAAvD,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YA4DCD,YA3DCF,EAAOI,SAAS,EAChBJ,EAAKK,OAAmBC,SAAM,EAAY+B,YAAU,GA2BpDrC,EAAiBwD,kBAAG,SAA+ChD,GAC5DA,EAAkBC,iBACnBT,EAAMY,MACZiB,WA4BF7B,EAAA,OA5D4CyD,EAAAF,EAAiCzD,GAI3EyD,EAAApC,UAAiBC,kBAAjB,WACMlB,KAAQE,SAAQ,EAChBF,KACNwD,gBAEAH,EAAApC,UAAoBE,qBAApB,WACMnB,KAAQE,SACd,GAEAmD,EAAApC,UAAYuC,aAAZ,eAAA1D,EAcCE,KAbKA,KAASQ,UAAUJ,SAAU,IACxBhD,OAAAiF,EAAA,EAAAjF,EAAOuF,KAjBoB,oBAiBIhC,UAAMX,KAAMU,MAAQ3B,QAAQ+B,OAAMd,KAAMU,MAAUI,SAAK7B,KAC7F,SAAQoD,GACEvC,EAAQI,SACVJ,EAASU,UAAUJ,SAAO,EAASkC,QAAUD,EAAO,MAG5D,WACUvC,EAAQI,SACVJ,EAASU,UAAUJ,SAAW,OAW1CiD,EAAApC,UAAMG,OAAN,WACU,IAAAkB,EAAAtC,KAAAG,MAAuBmC,QACnBjB,EAAYjE,OAAAkE,EAAA,EAAAlE,CAA6B,4BAE9C,OACLmE,EAAA,cAAMC,EAAA,GAAaC,aAAQJ,EAAgBK,eAAM1B,KAAMU,MAAQiB,SAC7DJ,EAAA,wBAAiB9E,UAAa,cAC5B8E,EAAA,wBACOF,IACJrB,KAAMG,MAAYC,SACrBmB,EAAA,qBAAc9E,UAAa,cACzB8E,EAAA,mBAAY9E,UAEf,aACW6F,GACVf,EAAA,cAAYkC,GACJ3C,OAAMd,KAAMU,MAAOI,OACjByB,SAAMvC,KAAMU,MAAQiB,QACrBA,QAAM3B,KAAMU,MAAQiB,QACpB5C,QAAMiB,KAAMU,MAAQ3B,QACpBuD,QAKjBA,MACDe,EA5DD,CAAiD9B,EAAA,8TCFjD,SAAA3B,GAAA,SAAA8D,IAAA,IAAA5D,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YA6ECD,YA5ECF,EAAOI,SAAS,EAChBJ,EAAKK,OAAmBC,SAAU,GAUlCN,EAAYO,aAAG,SAA6CC,GACrDA,EAAkBC,iBACdT,EAAMK,MAAKR,OAGhBG,EAASU,UAAUJ,SAAU,IACrBhD,OAAA+B,EAAA,EAAA/B,CAAK0C,EAAMY,MAAUC,UAAMb,EAAMK,MAAMR,MAAKV,KACtD,WACUa,EAAQI,UACVJ,EAASU,UAAUJ,SAAW,IAC9BN,EAAMY,MAAYiD,aAG1B,WACU7D,EAAQI,SACVJ,EAASU,UAAUJ,SAAW,QAM1CN,EAAgB8D,iBAAG,SAA8CtD,GAC3DR,EAASU,UAAOb,KAAOW,EAAcmC,cAC3CL,SA0CFtC,EAAA,OA7E+C+D,EAAAH,EAAiC9D,GAI9E8D,EAAAzC,UAAiBC,kBAAjB,WACMlB,KAAQE,SACd,GAEAwD,EAAAzC,UAAoBE,qBAApB,WACMnB,KAAQE,SACd,GA2BAwD,EAAAzC,UAAMG,OAAN,WACU,IAAAN,EAAAd,KAAAU,MAAsBI,OAClBO,EAAYjE,OAAAkE,EAAA,EAAAlE,CAAoB,mBACxByF,EACd7C,KAAMG,MAAQC,UAASJ,KAAMG,MAAKR,MAAQK,KAAMG,MAAKR,OAAWmB,EAAMnB,KAErE,OACL4B,EAAA,cAAMC,EAAA,GAAaC,aAAQJ,EAAgBK,eAAM1B,KAAMU,MAAQiB,SAC7DJ,EAAA,wBAAiB9E,UAAa,cAC5B8E,EAAA,wBACOF,IACTE,EAAA,sBAAcK,SAAM5B,KAAaK,cAC/BkB,EAAA,qBAAc9E,UAAa,cACzB8E,EAAA,qBAAc9E,UAAc,eAC1B8E,EAAA,uBAAcuC,QAAqB,sBACvB1G,OAAAkE,EAAA,EAAAlE,CAAY,YACtBmE,EAAA,oBAAa9E,UAAY,aACnB,MACR8E,EAAA,uBACWyB,WAAM,EACbe,GAAqB,qBACdC,UAAK,IACVrE,KAAO,OACH4C,SAAMvC,KAAiB4D,iBACvBX,UAAM,EACVtG,KAAI,GACJuG,KAAO,OACNd,WAAiC6B,IAA3BjE,KAAMG,MAAKR,KAAqBK,KAAMG,MAAOR,KAAOmB,EAG/DnB,SACN4B,EAAA,wBAAiB9E,UAAa,cACvBuD,KAAMG,MAAQC,SAAImB,EAAA,mBAAY9E,UAA0B,yBAC7D8E,EAAA,cAAaM,EAAA,GAASC,SAAgBe,GAAYzF,OAAAkE,EAAA,EAAAlE,CAA0B,WAC5EmE,EAAA,cAAgBM,EAAA,GAAQE,QAAM/B,KAAMU,MAAQiB,SAAYvE,OAAAkE,EAAA,EAAAlE,CAKlE,eACDsG,EA7ED,CAAoDnC,EAAA,kWCgBpD,SAAA3B,GAAA,SAAAsE,IAAA,IAAApE,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAmICD,YAlICF,EAAOI,SAAS,EAChBJ,EAAKK,OAAwBgE,cAAO,EAAUC,UAAO,EAAUC,UAAU,GAUzEvE,EAAiBwE,kBAAG,WACdxE,EAASU,UAAW4D,UAC1B,KAEAtE,EAAkByE,mBAAG,WACfzE,EAASU,UAAW4D,UAC1B,KAEAtE,EAAiB0E,kBAAG,WACd1E,EAASU,UAAW6D,UAC1B,KAEAvE,EAAY2E,aAAG,WACL3E,EAAQI,UACVJ,EAASU,UAAW4D,UAAO,EAAUC,UAAW,IAChDvE,EAAMY,MAAY6B,aAI1BzC,EAAkB4E,mBAAG,WACf5E,EAASU,UAAW6D,UAC1B,KAEAvE,EAAqB6E,sBAAG,WAClB7E,EAASU,UAAe2D,cAC9B,KAEArE,EAAsB8E,uBAAG,WACf9E,EAAQI,SACVJ,EAASU,UAAe2D,cAAW,KA0F7CrE,EAAA,OAnIuC+E,EAAAX,EAAiCtE,GAItEsE,EAAAjD,UAAiBC,kBAAjB,WACMlB,KAAQE,SACd,GAEAgE,EAAAjD,UAAoBE,qBAApB,WACMnB,KAAQE,SACd,GAmCAgE,EAAAjD,UAAa6D,cAAb,WACQ,IAAAtI,EAAAwD,KAAsCU,MAApCzD,EAAAT,EAAUS,WAAE0D,EAAAnE,EAAyBmE,UACtC,OACLY,EAAA,oBAAa9E,UAAyB,0BACpC8E,EAAA,cAAgBwD,EAAA,GAAUtI,UAAiB,kBACtBW,OAAAqD,EAAA,EAAArD,CAAgBH,IACjCsE,EAAA,cAAoBwD,EAAA,GACTtI,UAAwB,wBAC1BsF,QAAM/B,KAAsB2E,uBACzBvH,OAAAkE,EAAA,EAAAlE,CAEb,6BACkBA,OAAAqD,EAAA,EAAArD,CAAYH,IAAIsE,EAAA,cAAuBwD,EAAA,EAAG,MAChD3H,OAAAqD,EAAA,EAAArD,CAAeH,GAC1BsE,EAAA,cAAoBwD,EAAA,GAAUtI,UAAY,YAAQsF,QAAM/B,KAAkBwE,mBAC9DpH,OAAAkE,EAAA,EAAAlE,CAEV,oBACFmE,EAAA,cAAoBwD,EAAA,GACTtI,UAAY,YACVuI,aAAM,EACVjD,QAAM/B,KAAkBsE,mBACrBlH,OAAAkE,EAAA,EAAAlE,CACKA,OAAAqD,EAAA,EAAArD,CAAcH,GAAiC,+BAIlD,qBAEb+C,KAAMG,MAAaiE,UACtB7C,EAAA,cAAkB0D,GACNhI,WAAYA,EACb0D,UAAWA,EACbgB,QAAM3B,KAAmBuE,mBACxBxD,SAAMf,KAEjByE,eAEIzE,KAAMG,MAASkE,UACNjH,OAAAqD,EAAA,EAAArD,CAAgBH,IAC1BsE,EAAA,cAAkB2D,GACVpE,OAAY7D,EACT0D,UAAWA,EACbgB,QAAM3B,KAAmB0E,mBACxBf,SAAM3D,KAEjByE,eAEEzE,KAAMG,MAAagE,cACJ/G,OAAAqD,EAAA,EAAArD,CAAgBH,IAChCsE,EAAA,cAAe4D,GACPrE,OAAY7D,EAAK0C,KAChBgC,QAAM3B,KAAuB4E,uBAC7B7F,QAKnB4B,MAEAuD,EAAAjD,UAAMG,OAAN,WACQ,IAAA5E,EAAAwD,KAAqCU,MAAnCzD,EAAAT,EAAUS,WAAEmI,EAAA5I,EAAwB4I,SAC9BC,GAAuBjI,OAAAqD,EAAA,EAAArD,CAAYH,IAAiBG,OAAAqD,EAAA,EAAArD,CAAaH,MAAcmI,EAEtF,OACL7D,EAAA,wBACEA,EAAA,wBACEA,EAAA,cAAW+D,EAAA,GACCrI,WAAYA,EACbR,UAAY8I,EAAsB,uBAAqBC,kBAChEH,MACuBjI,OAAAqD,EAAA,EAAArD,CAAYH,GACxBG,OAAAqD,EAAA,EAAArD,CAAgBH,IAC3BsE,EAAA,qBAAc9E,UAA4B,6BAAWW,OAAAkE,EAAA,EAAAlE,CAEpD,0BACLmE,EAAA,oBAAa9E,UAAyB,0BACpC8E,EAAA,cAAavE,EAAA,GAAWC,WACrBA,KACLsE,EAAA,oBAAa9E,UAAyB,0BACzBQ,EAAawI,cAAIlE,EAAA,cAAYmE,EAAA,GAAKC,KAAY1I,EACtDwI,gBACAzF,KAGX8E,kBACDZ,EAnID,CAA4C3C,EAAA,kLCtB9B,SAAAqE,EAA8ClF,GAC1D,IAAYW,EAAYjE,OAAAkE,EAAA,EAAAlE,CAA+C,8CAEhE,OACLmE,EAAA,cAAMC,EAAA,GAAaC,aAAQJ,EAAgBK,eAAOhB,EAAQiB,SACxDJ,EAAA,wBAAiB9E,UAAa,cAC5B8E,EAAA,wBACOF,IACTE,EAAA,cAAYkC,EAAAoC,KAGlBnF,wTCPA,SAAAd,GAAA,SAAAkG,IAAA,IAAAhG,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAgECD,YA/DCF,EAAOI,SAAS,EAChBJ,EAAKK,OAAoB4F,UAAU,GAsBnCjG,EAASkG,UAAG,WACFlG,EAAQI,SACVJ,EAASU,UAAWuF,UAAW,KAIvCjG,EAAiBmG,kBAAG,WACdnG,EAASU,UAAWuF,UAC1B,KAEAjG,EAAY2E,aAAG,WACL3E,EAAQI,SACVJ,EAAe0D,eAAKvE,KAAKa,EAAUkG,UAAMlG,EAAYkG,YA4B/DlG,EAAA,OAhEiDoG,EAAAJ,EAAiClG,GAIhFkG,EAAA7E,UAAiBC,kBAAjB,WACMlB,KAAQE,SAAQ,EAChBF,KACNwD,gBAEAsC,EAAA7E,UAAoBE,qBAApB,WACMnB,KAAQE,SACd,GAEA4F,EAAA7E,UAAYuC,aAAZ,eAAA1D,EASCE,KARC,OAAA5C,OAAAiF,EAAA,EAAAjF,EAAuBuF,KAhB+C,uCAgBfhC,UAAMX,KAAMU,MAAW3B,UAAKE,KACjF,SAAQoD,GACEvC,EAAQI,SACVJ,EAASU,UAAU8B,QAAUD,EAAO,MAG5C,eAoBJyD,EAAA7E,UAAMG,OAAN,WACU,IAAAkB,EAAAtC,KAAAG,MAAuBmC,QAE/B,OAAYA,EAKVf,EAAA,qBAAc9E,UAAwB,yBAC1BW,OAAAkE,EAAA,EAAAlE,CAAyC,yCAC9C,KACLmE,EAAA,4BAAgBe,EAAgBF,OAChCb,EAAA,cAAWM,EAAA,GAAUpF,UAA2B,2BAAQsF,QAAM/B,KAAsBiG,oBAC/EjG,KAAMG,MAAa4F,UACtBxE,EAAA,cAAwBqE,GACfjE,QAAM3B,KAAUgG,UACfzD,SAAMvC,KAAayE,aACpB1F,QAAMiB,KAAMU,MAAQ3B,QACpBuD,QAKjBA,KAnBgB,MAoBjBwD,EAhED,CAAsDvE,EAAA,sUCatD,SAAA3B,GAAA,SAAAuG,IAAA,IAAArG,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YA+GCD,YA9GCF,EAAOI,SAAS,EAChBJ,EAAKK,OAAmBC,SAAS,GA6GnCN,EAAA,OA/GiCsG,EAAAD,EAAiCvG,GAIhEuG,EAAAlF,UAAiBC,kBAAjB,WACMlB,KAAQE,SAAQ,EAChBF,KACNqG,qBAEAF,EAAAlF,UAAoBE,qBAApB,WACMnB,KAAQE,SACd,GAEAiG,EAAAlF,UAAiBoF,kBAAjB,eAAAvG,EAeCE,KAdKA,KAASQ,UAAUJ,SAAU,IACxBhD,OAAAiF,EAAA,EAAAjF,EAAOuF,KAjB4E,kEAiB3C1D,KAC/C,SAAQoD,GACEvC,EAAQI,SACVJ,EAASU,UACJJ,SAAO,EACAkG,eAAUjE,EAAOkE,OAAM,EAASlE,EAAG,GAAQD,WACxD6B,KAGP,WACMnE,EAASU,UAAUJ,SACzB,OAIJ+F,EAAAlF,UAAoBuF,qBAApB,WAEE,OADQxG,KAAAG,MAA8BmG,eAMpC/E,EAAA,mBAAY9E,UAAmB,oBAC7B8E,EAAA,cAAiBkF,EAAA,GACDC,eAAWtJ,OAAAkE,EAAA,EAAAlE,CAAmC,mCAC1D2G,GAAkC,kCAC9B4C,QAAQC,KAAexJ,OAAAyJ,EAAA,cAAAzJ,CAAK4C,KAAMG,MAAemG,eACvD,UACGtG,KAAMU,MAAaoG,UACtBvF,EAAA,cAAAA,EAAA,cACEA,EAAA,mBAAM,MACNA,EAAA,cAAiBkF,EAAA,GACDC,eAAWtJ,OAAAkE,EAAA,EAAAlE,CAAyC,yCAChE2G,GAAwC,wCACpC4C,QAAYtE,SAAEd,EAAA,cAAKwF,EAAA,MAAGC,GAAkB,mBAAW5J,OAAAkE,EAAA,EAAAlE,CAMrE,uBAtBgB,MAwBhB+I,EAAAlF,UAAMG,OAAN,WACQ,IAAA5E,EAAAwD,KAAyDU,MAAvDuG,EAAAzK,EAAWyK,YAAEtG,EAAAnE,EAASmE,UAAEuG,EAAA1K,EAAgC0K,iBAEhE,OAAQlH,KAAMG,MAAQC,QAElBmB,EAAA,qBAAc9E,UAAoB,qBAChC8E,EAAA,wBAAiB9E,UAAc,eAC7B8E,EAAA,oBAAa9E,UAAa,cAAWW,OAAAkE,EAAA,EAAAlE,CAC9B,2BACTmE,EAAA,mBAAY9E,UAEd,aAGG8E,EAAA,qBACS9E,UAAoB,qBAChC8E,EAAA,wBAAiB9E,UAAc,eAC7B8E,EAAA,oBAAa9E,UAAa,cAAWW,OAAAkE,EAAA,EAAAlE,CAA+B,0BACpEmE,EAAA,cAAoB4F,GAAQpI,QAAW4B,EAAQE,MAC/CU,EAAA,mBAAY9E,UAAmB,oBAAWW,OAAAkE,EAAA,EAAAlE,CAA0C,sCAC/E4C,KACEwG,wBAAAjF,EAAA,qBAEK9E,UAAgC,iCAAA8E,EAAA,uBAC5B9E,UAAyB,0BACvC8E,EAAA,2BACEA,EAAA,wBACEA,EAAA,wBAAcnE,OAAAkE,EAAA,EAAAlE,CAAgB,WAC9BmE,EAAA,oBAAa9E,UAAyB,0BAAWW,OAAAkE,EAAA,EAAAlE,CAAgB,WACjEmE,EAAA,oBAAa9E,UAAyB,0BAC1BW,OAAAkE,EAAA,EAAAlE,CACP,gCACLmE,EAAA,oBAAa9E,UAAyB,0BAAWW,OAAAkE,EAAA,EAAAlE,CAE7C,cAAAmE,EAAA,2BAAAnE,OAAAqD,EAAA,EAAArD,CAE0B6J,GAAIG,IAAC,SAAUnK,GAAI,OACjDsE,EAAA,cAAU8F,GACEpK,WAAYA,EACb0D,UAAWA,EAAIE,IAChBuE,UACchI,OAAAqD,EAAA,EAAArD,CAAYH,IAAiBG,OAAAqD,EAAA,EAAArD,CAAaH,KACpDA,EAASmI,SAElBvE,IAAkBzD,OAAAqD,EAAA,EAAArD,CAAYH,GACzBsF,SAEX2E,WAOdf,EA/GD,CAAsC5E,EAAA,sBCtBtC+F,EAAA,QAAsBlK,OAAAmK,EAAA,QAAAnK,CAJE,SAAW+C,GAAK,OAC9B2G,SAAa1J,OAAAoK,EAAA,YAAApK,CAAO+C,GAC5B2G,WAEF,CAA4DW","file":"js/274.f29de2e0.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport StatusIndicator from './StatusIndicator';\nimport Level from '../ui/Level';\nimport BugIcon from '../icons-components/BugIcon';\nimport CodeSmellIcon from '../icons-components/CodeSmellIcon';\nimport HelpIcon from '../icons-components/HelpIcon';\nimport Tooltip from '../controls/Tooltip';\nimport VulnerabilityIcon from '../icons-components/VulnerabilityIcon';\nimport { BranchLike } from '../../app/types';\nimport { isShortLivingBranch, isPullRequest, isLongLivingBranch } from '../../helpers/branches';\nimport { translateWithParameters } from '../../helpers/l10n';\nimport { formatMeasure } from '../../helpers/measures';\nimport './BranchStatus.css';\n\ninterface Props {\n  branchLike: BranchLike;\n  concise?: boolean;\n}\n\nexport default function BranchStatus({ branchLike, concise = false }: Props) {\n  if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n    if (!branchLike.status) {\n      return null;\n    }\n\n    const totalIssues =\n      branchLike.status.bugs + branchLike.status.vulnerabilities + branchLike.status.codeSmells;\n    const status = branchLike.status.qualityGateStatus;\n    const indicatorColor = getQualityGateColor(status);\n    const shouldDisplayHelper = status === 'OK' && totalIssues > 0;\n\n    const label =\n      translateWithParameters('overview.quality_gate_x', formatMeasure(status, 'LEVEL')) +\n      (status !== 'OK'\n        ? ' ' + translateWithParameters('overview.quality_gate_failed_with_x', totalIssues)\n        : '');\n\n    return concise ? (\n      <Tooltip overlay={label} placement=\"right\">\n        <ul className=\"branch-status\">\n          <li>{totalIssues}</li>\n          <li className=\"spacer-left\">\n            <StatusIndicator color={indicatorColor} size=\"small\" />\n          </li>\n        </ul>\n      </Tooltip>\n    ) : (\n      <ul className=\"branch-status\">\n        <li className=\"little-spacer-right\">\n          <StatusIndicator color={indicatorColor} size=\"small\" />\n        </li>\n        <li className=\"spacer-left\">\n          {branchLike.status.bugs}\n          <BugIcon className=\"little-spacer-left\" />\n        </li>\n        <li className=\"spacer-left\">\n          {branchLike.status.vulnerabilities}\n          <VulnerabilityIcon className=\"little-spacer-left\" />\n        </li>\n        <li className=\"spacer-left\">\n          {branchLike.status.codeSmells}\n          <CodeSmellIcon className=\"little-spacer-left\" />\n        </li>\n        {shouldDisplayHelper && (\n          <Tooltip\n            overlay={translateWithParameters(\n              'branches.short_lived.quality_gate.description',\n              totalIssues\n            )}>\n            <li className=\"spacer-left\">\n              <HelpIcon className=\"text-info\" />\n            </li>\n          </Tooltip>\n        )}\n      </ul>\n    );\n  } else if (isLongLivingBranch(branchLike)) {\n    if (!branchLike.status) {\n      return null;\n    }\n\n    return <Level level={branchLike.status.qualityGateStatus} small={true} />;\n  } else {\n    return null;\n  }\n}\n\nfunction getQualityGateColor(status: string) {\n  let indicatorColor = 'gray';\n  if (status === 'ERROR') {\n    indicatorColor = 'red';\n  } else if (status === 'WARN') {\n    indicatorColor = 'orange';\n  } else if (status === 'OK') {\n    indicatorColor = 'green';\n  }\n  return indicatorColor;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from '../helpers/request';\nimport { Branch, PullRequest } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { deleteBranch, deletePullRequest } from '../../../api/branches';\nimport { BranchLike } from '../../../app/types';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { isPullRequest, getBranchLikeDisplayName } from '../../../helpers/branches';\n\ninterface Props {\n  branchLike: BranchLike;\n  component: string;\n  onClose: () => void;\n  onDelete: () => void;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class DeleteBranchModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const request = isPullRequest(this.props.branchLike)\n      ? deletePullRequest({\n          project: this.props.component,\n          pullRequest: this.props.branchLike.key\n        })\n      : deleteBranch({\n          branch: this.props.branchLike.name,\n          project: this.props.component\n        });\n    request.then(\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n          this.props.onDelete();\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { branchLike } = this.props;\n    const header = translate(\n      isPullRequest(branchLike) ? 'branches.pull_request.delete' : 'branches.delete'\n    );\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            {translateWithParameters(\n              isPullRequest(branchLike)\n                ? 'branches.pull_request.delete.are_you_sure'\n                : 'branches.delete.are_you_sure',\n              getBranchLikeDisplayName(branchLike)\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"button-red\" disabled={this.state.loading}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SettingValue, setSimpleSettingValue, resetSettingValue } from '../../../api/settings';\nimport { Button, SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  branch?: string;\n  onClose: () => void;\n  onChange: () => void;\n  project: string;\n  setting: SettingValue;\n}\n\ninterface State {\n  submitting: boolean;\n  value?: string;\n}\n\nexport default class SettingForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { submitting: false, value: props.setting.value };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { value } = this.state;\n    if (!value) {\n      return;\n    }\n\n    this.setState({ submitting: true });\n    setSimpleSettingValue({\n      branch: this.props.branch,\n      component: this.props.project,\n      key: this.props.setting.key,\n      value\n    }).then(this.props.onChange, this.stopLoading);\n  };\n\n  handleValueChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ value: event.currentTarget.value });\n  };\n\n  handleResetClick = () => {\n    this.setState({ submitting: true });\n    resetSettingValue({\n      keys: this.props.setting.key,\n      component: this.props.project,\n      branch: this.props.branch\n    }).then(this.props.onChange, this.stopLoading);\n  };\n\n  render() {\n    const { setting } = this.props;\n    const submitDisabled = this.state.submitting || this.state.value === setting.value;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"modal-body\">\n          <div\n            className=\"big-spacer-bottom markdown\"\n            dangerouslySetInnerHTML={{ __html: translate(`property.${setting.key}.description`) }}\n          />\n          <div className=\"big-spacer-bottom\">\n            <input\n              autoFocus={true}\n              className=\"input-super-large\"\n              onChange={this.handleValueChange}\n              required={true}\n              type=\"text\"\n              value={this.state.value}\n            />\n            {setting.inherited && (\n              <div className=\"note spacer-top\">{translate('settings._default')}</div>\n            )}\n            {!setting.inherited &&\n              setting.parentValue && (\n                <div className=\"note spacer-top\">\n                  {translateWithParameters('settings.default_x', setting.parentValue)}\n                </div>\n              )}\n          </div>\n        </div>\n        <footer className=\"modal-foot\">\n          {!setting.inherited &&\n            setting.parentValue && (\n              <Button\n                className=\"pull-left\"\n                disabled={this.state.submitting}\n                onClick={this.handleResetClick}\n                type=\"reset\">\n                {translate('reset_to_default')}\n              </Button>\n            )}\n          {this.state.submitting && <i className=\"spinner spacer-right\" />}\n          <SubmitButton disabled={submitDisabled}>{translate('save')}</SubmitButton>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </footer>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SettingForm from './SettingForm';\nimport { translate } from '../../../helpers/l10n';\nimport { getValues, SettingValue } from '../../../api/settings';\nimport Modal from '../../../components/controls/Modal';\n\ninterface Props {\n  branch: string;\n  onClose: () => void;\n  project: string;\n}\n\ninterface State {\n  loading: boolean;\n  setting?: SettingValue;\n  submitting: boolean;\n  value?: string;\n}\n\nconst LEAK_PERIOD = 'sonar.leak.period';\n\nexport default class LeakPeriodForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true, submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSetting() {\n    this.setState({ loading: true });\n    getValues({ keys: LEAK_PERIOD, component: this.props.project, branch: this.props.branch }).then(\n      settings => {\n        if (this.mounted) {\n          this.setState({ loading: false, setting: settings[0] });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleCancelClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { setting } = this.state;\n    const header = translate('branches.set_leak_period');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        {this.state.loading && (\n          <div className=\"modal-body\">\n            <i className=\"spinner\" />\n          </div>\n        )}\n        {setting && (\n          <SettingForm\n            branch={this.props.branch}\n            onChange={this.props.onClose}\n            onClose={this.props.onClose}\n            project={this.props.project}\n            setting={setting}\n          />\n        )}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { renameBranch } from '../../../api/branches';\nimport { MainBranch } from '../../../app/types';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  branch: MainBranch;\n  component: string;\n  onClose: () => void;\n  onRename: () => void;\n}\n\ninterface State {\n  loading: boolean;\n  name?: string;\n}\n\nexport default class RenameBranchModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!this.state.name) {\n      return;\n    }\n    this.setState({ loading: true });\n    renameBranch(this.props.component, this.state.name).then(\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n          this.props.onRename();\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  render() {\n    const { branch } = this.props;\n    const header = translate('branches.rename');\n    const submitDisabled =\n      this.state.loading || !this.state.name || this.state.name === branch.name;\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"rename-branch-name\">\n                {translate('new_name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                autoFocus={true}\n                id=\"rename-branch-name\"\n                maxLength={100}\n                name=\"name\"\n                onChange={this.handleNameChange}\n                required={true}\n                size={50}\n                type=\"text\"\n                value={this.state.name !== undefined ? this.state.name : branch.name}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled}>{translate('rename')}</SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport DeleteBranchModal from './DeleteBranchModal';\nimport LeakPeriodForm from './LeakPeriodForm';\nimport RenameBranchModal from './RenameBranchModal';\nimport { BranchLike } from '../../../app/types';\nimport BranchStatus from '../../../components/common/BranchStatus';\nimport BranchIcon from '../../../components/icons-components/BranchIcon';\nimport {\n  isShortLivingBranch,\n  isLongLivingBranch,\n  isMainBranch,\n  getBranchLikeDisplayName,\n  isPullRequest\n} from '../../../helpers/branches';\nimport { translate } from '../../../helpers/l10n';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport ActionsDropdown, {\n  ActionsDropdownItem,\n  ActionsDropdownDivider\n} from '../../../components/controls/ActionsDropdown';\n\ninterface Props {\n  branchLike: BranchLike;\n  component: string;\n  isOrphan?: boolean;\n  onChange: () => void;\n}\n\ninterface State {\n  changingLeak: boolean;\n  deleting: boolean;\n  renaming: boolean;\n}\n\nexport default class BranchRow extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { changingLeak: false, deleting: false, renaming: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleting: true });\n  };\n\n  handleDeletingStop = () => {\n    this.setState({ deleting: false });\n  };\n\n  handleRenameClick = () => {\n    this.setState({ renaming: true });\n  };\n\n  handleChange = () => {\n    if (this.mounted) {\n      this.setState({ deleting: false, renaming: false });\n      this.props.onChange();\n    }\n  };\n\n  handleRenamingStop = () => {\n    this.setState({ renaming: false });\n  };\n\n  handleChangeLeakClick = () => {\n    this.setState({ changingLeak: true });\n  };\n\n  handleChangingLeakStop = () => {\n    if (this.mounted) {\n      this.setState({ changingLeak: false });\n    }\n  };\n\n  renderActions() {\n    const { branchLike, component } = this.props;\n    return (\n      <td className=\"thin nowrap text-right\">\n        <ActionsDropdown className=\"ig-spacer-left\">\n          {isLongLivingBranch(branchLike) && (\n            <ActionsDropdownItem\n              className=\"js-change-leak-period\"\n              onClick={this.handleChangeLeakClick}>\n              {translate('branches.set_leak_period')}\n            </ActionsDropdownItem>\n          )}\n          {isLongLivingBranch(branchLike) && <ActionsDropdownDivider />}\n          {isMainBranch(branchLike) ? (\n            <ActionsDropdownItem className=\"js-rename\" onClick={this.handleRenameClick}>\n              {translate('branches.rename')}\n            </ActionsDropdownItem>\n          ) : (\n            <ActionsDropdownItem\n              className=\"js-delete\"\n              destructive={true}\n              onClick={this.handleDeleteClick}>\n              {translate(\n                isPullRequest(branchLike) ? 'branches.pull_request.delete' : 'branches.delete'\n              )}\n            </ActionsDropdownItem>\n          )}\n        </ActionsDropdown>\n\n        {this.state.deleting && (\n          <DeleteBranchModal\n            branchLike={branchLike}\n            component={component}\n            onClose={this.handleDeletingStop}\n            onDelete={this.handleChange}\n          />\n        )}\n\n        {this.state.renaming &&\n          isMainBranch(branchLike) && (\n            <RenameBranchModal\n              branch={branchLike}\n              component={component}\n              onClose={this.handleRenamingStop}\n              onRename={this.handleChange}\n            />\n          )}\n\n        {this.state.changingLeak &&\n          isLongLivingBranch(branchLike) && (\n            <LeakPeriodForm\n              branch={branchLike.name}\n              onClose={this.handleChangingLeakStop}\n              project={component}\n            />\n          )}\n      </td>\n    );\n  }\n\n  render() {\n    const { branchLike, isOrphan } = this.props;\n    const indented = (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) && !isOrphan;\n\n    return (\n      <tr>\n        <td>\n          <BranchIcon\n            branchLike={branchLike}\n            className={classNames('little-spacer-right', { 'big-spacer-left': indented })}\n          />\n          {getBranchLikeDisplayName(branchLike)}\n          {isMainBranch(branchLike) && (\n            <div className=\"outline-badge spacer-left\">{translate('branches.main_branch')}</div>\n          )}\n        </td>\n        <td className=\"thin nowrap text-right\">\n          <BranchStatus branchLike={branchLike} />\n        </td>\n        <td className=\"thin nowrap text-right\">\n          {branchLike.analysisDate && <DateFromNow date={branchLike.analysisDate} />}\n        </td>\n        {this.renderActions()}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SettingForm from './SettingForm';\nimport { translate } from '../../../helpers/l10n';\nimport { SettingValue } from '../../../api/settings';\nimport Modal from '../../../components/controls/Modal';\n\ninterface Props {\n  onChange: () => void;\n  onClose: () => void;\n  project: string;\n  setting: SettingValue;\n}\n\nexport default function LongBranchesPatternForm(props: Props) {\n  const header = translate('branches.detection_of_long_living_branches');\n\n  return (\n    <Modal contentLabel={header} onRequestClose={props.onClose}>\n      <header className=\"modal-head\">\n        <h2>{header}</h2>\n      </header>\n      <SettingForm {...props} />\n    </Modal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport LongBranchesPatternForm from './LongBranchesPatternForm';\nimport { getValues, SettingValue } from '../../../api/settings';\nimport { EditButton } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  project: string;\n}\n\ninterface State {\n  formOpen: boolean;\n  setting?: SettingValue;\n}\n\nexport const LONG_BRANCH_PATTERN = 'sonar.branch.longLivedBranches.regex';\n\nexport default class LongBranchesPattern extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { formOpen: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSetting() {\n    return getValues({ keys: LONG_BRANCH_PATTERN, component: this.props.project }).then(\n      settings => {\n        if (this.mounted) {\n          this.setState({ setting: settings[0] });\n        }\n      },\n      () => {}\n    );\n  }\n\n  closeForm = () => {\n    if (this.mounted) {\n      this.setState({ formOpen: false });\n    }\n  };\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  handleChange = () => {\n    if (this.mounted) {\n      this.fetchSetting().then(this.closeForm, this.closeForm);\n    }\n  };\n\n  render() {\n    const { setting } = this.state;\n\n    if (!setting) {\n      return null;\n    }\n\n    return (\n      <div className=\"pull-right text-right\">\n        {translate('branches.long_living_branches_pattern')}\n        {': '}\n        <strong>{setting.value}</strong>\n        <EditButton className=\"button-small spacer-left\" onClick={this.handleChangeClick} />\n        {this.state.formOpen && (\n          <LongBranchesPatternForm\n            onClose={this.closeForm}\n            onChange={this.handleChange}\n            project={this.props.project}\n            setting={setting}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BranchRow from './BranchRow';\nimport LongBranchesPattern from './LongBranchesPattern';\nimport { BranchLike } from '../../../app/types';\nimport {\n  sortBranchesAsTree,\n  getBranchLikeKey,\n  isShortLivingBranch,\n  isPullRequest\n} from '../../../helpers/branches';\nimport { translate } from '../../../helpers/l10n';\nimport { getValues } from '../../../api/settings';\nimport { formatMeasure } from '../../../helpers/measures';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdmin?: boolean;\n  component: { key: string };\n  onBranchesChange: () => void;\n}\n\ninterface State {\n  branchLifeTime?: string;\n  loading: boolean;\n}\n\nconst BRANCH_LIFETIME_SETTING = 'sonar.dbcleaner.daysBeforeDeletingInactiveShortLivingBranches';\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPurgeSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchPurgeSetting() {\n    this.setState({ loading: true });\n    getValues({ keys: BRANCH_LIFETIME_SETTING }).then(\n      settings => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            branchLifeTime: settings.length > 0 ? settings[0].value : undefined\n          });\n        }\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  renderBranchLifeTime() {\n    const { branchLifeTime } = this.state;\n    if (!branchLifeTime) {\n      return null;\n    }\n\n    return (\n      <p className=\"page-description\">\n        <FormattedMessage\n          defaultMessage={translate('project_branches.page.life_time')}\n          id=\"project_branches.page.life_time\"\n          values={{ days: formatMeasure(this.state.branchLifeTime, 'INT') }}\n        />\n        {this.props.canAdmin && (\n          <>\n            <br />\n            <FormattedMessage\n              defaultMessage={translate('project_branches.page.life_time.admin')}\n              id=\"project_branches.page.life_time.admin\"\n              values={{ settings: <Link to=\"/admin/settings\">{translate('settings.page')}</Link> }}\n            />\n          </>\n        )}\n      </p>\n    );\n  }\n\n  render() {\n    const { branchLikes, component, onBranchesChange } = this.props;\n\n    if (this.state.loading) {\n      return (\n        <div className=\"page page-limited\">\n          <header className=\"page-header\">\n            <h1 className=\"page-title\">{translate('project_branches.page')}</h1>\n          </header>\n          <i className=\"spinner\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"page page-limited\">\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('project_branches.page')}</h1>\n          <LongBranchesPattern project={component.key} />\n          <p className=\"page-description\">{translate('project_branches.page.description')}</p>\n          {this.renderBranchLifeTime()}\n        </header>\n\n        <div className=\"boxed-group boxed-group-inner\">\n          <table className=\"data zebra zebra-hover\">\n            <thead>\n              <tr>\n                <th>{translate('branch')}</th>\n                <th className=\"thin nowrap text-right\">{translate('status')}</th>\n                <th className=\"thin nowrap text-right\">\n                  {translate('branches.last_analysis_date')}\n                </th>\n                <th className=\"thin nowrap text-right\">{translate('actions')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortBranchesAsTree(branchLikes).map(branchLike => (\n                <BranchRow\n                  branchLike={branchLike}\n                  component={component.key}\n                  isOrphan={\n                    (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) &&\n                    branchLike.isOrphan\n                  }\n                  key={getBranchLikeKey(branchLike)}\n                  onChange={onBranchesChange}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport App from './App';\nimport { getAppState } from '../../../store/rootReducer';\n\nconst mapStateToProps = (state: any) => ({\n  canAdmin: getAppState(state).canAdmin\n});\n\nexport default connect<any, any, any>(mapStateToProps)(App);\n"],"sourceRoot":""}