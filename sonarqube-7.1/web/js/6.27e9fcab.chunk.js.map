{"version":3,"sources":["webpack:///./src/main/js/helpers/csv.ts","webpack:///./src/main/js/apps/quality-profiles/components/ProfileLink.tsx","webpack:///./src/main/js/apps/quality-profiles/components/BuiltInQualityProfileBadge.tsx","webpack:///./src/main/js/apps/quality-profiles/components/RenameProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/components/CopyProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/components/DeleteProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/components/ProfileActions.tsx","webpack:///./src/main/js/apps/quality-profiles/components/ProfileDate.tsx","webpack:///./src/main/js/api/quality-profiles.ts"],"names":["csvEscape","value","replace","__webpack_require__","d","__webpack_exports__","ProfileLink","_a","name","language","organization","children","other","__rest","react__WEBPACK_IMPORTED_MODULE_0__","react_router__WEBPACK_IMPORTED_MODULE_1__","__assign","to","Object","_utils__WEBPACK_IMPORTED_MODULE_2__","activeClassName","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","BuiltInQualityProfileBadge","className","_b","tooltip","badge","classnames__WEBPACK_IMPORTED_MODULE_1__","overlay","_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_2__","undefined","_super","RenameProfileForm","_this","apply","this","arguments","mounted","state","loading","handleNameChange","event","setState","currentTarget","handleFormSubmit","preventDefault","quality_profiles","props","profile","key","then","onRename","error","onRequestFail","RenameProfileForm_extends","prototype","componentDidMount","componentWillUnmount","render","header","l10n","languageName","submitDisabled","index_js_exposed","Modal","contentLabel","onRequestClose","onClose","id","onSubmit","htmlFor","autoFocus","maxLength","onChange","required","size","type","buttons","disabled","onClick","CopyProfileForm","onCopy","CopyProfileForm_extends","DeleteProfileForm","onDelete","DeleteProfileForm_extends","childrenCount","ProfileActions_ProfileActions","ProfileActions","call","handleRenameClick","renameFormOpen","handleProfileRename","closeRenameForm","updateProfiles","fromList","context","router","utils","handleCopyClick","copyFormOpen","handleProfileCopy","push","closeCopyForm","handleSetDefaultClick","handleDeleteClick","deleteFormOpen","handleProfileDelete","closeDeleteForm","ProfileActions_extends","actions","backupUrl","window","baseUrl","encodeURIComponent","activateMoreUrl","urls","qprofile","activation","ActionsDropdown","edit","isBuiltIn","download","copy","setAsDefault","delete","destructive","components_CopyProfileForm","components_DeleteProfileForm","components_RenameProfileForm","contextTypes","prop_types","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","ProfileDate","date","_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_3__","_components_intl_DateTimeFormatter__WEBPACK_IMPORTED_MODULE_2__","_components_intl_DateFromNow__WEBPACK_IMPORTED_MODULE_1__","searchQualityProfiles","parameters","_helpers_request__WEBPACK_IMPORTED_MODULE_2__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_3__","getQualityProfile","data","createQualityProfile","setMethod","setData","submit","restoreQualityProfile","getProfileProjects","getProfileInheritance","profileKey","setDefaultProfile","renameProfile","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentKey","getImporters","r","importers","getExporters","exporters","getProfileChangelog","compareProfiles","leftKey","rightKey","associateProject","projectKey","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","params","lodash__WEBPACK_IMPORTED_MODULE_0__","_helpers_csv__WEBPACK_IMPORTED_MODULE_1__","join","deactivateRule"],"mappings":"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","file":"js/6.27e9fcab.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function csvEscape(value: string): string {\n  const escaped = value.replace(/\"/g, '\\\\\"');\n  return `\"${escaped}\"`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getProfilePath } from '../utils';\n\ninterface Props {\n  className?: string;\n  children?: React.ReactElement<any> | string;\n  language: string;\n  name: string;\n  organization: string | null;\n}\n\nexport default function ProfileLink({ name, language, organization, children, ...other }: Props) {\n  return (\n    <Link\n      to={getProfilePath(name, language, organization)}\n      activeClassName=\"link-no-underline\"\n      {...other}>\n      {children}\n    </Link>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  tooltip?: boolean;\n}\n\nexport default function BuiltInQualityProfileBadge({ className, tooltip = true }: Props) {\n  const badge = (\n    <div className={classNames('outline-badge', className)}>\n      {translate('quality_profiles.built_in')}\n    </div>\n  );\n\n  const overlay = (\n    <span>\n      {translate('quality_profiles.built_in.description.1')}{' '}\n      {translate('quality_profiles.built_in.description.2')}\n    </span>\n  );\n\n  return <Tooltip overlay={tooltip ? overlay : undefined}>{badge}</Tooltip>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Profile } from '../types';\nimport { renameProfile } from '../../../api/quality-profiles';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  onRename: (name: string) => void;\n  onRequestFail: (reason: any) => void;\n  profile: Profile;\n}\n\ninterface State {\n  loading: boolean;\n  name: string | null;\n}\n\nexport default class RenameProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false, name: null };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { name } = this.state;\n\n    if (name != null) {\n      this.setState({ loading: true });\n      renameProfile(this.props.profile.key, name).then(\n        () => this.props.onRename(name),\n        (error: any) => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n          this.props.onRequestFail(error);\n        }\n      );\n    }\n  };\n\n  render() {\n    const { profile } = this.props;\n    const header = translateWithParameters(\n      'quality_profiles.rename_x_title',\n      profile.name,\n      profile.languageName\n    );\n    const submitDisabled =\n      this.state.loading || !this.state.name || this.state.name === profile.name;\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"rename-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"rename-profile-name\">\n                {translate('quality_profiles.new_name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                autoFocus={true}\n                id=\"rename-profile-name\"\n                maxLength={100}\n                name=\"name\"\n                onChange={this.handleNameChange}\n                required={true}\n                size={50}\n                type=\"text\"\n                value={this.state.name != null ? this.state.name : profile.name}\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled} id=\"rename-profile-submit\">\n              {translate('rename')}\n            </SubmitButton>\n            <ResetButtonLink id=\"rename-profile-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Profile } from '../types';\nimport { copyProfile } from '../../../api/quality-profiles';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  onCopy: (name: string) => void;\n  onRequestFail: (reasong: any) => void;\n  profile: Profile;\n}\n\ninterface State {\n  loading: boolean;\n  name: string | null;\n}\n\nexport default class CopyProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false, name: null };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n\n    const { name } = this.state;\n\n    if (name != null) {\n      this.setState({ loading: true });\n      copyProfile(this.props.profile.key, name).then(\n        (profile: any) => this.props.onCopy(profile.name),\n        (error: any) => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n          this.props.onRequestFail(error);\n        }\n      );\n    }\n  };\n\n  render() {\n    const { profile } = this.props;\n    const header = translateWithParameters(\n      'quality_profiles.copy_x_title',\n      profile.name,\n      profile.languageName\n    );\n    const submitDisabled =\n      this.state.loading || !this.state.name || this.state.name === profile.name;\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"copy-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"copy-profile-name\">\n                {translate('quality_profiles.copy_new_name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                autoFocus={true}\n                id=\"copy-profile-name\"\n                maxLength={100}\n                name=\"name\"\n                onChange={this.handleNameChange}\n                required={true}\n                size={50}\n                type=\"text\"\n                value={this.state.name != null ? this.state.name : profile.name}\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled} id=\"copy-profile-submit\">\n              {translate('copy')}\n            </SubmitButton>\n            <ResetButtonLink id=\"copy-profile-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Profile } from '../types';\nimport { deleteProfile } from '../../../api/quality-profiles';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  onDelete: () => void;\n  onRequestFail: (reason: any) => void;\n  profile: Profile;\n}\n\ninterface State {\n  loading: boolean;\n  name: string | null;\n}\n\nexport default class DeleteProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false, name: null };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    deleteProfile(this.props.profile.key).then(this.props.onDelete, (error: any) => {\n      if (this.mounted) {\n        this.setState({ loading: false });\n      }\n      this.props.onRequestFail(error);\n    });\n  };\n\n  render() {\n    const { profile } = this.props;\n    const header = translate('quality_profiles.delete_confirm_title');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"delete-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"js-modal-messages\" />\n            {profile.childrenCount > 0 ? (\n              <div>\n                <div className=\"alert alert-warning\">\n                  {translate('quality_profiles.this_profile_has_descendants')}\n                </div>\n                <p>\n                  {translateWithParameters(\n                    'quality_profiles.are_you_sure_want_delete_profile_x_and_descendants',\n                    profile.name,\n                    profile.languageName\n                  )}\n                </p>\n              </div>\n            ) : (\n              <p>\n                {translateWithParameters(\n                  'quality_profiles.are_you_sure_want_delete_profile_x',\n                  profile.name,\n                  profile.languageName\n                )}\n              </p>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton\n              className=\"button-red\"\n              disabled={this.state.loading}\n              id=\"delete-profile-submit\">\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink id=\"delete-profile-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport RenameProfileForm from './RenameProfileForm';\nimport CopyProfileForm from './CopyProfileForm';\nimport DeleteProfileForm from './DeleteProfileForm';\nimport { translate } from '../../../helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport { setDefaultProfile } from '../../../api/quality-profiles';\nimport { getProfilePath, getProfileComparePath, getProfilesPath } from '../utils';\nimport { Profile } from '../types';\nimport ActionsDropdown, {\n  ActionsDropdownItem,\n  ActionsDropdownDivider\n} from '../../../components/controls/ActionsDropdown';\n\ninterface Props {\n  className?: string;\n  fromList?: boolean;\n  onRequestFail: (reasong: any) => void;\n  organization: string | null;\n  profile: Profile;\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  copyFormOpen: boolean;\n  deleteFormOpen: boolean;\n  renameFormOpen: boolean;\n}\n\nexport default class ProfileActions extends React.PureComponent<Props, State> {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      copyFormOpen: false,\n      deleteFormOpen: false,\n      renameFormOpen: false\n    };\n  }\n\n  handleRenameClick = () => {\n    this.setState({ renameFormOpen: true });\n  };\n\n  handleProfileRename = (name: string) => {\n    this.closeRenameForm();\n    this.props.updateProfiles().then(\n      () => {\n        if (!this.props.fromList) {\n          this.context.router.replace(\n            getProfilePath(name, this.props.profile.language, this.props.organization)\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  closeRenameForm = () => {\n    this.setState({ renameFormOpen: false });\n  };\n\n  handleCopyClick = () => {\n    this.setState({ copyFormOpen: true });\n  };\n\n  handleProfileCopy = (name: string) => {\n    this.props.updateProfiles().then(\n      () => {\n        this.context.router.push(\n          getProfilePath(name, this.props.profile.language, this.props.organization)\n        );\n      },\n      () => {}\n    );\n  };\n\n  closeCopyForm = () => {\n    this.setState({ copyFormOpen: false });\n  };\n\n  handleSetDefaultClick = () => {\n    setDefaultProfile(this.props.profile.key).then(this.props.updateProfiles, () => {});\n  };\n\n  handleDeleteClick = () => {\n    this.setState({ deleteFormOpen: true });\n  };\n\n  handleProfileDelete = () => {\n    this.context.router.replace(getProfilesPath(this.props.organization));\n    this.props.updateProfiles();\n  };\n\n  closeDeleteForm = () => {\n    this.setState({ deleteFormOpen: false });\n  };\n\n  render() {\n    const { profile } = this.props;\n    const { actions = {} } = profile;\n\n    // FIXME use org, name and lang\n    const backupUrl =\n      (window as any).baseUrl +\n      '/api/qualityprofiles/backup?profileKey=' +\n      encodeURIComponent(profile.key);\n\n    const activateMoreUrl = getRulesUrl(\n      {\n        qprofile: profile.key,\n        activation: 'false'\n      },\n      this.props.organization\n    );\n\n    return (\n      <ActionsDropdown className={this.props.className}>\n        {actions.edit && (\n          <ActionsDropdownItem to={activateMoreUrl} id=\"quality-profile-activate-more-rules\">\n            {translate('quality_profiles.activate_more_rules')}\n          </ActionsDropdownItem>\n        )}\n\n        {!profile.isBuiltIn && (\n          <ActionsDropdownItem\n            download={`${profile.key}.xml`}\n            id=\"quality-profile-backup\"\n            to={backupUrl}>\n            {translate('backup_verb')}\n          </ActionsDropdownItem>\n        )}\n\n        <ActionsDropdownItem\n          id=\"quality-profile-compare\"\n          to={getProfileComparePath(profile.name, profile.language, this.props.organization)}>\n          {translate('compare')}\n        </ActionsDropdownItem>\n\n        {actions.copy && (\n          <ActionsDropdownItem id=\"quality-profile-copy\" onClick={this.handleCopyClick}>\n            {translate('copy')}\n          </ActionsDropdownItem>\n        )}\n\n        {actions.edit && (\n          <ActionsDropdownItem id=\"quality-profile-rename\" onClick={this.handleRenameClick}>\n            {translate('rename')}\n          </ActionsDropdownItem>\n        )}\n\n        {actions.setAsDefault && (\n          <ActionsDropdownItem\n            id=\"quality-profile-set-as-default\"\n            onClick={this.handleSetDefaultClick}>\n            {translate('set_as_default')}\n          </ActionsDropdownItem>\n        )}\n\n        {actions.delete && <ActionsDropdownDivider />}\n\n        {actions.delete && (\n          <ActionsDropdownItem\n            destructive={true}\n            id=\"quality-profile-delete\"\n            onClick={this.handleDeleteClick}>\n            {translate('delete')}\n          </ActionsDropdownItem>\n        )}\n\n        {this.state.copyFormOpen && (\n          <CopyProfileForm\n            onClose={this.closeCopyForm}\n            onCopy={this.handleProfileCopy}\n            onRequestFail={this.props.onRequestFail}\n            profile={profile}\n          />\n        )}\n\n        {this.state.deleteFormOpen && (\n          <DeleteProfileForm\n            onClose={this.closeDeleteForm}\n            onDelete={this.handleProfileDelete}\n            onRequestFail={this.props.onRequestFail}\n            profile={profile}\n          />\n        )}\n\n        {this.state.renameFormOpen && (\n          <RenameProfileForm\n            onClose={this.closeRenameForm}\n            onRename={this.handleProfileRename}\n            onRequestFail={this.props.onRequestFail}\n            profile={profile}\n          />\n        )}\n      </ActionsDropdown>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport DateTimeFormatter from '../../../components/intl/DateTimeFormatter';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  date?: string;\n}\n\nexport default function ProfileDate({ date }: Props) {\n  return date ? (\n    <Tooltip overlay={<DateTimeFormatter date={date} />}>\n      <span>\n        <DateFromNow date={date} />\n      </span>\n    </Tooltip>\n  ) : (\n    <span>{translate('never')}</span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from '../helpers/csv';\nimport {\n  request,\n  checkStatus,\n  parseJSON,\n  getJSON,\n  post,\n  postJSON,\n  RequestData\n} from '../helpers/request';\nimport { Paging } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  organization: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  organization?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile(data: {\n  compareToSonarWay?: boolean;\n  profile: string;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', data);\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/create')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/restore')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport interface ProfileProject {\n  id: number;\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance(profileKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/inheritance', { profileKey }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/set_default', { profileKey });\n}\n\nexport function renameProfile(key: string, name: string): Promise<void> {\n  return post('/api/qualityprofiles/rename', { key, name });\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName });\n}\n\nexport function deleteProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/delete', { profileKey });\n}\n\nexport function changeProfileParent(profileKey: string, parentKey: string): Promise<void> {\n  return post('/api/qualityprofiles/change_parent', { profileKey, parentKey });\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(data: RequestData): Promise<any> {\n  return getJSON('/api/qualityprofiles/changelog', data);\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/add_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport function dissociateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/remove_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\nexport interface SearchUsersResponse {\n  users: Array<{\n    avatar?: string;\n    login: string;\n    name: string;\n    selected?: boolean;\n  }>;\n  paging: Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  /* eslint-disable camelcase */\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  organization: string | undefined;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n  /* eslint-enable camelcase */\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  organization: string | undefined;\n  params?: { [key: string]: string };\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: {\n  key: string;\n  organization: string | undefined;\n  rule: string;\n}) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}