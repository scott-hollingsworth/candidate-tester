{"version":3,"sources":["webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/apps/maintenance/components/App.tsx","webpack:///./src/main/js/apps/maintenance/components/SetupAppContainer.tsx"],"names":["formatterOption","hour","minute","longFormatterOption","second","TimeFormatter","_a","children","date","long","react__WEBPACK_IMPORTED_MODULE_0__","react_intl__WEBPACK_IMPORTED_MODULE_1__","__assign","value","Object","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","App","_super","_this","apply","this","arguments","mounted","state","fetchStatus","props","setup","fetchMigrationState","fetchSystemStatus","catch","setState","message","undefined","startedAt","status","_api_system__WEBPACK_IMPORTED_MODULE_2__","then","wasStarting","scheduleRefresh","loadPreviousPage","interval","window","setTimeout","setInterval","location","href","query","_helpers_urls__WEBPACK_IMPORTED_MODULE_7__","handleMigrateClick","__extends","prototype","componentDidMount","componentWillUnmount","clearInterval","render","className","id","classnames__WEBPACK_IMPORTED_MODULE_1__","panel-warning","_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","dangerouslySetInnerHTML","__html","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","onClick","_components_intl_DateFromNow__WEBPACK_IMPORTED_MODULE_3__","_components_intl_TimeFormatter__WEBPACK_IMPORTED_MODULE_4__","MaintenanceAppContainer","_App__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/296.3b1651df.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { getMigrationStatus, getSystemStatus, migrateDatabase } from '../../../api/system';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport '../styles.css';\n\ninterface Props {\n  // eslint-disable-next-line camelcase\n  location: { query: { return_to?: string } };\n  setup: boolean;\n}\n\ninterface State {\n  message?: string;\n  startedAt?: string;\n  state?: string;\n  status?: string;\n  wasStarting?: boolean;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  interval?: number;\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchStatus();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.interval) {\n      window.clearInterval(this.interval);\n    }\n  }\n\n  fetchStatus = () => {\n    const request = this.props.setup ? this.fetchMigrationState() : this.fetchSystemStatus();\n    request.catch(() => {\n      if (this.mounted) {\n        this.setState({\n          message: undefined,\n          startedAt: undefined,\n          state: undefined,\n          status: 'OFFLINE'\n        });\n      }\n    });\n  };\n\n  fetchSystemStatus = () => {\n    return getSystemStatus().then(({ status }) => {\n      if (this.mounted) {\n        this.setState({ status });\n\n        if (status === 'STARTING') {\n          this.setState({ wasStarting: true });\n          this.scheduleRefresh();\n        } else if (status === 'UP') {\n          if (this.state.wasStarting) {\n            this.loadPreviousPage();\n          }\n        } else {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  fetchMigrationState = () => {\n    return getMigrationStatus().then(({ message, startedAt, state }) => {\n      if (this.mounted) {\n        this.setState({ message, startedAt, state });\n        if (state === 'MIGRATION_SUCCEEDED') {\n          this.loadPreviousPage();\n        } else if (state !== 'NO_MIGRATION') {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  scheduleRefresh = () => {\n    this.interval = window.setTimeout(this.fetchStatus, 5000);\n  };\n\n  loadPreviousPage = () => {\n    setInterval(() => {\n      window.location.href = this.props.location.query['return_to'] || getBaseUrl() + '/';\n    }, 2500);\n  };\n\n  handleMigrateClick = () => {\n    migrateDatabase().then(\n      ({ message, startedAt, state }) => {\n        if (this.mounted) {\n          this.setState({ message, startedAt, state });\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { state, status } = this.state;\n\n    return (\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div\n          className={classNames('page-simple', { 'panel-warning': state === 'MIGRATION_REQUIRED' })}\n          id=\"nonav\">\n          {status === 'OFFLINE' && (\n            <>\n              <h1 className=\"maintenance-title text-danger\">\n                {translate('maintenance.sonarqube_is_offline')}\n              </h1>\n              <p className=\"maintenance-text\">\n                {translate('maintenance.sonarqube_is_offline.text')}\n              </p>\n              <p className=\"maintenance-text text-center\">\n                <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n              </p>\n            </>\n          )}\n\n          {status === 'UP' && (\n            <>\n              <h1 className=\"maintenance-title\">{translate('maintenance.sonarqube_is_up')}</h1>\n              <p className=\"maintenance-text text-center\">\n                {translate('maintenance.all_systems_opetational')}\n              </p>\n              <p className=\"maintenance-text text-center\">\n                <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n              </p>\n            </>\n          )}\n\n          {status === 'STARTING' && (\n            <>\n              <h1 className=\"maintenance-title\">\n                {translate('maintenance.sonarqube_is_starting')}\n              </h1>\n              <p className=\"maintenance-spinner\">\n                <i className=\"spinner\" />\n              </p>\n            </>\n          )}\n\n          {status === 'DOWN' && (\n            <>\n              <h1 className=\"maintenance-title text-danger\">\n                {translate('maintenance.sonarqube_is_down')}\n              </h1>\n              <p className=\"maintenance-text\">{translate('maintenance.sonarqube_is_down.text')}</p>\n              <p className=\"maintenance-text text-center\">\n                <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n              </p>\n            </>\n          )}\n\n          {(status === 'DB_MIGRATION_NEEDED' || status === 'DB_MIGRATION_RUNNING') && (\n            <>\n              <h1 className=\"maintenance-title\">\n                {translate('maintenance.sonarqube_is_under_maintenance')}\n              </h1>\n              <p\n                className=\"maintenance-text\"\n                dangerouslySetInnerHTML={{\n                  __html: translate('maintenance.sonarqube_is_under_maintenance.1')\n                }}\n              />\n              <p\n                className=\"maintenance-text\"\n                dangerouslySetInnerHTML={{\n                  __html: translate('maintenance.sonarqube_is_under_maintenance.2')\n                }}\n              />\n            </>\n          )}\n\n          {state === 'NO_MIGRATION' && (\n            <>\n              <h1 className=\"maintenance-title\">\n                {translate('maintenance.database_is_up_to_date')}\n              </h1>\n              <p className=\"maintenance-text text-center\">\n                <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n              </p>\n            </>\n          )}\n\n          {state === 'MIGRATION_REQUIRED' && (\n            <>\n              <h1 className=\"maintenance-title\">{translate('maintenance.upgrade_database')}</h1>\n              <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.1')}</p>\n              <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.2')}</p>\n              <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.3')}</p>\n              <div className=\"maintenance-spinner\">\n                <Button id=\"start-migration\" onClick={this.handleMigrateClick}>\n                  {translate('maintenance.upgrade')}\n                </Button>\n              </div>\n            </>\n          )}\n\n          {state === 'NOT_SUPPORTED' && (\n            <>\n              <h1 className=\"maintenance-title text-danger\">\n                {translate('maintenance.migration_not_supported')}\n              </h1>\n              <p>{translate('maintenance.migration_not_supported.text')}</p>\n            </>\n          )}\n\n          {state === 'MIGRATION_RUNNING' && (\n            <>\n              <h1 className=\"maintenance-title\">{translate('maintenance.database_migration')}</h1>\n              {this.state.message && (\n                <p className=\"maintenance-text text-center\">{this.state.message}</p>\n              )}\n              {this.state.startedAt && (\n                <p className=\"maintenance-text text-center\">\n                  {translate('background_tasks.table.started')}{' '}\n                  <DateFromNow date={this.state.startedAt} />\n                  <br />\n                  <small className=\"text-muted\">\n                    <TimeFormatter date={this.state.startedAt} long={true} />\n                  </small>\n                </p>\n              )}\n              <p className=\"maintenance-spinner\">\n                <i className=\"spinner\" />\n              </p>\n            </>\n          )}\n\n          {state === 'MIGRATION_SUCCEEDED' && (\n            <>\n              <h1 className=\"maintenance-title text-success\">\n                {translate('maintenance.database_is_up_to_date')}\n              </h1>\n              <p className=\"maintenance-text text-center\">\n                <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n              </p>\n            </>\n          )}\n\n          {state === 'MIGRATION_FAILED' && (\n            <>\n              <h1 className=\"maintenance-title text-danger\">\n                {translate('maintenance.upgrade_failed')}\n              </h1>\n              <p className=\"maintenance-text\">{translate('maintenance.upgrade_failed.text')}</p>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport App from './App';\n\ninterface Props {\n  // eslint-disable-next-line camelcase\n  location: { query: { return_to: string } };\n}\n\nexport default function MaintenanceAppContainer(props: Props) {\n  return <App setup={true} {...props} />;\n}\n"],"sourceRoot":""}