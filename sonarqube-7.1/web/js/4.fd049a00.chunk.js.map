{"version":3,"sources":["webpack:///./src/main/js/components/ui/Rating.tsx","webpack:///./src/main/js/apps/projectActivity/utils.js","webpack:///./src/main/js/api/time-machine.ts","webpack:///./src/main/js/components/charts/AdvancedTimeline.js","webpack:///./src/main/js/components/common/BubblePopup.tsx"],"names":["__webpack_require__","Rating","_a","className","_b","muted","_c","small","value","undefined","react__WEBPACK_IMPORTED_MODULE_0__","formatted","Object","_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_1__","rating-small","rating-muted","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","EVENT_TYPES","APPLICATION_EVENT_TYPES","DEFAULT_GRAPH","GRAPH_TYPES","GRAPHS_METRICS_DISPLAYED","issues","coverage","duplications","GRAPHS_METRICS","concat","datesQueryChanged","prevQuery","nextQuery","lodash__WEBPACK_IMPORTED_MODULE_0__","from","to","activityQueryChanged","category","customMetricsChanged","customMetrics","hasDataValues","serie","data","some","point","y","hasHistoryData","series","length","hasHistoryDataValue","historyQueryChanged","graph","isCustomGraph","selectedDateQueryChanged","selectedDate","generateCoveredLinesMetric","uncoveredLines","measuresHistory","linesToCover","find","measure","metric","history","map","analysis","idx","x","date","Number","name","translatedName","type","generateSeries","metrics","displayedMetrics","filter","indexOf","key","Array","isArray","findMetric","splitSeriesInGraphs","maxGraph","maxSeries","slice","getSeriesMetricType","getAnalysesByVersionByDay","analyses","query","reduce","acc","currentVersion","versionEvent","events","event","newVersion","version","byDay","keys","push","day","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","getTime","toString","matchFilters","isAfterFrom","isBeforeTo","hasSelectedCategoryEvents","getDisplayedHistoryMetrics","getHistoryMetrics","parseGraph","_helpers_query__WEBPACK_IMPORTED_MODULE_1__","includes","serializeGraph","parseQuery","urlQuery","project","serializeQuery","serializeUrlQuery","custom_metrics","id","selected_date","getAllTimeMachineData","prev","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getTimeMachineData","__assign","ps","then","r","result","measures","paging","pageIndex","pageSize","total","p","AdvancedTimeline","_super","props","_this","call","this","getRatingScale","availableHeight","d3_scale__WEBPACK_IMPORTED_MODULE_4__","domain","range","getLevelScale","getYScale","flatData","metricType","d3_array__WEBPACK_IMPORTED_MODULE_3__","d","nice","getXScale","availableWidth","startDate","endDate","dateRange","start","end","xScale","lodash__WEBPACK_IMPORTED_MODULE_2__","clamp","maxXRange","getScales","width","padding","height","yScale","getSelectedDatePos","firstSerie","findIndex","valueOf","xRange","sort","xPos","selectedDateXPos","selectedDateIdx","getEventMarker","size","half","getMouseOverlayPos","target","state","mouseOverlayPos","pos","getBoundingClientRect","setState","handleWheel","evt","preventDefault","parentBbox","mouseXPos","pageX","left","speed","deltaMode","zoomSpeed","leftPos","Math","round","deltaY","rightPos","invert","handleZoomUpdate","updateZoom","handleMouseMove","updateTooltipPos","handleMouseEnter","mouseOver","handleMouseOut","updateTooltip","targetClass","relatedTarget","handleClick","updateSelectedDate","bisectX","right","previousPoint","nextPoint","xPos_1","renderHorizontalGrid","formatYTick","ticks","maxYTicksCount","formattedTicks","tick","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","dx","dy","textAnchor","x1","x2","y1","y2","renderXAxisTicks","format","tickFormat","index","nextTick","renderLeak","yRange","leakWidth","leakPeriodDate","fill","_app_theme__WEBPACK_IMPORTED_MODULE_6__","renderLines","lineGenerator","d3_shape__WEBPACK_IMPORTED_MODULE_5__","defined","basisCurve","curve","classnames__WEBPACK_IMPORTED_MODULE_1___default","renderAreas","areaGenerator","y0","renderEvents","eventSize","inRangeEvents","offset","transform","renderSelectedDate","cx","cy","renderClipPath","renderMouseEventsOverlay","zoomEnabled","mouseEvents","onWheel","onMouseEnter","onMouseMove","onMouseOut","onClick","scales","selectedDatePos","__extends","prototype","componentWillReceiveProps","nextProps","render","disableZoom","isZoomed","chart-zoomed","hideGrid","hideXAxis","showAreas","showEventMarkers","defaultProps","PureComponent","BubblePopup","popupClass","customClass","popupStyle","position","style","children"],"mappings":"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","file":"js/4.fd049a00.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { formatMeasure } from '../../helpers/measures';\nimport './Rating.css';\n\ninterface Props {\n  className?: string;\n  muted?: boolean;\n  small?: boolean;\n  value: string | number | undefined;\n}\n\nexport default function Rating({ className, muted = false, small = false, value }: Props) {\n  if (value === undefined) {\n    return <span>{'–'}</span>;\n  }\n  const formatted = formatMeasure(value, 'RATING');\n  return (\n    <span\n      className={classNames(\n        'rating',\n        'rating-' + formatted,\n        { 'rating-small': small, 'rating-muted': muted },\n        className\n      )}>\n      {formatted}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport { chunk, flatMap, groupBy, isEqual, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsDate,\n  parseAsString,\n  serializeStringArray,\n  serializeDate,\n  serializeString\n} from '../../helpers/query';\nimport { parseDate, startOfDay } from '../../helpers/dates';\nimport { getLocalizedMetricName, translate } from '../../helpers/l10n';\n/*:: import type { Analysis, MeasureHistory, Metric, Query } from './types'; */\n/*:: import type { RawQuery } from '../../helpers/query'; */\n/*:: import type { Serie } from '../../components/charts/AdvancedTimeline'; */\n\nexport const EVENT_TYPES = ['VERSION', 'QUALITY_GATE', 'QUALITY_PROFILE', 'OTHER'];\nexport const APPLICATION_EVENT_TYPES = ['QUALITY_GATE', 'OTHER'];\nexport const DEFAULT_GRAPH = 'issues';\nexport const GRAPH_TYPES = ['issues', 'coverage', 'duplications', 'custom'];\nexport const GRAPHS_METRICS_DISPLAYED = {\n  issues: ['bugs', 'code_smells', 'vulnerabilities'],\n  coverage: ['lines_to_cover', 'uncovered_lines'],\n  duplications: ['ncloc', 'duplicated_lines']\n};\nexport const GRAPHS_METRICS = {\n  issues: GRAPHS_METRICS_DISPLAYED['issues'].concat([\n    'reliability_rating',\n    'security_rating',\n    'sqale_rating'\n  ]),\n  coverage: GRAPHS_METRICS_DISPLAYED['coverage'].concat(['coverage']),\n  duplications: GRAPHS_METRICS_DISPLAYED['duplications'].concat(['duplicated_lines_density'])\n};\n\nexport const datesQueryChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  !isEqual(prevQuery.from, nextQuery.from) || !isEqual(prevQuery.to, nextQuery.to);\n\nexport const activityQueryChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  prevQuery.category !== nextQuery.category || datesQueryChanged(prevQuery, nextQuery);\n\nexport const customMetricsChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  !isEqual(prevQuery.customMetrics, nextQuery.customMetrics);\n\nexport const hasDataValues = (serie /*: Serie */) =>\n  serie.data.some(point => point.y || point.y === 0);\n\nexport const hasHistoryData = (series /*: Array<Serie> */) =>\n  series.some(serie => serie.data && serie.data.length > 1);\n\nexport const hasHistoryDataValue = (series /*: Array<Serie> */) =>\n  series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n\nexport function historyQueryChanged(prevQuery /*: Query */, nextQuery /*: Query */) /*: boolean */ {\n  return prevQuery.graph !== nextQuery.graph;\n}\n\nexport const isCustomGraph = (graph /*: string */) => graph === 'custom';\n\nexport const selectedDateQueryChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  !isEqual(prevQuery.selectedDate, nextQuery.selectedDate);\n\nexport const generateCoveredLinesMetric = (\n  uncoveredLines /*: MeasureHistory */,\n  measuresHistory /*: Array<MeasureHistory> */\n) => {\n  const linesToCover = measuresHistory.find(measure => measure.metric === 'lines_to_cover');\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n};\n\nfunction findMetric(key /*: string */, metrics /*:  Array<Metric> | { [string]: Metric } */) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n\nexport function generateSeries(\n  measuresHistory /*: Array<MeasureHistory> */,\n  graph /*: string */,\n  metrics /*:  Array<Metric> | { [string]: Metric } */,\n  displayedMetrics /*: Array<string> */\n) /*: Array<Serie> */ {\n  if (displayedMetrics.length <= 0 || typeof measuresHistory === 'undefined') {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === 'uncovered_lines' && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : measure.metric,\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport const splitSeriesInGraphs = (\n  series /*: Array<Serie> */,\n  maxGraph /*: number */,\n  maxSeries /*: number */\n) =>\n  flatMap(groupBy(series, serie => serie.type), type => chunk(type, maxSeries)).slice(0, maxGraph);\n\nexport const getSeriesMetricType = (series /*: Array<Serie> */) =>\n  series.length > 0 ? series[0].type : 'INT';\n\nexport function getAnalysesByVersionByDay(analyses /*: Array<Analysis> */, query /*: Query */) {\n  return analyses.reduce((acc, analysis) => {\n    let currentVersion = acc[acc.length - 1];\n    const versionEvent = analysis.events.find(event => event.category === 'VERSION');\n    if (versionEvent) {\n      const newVersion = { version: versionEvent.name, key: versionEvent.key, byDay: {} };\n      if (!currentVersion || Object.keys(currentVersion.byDay).length > 0) {\n        acc.push(newVersion);\n      } else {\n        acc[acc.length - 1] = newVersion;\n      }\n      currentVersion = newVersion;\n    } else if (!currentVersion) {\n      // APPs don't have version events, so let's create a fake one\n      currentVersion = { version: null, key: null, byDay: {} };\n      acc.push(currentVersion);\n    }\n\n    const day = startOfDay(parseDate(analysis.date))\n      .getTime()\n      .toString();\n\n    let matchFilters = true;\n    if (query.category || query.from || query.to) {\n      const isAfterFrom = !query.from || analysis.date >= query.from;\n      const isBeforeTo = !query.to || analysis.date <= query.to;\n      const hasSelectedCategoryEvents =\n        !query.category || analysis.events.find(event => event.category === query.category) != null;\n      matchFilters = isAfterFrom && isBeforeTo && hasSelectedCategoryEvents;\n    }\n\n    if (matchFilters) {\n      if (!currentVersion.byDay[day]) {\n        currentVersion.byDay[day] = [];\n      }\n      currentVersion.byDay[day].push(analysis);\n    }\n    return acc;\n  }, []);\n}\n\nexport const getDisplayedHistoryMetrics = (\n  graph /*: string */,\n  customMetrics /*: Array<string> */\n) => (isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph]);\n\nexport const getHistoryMetrics = (graph /*: string */, customMetrics /*: Array<string> */) =>\n  isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n\nconst parseGraph = (value /*: ?string */) => {\n  const graph = parseAsString(value);\n  return GRAPH_TYPES.includes(graph) ? graph : DEFAULT_GRAPH;\n};\n\nconst serializeGraph = (value /*: string */) => (value === DEFAULT_GRAPH ? undefined : value);\n\nexport function parseQuery(urlQuery /*: RawQuery */) /*: Query */ {\n  return {\n    category: parseAsString(urlQuery['category']),\n    customMetrics: parseAsArray(urlQuery['custom_metrics'], parseAsString),\n    from: parseAsDate(urlQuery['from']),\n    graph: parseGraph(urlQuery['graph']),\n    project: parseAsString(urlQuery['id']),\n    to: parseAsDate(urlQuery['to']),\n    selectedDate: parseAsDate(urlQuery['selected_date'])\n  };\n}\n\nexport function serializeQuery(query /*: Query */) /*: RawQuery */ {\n  return cleanQuery({\n    category: serializeString(query.category),\n    from: serializeDate(query.from),\n    project: serializeString(query.project),\n    to: serializeDate(query.to)\n  });\n}\n\nexport function serializeUrlQuery(query /*: Query */) /*: RawQuery */ {\n  return cleanQuery({\n    category: serializeString(query.category),\n    custom_metrics: serializeStringArray(query.customMetrics),\n    from: serializeDate(query.from),\n    graph: serializeGraph(query.graph),\n    id: serializeString(query.project),\n    to: serializeDate(query.to),\n    selected_date: serializeDate(query.selectedDate)\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport { Paging, BranchParameters } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface HistoryItem {\n  date: Date;\n  value: string;\n}\n\nexport interface History {\n  [metric: string]: HistoryItem[];\n}\n\ninterface TimeMachineResponse {\n  measures: {\n    metric: string;\n    history: HistoryItem[];\n  }[];\n  paging: Paging;\n}\n\nexport function getTimeMachineData(\n  data: {\n    component: string;\n    from?: string;\n    metrics: string;\n    p?: number;\n    ps?: number;\n    to?: string;\n  } & BranchParameters\n): Promise<TimeMachineResponse> {\n  return getJSON('/api/measures/search_history', data).catch(throwGlobalError);\n}\n\nexport function getAllTimeMachineData(\n  data: {\n    component: string;\n    metrics: string;\n    from?: string;\n    p?: number;\n    to?: string;\n  } & BranchParameters,\n  prev?: TimeMachineResponse\n): Promise<TimeMachineResponse> {\n  return getTimeMachineData({ ...data, ps: 1000 }).then(r => {\n    const result = prev\n      ? {\n          measures: prev.measures.map((measure, idx) => ({\n            ...measure,\n            history: measure.history.concat(r.measures[idx].history)\n          })),\n          paging: r.paging\n        }\n      : r;\n\n    if (result.paging.pageIndex * result.paging.pageSize >= result.paging.total) {\n      return result;\n    }\n    return getAllTimeMachineData({ ...data, p: result.paging.pageIndex + 1 }, result);\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport { flatten, isEqual, sortBy, throttle, uniq } from 'lodash';\nimport { bisector, extent, max } from 'd3-array';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { line as d3Line, area, curveBasis } from 'd3-shape';\nimport * as theme from '../../app/theme';\n\n/*::\ntype Event = { className?: string, name: string, date: Date };\n*/\n/*::\nexport type Point = { x: Date, y: number | string };\n*/\n/*::\nexport type Serie = { name: string, data: Array<Point>, type: string };\n*/\n/*::\ntype Scale = Function;\n*/\n\n/*::\ntype Props = {\n  basisCurve?: boolean,\n  endDate: ?Date,\n  events?: Array<Event>,\n  eventSize?: number,\n  disableZoom?: boolean,\n  formatYTick?: number => string,\n  hideGrid?: boolean,\n  hideXAxis?: boolean,\n  height: number,\n  width: number,\n  leakPeriodDate?: Date,\n  // used to avoid same y ticks labels\n  maxYTicksCount?: number,\n  metricType: string,\n  padding: Array<number>,\n  selectedDate?: Date,\n  series: Array<Serie>,\n  showAreas?: boolean,\n  showEventMarkers?: boolean,\n  startDate: ?Date,\n  updateSelectedDate?: (selectedDate: ?Date) => void,\n  updateTooltip?: (selectedDate: ?Date, tooltipXPos: ?number, tooltipIdx: ?number) => void,\n  updateZoom?: (start: ?Date, endDate: ?Date) => void,\n  zoomSpeed: number\n};\n*/\n\n/*::\ntype State = {\n  maxXRange: Array<number>,\n  mouseOver?: boolean,\n  mouseOverlayPos?: { [string]: number },\n  selectedDate: ?Date,\n  selectedDateXPos: ?number,\n  selectedDateIdx: ?number,\n  yScale: Scale,\n  xScale: Scale\n};\n*/\n\nexport default class AdvancedTimeline extends React.PureComponent {\n  /*:: props: Props; */\n  /*:: state: State; */\n\n  static defaultProps = {\n    eventSize: 8,\n    maxYTicksCount: 4,\n    padding: [10, 10, 30, 60],\n    zoomSpeed: 1\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n    const scales = this.getScales(props);\n    const selectedDatePos = this.getSelectedDatePos(scales.xScale, props.selectedDate);\n    this.state = { ...scales, ...selectedDatePos };\n    this.updateTooltipPos = throttle(this.updateTooltipPos, 40);\n    this.handleZoomUpdate = throttle(this.handleZoomUpdate, 40);\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    let scales;\n    let selectedDatePos;\n    if (\n      nextProps.metricType !== this.props.metricType ||\n      nextProps.startDate !== this.props.startDate ||\n      nextProps.endDate !== this.props.endDate ||\n      nextProps.width !== this.props.width ||\n      nextProps.padding !== this.props.padding ||\n      nextProps.height !== this.props.height ||\n      nextProps.series !== this.props.series\n    ) {\n      scales = this.getScales(nextProps);\n      if (this.state.selectedDate != null) {\n        selectedDatePos = this.getSelectedDatePos(scales.xScale, this.state.selectedDate);\n      }\n    }\n\n    if (!isEqual(nextProps.selectedDate, this.props.selectedDate)) {\n      const xScale = scales ? scales.xScale : this.state.xScale;\n      selectedDatePos = this.getSelectedDatePos(xScale, nextProps.selectedDate);\n    }\n\n    if (scales || selectedDatePos) {\n      this.setState({ ...(scales || {}), ...(selectedDatePos || {}) });\n\n      if (selectedDatePos && nextProps.updateTooltip) {\n        nextProps.updateTooltip(\n          selectedDatePos.selectedDate,\n          selectedDatePos.selectedDateXPos,\n          selectedDatePos.selectedDateIdx\n        );\n      }\n    }\n  }\n\n  getRatingScale = (availableHeight /*: number */) =>\n    scalePoint()\n      .domain([5, 4, 3, 2, 1])\n      .range([availableHeight, 0]);\n\n  getLevelScale = (availableHeight /*: number */) =>\n    scalePoint()\n      .domain(['ERROR', 'WARN', 'OK'])\n      .range([availableHeight, 0]);\n\n  getYScale = (props /*: Props */, availableHeight /*: number */, flatData /*: Array<Point> */) => {\n    if (props.metricType === 'RATING') {\n      return this.getRatingScale(availableHeight);\n    } else if (props.metricType === 'LEVEL') {\n      return this.getLevelScale(availableHeight);\n    } else {\n      return scaleLinear()\n        .range([availableHeight, 0])\n        .domain([0, max(flatData, d => d.y) || 1])\n        .nice();\n    }\n  };\n\n  getXScale = (\n    { startDate, endDate } /*: Props */,\n    availableWidth /*: number */,\n    flatData /*: Array<Point> */\n  ) => {\n    const dateRange = extent(flatData, d => d.x);\n    const start = startDate && startDate > dateRange[0] ? startDate : dateRange[0];\n    const end = endDate && endDate < dateRange[1] ? endDate : dateRange[1];\n    const xScale = scaleTime()\n      .domain(sortBy([start, end]))\n      .range([0, availableWidth])\n      .clamp(false);\n    return {\n      xScale,\n      maxXRange: dateRange.map(xScale)\n    };\n  };\n\n  getScales = (props /*: Props */) => {\n    const availableWidth = props.width - props.padding[1] - props.padding[3];\n    const availableHeight = props.height - props.padding[0] - props.padding[2];\n    const flatData = flatten(props.series.map((serie /*: Serie */) => serie.data));\n    return {\n      ...this.getXScale(props, availableWidth, flatData),\n      yScale: this.getYScale(props, availableHeight, flatData)\n    };\n  };\n\n  getSelectedDatePos = (xScale /*: Scale */, selectedDate /*: ?Date */) => {\n    const firstSerie = this.props.series[0];\n    if (selectedDate && firstSerie) {\n      const idx = firstSerie.data.findIndex(\n        // $FlowFixMe selectedDate can't be null there\n        p => p.x.valueOf() === selectedDate.valueOf()\n      );\n      const xRange = xScale.range().sort();\n      const xPos = xScale(selectedDate);\n      if (idx >= 0 && xPos >= xRange[0] && xPos <= xRange[1]) {\n        return {\n          selectedDate,\n          selectedDateXPos: xScale(selectedDate),\n          selectedDateIdx: idx\n        };\n      }\n    }\n    return { selectedDate: null, selectedDateXPos: null, selectedDateIdx: null };\n  };\n\n  getEventMarker = (size /*: number */) => {\n    const half = size / 2;\n    return `M${half} 0 L${size} ${half} L ${half} ${size} L0 ${half} L${half} 0 L${size} ${half}`;\n  };\n\n  getMouseOverlayPos = (target /*: HTMLElement */) => {\n    if (this.state.mouseOverlayPos) {\n      return this.state.mouseOverlayPos;\n    }\n    const pos = target.getBoundingClientRect();\n    this.setState({ mouseOverlayPos: pos });\n    return pos;\n  };\n\n  handleWheel = (evt /*: WheelEvent & { target: HTMLElement } */) => {\n    evt.preventDefault();\n    const { maxXRange, xScale } = this.state;\n    const parentBbox = this.getMouseOverlayPos(evt.target);\n    const mouseXPos = (evt.pageX - parentBbox.left) / parentBbox.width;\n    const xRange = xScale.range();\n    const speed = evt.deltaMode ? 25 / evt.deltaMode * this.props.zoomSpeed : this.props.zoomSpeed;\n    const leftPos = xRange[0] - Math.round(speed * evt.deltaY * mouseXPos);\n    const rightPos = xRange[1] + Math.round(speed * evt.deltaY * (1 - mouseXPos));\n    const startDate = leftPos > maxXRange[0] ? xScale.invert(leftPos) : null;\n    const endDate = rightPos < maxXRange[1] ? xScale.invert(rightPos) : null;\n    this.handleZoomUpdate(startDate, endDate);\n  };\n\n  handleZoomUpdate = (startDate /*: ?Date */, endDate /*: ?Date */) => {\n    if (this.props.updateZoom) {\n      this.props.updateZoom(startDate, endDate);\n    }\n  };\n\n  handleMouseMove = (evt /*: MouseEvent & { target: HTMLElement } */) => {\n    const parentBbox = this.getMouseOverlayPos(evt.target);\n    this.updateTooltipPos(evt.pageX - parentBbox.left);\n  };\n\n  handleMouseEnter = () => this.setState({ mouseOver: true });\n\n  handleMouseOut = (evt /*: Event & { relatedTarget: HTMLElement } */) => {\n    const { updateTooltip } = this.props;\n    const targetClass =\n      evt.relatedTarget && typeof evt.relatedTarget.className === 'string'\n        ? evt.relatedTarget.className\n        : '';\n    if (\n      !updateTooltip ||\n      targetClass.includes('bubble-popup') ||\n      targetClass.includes('graph-tooltip')\n    ) {\n      return;\n    }\n    this.setState({\n      mouseOver: false,\n      selectedDate: null,\n      selectedDateXPos: null,\n      selectedDateIdx: null\n    });\n    updateTooltip(null, null, null);\n  };\n\n  handleClick = () => {\n    const { updateSelectedDate } = this.props;\n    if (updateSelectedDate) {\n      updateSelectedDate(this.state.selectedDate);\n    }\n  };\n\n  updateTooltipPos = (xPos /*: number */) => {\n    const firstSerie = this.props.series[0];\n    if (this.state.mouseOver && firstSerie) {\n      const { updateTooltip } = this.props;\n      const date = this.state.xScale.invert(xPos);\n      const bisectX = bisector(d => d.x).right;\n      let idx = bisectX(firstSerie.data, date);\n      if (idx >= 0) {\n        const previousPoint = firstSerie.data[idx - 1];\n        const nextPoint = firstSerie.data[idx];\n        if (!nextPoint || (previousPoint && date - previousPoint.x <= nextPoint.x - date)) {\n          idx--;\n        }\n        const selectedDate = firstSerie.data[idx].x;\n        const xPos = this.state.xScale(selectedDate);\n        this.setState({ selectedDate, selectedDateXPos: xPos, selectedDateIdx: idx });\n        if (updateTooltip) {\n          updateTooltip(selectedDate, xPos, idx);\n        }\n      }\n    }\n  };\n\n  renderHorizontalGrid = () => {\n    const { formatYTick } = this.props;\n    const { xScale, yScale } = this.state;\n    const hasTicks = typeof yScale.ticks === 'function';\n    let ticks = hasTicks ? yScale.ticks(this.props.maxYTicksCount) : yScale.domain();\n\n    if (!ticks.length) {\n      ticks.push(yScale.domain()[1]);\n    }\n\n    // if there are duplicated ticks, that means 4 ticks are too much for this data\n    // so let's just use the domain values (min and max)\n    if (formatYTick) {\n      const formattedTicks = ticks.map(tick => formatYTick(tick));\n      if (ticks.length > uniq(formattedTicks).length) {\n        ticks = yScale.domain();\n      }\n    }\n\n    return (\n      <g>\n        {ticks.map(tick => (\n          <g key={tick}>\n            {formatYTick != null && (\n              <text\n                className=\"line-chart-tick line-chart-tick-x\"\n                dx=\"-1em\"\n                dy=\"0.3em\"\n                textAnchor=\"end\"\n                x={xScale.range()[0]}\n                y={yScale(tick)}>\n                {formatYTick(tick)}\n              </text>\n            )}\n            <line\n              className=\"line-chart-grid\"\n              x1={xScale.range()[0]}\n              x2={xScale.range()[1]}\n              y1={yScale(tick)}\n              y2={yScale(tick)}\n            />\n          </g>\n        ))}\n      </g>\n    );\n  };\n\n  renderXAxisTicks = () => {\n    const { xScale, yScale } = this.state;\n    const format = xScale.tickFormat(7);\n    const ticks = xScale.ticks(7);\n    const y = yScale.range()[0];\n    return (\n      <g>\n        {ticks.slice(0, -1).map((tick, index) => {\n          const nextTick = index + 1 < ticks.length ? ticks[index + 1] : xScale.domain()[1];\n          const x = (xScale(tick) + xScale(nextTick)) / 2;\n          return (\n            <text key={index} className=\"line-chart-tick\" x={x} y={y} dy=\"1.5em\">\n              {format(tick)}\n            </text>\n          );\n        })}\n      </g>\n    );\n  };\n\n  renderLeak = () => {\n    const yRange = this.state.yScale.range();\n    const xRange = this.state.xScale.range();\n    const leakWidth = xRange[xRange.length - 1] - this.state.xScale(this.props.leakPeriodDate);\n    if (leakWidth < 0) {\n      return null;\n    }\n    return (\n      <rect\n        className=\"leak-chart-rect\"\n        x={this.state.xScale(this.props.leakPeriodDate)}\n        y={yRange[yRange.length - 1]}\n        width={leakWidth}\n        height={yRange[0] - yRange[yRange.length - 1]}\n        fill={theme.leakColor}\n      />\n    );\n  };\n\n  renderLines = () => {\n    const lineGenerator = d3Line()\n      .defined(d => d.y || d.y === 0)\n      .x(d => this.state.xScale(d.x))\n      .y(d => this.state.yScale(d.y));\n    if (this.props.basisCurve) {\n      lineGenerator.curve(curveBasis);\n    }\n    return (\n      <g>\n        {this.props.series.map((serie, idx) => (\n          <path\n            key={serie.name}\n            className={classNames('line-chart-path', 'line-chart-path-' + idx)}\n            d={lineGenerator(serie.data)}\n          />\n        ))}\n      </g>\n    );\n  };\n\n  renderAreas = () => {\n    const areaGenerator = area()\n      .defined(d => d.y || d.y === 0)\n      .x(d => this.state.xScale(d.x))\n      .y1(d => this.state.yScale(d.y))\n      .y0(this.state.yScale(0));\n    if (this.props.basisCurve) {\n      areaGenerator.curve(curveBasis);\n    }\n    return (\n      <g>\n        {this.props.series.map((serie, idx) => (\n          <path\n            key={serie.name}\n            className={classNames('line-chart-area', 'line-chart-area-' + idx)}\n            d={areaGenerator(serie.data)}\n          />\n        ))}\n      </g>\n    );\n  };\n\n  renderEvents = () => {\n    const { events, eventSize } = this.props;\n    if (!events || !eventSize) {\n      return null;\n    }\n    const { xScale, yScale } = this.state;\n    const inRangeEvents = events.filter(\n      event => event.date >= xScale.domain()[0] && event.date <= xScale.domain()[1]\n    );\n    const offset = eventSize / 2;\n    return (\n      <g>\n        {inRangeEvents.map((event, idx) => (\n          <path\n            d={this.getEventMarker(eventSize)}\n            className={classNames('line-chart-event', event.className)}\n            key={`${idx}-${event.date.getTime()}`}\n            transform={`translate(${xScale(event.date) - offset}, ${yScale.range()[0] + offset})`}\n          />\n        ))}\n      </g>\n    );\n  };\n\n  renderSelectedDate = () => {\n    const { selectedDateIdx, selectedDateXPos, yScale } = this.state;\n    const firstSerie = this.props.series[0];\n    if (selectedDateIdx == null || selectedDateXPos == null || !firstSerie) {\n      return null;\n    }\n\n    return (\n      <g>\n        <line\n          className=\"line-tooltip\"\n          x1={selectedDateXPos}\n          x2={selectedDateXPos}\n          y1={yScale.range()[0]}\n          y2={yScale.range()[1]}\n        />\n        {this.props.series.map((serie, idx) => {\n          const point = serie.data[selectedDateIdx];\n          if (!point || (!point.y && point.y !== 0)) {\n            return null;\n          }\n          return (\n            <circle\n              key={serie.name}\n              cx={selectedDateXPos}\n              cy={yScale(point.y)}\n              r=\"4\"\n              className={classNames('line-chart-dot', 'line-chart-dot-' + idx)}\n            />\n          );\n        })}\n      </g>\n    );\n  };\n\n  renderClipPath = () => {\n    return (\n      <defs>\n        <clipPath id=\"chart-clip\">\n          <rect\n            width={this.state.xScale.range()[1]}\n            height={this.state.yScale.range()[0] + 10}\n            transform=\"translate(0,-5)\"\n          />\n        </clipPath>\n      </defs>\n    );\n  };\n\n  renderMouseEventsOverlay = (zoomEnabled /*: boolean */) => {\n    const mouseEvents = {};\n    if (zoomEnabled) {\n      mouseEvents.onWheel = this.handleWheel;\n    }\n    if (this.props.updateTooltip) {\n      mouseEvents.onMouseEnter = this.handleMouseEnter;\n      mouseEvents.onMouseMove = this.handleMouseMove;\n      mouseEvents.onMouseOut = this.handleMouseOut;\n    }\n    if (this.props.updateSelectedDate) {\n      mouseEvents.onClick = this.handleClick;\n    }\n    return (\n      <rect\n        className=\"chart-mouse-events-overlay\"\n        width={this.state.xScale.range()[1]}\n        height={this.state.yScale.range()[0]}\n        {...mouseEvents}\n      />\n    );\n  };\n\n  render() {\n    if (!this.props.width || !this.props.height) {\n      return <div />;\n    }\n    const zoomEnabled = !this.props.disableZoom && this.props.updateZoom != null;\n    const isZoomed = this.props.startDate || this.props.endDate;\n    return (\n      <svg\n        className={classNames('line-chart', { 'chart-zoomed': isZoomed })}\n        width={this.props.width}\n        height={this.props.height}>\n        {zoomEnabled && this.renderClipPath()}\n        <g transform={`translate(${this.props.padding[3]}, ${this.props.padding[0]})`}>\n          {this.props.leakPeriodDate != null && this.renderLeak()}\n          {!this.props.hideGrid && this.renderHorizontalGrid()}\n          {!this.props.hideXAxis && this.renderXAxisTicks()}\n          {this.props.showAreas && this.renderAreas()}\n          {this.renderLines()}\n          {this.props.showEventMarkers && this.renderEvents()}\n          {this.renderSelectedDate()}\n          {this.renderMouseEventsOverlay(zoomEnabled)}\n        </g>\n      </svg>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\nexport interface BubblePopupPosition {\n  top?: number;\n  left?: number;\n  right?: number;\n}\n\ninterface Props {\n  customClass?: string;\n  children: React.ReactNode;\n  position: BubblePopupPosition;\n}\n\nexport default function BubblePopup(props: Props) {\n  const popupClass = classNames('bubble-popup', props.customClass);\n  const popupStyle = { ...props.position };\n\n  return (\n    <div className={popupClass} style={popupStyle}>\n      {props.children}\n      <div className=\"bubble-popup-arrow\" />\n    </div>\n  );\n}\n"],"sourceRoot":""}