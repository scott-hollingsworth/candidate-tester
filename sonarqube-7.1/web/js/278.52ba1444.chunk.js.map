{"version":3,"sources":["webpack:///./src/main/js/api/quality-gates.ts","webpack:///./src/main/js/apps/quality-gates/components/BuiltInQualityGateBadge.tsx","webpack:///./src/main/js/apps/quality-gates/components/RenameQualityGateForm.tsx","webpack:///./src/main/js/apps/quality-gates/components/CopyQualityGateForm.tsx","webpack:///./src/main/js/apps/quality-gates/components/DeleteQualityGateForm.tsx","webpack:///./src/main/js/apps/quality-gates/components/DetailsHeader.tsx","webpack:///./src/main/js/apps/quality-gates/components/AddConditionForm.js","webpack:///./src/main/js/apps/quality-gates/components/DeleteConditionForm.tsx","webpack:///./src/main/js/apps/quality-gates/components/ThresholdInput.tsx","webpack:///./src/main/js/apps/quality-gates/components/Condition.tsx","webpack:///./src/main/js/apps/quality-gates/components/Conditions.js","webpack:///./src/main/js/apps/quality-gates/components/Projects.js","webpack:///./src/main/js/apps/quality-gates/components/DetailsContent.js","webpack:///./src/main/js/apps/quality-gates/components/Details.js","webpack:///./src/main/js/apps/quality-gates/containers/DetailsContainer.js"],"names":["fetchQualityGates","data","Object","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","fetchQualityGate","createQualityGate","deleteQualityGate","renameQualityGate","copyQualityGate","setQualityGateAsDefault","createCondition","updateCondition","deleteCondition","getGateForProject","then","_a","qualityGate","__assign","isDefault","default","searchGates","associateGateWithProject","dissociateGateWithProject","getApplicationQualityGate","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","BuiltInQualityGateBadge","className","_b","tooltip","badge","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","overlay","_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_2__","undefined","_super","RenameQualityGateForm","props","_this","call","this","mounted","handleNameChange","event","setState","name","currentTarget","value","handleFormSubmit","preventDefault","organization","state","loading","quality_gates","id","onRename","onClose","RenameQualityGateForm_extends","prototype","componentDidMount","componentWillUnmount","render","header","l10n","submitDisabled","index_js_exposed","Modal","contentLabel","onRequestClose","onSubmit","htmlFor","autoFocus","maxLength","onChange","required","size","type","buttons","disabled","onClick","CopyQualityGateForm","onCopy","context","router","push","urls","String","CopyQualityGateForm_extends","contextTypes","prop_types","DeleteQualityGateForm","apply","arguments","onDelete","replace","DeleteQualityGateForm_extends","DetailsHeader","openPopup","handleRenameClick","handleCopyClick","handleSetAsDefaultClick","onSetAsDefault","handleDeleteClick","handleClosePopup","DetailsHeader_extends","actions","isBuiltIn","rename","copy","setAsDefault","delete","components_RenameQualityGateForm","components_CopyQualityGateForm","components_DeleteQualityGateForm","AddConditionForm_AddConditionForm","metrics","onSelect","metricsToDisplay","lodash_js_exposed","metric","hidden","optionsWithDomains","key","label","domain","forEach","option","index","options","previous","index_js_exposed_default","a","createElement","Select","placeholder","DeleteConditionForm","condition","DeleteConditionForm_extends","ThresholdInput","handleChange","e","handleSelectChange","ThresholdInput_extends","renderRatingInput","clearable","searchable","data-type","Condition","handleOperatorChange","changed","op","handlePeriodChange","checked","period","handleWarningChange","warning","handleErrorChange","error","handleSaveClick","indexOf","Condition_assign","gateId","handleConditionResponse","onError","handleUpdateClick","newCondition","onSaveCondition","onResetError","handleCancelClick","onDeleteCondition","openDeleteConditionForm","openDeleteCondition","closeDeleteConditionForm","Condition_extends","renderPeriodValue","isLeakSelected","isDiffMetric","isRating","renderPeriod","edit","Checkbox","onCheck","renderOperator","operatorOptions","map","autofocus","components_ThresholdInput","measures","components_DeleteConditionForm","Conditions","Conditions_extends","componentWillUpdate","nextProps","handleError","response","json","r","message","errors","msg","join","ex","handleResetError","conditions","onAddCondition","existingConditions","filter","sortedConditions","duplicates","savedConditions","sample","length","uniqDuplicates","d","Conditions_assign","components_Condition","Conditions_getKey","bind","PureComponent","Projects","projects","selectedProjects","handleSearch","query","selected","pageSize","results","project","handleSelect","projectId","concat","handleUnselect","renderElement","Projects_extends","SelectList","Selected","elements","labelAll","labelSelected","labelUnselected","onSearch","onUnselect","selectedElements","DetailsContent","DetailsContent_extends","gate","defaultMessage","associateProjects","components_Conditions","manageConditions","components_Projects","Details","fetchDetails","params","onShow","Details_extends","fetchMetrics","componentDidUpdate","prevProps","Helmet_default","title","components_DetailsHeader","components_DetailsContent","prop_types_default","object","isRequired","__webpack_exports__","es","DetailsContainer_assign","rootReducer","dispatch","store_actions","newName","oldCondition","rootActions","components_Details"],"mappings":"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","file":"js/278.52ba1444.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Metric } from '../app/types';\n\nexport interface ConditionBase {\n  error: string;\n  metric: string;\n  op?: string;\n  period?: number;\n  warning: string;\n}\n\nexport interface Condition extends ConditionBase {\n  id: number;\n}\n\nexport interface QualityGate {\n  actions?: {\n    associateProjects: boolean;\n    copy: boolean;\n    delete: boolean;\n    manageConditions: boolean;\n    rename: boolean;\n    setAsDefault: boolean;\n  };\n  conditions?: Condition[];\n  id: number;\n  isBuiltIn?: boolean;\n  isDefault?: boolean;\n  name: string;\n}\n\nexport function fetchQualityGates(data: {\n  organization?: string;\n}): Promise<{\n  actions: { create: boolean };\n  qualitygates: QualityGate[];\n}> {\n  return getJSON('/api/qualitygates/list', data).catch(throwGlobalError);\n}\n\nexport function fetchQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<QualityGate> {\n  return getJSON('/api/qualitygates/show', data).catch(throwGlobalError);\n}\n\nexport function createQualityGate(data: {\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/create', data).catch(throwGlobalError);\n}\n\nexport function deleteQualityGate(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/destroy', data).catch(throwGlobalError);\n}\n\nexport function renameQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/rename', data).catch(throwGlobalError);\n}\n\nexport function copyQualityGate(data: {\n  id: number;\n  name: string;\n  organization?: string;\n}): Promise<QualityGate> {\n  return postJSON('/api/qualitygates/copy', data).catch(throwGlobalError);\n}\n\nexport function setQualityGateAsDefault(data: {\n  id: number;\n  organization?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/set_as_default', data).catch(throwGlobalError);\n}\n\nexport function createCondition(\n  data: {\n    gateId: number;\n    organization?: string;\n  } & ConditionBase\n): Promise<Condition> {\n  return postJSON('/api/qualitygates/create_condition', data);\n}\n\nexport function updateCondition(data: { organization?: string } & Condition): Promise<Condition> {\n  return postJSON('/api/qualitygates/update_condition', data);\n}\n\nexport function deleteCondition(data: { id: number; organization?: string }): Promise<void> {\n  return post('/api/qualitygates/delete_condition', data);\n}\n\nexport function getGateForProject(data: {\n  organization?: string;\n  project: string;\n}): Promise<QualityGate | undefined> {\n  return getJSON('/api/qualitygates/get_by_project', data).then(\n    ({ qualityGate }) =>\n      qualityGate && {\n        ...qualityGate,\n        isDefault: qualityGate.default\n      },\n    throwGlobalError\n  );\n}\n\nexport function searchGates(data: {\n  gateId: number;\n  organization?: string;\n  page: number;\n  pageSize: number;\n  selected: string;\n}): Promise<void | Response> {\n  return getJSON('/api/qualitygates/search', data).catch(throwGlobalError);\n}\n\nexport function associateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/select', data).catch(throwGlobalError);\n}\n\nexport function dissociateGateWithProject(data: {\n  gateId: number;\n  organization?: string;\n  projectKey?: string;\n  projectId?: string;\n}): Promise<void | Response> {\n  return post('/api/qualitygates/deselect', data).catch(throwGlobalError);\n}\n\nexport interface ConditionAnalysis {\n  comparator: string;\n  errorThreshold?: string;\n  metric: string;\n  periodIndex?: number;\n  onLeak?: boolean;\n  status: string;\n  value: string;\n  warningThreshold?: string;\n}\n\nexport interface ApplicationProject {\n  key: string;\n  name: string;\n  status: string;\n  conditions: ConditionAnalysis[];\n}\n\nexport interface ApplicationQualityGate {\n  metrics: Metric[];\n  projects: ApplicationProject[];\n  status: string;\n}\n\nexport function getApplicationQualityGate(data: {\n  application: string;\n  organization?: string;\n}): Promise<ApplicationQualityGate> {\n  return getJSON('/api/qualitygates/application_status', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  tooltip?: boolean;\n}\n\nexport default function BuiltInQualityGateBadge({ className, tooltip = true }: Props) {\n  const badge = (\n    <div className={classNames('outline-badge', className)}>\n      {translate('quality_gates.built_in')}\n    </div>\n  );\n\n  const overlay = (\n    <div>\n      <span>{translate('quality_gates.built_in.description.1')}</span>\n      <span className=\"little-spacer-left\">\n        {translate('quality_gates.built_in.description.2')}\n      </span>\n    </div>\n  );\n\n  return <Tooltip overlay={tooltip ? overlay : undefined}>{badge}</Tooltip>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { QualityGate, renameQualityGate } from '../../../api/quality-gates';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  qualityGate: QualityGate;\n  onRename: (qualityGate: QualityGate, newName: string) => void;\n  onClose: () => void;\n  organization?: string;\n}\n\ninterface State {\n  loading: boolean;\n  name: string;\n}\n\nexport default class RenameQualityGateForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: false, name: props.qualityGate.name };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { qualityGate, organization } = this.props;\n    const { name } = this.state;\n    if (name) {\n      this.setState({ loading: true });\n      renameQualityGate({ id: qualityGate.id, name, organization }).then(\n        () => {\n          this.props.onRename(qualityGate, name);\n          this.props.onClose();\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const { qualityGate } = this.props;\n    const { loading, name } = this.state;\n    const header = translate('quality_gates.rename');\n    const submitDisabled = loading || !name || (qualityGate && qualityGate.name === name);\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"quality-gate-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"quality-gate-form-name\">\n                {translate('name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                autoFocus={true}\n                id=\"quality-gate-form-name\"\n                maxLength={100}\n                onChange={this.handleNameChange}\n                required={true}\n                size={50}\n                type=\"text\"\n                value={name}\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"js-confirm\" disabled={submitDisabled}>\n              {translate('rename')}\n            </SubmitButton>\n            <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { copyQualityGate, QualityGate } from '../../../api/quality-gates';\nimport Modal from '../../../components/controls/Modal';\nimport { ResetButtonLink, SubmitButton } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { getQualityGateUrl } from '../../../helpers/urls';\n\ninterface Props {\n  qualityGate: QualityGate;\n  onCopy: (newQualityGate: QualityGate) => void;\n  onClose: () => void;\n  organization?: string;\n}\n\ninterface State {\n  loading: boolean;\n  name: string;\n}\n\nexport default class CopyQualityGateForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: false, name: props.qualityGate.name };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { qualityGate, organization } = this.props;\n    const { name } = this.state;\n    if (name) {\n      this.setState({ loading: true });\n      copyQualityGate({ id: qualityGate.id, name, organization }).then(\n        qualityGate => {\n          this.props.onCopy(qualityGate);\n          this.props.onClose();\n          this.context.router.push(\n            getQualityGateUrl(String(qualityGate.id), this.props.organization)\n          );\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const { qualityGate } = this.props;\n    const { loading, name } = this.state;\n    const header = translate('quality_gates.copy');\n    const submitDisabled = loading || !name || (qualityGate && qualityGate.name === name);\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"quality-gate-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"quality-gate-form-name\">\n                {translate('name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                autoFocus={true}\n                id=\"quality-gate-form-name\"\n                maxLength={100}\n                onChange={this.handleNameChange}\n                required={true}\n                size={50}\n                type=\"text\"\n                value={name}\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"js-confirm\" disabled={submitDisabled}>\n              {translate('copy')}\n            </SubmitButton>\n            <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { deleteQualityGate, QualityGate } from '../../../api/quality-gates';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { getQualityGatesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  onClose: () => void;\n  onDelete: (qualityGate: QualityGate) => void;\n  organization?: string;\n  qualityGate: QualityGate;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class DeleteQualityGateForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { organization, qualityGate } = this.props;\n    this.setState({ loading: true });\n    deleteQualityGate({ id: qualityGate.id, organization }).then(\n      () => {\n        this.props.onDelete(qualityGate);\n        this.context.router.replace(getQualityGatesUrl(organization));\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { qualityGate } = this.props;\n    const header = translate('quality_gates.delete');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"delete-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p>\n              {translateWithParameters('quality_gates.delete.confirm.message', qualityGate.name)}\n            </p>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"js-delete button-red\" disabled={this.state.loading}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BuiltInQualityGateBadge from './BuiltInQualityGateBadge';\nimport RenameQualityGateForm from './RenameQualityGateForm';\nimport CopyQualityGateForm from './CopyQualityGateForm';\nimport DeleteQualityGateForm from './DeleteQualityGateForm';\nimport { fetchQualityGate, QualityGate, setQualityGateAsDefault } from '../../../api/quality-gates';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  qualityGate: QualityGate;\n  onRename: (qualityGate: QualityGate, newName: string) => void;\n  onCopy: (newQualityGate: QualityGate) => void;\n  onSetAsDefault: (qualityGate: QualityGate) => void;\n  onDelete: (qualityGate: QualityGate) => void;\n  organization?: string;\n}\n\ninterface State {\n  openPopup?: string;\n}\n\nexport default class DetailsHeader extends React.PureComponent<Props, State> {\n  state = { openPopup: undefined };\n\n  handleRenameClick = () => {\n    this.setState({ openPopup: 'rename' });\n  };\n\n  handleCopyClick = () => {\n    this.setState({ openPopup: 'copy' });\n  };\n\n  handleSetAsDefaultClick = () => {\n    const { qualityGate, onSetAsDefault, organization } = this.props;\n    if (!qualityGate.isDefault) {\n      setQualityGateAsDefault({ id: qualityGate.id, organization })\n        .then(() => fetchQualityGate({ id: qualityGate.id, organization }))\n        .then(qualityGate => onSetAsDefault(qualityGate), () => {});\n    }\n  };\n\n  handleDeleteClick = () => {\n    this.setState({ openPopup: 'delete' });\n  };\n\n  handleClosePopup = () => this.setState({ openPopup: undefined });\n\n  render() {\n    const { organization, qualityGate } = this.props;\n    const { openPopup } = this.state;\n    const actions = qualityGate.actions || ({} as any);\n    return (\n      <div className=\"layout-page-header-panel layout-page-main-header issues-main-header\">\n        <div className=\"layout-page-header-panel-inner layout-page-main-header-inner\">\n          <div className=\"layout-page-main-inner\">\n            <h2 className=\"pull-left\">\n              {qualityGate.name}\n              {qualityGate.isBuiltIn && <BuiltInQualityGateBadge className=\"spacer-left\" />}\n            </h2>\n\n            <div className=\"pull-right\">\n              {actions.rename && (\n                <Button id=\"quality-gate-rename\" onClick={this.handleRenameClick}>\n                  {translate('rename')}\n                </Button>\n              )}\n              {actions.copy && (\n                <Button\n                  className=\"little-spacer-left\"\n                  id=\"quality-gate-copy\"\n                  onClick={this.handleCopyClick}>\n                  {translate('copy')}\n                </Button>\n              )}\n              {actions.setAsDefault && (\n                <Button\n                  className=\"little-spacer-left\"\n                  id=\"quality-gate-toggle-default\"\n                  onClick={this.handleSetAsDefaultClick}>\n                  {translate('set_as_default')}\n                </Button>\n              )}\n              {actions.delete && (\n                <Button\n                  className=\"little-spacer-left button-red\"\n                  id=\"quality-gate-delete\"\n                  onClick={this.handleDeleteClick}>\n                  {translate('delete')}\n                </Button>\n              )}\n              {openPopup === 'rename' && (\n                <RenameQualityGateForm\n                  onClose={this.handleClosePopup}\n                  onRename={this.props.onRename}\n                  organization={organization}\n                  qualityGate={qualityGate}\n                />\n              )}\n\n              {openPopup === 'copy' && (\n                <CopyQualityGateForm\n                  onClose={this.handleClosePopup}\n                  onCopy={this.props.onCopy}\n                  organization={organization}\n                  qualityGate={qualityGate}\n                />\n              )}\n\n              {openPopup === 'delete' && (\n                <DeleteQualityGateForm\n                  onClose={this.handleClosePopup}\n                  onDelete={this.props.onDelete}\n                  organization={organization}\n                  qualityGate={qualityGate}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { omitBy, map, sortBy } from 'lodash';\nimport Select from '../../../components/controls/Select';\nimport { translate, getLocalizedMetricName, getLocalizedMetricDomain } from '../../../helpers/l10n';\n\nexport default function AddConditionForm({ metrics, onSelect }) {\n  function handleChange(option) {\n    const metric = option.value;\n\n    // e.target.value = '';\n    onSelect(metric);\n  }\n\n  const metricsToDisplay = omitBy(metrics, metric => metric.hidden);\n  const options = sortBy(\n    map(metricsToDisplay, metric => ({\n      value: metric.key,\n      label: getLocalizedMetricName(metric),\n      domain: metric.domain\n    })),\n    'domain'\n  );\n\n  // use \"disabled\" property to emulate optgroups\n  const optionsWithDomains = [];\n  options.forEach((option, index, options) => {\n    const previous = index > 0 ? options[index - 1] : null;\n    if (!previous || previous.domain !== option.domain) {\n      optionsWithDomains.push({\n        value: option.domain,\n        label: getLocalizedMetricDomain(option.domain),\n        disabled: true\n      });\n    }\n    optionsWithDomains.push(option);\n  });\n\n  return (\n    <div className=\"big-spacer-top panel bg-muted\">\n      <Select\n        id=\"quality-gate-new-condition-metric\"\n        className=\"text-middle input-large\"\n        options={optionsWithDomains}\n        placeholder={translate('quality_gates.add_condition')}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Condition, deleteCondition } from '../../../api/quality-gates';\nimport { Metric } from '../../../app/types';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { getLocalizedMetricName, translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  condition: Condition;\n  metric: Metric;\n  onClose: () => void;\n  onDelete: (condition: Condition) => void;\n  organization?: string;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class DeleteConditionForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { organization, condition } = this.props;\n    this.setState({ loading: true });\n    deleteCondition({ id: condition.id, organization }).then(\n      () => this.props.onDelete(condition),\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { metric } = this.props;\n    const header = translate('quality_gates.delete_condition');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"delete-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p>\n              {translateWithParameters(\n                'quality_gates.delete_condition.confirm.message',\n                getLocalizedMetricName(metric)\n              )}\n            </p>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"js-delete button-red\" disabled={this.state.loading}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from '../../../components/controls/Select';\nimport { Metric } from '../../../app/types';\n\ninterface Props {\n  name: string;\n  value: string;\n  metric: Metric;\n  onChange: (value: string) => void;\n}\n\nexport default class ThresholdInput extends React.PureComponent<Props> {\n  handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    this.props.onChange(e.currentTarget.value);\n  };\n\n  handleSelectChange = (option: { value: string } | null) => {\n    if (option) {\n      this.props.onChange(option.value);\n    } else {\n      this.props.onChange('');\n    }\n  };\n\n  renderRatingInput() {\n    const { name, value } = this.props;\n\n    const options = [\n      { label: 'A', value: '1' },\n      { label: 'B', value: '2' },\n      { label: 'C', value: '3' },\n      { label: 'D', value: '4' }\n    ];\n\n    return (\n      <Select\n        className=\"input-tiny text-middle\"\n        clearable={true}\n        name={name}\n        onChange={this.handleSelectChange}\n        options={options}\n        placeholder=\"\"\n        searchable={false}\n        value={value}\n      />\n    );\n  }\n\n  render() {\n    const { name, value, metric } = this.props;\n\n    if (metric.type === 'RATING') {\n      return this.renderRatingInput();\n    }\n\n    return (\n      <input\n        name={name}\n        type=\"text\"\n        className=\"input-tiny text-middle\"\n        value={value}\n        data-type={metric.type}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeleteConditionForm from './DeleteConditionForm';\nimport ThresholdInput from './ThresholdInput';\nimport {\n  Condition as ICondition,\n  ConditionBase,\n  createCondition,\n  QualityGate,\n  updateCondition\n} from '../../../api/quality-gates';\nimport { Metric } from '../../../app/types';\nimport Checkbox from '../../../components/controls/Checkbox';\nimport Select from '../../../components/controls/Select';\nimport { Button, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate, getLocalizedMetricName } from '../../../helpers/l10n';\nimport { formatMeasure } from '../../../helpers/measures';\n\ninterface Props {\n  condition: ICondition;\n  edit: boolean;\n  metric: Metric;\n  organization: string;\n  onDeleteCondition: (condition: ICondition) => void;\n  onError: (error: any) => void;\n  onResetError: () => void;\n  onSaveCondition: (condition: ICondition, newCondition: ICondition) => void;\n  qualityGate: QualityGate;\n}\n\ninterface State {\n  changed: boolean;\n  period?: number;\n  op?: string;\n  openDeleteCondition: boolean;\n  warning: string;\n  error: string;\n}\n\nexport default class Condition extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      changed: false,\n      period: props.condition.period,\n      op: props.condition.op,\n      openDeleteCondition: false,\n      warning: props.condition.warning || '',\n      error: props.condition.error || ''\n    };\n  }\n\n  handleOperatorChange = ({ value }: any) => this.setState({ changed: true, op: value });\n\n  handlePeriodChange = (checked: boolean) => {\n    const period = checked ? 1 : undefined;\n    this.setState({ changed: true, period });\n  };\n\n  handleWarningChange = (warning: string) => this.setState({ changed: true, warning });\n\n  handleErrorChange = (error: string) => this.setState({ changed: true, error });\n\n  handleSaveClick = () => {\n    const { qualityGate, condition, metric, organization } = this.props;\n    const { period } = this.state;\n    const data: ConditionBase = {\n      metric: condition.metric,\n      op: metric.type === 'RATING' ? 'GT' : this.state.op,\n      warning: this.state.warning,\n      error: this.state.error\n    };\n\n    if (period && metric.type !== 'RATING') {\n      data.period = period;\n    }\n\n    if (metric.key.indexOf('new_') === 0) {\n      data.period = 1;\n    }\n\n    createCondition({ gateId: qualityGate.id, organization, ...data }).then(\n      this.handleConditionResponse,\n      this.props.onError\n    );\n  };\n\n  handleUpdateClick = () => {\n    const { condition, metric, organization } = this.props;\n    const { period } = this.state;\n    const data: ICondition = {\n      id: condition.id,\n      metric: condition.metric,\n      op: metric.type === 'RATING' ? 'GT' : this.state.op,\n      warning: this.state.warning,\n      error: this.state.error\n    };\n\n    if (period && metric.type !== 'RATING') {\n      data.period = period;\n    }\n\n    if (metric.key.indexOf('new_') === 0) {\n      data.period = 1;\n    }\n\n    updateCondition({ organization, ...data }).then(\n      this.handleConditionResponse,\n      this.props.onError\n    );\n  };\n\n  handleConditionResponse = (newCondition: ICondition) => {\n    this.setState({ changed: false });\n    this.props.onSaveCondition(this.props.condition, newCondition);\n    this.props.onResetError();\n  };\n\n  handleCancelClick = () => {\n    this.props.onDeleteCondition(this.props.condition);\n  };\n\n  openDeleteConditionForm = () => {\n    this.setState({ openDeleteCondition: true });\n  };\n\n  closeDeleteConditionForm = () => {\n    this.setState({ openDeleteCondition: false });\n  };\n\n  renderPeriodValue() {\n    const { condition, metric } = this.props;\n    const isLeakSelected = !!this.state.period;\n    const isDiffMetric = condition.metric.indexOf('new_') === 0;\n    const isRating = metric.type === 'RATING';\n\n    if (isDiffMetric) {\n      return (\n        <span className=\"note\">{translate('quality_gates.condition.leak.unconditional')}</span>\n      );\n    }\n\n    if (isRating) {\n      return <span className=\"note\">{translate('quality_gates.condition.leak.never')}</span>;\n    }\n\n    return isLeakSelected\n      ? translate('quality_gates.condition.leak.yes')\n      : translate('quality_gates.condition.leak.no');\n  }\n\n  renderPeriod() {\n    const { condition, metric, edit } = this.props;\n\n    const isDiffMetric = condition.metric.indexOf('new_') === 0;\n    const isRating = metric.type === 'RATING';\n    const isLeakSelected = !!this.state.period;\n\n    if (isRating || isDiffMetric || !edit) {\n      return this.renderPeriodValue();\n    }\n\n    return <Checkbox checked={isLeakSelected} onCheck={this.handlePeriodChange} />;\n  }\n\n  renderOperator() {\n    const { condition, edit, metric } = this.props;\n\n    if (!edit && condition.op) {\n      return metric.type === 'RATING'\n        ? translate('quality_gates.operator', condition.op, 'rating')\n        : translate('quality_gates.operator', condition.op);\n    }\n\n    if (metric.type === 'RATING') {\n      return <span className=\"note\">{translate('quality_gates.operator.GT.rating')}</span>;\n    }\n\n    const operators = ['LT', 'GT', 'EQ', 'NE'];\n    const operatorOptions = operators.map(op => {\n      const label = translate('quality_gates.operator', op);\n      return { label, value: op };\n    });\n\n    return (\n      <Select\n        autofocus={true}\n        className=\"input-medium\"\n        clearable={false}\n        name=\"operator\"\n        onChange={this.handleOperatorChange}\n        options={operatorOptions}\n        searchable={false}\n        value={this.state.op}\n      />\n    );\n  }\n\n  render() {\n    const { condition, edit, metric, organization } = this.props;\n    return (\n      <tr>\n        <td className=\"text-middle\">\n          {getLocalizedMetricName(metric)}\n          {metric.hidden && (\n            <span className=\"text-danger little-spacer-left\">{translate('deprecated')}</span>\n          )}\n        </td>\n\n        <td className=\"thin text-middle nowrap\">{this.renderPeriod()}</td>\n\n        <td className=\"thin text-middle nowrap\">{this.renderOperator()}</td>\n\n        <td className=\"thin text-middle nowrap\">\n          {edit ? (\n            <ThresholdInput\n              metric={metric}\n              name=\"warning\"\n              onChange={this.handleWarningChange}\n              value={this.state.warning}\n            />\n          ) : (\n            formatMeasure(condition.warning, metric.type)\n          )}\n        </td>\n\n        <td className=\"thin text-middle nowrap\">\n          {edit ? (\n            <ThresholdInput\n              metric={metric}\n              name=\"error\"\n              onChange={this.handleErrorChange}\n              value={this.state.error}\n            />\n          ) : (\n            formatMeasure(condition.error, metric.type)\n          )}\n        </td>\n\n        {edit && (\n          <td className=\"thin text-middle nowrap\">\n            {condition.id ? (\n              <div>\n                <Button\n                  className=\"update-condition\"\n                  disabled={!this.state.changed}\n                  onClick={this.handleUpdateClick}>\n                  {translate('update_verb')}\n                </Button>\n                <Button\n                  className=\"button-red delete-condition little-spacer-left\"\n                  onClick={this.openDeleteConditionForm}>\n                  {translate('delete')}\n                </Button>\n                {this.state.openDeleteCondition && (\n                  <DeleteConditionForm\n                    condition={condition}\n                    metric={metric}\n                    onClose={this.closeDeleteConditionForm}\n                    onDelete={this.props.onDeleteCondition}\n                    organization={organization}\n                  />\n                )}\n              </div>\n            ) : (\n              <div>\n                <Button className=\"add-condition\" onClick={this.handleSaveClick}>\n                  {translate('add_verb')}\n                </Button>\n                <ResetButtonLink\n                  className=\"cancel-add-condition spacer-left\"\n                  onClick={this.handleCancelClick}>\n                  {translate('cancel')}\n                </ResetButtonLink>\n              </div>\n            )}\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { sortBy, uniqBy } from 'lodash';\nimport AddConditionForm from './AddConditionForm';\nimport Condition from './Condition';\nimport { translate, getLocalizedMetricName } from '../../../helpers/l10n';\n\nfunction getKey(condition, index) {\n  return condition.id ? condition.id : `new-${index}`;\n}\n\nexport default class Conditions extends React.PureComponent {\n  state = {\n    error: null\n  };\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.qualityGate !== this.props.qualityGate) {\n      this.setState({ error: null });\n    }\n  }\n\n  handleError(error) {\n    try {\n      error.response.json().then(r => {\n        const message = r.errors.map(e => e.msg).join('. ');\n        this.setState({ error: message });\n      });\n    } catch (ex) {\n      this.setState({ error: translate('default_error_message') });\n    }\n  }\n\n  handleResetError() {\n    this.setState({ error: null });\n  }\n\n  render() {\n    const {\n      qualityGate,\n      conditions,\n      metrics,\n      edit,\n      onAddCondition,\n      onSaveCondition,\n      onDeleteCondition,\n      organization\n    } = this.props;\n\n    const existingConditions = conditions.filter(condition => metrics[condition.metric]);\n\n    const sortedConditions = sortBy(\n      existingConditions,\n      condition => metrics[condition.metric] && metrics[condition.metric].name\n    );\n\n    const duplicates = [];\n    const savedConditions = existingConditions.filter(condition => condition.id != null);\n    savedConditions.forEach(condition => {\n      const sameCount = savedConditions.filter(\n        sample => sample.metric === condition.metric && sample.period === condition.period\n      ).length;\n      if (sameCount > 1) {\n        duplicates.push(condition);\n      }\n    });\n\n    const uniqDuplicates = uniqBy(duplicates, d => d.metric).map(condition => ({\n      ...condition,\n      metric: metrics[condition.metric]\n    }));\n    return (\n      <div className=\"quality-gate-section\" id=\"quality-gate-conditions\">\n        <h3 className=\"spacer-bottom\">{translate('quality_gates.conditions')}</h3>\n\n        <div className=\"big-spacer-bottom\">{translate('quality_gates.introduction')}</div>\n\n        {this.state.error && <div className=\"alert alert-danger\">{this.state.error}</div>}\n\n        {uniqDuplicates.length > 0 && (\n          <div className=\"alert alert-warning\">\n            <p>{translate('quality_gates.duplicated_conditions')}</p>\n            <ul className=\"list-styled spacer-top\">\n              {uniqDuplicates.map(d => (\n                <li key={d.metric.key}>{getLocalizedMetricName(d.metric)}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {sortedConditions.length ? (\n          <table className=\"data zebra zebra-hover\" id=\"quality-gate-conditions\">\n            <thead>\n              <tr>\n                <th className=\"nowrap\">{translate('quality_gates.conditions.metric')}</th>\n                <th className=\"thin nowrap\">{translate('quality_gates.conditions.leak')}</th>\n                <th className=\"thin nowrap\">{translate('quality_gates.conditions.operator')}</th>\n                <th className=\"thin nowrap\">{translate('quality_gates.conditions.warning')}</th>\n                <th className=\"thin nowrap\">{translate('quality_gates.conditions.error')}</th>\n                {edit && <th />}\n              </tr>\n            </thead>\n            <tbody>\n              {sortedConditions.map((condition, index) => (\n                <Condition\n                  key={getKey(condition, index)}\n                  qualityGate={qualityGate}\n                  condition={condition}\n                  metric={metrics[condition.metric]}\n                  edit={edit}\n                  onSaveCondition={onSaveCondition}\n                  onDeleteCondition={onDeleteCondition}\n                  onError={this.handleError.bind(this)}\n                  onResetError={this.handleResetError.bind(this)}\n                  organization={organization}\n                />\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div className=\"big-spacer-top\">{translate('quality_gates.no_conditions')}</div>\n        )}\n\n        {edit && <AddConditionForm metrics={metrics} onSelect={onAddCondition} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { find, without } from 'lodash';\nimport SelectList, { Filter } from '../../../components/SelectList/SelectList';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  searchGates,\n  associateGateWithProject,\n  dissociateGateWithProject\n} from '../../../api/quality-gates';\n/*:: import { Project } from '../../projects/types'; */\n\n/*::\ntype State = {\n  projects: Projects[],\n  selectedProjects: string[]\n};\n*/\n\nexport default class Projects extends React.PureComponent {\n  state /*: State */ = { projects: [], selectedProjects: [] };\n\n  componentDidMount() {\n    this.handleSearch('', Filter.Selected);\n  }\n\n  handleSearch = (query /*: string*/, selected /*: string */) => {\n    return searchGates({\n      gateId: this.props.qualityGate.id,\n      organization: this.props.organization,\n      pageSize: 100,\n      query: query !== '' ? query : undefined,\n      selected\n    }).then(data => {\n      this.setState({\n        projects: data.results,\n        selectedProjects: data.results\n          .filter(project => project.selected)\n          .map(project => project.id)\n      });\n    });\n  };\n\n  handleSelect = (id /*: string*/) => {\n    return associateGateWithProject({\n      gateId: this.props.qualityGate.id,\n      organization: this.props.organization,\n      projectId: id\n    }).then(() => {\n      this.setState((state /*: State*/) => ({\n        selectedProjects: [...state.selectedProjects, id]\n      }));\n    });\n  };\n\n  handleUnselect = (id /*: string*/) => {\n    return dissociateGateWithProject({\n      gateId: this.props.qualityGate.id,\n      organization: this.props.organization,\n      projectId: id\n    }).then(\n      () => {\n        this.setState((state /*: State*/) => ({\n          selectedProjects: without(state.selectedProjects, id)\n        }));\n      },\n      () => {}\n    );\n  };\n\n  renderElement = (id /*: string*/) /*: React.ReactNode*/ => {\n    const project = find(this.state.projects, { id });\n    return project === undefined ? id : project.name;\n  };\n\n  render() {\n    return (\n      <SelectList\n        elements={this.state.projects.map(project => project.id)}\n        labelAll={translate('quality_gates.projects.all')}\n        labelSelected={translate('quality_gates.projects.with')}\n        labelUnselected={translate('quality_gates.projects.without')}\n        onSearch={this.handleSearch}\n        onSelect={this.handleSelect}\n        onUnselect={this.handleUnselect}\n        renderElement={this.renderElement}\n        selectedElements={this.state.selectedProjects}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport Conditions from './Conditions';\nimport Projects from './Projects';\nimport { translate } from '../../../helpers/l10n';\n\nexport default class DetailsContent extends React.PureComponent {\n  render() {\n    const { gate, metrics, organization } = this.props;\n    const { onAddCondition, onDeleteCondition, onSaveCondition } = this.props;\n    const conditions = gate.conditions || [];\n    const actions = gate.actions || {};\n\n    const defaultMessage = actions.associateProjects\n      ? translate('quality_gates.projects_for_default.edit')\n      : translate('quality_gates.projects_for_default');\n\n    return (\n      <div className=\"layout-page-main-inner\">\n        <Conditions\n          qualityGate={gate}\n          conditions={conditions}\n          metrics={metrics}\n          edit={actions.manageConditions}\n          onAddCondition={onAddCondition}\n          onSaveCondition={onSaveCondition}\n          onDeleteCondition={onDeleteCondition}\n          organization={organization}\n        />\n\n        <div id=\"quality-gate-projects\" className=\"quality-gate-section\">\n          <h3 className=\"spacer-bottom\">{translate('quality_gates.projects')}</h3>\n          {gate.isDefault ? (\n            defaultMessage\n          ) : (\n            <Projects\n              qualityGate={gate}\n              edit={actions.associateProjects}\n              organization={organization}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport DetailsHeader from './DetailsHeader';\nimport DetailsContent from './DetailsContent';\nimport { fetchQualityGate } from '../../../api/quality-gates';\n\nexport default class Details extends React.PureComponent {\n  static contextTypes = {\n    router: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    this.props.fetchMetrics();\n    this.fetchDetails();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.id !== this.props.params.id) {\n      this.fetchDetails();\n    }\n  }\n\n  fetchDetails = () =>\n    fetchQualityGate({\n      id: this.props.params.id,\n      organization: this.props.organization && this.props.organization.key\n    }).then(qualityGate => this.props.onShow(qualityGate), () => {});\n\n  render() {\n    const { organization, metrics, qualityGate } = this.props;\n    const { onAddCondition, onDeleteCondition, onSaveCondition } = this.props;\n\n    if (!qualityGate) {\n      return null;\n    }\n\n    return (\n      <div className=\"layout-page-main\">\n        <Helmet title={qualityGate.name} />\n        <DetailsHeader\n          qualityGate={qualityGate}\n          onRename={this.props.onRename}\n          onCopy={this.props.onCopy}\n          onSetAsDefault={this.props.onSetAsDefault}\n          onDelete={this.props.onDelete}\n          organization={organization && organization.key}\n        />\n\n        <DetailsContent\n          gate={qualityGate}\n          metrics={metrics}\n          onAddCondition={onAddCondition}\n          onSaveCondition={onSaveCondition}\n          onDeleteCondition={onDeleteCondition}\n          organization={organization && organization.key}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport {\n  deleteQualityGate,\n  showQualityGate,\n  renameQualityGate,\n  copyQualityGate,\n  setQualityGateAsDefault,\n  addCondition,\n  deleteCondition,\n  saveCondition\n} from '../store/actions';\nimport Details from '../components/Details';\nimport { getMetrics, getQualityGatesAppState } from '../../../store/rootReducer';\nimport { fetchMetrics } from '../../../store/rootActions';\n\nconst mapStateToProps = state => ({\n  ...getQualityGatesAppState(state),\n  metrics: getMetrics(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onShow: qualityGate => dispatch(showQualityGate(qualityGate)),\n  onDelete: qualityGate => dispatch(deleteQualityGate(qualityGate)),\n  onRename: (qualityGate, newName) => dispatch(renameQualityGate(qualityGate, newName)),\n  onCopy: qualityGate => dispatch(copyQualityGate(qualityGate)),\n  onSetAsDefault: qualityGate => dispatch(setQualityGateAsDefault(qualityGate)),\n  onAddCondition: metric => dispatch(addCondition(metric)),\n  onSaveCondition: (oldCondition, newCondition) =>\n    dispatch(saveCondition(oldCondition, newCondition)),\n  onDeleteCondition: condition => dispatch(deleteCondition(condition)),\n  fetchMetrics: () => dispatch(fetchMetrics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);\n"],"sourceRoot":""}