{"version":3,"sources":["webpack:///./src/main/js/helpers/csv.ts","webpack:///./src/main/js/apps/quality-profiles/components/App.tsx","webpack:///./src/main/js/apps/quality-profiles/components/AppContainer.tsx","webpack:///./src/main/js/api/quality-profiles.ts"],"names":["csvEscape","value","replace","__webpack_require__","d","__webpack_exports__","_super","App","_this","apply","this","arguments","mounted","state","loading","updateProfiles","fetchProfiles","then","r","setState","profiles","Object","utils","App_extends","prototype","componentDidMount","loadData","componentWillUnmount","organization","props","data","key","quality_profiles","Promise","all","responses","exporters","profilesResponse","actions","renderChild","index_js_exposed","className","finalLanguages","values","languages","children","onRequestFail","render","OrganizationHelmet","title","l10n","es","ownProps","currentUser","rootReducer","params","organizationKey","dispatch","error","rootActions","components_App","searchQualityProfiles","parameters","_helpers_request__WEBPACK_IMPORTED_MODULE_2__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_3__","getQualityProfile","createQualityProfile","setMethod","setData","submit","restoreQualityProfile","getProfileProjects","getProfileInheritance","profileKey","setDefaultProfile","renameProfile","name","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentKey","getImporters","importers","getExporters","getProfileChangelog","compareProfiles","leftKey","rightKey","associateProject","projectKey","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","lodash__WEBPACK_IMPORTED_MODULE_0__","_helpers_csv__WEBPACK_IMPORTED_MODULE_1__","join","__assign","deactivateRule"],"mappings":"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","file":"js/286.0db25922.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function csvEscape(value: string): string {\n  const escaped = value.replace(/\"/g, '\\\\\"');\n  return `\"${escaped}\"`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { searchQualityProfiles, getExporters, Actions } from '../../../api/quality-profiles';\nimport { sortProfiles } from '../utils';\nimport { translate } from '../../../helpers/l10n';\nimport OrganizationHelmet from '../../../components/common/OrganizationHelmet';\nimport '../styles.css';\nimport { Exporter, Profile } from '../types';\n\ninterface Props {\n  children: React.ReactElement<any>;\n  languages: Array<{}>;\n  onRequestFail: (reasong: any) => void;\n  organization: { name: string; key: string } | null;\n}\n\ninterface State {\n  actions?: Actions;\n  loading: boolean;\n  exporters?: Exporter[];\n  profiles?: Profile[];\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchProfiles() {\n    const { organization } = this.props;\n    const data = organization ? { organization: organization.key } : {};\n    return searchQualityProfiles(data);\n  }\n\n  loadData() {\n    this.setState({ loading: true });\n    Promise.all([getExporters(), this.fetchProfiles()]).then(\n      responses => {\n        if (this.mounted) {\n          const [exporters, profilesResponse] = responses;\n          this.setState({\n            actions: profilesResponse.actions,\n            exporters,\n            profiles: sortProfiles(profilesResponse.profiles),\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  updateProfiles = () => {\n    return this.fetchProfiles().then(r => {\n      if (this.mounted) {\n        this.setState({ profiles: sortProfiles(r.profiles) });\n      }\n    });\n  };\n\n  renderChild() {\n    if (this.state.loading) {\n      return <i className=\"spinner\" />;\n    }\n    const { organization } = this.props;\n    const finalLanguages = Object.values(this.props.languages);\n\n    return React.cloneElement(this.props.children, {\n      actions: this.state.actions || {},\n      profiles: this.state.profiles,\n      languages: finalLanguages,\n      exporters: this.state.exporters,\n      updateProfiles: this.updateProfiles,\n      onRequestFail: this.props.onRequestFail,\n      organization: organization ? organization.key : null\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page page-limited\">\n        <OrganizationHelmet\n          title={translate('quality_profiles.page')}\n          organization={this.props.organization}\n        />\n\n        {this.renderChild()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport App from './App';\nimport { getLanguages, getCurrentUser, getOrganizationByKey } from '../../../store/rootReducer';\nimport { onFail } from '../../../store/rootActions';\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  currentUser: getCurrentUser(state),\n  languages: getLanguages(state),\n  organization: ownProps.params.organizationKey\n    ? getOrganizationByKey(state, ownProps.params.organizationKey)\n    : null\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onRequestFail: (error: any) => onFail(dispatch)(error)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App as any);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from '../helpers/csv';\nimport {\n  request,\n  checkStatus,\n  parseJSON,\n  getJSON,\n  post,\n  postJSON,\n  RequestData\n} from '../helpers/request';\nimport { Paging } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  organization: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  organization?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile(data: {\n  compareToSonarWay?: boolean;\n  profile: string;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', data);\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/create')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return request('/api/qualityprofiles/restore')\n    .setMethod('post')\n    .setData(data)\n    .submit()\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nexport interface ProfileProject {\n  id: number;\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance(profileKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/inheritance', { profileKey }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/set_default', { profileKey });\n}\n\nexport function renameProfile(key: string, name: string): Promise<void> {\n  return post('/api/qualityprofiles/rename', { key, name });\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName });\n}\n\nexport function deleteProfile(profileKey: string): Promise<void> {\n  return post('/api/qualityprofiles/delete', { profileKey });\n}\n\nexport function changeProfileParent(profileKey: string, parentKey: string): Promise<void> {\n  return post('/api/qualityprofiles/change_parent', { profileKey, parentKey });\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(data: RequestData): Promise<any> {\n  return getJSON('/api/qualityprofiles/changelog', data);\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<any> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/add_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport function dissociateProject(profileKey: string, projectKey: string) {\n  return post('/api/qualityprofiles/remove_project', { profileKey, projectKey }).catch(\n    throwGlobalError\n  );\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\nexport interface SearchUsersResponse {\n  users: Array<{\n    avatar?: string;\n    login: string;\n    name: string;\n    selected?: boolean;\n  }>;\n  paging: Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  /* eslint-disable camelcase */\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  organization: string | undefined;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n  /* eslint-enable camelcase */\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  organization: string | undefined;\n  params?: { [key: string]: string };\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: {\n  key: string;\n  organization: string | undefined;\n  rule: string;\n}) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}