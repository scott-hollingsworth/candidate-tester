{"version":3,"sources":["webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/formatDefault.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/colors.js","webpack:///./node_modules/d3-scale/src/category10.js","webpack:///./node_modules/d3-scale/src/category20b.js","webpack:///./node_modules/d3-scale/src/category20c.js","webpack:///./node_modules/d3-scale/src/category20.js","webpack:///./node_modules/d3-scale/src/cubehelix.js","webpack:///./node_modules/d3-scale/src/rainbow.js","webpack:///./node_modules/d3-scale/src/viridis.js","webpack:///./node_modules/d3-scale/src/sequential.js"],"names":["ascending","a","b","NaN","bisector","compare","f","length","d","x","left","lo","hi","mid","right","bisect_ascendingBisect","bisect_bisectRight","bisect_bisectLeft","bisect","pairs","array","pair","i","n","p","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","value","delta","m","mean","sum","isNaN","deviation","v","Math","sqrt","extent","min","max","array_array","prototype","slice","map","constant","identity","range","start","stop","step","arguments","ceil","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","call","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","Map","object","each","key","set","o","constructor","has","this","get","remove","property","clear","keys","entries","size","empty","src_map","set_Set","set_proto","set_set","add","array_map","ordinal_implicit","name","ordinal_ordinal","index","unknown","scale","copy","band_band","bandwidth","undefined","ordinalRange","round","paddingInner","paddingOuter","align","rescale","Object","d3_array","rangeRound","padding","band_point","band_pointish","define","factory","extend","parent","definition","create","color_Color","color_reI","color_reN","color_reP","color_reHex3","color_reHex6","color_reRgbInteger","RegExp","color_reRgbPercent","color_reRgbaInteger","color_reRgbaPercent","color_reHslPercent","color_reHslaPercent","color_named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","trim","toLowerCase","exec","color_Rgb","parseInt","color_rgbn","color_rgba","color_hsla","hasOwnProperty","r","g","color_rgbConvert","rgb","opacity","color_rgb","h","s","l","color_Hsl","color_hsl","color_hslConvert","color_hsl2rgb","m1","m2","displayable","toString","brighter","k","darker","deg2rad","PI","rad2deg","lab_Xn","lab_Yn","lab_Zn","lab_t0","lab_t1","lab_t2","lab_t3","lab_labConvert","lab_Lab","lab_Hcl","cos","c","sin","lab_rgb2xyz","lab_xyz2lab","y","lab_lab","lab_lab2xyz","lab_xyz2rgb","lab_hcl","atan2","lab_hclConvert","z","cubehelix_C","cubehelix_D","cubehelix_E","cubehelix_ED","cubehelix_EB","cubehelix_BC_DA","cubehelix_cubehelix","cubehelix_Cubehelix","bl","cubehelix_cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","t3","cosh","sinh","color_linear","color_hue","color_gamma","color_nogamma","color_exponential","rgbGamma","color","end","gamma","rgb_rgbSpline","spline","colors","src_number","string_reA","string_reB","source","parse_cssNode","parse_cssRoot","parse_cssView","parse_svgNode","src_value","src_rgb","am","bm","bs","bi","lastIndex","q","string_one","string_zero","join","Date","setTime","nb","na","valueOf","src_round","degrees","decompose_identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","e","atan","transform_interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","createElementNS","setAttribute","baseVal","consolidate","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelix_cubehelixLong","src_constant","d3_scale_src_number","continuous_unit","continuous_deinterpolateLinear","continuous_bimap","deinterpolate","reinterpolate","d0","d1","r0","r1","continuous_polymap","continuous_copy","target","interpolate","clamp","continuous_continuous","piecewise","output","input","continuous_deinterpolateClamp","invert","continuous_reinterpolateClamp","formatPrefixAuto_prefixExponent","formatDecimal","toExponential","indexOf","coefficient","src_exponent","formatRounded","exponent","formatTypes","","toPrecision","out","%","toFixed","X","toUpperCase","formatSpecifier_re","formatSpecifier_formatSpecifier","specifier","formatSpecifier_FormatSpecifier","match","Error","fill","sign","symbol","zero","width","comma","precision","type","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","src_identity","locale_prefixes","locale","grouping","thousands","group","substring","currency","decimal","numerals","replace","formatNumerals","percent","newFormat","prefix","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","src_locale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linear_linearish","tickFormat","nice","linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","log_pow10","log_powp","base","E","exp","log_logp","log10","log2","log_reflect","log_log","logs","pows","u","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","offset","filter","every","millisecond_millisecond","src_millisecond","duration_durationMinute","duration_durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","src_hour","day_day","setHours","setDate","getDate","src_day","week_weekday","getDay","week_sunday","week_monday","week_tuesday","week_wednesday","week_thursday","week_friday","week_saturday","month_month","setMonth","getMonth","getFullYear","src_month","year_year","setFullYear","src_year","utcMinute_utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcHour_utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcDay_utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeek_utcWeekday","getUTCDay","utcWeek_utcSunday","utcWeek_utcMonday","utcWeek_utcTuesday","utcWeek_utcWednesday","utcWeek_utcThursday","utcWeek_utcFriday","utcWeek_utcSaturday","utcMonth_utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcYear_utcYear","setUTCFullYear","src_utcYear","locale_localDate","H","M","S","L","locale_utcDate","UTC","locale_newYear","src_defaultLocale_locale","defaultLocale_timeFormat","defaultLocale_utcFormat","defaultLocale_utcParse","locale_pads","-","0","locale_numberRe","locale_percentRe","locale_requoteRe","locale_pad","string","locale_requote","locale_formatRe","names","locale_formatLookup","locale_parseWeekdayNumberSunday","w","locale_parseWeekdayNumberMonday","locale_parseWeekNumberSunday","U","locale_parseWeekNumberISO","V","locale_parseWeekNumberMonday","W","locale_parseFullYear","locale_parseYear","locale_parseZone","Z","locale_parseMonthNumber","locale_parseDayOfMonth","locale_parseDayOfYear","locale_parseHour24","locale_parseMinutes","locale_parseSeconds","locale_parseMilliseconds","locale_parseMicroseconds","locale_parseLiteralPercent","locale_parseUnixTimestamp","Q","locale_parseUnixTimestampSeconds","locale_formatDayOfMonth","locale_formatHour24","locale_formatHour12","locale_formatDayOfYear","locale_formatMilliseconds","getMilliseconds","locale_formatMicroseconds","locale_formatMonthNumber","locale_formatMinutes","locale_formatSeconds","getSeconds","locale_formatWeekdayNumberMonday","day","locale_formatWeekNumberSunday","locale_formatWeekNumberISO","locale_formatWeekdayNumberSunday","locale_formatWeekNumberMonday","locale_formatYear","locale_formatFullYear","locale_formatZone","locale_formatUTCDayOfMonth","locale_formatUTCHour24","locale_formatUTCHour12","locale_formatUTCDayOfYear","src_utcDay","locale_formatUTCMilliseconds","getUTCMilliseconds","locale_formatUTCMicroseconds","locale_formatUTCMonthNumber","locale_formatUTCMinutes","locale_formatUTCSeconds","locale_formatUTCWeekdayNumberMonday","dow","locale_formatUTCWeekNumberSunday","locale_formatUTCWeekNumberISO","locale_formatUTCWeekdayNumberSunday","locale_formatUTCWeekNumberMonday","locale_formatUTCYear","locale_formatUTCFullYear","locale_formatUTCZone","locale_formatLiteralPercent","locale_formatUnixTimestamp","locale_formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","A","B","I","Y","utcFormats","parses","parseSpecifier","pad","charAt","newParse","newDate","week","utcFormat","utcParse","locale_formatLocale","src_defaultLocale_defaultLocale","toISOString","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","time_durationMonth","time_durationYear","time_date","time_number","time_calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","t0","src_minute","src_second","utcTime","src_colors","category10","category20b","category20c","category20","d3_scale_src_cubehelix","rainbow_warm","rainbow_cool","rainbow_rainbow","src_rainbow","ts","viridis_ramp","viridis_magma","viridis_inferno","viridis_plasma","sequential_sequential","interpolator"],"mappings":"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","file":"js/1.67e2957e.chunk.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n","import formatTypes from \"./formatTypes\";\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n","export default function(x) {\n  return x;\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n"],"sourceRoot":""}