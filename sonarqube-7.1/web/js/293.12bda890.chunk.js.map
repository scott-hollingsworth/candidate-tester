{"version":3,"sources":["webpack:///./src/main/js/components/icons-components/AlertSuccessIcon.tsx","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx"],"names":["_app_theme__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","AlertSuccessIcon","_a","className","_b","fill","_c","size","react__WEBPACK_IMPORTED_MODULE_0__","width","height","viewBox","version","xmlnsXlink","xmlSpace","style","d","StatusIndicator","color","classnames__WEBPACK_IMPORTED_MODULE_1__","small-status-indicator","big-status-indicator","BoxedGroupAccordion","_super","_this","apply","this","arguments","state","hoveringInner","handleClick","props","onClick","data","onDetailEnter","setState","onDetailLeave","__extends","prototype","render","open","renderHeader","title","no-hover","role","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","onMouseEnter","onMouseLeave","children","HealthCauseItem_HealthCauseItem","health","healthCause","index_js_exposed","classnames","system","RED","HealthItem_HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","length","GREEN","statusIndicator","toLowerCase","undefined","map","cause","idx","key","Tooltip","overlay","Object","l10n","utils_LOGS_LEVELS","utils_HA_FIELD","utils_HEALTH_FIELD","utils_HEALTHCAUSES_FIELD","utils_PLUGINS_FIELD","utils_SETTINGS_FIELD","utils_ignoreInfoFields","sysInfoObject","lodash_js_exposed","utils_getHealth","utils_getHealthCauses","utils_getLogsLevel","logLevel","indexOf","utils_getAppNodes","sysInfoData","utils_isCluster","utils_getNodeName","nodeInfo","utils_getSystemData","statData","statistics","measures","utils_assign","utils_parseQuery","urlQuery","expandedCards","helpers_query","expand","utils_serializeQuery","query","SysInfoItem_SysInfoItem","value","Array","JSON","stringify","SysInfoItem_typeof","SysInfoItem_BooleanItem","SysInfoItem_ObjectItem","AlertErrorIcon","Section_Section","items","id","wordBreak","HealthCard_HealthCard","mainSection","sections","item","utils_typeof","utils_groupSections","showFields","keys","showSections","showLogLevelWarning","section","ClusterSysInfos_ClusterSysInfos","toggleCard","includes","utils_getClusterMainCardSection","node","utils_getSearchNodes","ChangeLogLevelForm","call","handleFormSubmit","event","preventDefault","newLevel","updating","then","onChange","handleLevelChange","currentTarget","ChangeLogLevelForm_extends","header","Modal","contentLabel","onRequestClose","onClose","onSubmit","level","checked","type","htmlFor","infoMsg","buttons","disabled","PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","handleServerRestartOpen","openRestartForm","handleServerRestartClose","removeElementFocus","blur","PageActions_extends","componentWillReceiveProps","nextProps","suffix","now","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","onToggleClick","download","href","target","serverId","Date","getFullYear","getMonth","getDate","getHours","getMinutes","canRestart","RestartForm","components_ChangeLogLevelForm","cluster","PageHeader_PageHeader","showActions","components_PageActions","isCluster","loading","StandaloneSysInfos_StandAloneSysInfos","startsWith","utils_getStandaloneMainSections","Web","_","Compute Engine","Search Engine","utils_getStandaloneSecondarySections","SystemUpgradeIntermediate","showMore","toggleIntermediatVersions","stopPropagation","SystemUpgradeIntermediate_extends","upgrades","icon-arrow-down","icon-arrow-up","upgrade","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","description","SystemUpgradeItem_SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","system_upgrade_SystemUpgradeIntermediate","slice","downloadUrl","SystemUpgradeForm","upgrading","handleCancelClick","SystemUpgradeForm_extends","SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","groupedVersions","split","Number","utils_groupUpgrades","utils_sortUpgrades","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","SystemUpgradeNotif_extends","componentDidMount","componentWillUnmount","system_upgrade_SystemUpgradeForm","App_App","App","fetchSysInfo","toggleSysInfoCards","toggledCard","location","filter","card","concat","updateQuery","newQuery","App_assign","context","router","replace","pathname","App_extends","renderSysInfo","Helmet_default","a","system_upgrade_SystemUpgradeNotif","defaultLevel","logLevels","utils_getSystemLogsLevel","utils_getServerId","contextTypes","prop_types"],"mappings":"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","file":"js/293.12bda890.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './types';\nimport * as theme from '../../app/theme';\n\nexport default function AlertSuccessIcon({ className, fill = theme.green, size = 16 }: IconProps) {\n  return (\n    <svg\n      className={className}\n      width={size}\n      height={size}\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      xmlSpace=\"preserve\">\n      <path\n        style={{ fill }}\n        d=\"M12.607 6.554q0-0.25-0.161-0.411l-0.813-0.804q-0.17-0.17-0.402-0.17t-0.402 0.17l-3.643 3.634-2.018-2.018q-0.17-0.17-0.402-0.17t-0.402 0.17l-0.813 0.804q-0.161 0.161-0.161 0.411 0 0.241 0.161 0.402l3.232 3.232q0.17 0.17 0.402 0.17 0.241 0 0.411-0.17l4.848-4.848q0.161-0.161 0.161-0.402zM14.857 8q0 1.866-0.92 3.442t-2.496 2.496-3.442 0.92-3.442-0.92-2.496-2.496-0.92-3.442 0.92-3.442 2.496-2.496 3.442-0.92 3.442 0.92 2.496 2.496 0.92 3.442z\"\n      />\n    </svg>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { HealthType } from '../../../../api/system';\n\ninterface Props {\n  className?: string;\n  health: HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <span\n      className={classNames(\n        'alert',\n        health === HealthType.RED ? 'alert-danger' : 'alert-warning',\n        className\n      )}>\n      {healthCause}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { HealthType } from '../../../../api/system';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== HealthType.GREEN;\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem key={idx} className=\"spacer-right\" health={health} healthCause={cause} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport {\n  ClusterSysInfo,\n  HealthType,\n  NodeInfo,\n  SysInfo,\n  SysInfoSection,\n  SysValueObject,\n  SystemUpgrade\n} from '../../api/system';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_FIELD = 'Health';\nexport const HEALTHCAUSES_FIELD = 'Health Causes';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SETTINGS_FIELD = 'Settings';\n\nexport function ignoreInfoFields(sysInfoObject: SysValueObject): SysValueObject {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTHCAUSES_FIELD,\n    'Name',\n    PLUGINS_FIELD,\n    SETTINGS_FIELD\n  ]) as SysValueObject;\n}\n\nexport function getHealth(sysInfoObject: SysValueObject): HealthType {\n  return sysInfoObject[HEALTH_FIELD] as HealthType;\n}\n\nexport function getHealthCauses(sysInfoObject: SysValueObject): string[] {\n  return sysInfoObject[HEALTHCAUSES_FIELD] as string[];\n}\n\nexport function getLogsLevel(sysInfoObject?: SysValueObject): string {\n  if (!sysInfoObject) {\n    return LOGS_LEVELS[0];\n  }\n  if (sysInfoObject['Web Logging'] || sysInfoObject['Compute Engine Logging']) {\n    return sortBy(\n      [\n        getLogsLevel((sysInfoObject as NodeInfo)['Web Logging']),\n        getLogsLevel((sysInfoObject as NodeInfo)['Compute Engine Logging'])\n      ],\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    )[1];\n  }\n  if (sysInfoObject['System']) {\n    return getLogsLevel((sysInfoObject as SysInfo)['System']);\n  }\n  return (sysInfoObject['Logs Level'] || LOGS_LEVELS[0]) as string;\n}\n\nexport function getAppNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Application Nodes'];\n}\n\nexport function getSearchNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Search Nodes'];\n}\n\nexport function isCluster(sysInfoData?: SysInfo): boolean {\n  return (\n    sysInfoData !== undefined && sysInfoData['System'] && sysInfoData['System'][HA_FIELD] === true\n  );\n}\n\nexport function getServerId(sysInfoData?: SysInfo): string | undefined {\n  return sysInfoData && sysInfoData['System']['Server ID'];\n}\n\nexport function getSystemLogsLevel(sysInfoData?: SysInfo): string {\n  const defaultLevel = LOGS_LEVELS[0];\n  if (!sysInfoData) {\n    return defaultLevel;\n  }\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(\n      getAppNodes(sysInfoData as ClusterSysInfo).map(getLogsLevel),\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : defaultLevel;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: NodeInfo): string {\n  return nodeInfo['Name'];\n}\n\nfunction getSystemData(sysInfoData: SysInfo): SysValueObject {\n  const statData: SysValueObject = {};\n  const statistics = sysInfoData['Statistics'] as SysValueObject;\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics['ncloc'] as number, 'INT');\n  }\n  return { ...sysInfoData['System'], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: ClusterSysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omit(sysInfoData, [\n      'Application Nodes',\n      PLUGINS_FIELD,\n      'Search Nodes',\n      SETTINGS_FIELD,\n      'Statistics',\n      'System'\n    ]) as SysValueObject)\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: SysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, 'Statistics', 'System'].includes(key) ||\n        key.startsWith('Compute Engine') ||\n        key.startsWith('Search') ||\n        key.startsWith('Web')\n    ) as SysValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: SysInfo): SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith('Web')) as SysValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith('Compute Engine')\n    ) as SysValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) => key.startsWith('Search')) as SysValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: SysValueObject) {\n  const mainSection: SysValueObject = {};\n  const sections: SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize((urlQuery: RawQuery): Query => ({\n  expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n}));\n\nexport const serializeQuery = memoize((query: Query): RawQuery =>\n  cleanQuery({\n    expand: serializeStringArray(query.expandedCards)\n  })\n);\n\nexport function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HealthType, SysValue, SysValueObject } from '../../../../api/system';\nimport { HEALTH_FIELD } from '../../utils';\n\ninterface Props {\n  name: string;\n  value: SysValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === 'State') {\n    return <HealthItem className=\"no-margin\" health={value as HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value as boolean} />;\n    case 'object':\n      return <ObjectItem value={value as SysValueObject} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: SysValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\nimport { SysValueObject } from '../../../../api/system';\n\ninterface Props {\n  name?: string;\n  items: SysValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { HealthType, SysValueObject } from '../../../../api/system';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: SysValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <span className=\"alert alert-danger spacer-left\">\n              {translate('system.log_level.warning.short')}\n            </span>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section key={name} items={section} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo } from '../../../api/system';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: ClusterSysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          key={getNodeName(node)}\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          key={getNodeName(node)}\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <div className=\"alert alert-info spacer-top\">{this.props.infoMsg}</div>\n            {newLevel !== 'INFO' && (\n              <div className=\"alert alert-danger spacer-top\">\n                {translate('system.log_level.warning')}\n              </div>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport RestartForm from '../../../components/common/RestartForm';\nimport { getFileNameSuffix } from '../utils';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n  openRestartForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false,\n      openRestartForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  handleServerRestartOpen = () => {\n    this.setState({ openRestartForm: true });\n  };\n\n  handleServerRestartClose = () => {\n    this.setState({ openRestartForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown>\n            {({ onToggleClick, open }) => (\n              <div className={classNames('display-inline-block dropdown spacer-left', { open })}>\n                <Button onClick={onToggleClick}>\n                  {translate('system.download_logs')}\n                  <i className=\"icon-dropdown little-spacer-left\" />\n                </Button>\n                <ul className=\"dropdown-menu\">\n                  <li>\n                    <a\n                      download=\"sonarqube_app.log\"\n                      href={logsUrl + '?process=app'}\n                      id=\"logs-link\"\n                      target=\"_blank\">\n                      Main Process\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      download=\"sonarqube_ce.log\"\n                      href={logsUrl + '?process=ce'}\n                      id=\"ce-logs-link\"\n                      target=\"_blank\">\n                      Compute Engine\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      download=\"sonarqube_es.log\"\n                      href={logsUrl + '?process=es'}\n                      id=\"es-logs-link\"\n                      target=\"_blank\">\n                      Search Engine\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      download=\"sonarqube_web.log\"\n                      href={logsUrl + '?process=web'}\n                      id=\"web-logs-link\"\n                      target=\"_blank\">\n                      Web Server\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            )}\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <Button\n            className=\"spacer-left\"\n            id=\"restart-server-button\"\n            onClick={this.handleServerRestartOpen}>\n            {translate('system.restart_server')}\n          </Button>\n        )}\n        {this.props.canRestart &&\n          this.state.openRestartForm && <RestartForm onClose={this.handleServerRestartClose} />}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n}\n\nexport default function PageHeader(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {props.showActions && (\n        <PageActions\n          canDownloadLogs={!props.isCluster}\n          canRestart={!props.isCluster}\n          cluster={props.isCluster}\n          logLevel={props.logLevel}\n          serverId={props.serverId}\n          onLogLevelChange={props.onLogLevelChange}\n        />\n      )}\n      {props.loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { SysInfo } from '../../../api/system';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: SysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <a\n          className=\"button-link little-spacer-bottom\"\n          href=\"#\"\n          onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <i\n            className={classNames('little-spacer-left', {\n              'icon-arrow-down': !showMore,\n              'icon-arrow-up': showMore\n            })}\n          />\n        </a>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div key={upgrade.version} className=\"note system-upgrade-intermediate\">\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a className=\"spacer-left\" href={upgrade.changeLogUrl} target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a className=\"spacer-left\" href={lastUpgrade.changeLogUrl} target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport { SystemUpgrade } from '../../../../api/system';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  systemUpgrades: SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  handleCancelClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onClose();\n  };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n              systemUpgrades={upgrades}\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a className=\"pull-left\" href=\"https://www.sonarqube.org/downloads/\" target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <a href=\"#\" onClick={this.handleCancelClick}>\n            {translate('cancel')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades, SystemUpgrade } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface State {\n  systemUpgrades: SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <div className=\"alert alert-info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </div>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo, getSystemInfo, SysInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery\n} from '../utils';\nimport { RawQuery } from '../../../helpers/query';\nimport '../styles.css';\n\ninterface Props {\n  location: { pathname: string; query: RawQuery };\n}\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: SysInfo;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      (sysInfoData: SysInfo) => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.context.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData as ClusterSysInfo}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        <PageHeader\n          isCluster={isCluster(sysInfoData)}\n          loading={loading}\n          logLevel={getSystemLogsLevel(sysInfoData)}\n          onLogLevelChange={this.fetchSysInfo}\n          serverId={getServerId(sysInfoData)}\n          showActions={sysInfoData !== undefined}\n        />\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}