{"version":3,"sources":["webpack:///./src/main/js/apps/account/projects/ProjectCard.tsx","webpack:///./src/main/js/apps/account/projects/Projects.tsx","webpack:///./src/main/js/apps/account/projects/ProjectsContainer.tsx"],"names":["ProjectCard_ProjectCard","_a","project","isAnalyzed","lastAnalysisDate","links","Object","lodash_js_exposed","index_js_exposed","className","DateFromNow","date","fromNow","Tooltip","overlay","DateTimeFormatter","l10n","qualityGate","Level","level","es","to","pathname","query","id","key","name","length","map","link","type","href","title","target","rel","description","Projects_Projects","props","projects","ListFooter","count","total","ready","loading","loadMore","ProjectsContainer_ProjectsContainer","_super","ProjectsContainer","_this","apply","this","arguments","mounted","state","page","loadProjects","search","ProjectsContainer_extends","prototype","componentDidMount","componentWillUnmount","setState","data","ps","p","q","components","then","r","concat","paging","pageIndex","render","helmet","Helmet_default","a"],"mappings":"wLAiCc,SAAAA,EAAwCC,OAAhBC,EAAAD,EAAOC,QAC3BC,EAAoC,MAA1BD,EAAiBE,iBAChCC,EAASC,OAAAC,EAAA,OAAAD,CAAQJ,EAAMG,MAAU,QAErC,OAAAG,EAAA,qBACSC,UAAgC,iCAC5CD,EAAA,uBAAgBC,UAAuB,wBAAAN,EAAAK,EAAA,qBAErBC,UAA2B,4BAAAD,EAAA,cAC3BE,EAAA,GAAKC,KAAST,EAAiBE,kBACxC,SAAOQ,GAAI,OACVJ,EAAA,cAAQK,EAAA,GAAQC,QAAEN,EAAA,cAAkBO,EAAA,GAAKJ,KAAST,EAAqBE,oBACrEI,EAAA,0BAA8BF,OAAAU,EAAA,EAAAV,CAAiC,iCAElEM,QAILJ,EAAA,qBAAcC,UAA2B,4BAC7BH,OAAAU,EAAA,EAAAV,CAEb,uCAE+B,MAAxBJ,EAAYe,aAClBT,EAAA,qBAAcC,UAA+B,gCAC3CD,EAAA,cAAMU,EAAA,GAAMC,MAASjB,EAGnBe,gBAERT,EAAA,oBAAaC,UAAuB,wBAClCD,EAAA,cAAKY,EAAA,MAAGC,IAAYC,SAAc,aAAOC,OAAMC,GAAStB,EAAQuB,OAAUvB,EACvEwB,OAECrB,EAAOsB,OAAQ,GAAAnB,EAAA,qBACLC,UAAwB,yBAAAD,EAAA,oBACvBC,UAAc,eAAAJ,EACfuB,IAAC,SAAIC,GAAI,OACjBrB,EAAA,oBAAOiB,IAAMI,EAAKC,MAChBtB,EAAA,mBACWC,UAAiB,iBACtBsB,KAAMF,EAAKE,KACVC,MAAMH,EAAKH,KACVO,OAAS,SACZC,IAAW,YACd1B,EAAA,mBAAYC,UAAE,wBAA4BoB,EAG/CC,aAKPtB,EAAA,qBAAcC,UAAsB,uBAASP,EAAWuB,OAE9CvB,EAAgBiC,aACxB3B,EAAA,qBAAcC,UAA8B,+BAASP,EAI7DiC,0BC5Dc,SAAAC,EAA+BC,GACnC,IAAAC,EAAAD,EAAmBC,SAEpB,OAAA9B,EAAA,qBACEgB,GAAmB,oBACC,IAAhBc,EAAOX,OACdnB,EAAA,qBAAcC,UAAgB,iBAAWH,OAAAU,EAAA,EAAAV,CACvC,mCACFE,EAAA,uBAAaF,OAAAU,EAAA,EAAAV,CACd,oCAEQgC,EAAOX,OAAQ,GAAAnB,EAAA,oBACTC,UAAwB,yBAAA6B,EACtBV,IAAC,SAAO1B,GAAI,OACvBM,EAAA,oBAAOiB,IAASvB,EAAIuB,KAClBjB,EAAA,cAAYR,GAAQE,QAEvBA,QAIIoC,EAAOX,OAAQ,GACtBnB,EAAA,cAAW+B,EAAA,GACJC,MAAUF,EAAOX,OACjBc,MAAOJ,EAAMI,OAAK,EAClBC,OAAQL,EAAQM,QACbC,SAAOP,EAKzBO,gTC/BAC,EAAA,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAmECD,YAlECF,EAAOI,SAAS,EAChBJ,EAAKK,OACIV,SAAM,EACTW,KAAG,EACF/B,MACL,IAgCFyB,EAAQJ,SAAG,WAAM,OAAII,EAAaO,aAAKP,EAAMK,MAAKC,KAAK,IAEvDN,EAAMQ,OAAG,SAAcjC,GAAK,OAAIyB,EAAaO,aAAE,EAAQhC,IA2BzDyB,EAAA,OAnE+CS,EAAAV,EAA8BD,GAQ3EC,EAAAW,UAAiBC,kBAAjB,WACMT,KAAQE,SAAQ,EAChBF,KACNK,gBAEAR,EAAAW,UAAoBE,qBAApB,WACMV,KAAQE,SACd,GAEAL,EAAAW,UAAYH,aAAZ,SAAmCD,EAA0B/B,GAA7D,IAAAyB,EAmBCE,UAnBY,IAAAI,MAAWJ,KAAMG,MAAKC,WAAE,IAAA/B,MAAY2B,KAAMG,MAAM9B,OACvD2B,KAASW,UAAUlB,SAAU,IACjC,IAAUmB,GAA6BC,GAAQ,KAO/C,OANQT,EAAI,IACNQ,EAAEE,EAAQV,GAEP/B,IACHuC,EAAEG,EAAS1C,GAEjBjB,OAAA4D,EAAA,EAAA5D,CAA0BwD,GAAKK,KAAC,SAAOC,GACrC,IAAc9B,EAAOgB,EAAM,GAAUN,EAAMK,MAASf,cAAO+B,OAAMD,EAAY9B,UAAE8B,EAAU9B,SACrFU,EAASa,UACHvB,WACHf,QACEoB,SAAO,EACVW,KAAGc,EAAOE,OAAUC,UACnB9B,MAAG2B,EAAOE,OAEnB7B,WAOFM,EAAAW,UAAMc,OAAN,WACE,IAAYC,EAAGjE,EAAA,cAAOkE,EAAAC,GAAM3C,MAAW1B,OAAAU,EAAA,EAAAV,CAA4B,yBAEnE,OAA+B,MAAvB4C,KAAMG,MAASf,SAEnB9B,EAAA,qBAAcC,UAAc,eACnBgE,EACPjE,EAAA,mBAAYC,UAEd,4BAIFD,EAAA,qBAAcC,UAAiC,kCACtCgE,EACPjE,EAAA,cAAS4B,GACCE,SAAMY,KAAMG,MAASf,SACxBG,MAAMS,KAAMG,MAAMZ,MAChBE,QAAMO,KAAMG,MAAQV,QACnBC,SAAMM,KAASN,SACjBY,OAAMN,KAIpBM,WACDT,EAnED,CAAoDvC,EAAA","file":"js/258.2a0a5282.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport { Link } from 'react-router';\nimport { Project } from './types';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport DateTimeFormatter from '../../../components/intl/DateTimeFormatter';\nimport Level from '../../../components/ui/Level';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { translateWithParameters, translate } from '../../../helpers/l10n';\n\ninterface Props {\n  project: Project;\n}\n\nexport default function ProjectCard({ project }: Props) {\n  const isAnalyzed = project.lastAnalysisDate != null;\n  const links = sortBy(project.links, 'type');\n\n  return (\n    <div className=\"account-project-card clearfix\">\n      <aside className=\"account-project-side\">\n        {isAnalyzed ? (\n          <div className=\"account-project-analysis\">\n            <DateFromNow date={project.lastAnalysisDate}>\n              {fromNow => (\n                <Tooltip overlay={<DateTimeFormatter date={project.lastAnalysisDate} />}>\n                  <span>{translateWithParameters('my_account.projects.analyzed_x', fromNow)}</span>\n                </Tooltip>\n              )}\n            </DateFromNow>\n          </div>\n        ) : (\n          <div className=\"account-project-analysis\">\n            {translate('my_account.projects.never_analyzed')}\n          </div>\n        )}\n\n        {project.qualityGate != null && (\n          <div className=\"account-project-quality-gate\">\n            <Level level={project.qualityGate} />\n          </div>\n        )}\n      </aside>\n\n      <h3 className=\"account-project-name\">\n        <Link to={{ pathname: '/dashboard', query: { id: project.key } }}>{project.name}</Link>\n      </h3>\n\n      {links.length > 0 && (\n        <div className=\"account-project-links\">\n          <ul className=\"list-inline\">\n            {links.map(link => (\n              <li key={link.type}>\n                <a\n                  className=\"link-with-icon\"\n                  href={link.href}\n                  title={link.name}\n                  target=\"_blank\"\n                  rel=\"nofollow\">\n                  <i className={`icon-color-link icon-${link.type}`} />\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div className=\"account-project-key\">{project.key}</div>\n\n      {!!project.description && (\n        <div className=\"account-project-description\">{project.description}</div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectCard from './ProjectCard';\nimport { Project } from './types';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  loading: boolean;\n  loadMore: () => void;\n  projects: Project[];\n  search: (query: string) => void;\n  total?: number;\n}\n\nexport default function Projects(props: Props) {\n  const { projects } = props;\n\n  return (\n    <div id=\"account-projects\">\n      {projects.length === 0 ? (\n        <div className=\"js-no-results\">{translate('my_account.projects.no_results')}</div>\n      ) : (\n        <p>{translate('my_account.projects.description')}</p>\n      )}\n\n      {projects.length > 0 && (\n        <ul className=\"account-projects-list\">\n          {projects.map(project => (\n            <li key={project.key}>\n              <ProjectCard project={project} />\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {projects.length > 0 && (\n        <ListFooter\n          count={projects.length}\n          total={props.total || 0}\n          ready={!props.loading}\n          loadMore={props.loadMore}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Projects from './Projects';\nimport { getMyProjects } from '../../../api/components';\nimport { translate } from '../../../helpers/l10n';\n\ninterface State {\n  loading: boolean;\n  page: number;\n  projects?: any[];\n  query: string;\n  total?: number;\n}\n\nexport default class ProjectsContainer extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    page: 1,\n    query: ''\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadProjects();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadProjects(page = this.state.page, query = this.state.query) {\n    this.setState({ loading: true });\n    const data: { [p: string]: any } = { ps: 100 };\n    if (page > 1) {\n      data.p = page;\n    }\n    if (query) {\n      data.q = query;\n    }\n    return getMyProjects(data).then((r: any) => {\n      const projects = page > 1 ? [...(this.state.projects || []), ...r.projects] : r.projects;\n      this.setState({\n        projects,\n        query,\n        loading: false,\n        page: r.paging.pageIndex,\n        total: r.paging.total\n      });\n    });\n  }\n\n  loadMore = () => this.loadProjects(this.state.page + 1);\n\n  search = (query: string) => this.loadProjects(1, query);\n\n  render() {\n    const helmet = <Helmet title={translate('my_account.projects')} />;\n\n    if (this.state.projects == null) {\n      return (\n        <div className=\"text-center\">\n          {helmet}\n          <i className=\"spinner spinner-margin\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"account-body account-container\">\n        {helmet}\n        <Projects\n          projects={this.state.projects}\n          total={this.state.total}\n          loading={this.state.loading}\n          loadMore={this.loadMore}\n          search={this.search}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}