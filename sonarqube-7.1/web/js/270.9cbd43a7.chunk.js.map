{"version":3,"sources":["webpack:///./src/main/js/apps/custom-metrics/components/Form.tsx","webpack:///./src/main/js/apps/custom-metrics/components/CreateButton.tsx","webpack:///./src/main/js/apps/custom-metrics/components/Header.tsx","webpack:///./src/main/js/apps/custom-metrics/components/DeleteButton.tsx","webpack:///./src/main/js/apps/custom-metrics/components/EditButton.tsx","webpack:///./src/main/js/apps/custom-metrics/components/List.tsx","webpack:///./src/main/js/apps/custom-metrics/components/App.tsx"],"names":["_super","Form","props","_this","call","this","handleSubmit","onSubmit","description","state","domain","key","name","type","then","onClose","handleKeyChange","event","setState","currentTarget","value","handleDescriptionChange","handleNameChange","handleDomainChange","option","undefined","handleTypeChange","_a","metric","Form_extends","prototype","render","index_js_exposed","SimpleModal","header","onCloseClick","onFormSubmit","submitting","className","htmlFor","Object","l10n","autoFocus","id","maxLength","onChange","required","Select","options","domains","map","label","clearable","types","DeferredSpinner","loading","buttons","disabled","confirmButtonText","onClick","CreateButton","apply","arguments","mounted","modal","handleClick","handleClose","CreateButton_extends","componentDidMount","componentWillUnmount","components_Form","onCreate","Header_Header","components_CreateButton","DeleteButton_DeleteButton","onDelete","ConfirmButton","confirmData","isDestructive","modalBody","modalHeader","onConfirm","ActionsDropdown","destructive","EditButton","data","onEdit","EditButton_assign","EditButton_extends","List_List","metrics","length","lodash_js_exposed","toLowerCase","data-metric","title","components_EditButton","App_PAGE_SIZE","App_App","App","fetchData","Promise","all","api_metrics","isCustom","ps","metricsResponse","paging","getPaging","stopLoading","fetchMore","p","pageIndex","_b","concat","response","pageSize","total","handleCreate","App_assign","handleEdit","handleDelete","metricKey","keys","filter","App_extends","Helmet","ListFooter","count","loadMore","ready"],"mappings":"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","file":"js/270.9cbd43a7.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Metric } from '../../../app/types';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport SimpleModal from '../../../components/controls/SimpleModal';\nimport { translate } from '../../../helpers/l10n';\nimport Select, { Creatable } from '../../../components/controls/Select';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\n\nexport interface MetricProps {\n  description: string;\n  domain?: string;\n  key: string;\n  name: string;\n  type: string;\n}\n\ninterface Props {\n  confirmButtonText: string;\n  domains: string[];\n  metric?: Metric;\n  header: string;\n  onClose: () => void;\n  onSubmit: (data: MetricProps) => Promise<void>;\n  types: string[];\n}\n\ninterface State extends MetricProps {}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: (props.metric && props.metric.description) || '',\n      domain: props.metric && props.metric.domain,\n      key: (props.metric && props.metric.key) || '',\n      name: (props.metric && props.metric.name) || '',\n      type: (props.metric && props.metric.type) || 'INT'\n    };\n  }\n\n  handleSubmit = () => {\n    return this.props\n      .onSubmit({\n        description: this.state.description,\n        domain: this.state.domain,\n        key: this.state.key,\n        name: this.state.name,\n        type: this.state.type\n      })\n      .then(this.props.onClose);\n  };\n\n  handleKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ key: event.currentTarget.value });\n  };\n\n  handleDescriptionChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleDomainChange = (option: { value: string } | null) => {\n    this.setState({ domain: option ? option.value : undefined });\n  };\n\n  handleTypeChange = ({ value }: { value: string }) => {\n    this.setState({ type: value });\n  };\n\n  render() {\n    return (\n      <SimpleModal\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{this.props.header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-metric-key\">\n                  {translate('key')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-metric-key\"\n                  maxLength={64}\n                  name=\"key\"\n                  onChange={this.handleKeyChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.key}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-metric-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  id=\"create-metric-name\"\n                  maxLength={64}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-metric-description\">{translate('description')}</label>\n                <textarea\n                  id=\"create-metric-description\"\n                  name=\"description\"\n                  onChange={this.handleDescriptionChange}\n                  value={this.state.description}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-metric-domain\">{translate('custom_metrics.domain')}</label>\n                <Creatable\n                  onChange={this.handleDomainChange}\n                  options={this.props.domains.map(domain => ({ label: domain, value: domain }))}\n                  value={this.state.domain}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-metric-type\">\n                  {translate('type')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <Select\n                  clearable={false}\n                  onChange={this.handleTypeChange}\n                  options={this.props.types.map(type => ({\n                    label: translate('metric.type', type),\n                    value: type\n                  }))}\n                  value={this.state.type}\n                />\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting} id=\"create-metric-submit\">\n                {this.props.confirmButtonText}\n              </SubmitButton>\n              <ResetButtonLink\n                disabled={submitting}\n                id=\"create-metric-cancel\"\n                onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Form, { MetricProps } from './Form';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  domains: string[];\n  onCreate: (data: MetricProps) => Promise<void>;\n  types: string[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class CreateButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Button id=\"metrics-create\" onClick={this.handleClick}>\n          {translate('custom_metrics.create_metric')}\n        </Button>\n        {this.state.modal && (\n          <Form\n            confirmButtonText={translate('create')}\n            domains={this.props.domains}\n            header={translate('custom_metrics.create_metric')}\n            onClose={this.handleClose}\n            onSubmit={this.props.onCreate}\n            types={this.props.types}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CreateButton from './CreateButton';\nimport { MetricProps } from './Form';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  domains: string[] | undefined;\n  loading: boolean;\n  onCreate: (data: MetricProps) => Promise<void>;\n  types: string[] | undefined;\n}\n\nexport default function Header({ domains, loading, onCreate, types }: Props) {\n  return (\n    <header className=\"page-header\" id=\"custom-metrics-header\">\n      <h1 className=\"page-title\">{translate('custom_metrics.page')}</h1>\n      <DeferredSpinner loading={loading} />\n      <div className=\"page-actions\">\n        {domains && types && <CreateButton domains={domains} onCreate={onCreate} types={types} />}\n      </div>\n      <p className=\"page-description\">{translate('custom_metrics.page.description')}</p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Metric } from '../../../app/types';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport { ActionsDropdownItem } from '../../../components/controls/ActionsDropdown';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  metric: Metric;\n  onDelete: (metricKey: string) => Promise<void>;\n}\n\nexport default function DeleteButton({ metric, onDelete }: Props) {\n  return (\n    <ConfirmButton\n      confirmButtonText={translate('delete')}\n      confirmData={metric.key}\n      isDestructive={true}\n      modalBody={translateWithParameters('custom_metrics.delete_metric.confirmation', metric.name)}\n      modalHeader={translate('custom_metrics.delete_metric')}\n      onConfirm={onDelete}>\n      {({ onClick }) => (\n        <ActionsDropdownItem className=\"js-metric-delete\" destructive={true} onClick={onClick}>\n          {translate('delete')}\n        </ActionsDropdownItem>\n      )}\n    </ConfirmButton>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Form, { MetricProps } from './Form';\nimport { Metric } from '../../../app/types';\nimport { translate } from '../../../helpers/l10n';\nimport { ActionsDropdownItem } from '../../../components/controls/ActionsDropdown';\n\ninterface Props {\n  domains: string[];\n  metric: Metric;\n  onEdit: (data: { id: string } & MetricProps) => Promise<void>;\n  types: string[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class EditButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  handleSubmit = (data: MetricProps) => {\n    return this.props.onEdit({ id: this.props.metric.id, ...data });\n  };\n\n  render() {\n    return (\n      <>\n        <ActionsDropdownItem className=\"js-metric-update\" onClick={this.handleClick}>\n          {translate('update_details')}\n        </ActionsDropdownItem>\n        {this.state.modal && (\n          <Form\n            confirmButtonText={translate('update_verb')}\n            domains={this.props.domains}\n            header={translate('custom_metrics.update_metric')}\n            metric={this.props.metric}\n            onClose={this.handleClose}\n            onSubmit={this.handleSubmit}\n            types={this.props.types}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport DeleteButton from './DeleteButton';\nimport EditButton from './EditButton';\nimport { MetricProps } from './Form';\nimport { Metric } from '../../../app/types';\nimport ActionsDropdown, {\n  ActionsDropdownDivider\n} from '../../../components/controls/ActionsDropdown';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  domains?: string[];\n  metrics: Metric[];\n  onDelete: (metricKey: string) => Promise<void>;\n  onEdit: (data: { id: string } & MetricProps) => Promise<void>;\n  types?: string[];\n}\n\nexport default function List({ domains, metrics, onDelete, onEdit, types }: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\" id=\"custom-metrics-list\">\n      {metrics.length > 0 ? (\n        <table className=\"data zebra zebra-hover\">\n          <tbody>\n            {sortBy(metrics, metric => metric.name.toLowerCase()).map(metric => (\n              <tr data-metric={metric.key} key={metric.key}>\n                <td className=\"width-30\">\n                  <div>\n                    <strong className=\"js-metric-name\">{metric.name}</strong>\n                    <span className=\"js-metric-key note little-spacer-left\">{metric.key}</span>\n                  </div>\n                </td>\n\n                <td className=\"width-20\">\n                  <span className=\"js-metric-domain\">{metric.domain}</span>\n                </td>\n\n                <td className=\"width-20\">\n                  <span className=\"js-metric-type\">{translate('metric.type', metric.type)}</span>\n                </td>\n\n                <td className=\"width-20\" title={metric.description}>\n                  <span className=\"js-metric-description\">{metric.description}</span>\n                </td>\n\n                <td className=\"thin nowrap\">\n                  <ActionsDropdown>\n                    {domains &&\n                      types && (\n                        <EditButton\n                          domains={domains}\n                          metric={metric}\n                          onEdit={onEdit}\n                          types={types}\n                        />\n                      )}\n                    <ActionsDropdownDivider />\n                    <DeleteButton metric={metric} onDelete={onDelete} />\n                  </ActionsDropdown>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>{translate('no_results')}</p>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { MetricProps } from './Form';\nimport Header from './Header';\nimport List from './List';\nimport {\n  getMetricDomains,\n  getMetricTypes,\n  getMetrics,\n  deleteMetric,\n  updateMetric,\n  createMetric,\n  MetricsResponse\n} from '../../../api/metrics';\nimport { Metric, Paging } from '../../../app/types';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {}\n\ninterface State {\n  domains?: string[];\n  loading: boolean;\n  metrics?: Metric[];\n  paging?: Paging;\n  types?: string[];\n}\n\nconst PAGE_SIZE = 50;\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchData = () => {\n    Promise.all([\n      getMetricDomains(),\n      getMetricTypes(),\n      getMetrics({ isCustom: true, ps: PAGE_SIZE })\n    ]).then(([domains, types, metricsResponse]) => {\n      if (this.mounted) {\n        this.setState({\n          domains,\n          loading: false,\n          metrics: metricsResponse.metrics,\n          paging: this.getPaging(metricsResponse),\n          types\n        });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchMore = () => {\n    const { paging } = this.state;\n    if (paging) {\n      this.setState({ loading: true });\n      getMetrics({ isCustom: true, p: paging.pageIndex + 1, ps: PAGE_SIZE }).then(\n        metricsResponse => {\n          if (this.mounted) {\n            this.setState(({ metrics = [] }: State) => ({\n              loading: false,\n              metrics: [...metrics, ...metricsResponse.metrics],\n              paging: this.getPaging(metricsResponse)\n            }));\n          }\n        },\n        this.stopLoading\n      );\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  getPaging = (response: MetricsResponse): Paging => ({\n    pageIndex: response.p,\n    pageSize: response.ps,\n    total: response.total\n  });\n\n  handleCreate = (data: MetricProps) => {\n    return createMetric(data).then(metric => {\n      if (this.mounted) {\n        this.setState(({ metrics = [], paging }: State) => ({\n          metrics: [...metrics, metric],\n          paging: paging && { ...paging, total: paging.total + 1 }\n        }));\n      }\n    });\n  };\n\n  handleEdit = (data: { id: string } & MetricProps) => {\n    return updateMetric(data).then(() => {\n      if (this.mounted) {\n        this.setState(({ metrics = [] }: State) => ({\n          metrics: metrics.map(metric => (metric.id === data.id ? { ...metric, ...data } : metric))\n        }));\n      }\n    });\n  };\n\n  handleDelete = (metricKey: string) => {\n    return deleteMetric({ keys: metricKey }).then(() => {\n      if (this.mounted) {\n        this.setState(({ metrics = [], paging }: State) => ({\n          metrics: metrics.filter(metric => metric.key !== metricKey),\n          paging: paging && { ...paging, total: paging.total - 1 }\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { domains, loading, metrics, paging, types } = this.state;\n\n    return (\n      <>\n        <Helmet title={translate('custom_metrics.page')} />\n        <div className=\"page page-limited\" id=\"custom-metrics-page\">\n          <Header domains={domains} loading={loading} onCreate={this.handleCreate} types={types} />\n          {metrics && (\n            <List\n              domains={domains}\n              metrics={metrics}\n              onDelete={this.handleDelete}\n              onEdit={this.handleEdit}\n              types={types}\n            />\n          )}\n          {metrics &&\n            paging && (\n              <ListFooter\n                count={metrics.length}\n                loadMore={this.fetchMore}\n                ready={!loading}\n                total={paging.total}\n              />\n            )}\n        </div>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}