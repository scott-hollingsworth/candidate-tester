{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/ProjectAdminPageExtension.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/app/components/SimpleContainer.tsx","webpack:///./src/main/js/app/components/NotFound.tsx","webpack:///./src/main/js/app/components/extensions/Extension.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","ProjectAdminPageExtension","react__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_NotFound__WEBPACK_IMPORTED_MODULE_3__","_Extension__WEBPACK_IMPORTED_MODULE_4__","props","component","_props$params","params","extensionKey","pluginKey","extension","configuration","extensions","find","p","key","concat","options","withContainer","mapDispatchToProps","onFail","Object","installScript","getExtensionStart","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","librariesExposed","url","target","arguments","length","undefined","Promise","resolve","scriptTag","document","createElement","src","onload","getElementsByTagName","appendChild","async","fromCache","exposeLibraries","all","e","then","bind","default","start","reject","SimpleContainer","sonar_ui_common_components_ui_NavBar__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_ui_NavBar__WEBPACK_IMPORTED_MODULE_1___default","n","_theme__WEBPACK_IMPORTED_MODULE_2__","_GlobalFooterContainer__WEBPACK_IMPORTED_MODULE_3__","_ref","children","className","id","a","height","globalNavHeightRaw","NotFound","react_helmet_async__WEBPACK_IMPORTED_MODULE_1__","react_router__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_SimpleContainer__WEBPACK_IMPORTED_MODULE_4__","_ref$withContainer","Container","defaultTitle","defer","to","_store_globalMessages__WEBPACK_IMPORTED_MODULE_7__","react_intl__WEBPACK_IMPORTED_MODULE_2__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_5__","react_redux__WEBPACK_IMPORTED_MODULE_3__","state","currentUser","_store_rootReducer__WEBPACK_IMPORTED_MODULE_8__","[object Object]","this","handleStart","result","_objectSpread","store","_utils_getStore__WEBPACK_IMPORTED_MODULE_10__","el","container","intl","location","router","theme","_theme__WEBPACK_IMPORTED_MODULE_9__","setState","extensionElement","stop","handleFailure","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","startExtension","prevProps","stopExtension","_helpers_extensions__WEBPACK_IMPORTED_MODULE_6__","title","name","ref"],"mappings":"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","file":"js/341.m.ac23fbcd.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Location } from 'history';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages';\nimport NotFound from '../NotFound';\nimport Extension from './Extension';\n\nexport interface ProjectAdminPageExtensionProps {\n  component: T.Component;\n  location: Location;\n  params: { extensionKey: string; pluginKey: string };\n}\n\nexport function ProjectAdminPageExtension(props: ProjectAdminPageExtensionProps) {\n  const {\n    component,\n    params: { extensionKey, pluginKey }\n  } = props;\n\n  const extension =\n    component.configuration &&\n    (component.configuration.extensions || []).find(p => p.key === `${pluginKey}/${extensionKey}`);\n\n  return extension ? (\n    <Extension extension={extension} options={{ component }} />\n  ) : (\n    <NotFound withContainer={false} />\n  );\n}\n\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default connect(null, mapDispatchToProps)(ProjectAdminPageExtension);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport NavBar from 'sonar-ui-common/components/ui/NavBar';\nimport { rawSizes } from '../theme';\nimport GlobalFooterContainer from './GlobalFooterContainer';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default function SimpleContainer({ children }: Props) {\n  return (\n    <div className=\"global-container\">\n      <div className=\"page-wrapper\" id=\"container\">\n        <NavBar className=\"navbar-global\" height={rawSizes.globalNavHeightRaw} />\n        {children}\n      </div>\n      <GlobalFooterContainer />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport SimpleContainer from './SimpleContainer';\n\ninterface Props {\n  withContainer?: boolean;\n}\n\nexport default function NotFound({ withContainer = true }: Props) {\n  const Container = withContainer ? SimpleContainer : React.Fragment;\n  return (\n    <Container>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('page_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('address_mistyped_or_page_moved')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\nimport * as theme from '../../theme';\nimport getStore from '../../utils/getStore';\n\ninterface Props extends InjectedIntlProps {\n  currentUser: T.CurrentUser;\n  extension: T.Extension;\n  location: Location;\n  onFail: (message: string) => void;\n  options?: T.Dict<any>;\n  router: Router;\n}\n\ninterface State {\n  extensionElement?: React.ReactElement<any>;\n}\n\nexport class Extension extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  stop?: Function;\n  state: State = {};\n\n  componentDidMount() {\n    this.startExtension();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.extension !== this.props.extension) {\n      this.stopExtension();\n      this.startExtension();\n    } else if (prevProps.location !== this.props.location) {\n      this.startExtension();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopExtension();\n  }\n\n  handleStart = (start: Function) => {\n    const store = getStore();\n    const result = start({\n      store,\n      el: this.container,\n      currentUser: this.props.currentUser,\n      intl: this.props.intl,\n      location: this.props.location,\n      router: this.props.router,\n      theme,\n      ...this.props.options\n    });\n\n    if (React.isValidElement(result)) {\n      this.setState({ extensionElement: result });\n    } else {\n      this.stop = result;\n    }\n  };\n\n  handleFailure = () => {\n    this.props.onFail(translate('page_extension_failed'));\n  };\n\n  startExtension() {\n    getExtensionStart(this.props.extension.key).then(this.handleStart, this.handleFailure);\n  }\n\n  stopExtension() {\n    if (this.stop) {\n      this.stop();\n      this.stop = undefined;\n    } else {\n      this.setState({ extensionElement: undefined });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Helmet title={this.props.extension.name} />\n        {this.state.extensionElement ? (\n          this.state.extensionElement\n        ) : (\n          <div ref={container => (this.container = container)} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ currentUser: getCurrentUser(state) });\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Extension)));\n"],"sourceRoot":""}