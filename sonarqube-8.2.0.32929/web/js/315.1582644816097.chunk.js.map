{"version":3,"sources":["webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx","webpack:///./src/main/js/apps/settings/side-tabs.css?20b1","webpack:///./src/main/js/apps/settings/side-tabs.css","webpack:///./src/main/js/apps/settings/styles.css?600d","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionsTable.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationFeatureBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts"],"names":["__webpack_require__","d","__webpack_exports__","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","Object","catch","validateDays","days","parsed","parseInt","length","isNaN","String","getSettingValue","_a","analysis","type","validateSetting","state","currentSetting","currentSettingValue","selected","overrideGeneralSetting","isChanged","undefined","isValid","BaselineSettingDays","react__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","props","className","disabled","onChangeDays","onSelect","a","onClick","title","error","id","isInvalid","label","required","onChange","e","currentTarget","value","BaselineSettingPreviousVersion","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","isDefault","content","module","i","options","hmr","transform","insertInto","locals","exports","push","handleError","key","dispatch","response","settingsPage","request","then","message","Promise","reject","AlmBindingDefinitionFormModalRenderer","action","children","help","header","l10n","index_js_exposed","SimpleModal_default","onClose","onCancel","onSubmit","size","onCloseClick","onFormSubmit","submitting","Alert","variant","DeferredSpinner_default","loading","buttons","canSubmit","AlmBindingDefinitionFormRenderer","success","data-test","preventDefault","onEdit","onDelete","AlertSuccessIcon_default","_super","AlmBindingDefinitionForm","_this","call","this","handleCancel","setState","formData","bindingDefinition","touched","handleDelete","handleEdit","handleFieldChange","fieldId","__assign","_b","handleFormSubmit","values","hideKeyField","optionalFields","omit_default","some","v","__extends","prototype","componentDidUpdate","prevProps","isEqual_default","render","showInModal","_c","readOnly","_d","_e","showEdit","showCancel","showDelete","onFieldChange","AlmBindingDefinitionsTable","additionalColumnsHeaders","additionalTableInfo","alm","definitions","onCreate","map","h","colSpan","additionalColumns","EditIcon_default","AlmIntegrationFeatureBox","active","description","inactiveReason","name","classnames","bg-muted","CheckIcon_default","fill","theme","green","ClearIcon_default","gray60","AlmTabRenderer","definition","additionalColumnsKeys","defaultBinding","editedDefinition","features","form","multipleAlmEnabled","index_es","defaultMessage","mappedDefinitions","properties","__rest","k","almIntegration_AlmBindingDefinitionForm","feature","AlmTabRenderer_assign","AlmTab","apply","arguments","mounted","handleCreate","definitionKey","find","handleSubmit","config","originalKey","updateConfiguration","AlmTab_assign","newKey","createConfiguration","onUpdateDefinitions","AlmTab_extends","componentDidMount","componentWillUnmount","AlmBindingDefinitionFormField","autoFocus","isTextArea","maxLength","optional","propKey","htmlFor","HelpTooltip_default","overlay","placement","rows","AzureForm","personalAccessToken","AzureTab","almIntegration_AlmTab","types_alm_settings","Azure","alm_settings","childProps","AzureTab_assign","BitbucketForm","example","url","BitbucketTab","Bitbucket","BitbucketTab_assign","react_router_es","target","to","DeleteModal","projectCount","ConfirmModal_default","confirmButtonText","confirmData","isDestructive","onConfirm","showProjectCountWarning","DefinitionActions","reseting","handleClose","handleReset","onReset","DefinitionActions_extends","renderModal","Modal_default","contentLabel","onRequestClose","setting","changedValue","hasValueChanged","hasValueToResetTo","utils","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","SimpleInput","handleInputChange","event","handleKeyDown","keyCode","SimpleInput_extends","onKeyDown","InputForNumber","inputs_SimpleInput","InputForNumber_assign","InputForPassword","changing","handleChangeClick","InputForPassword_extends","componentWillReceiveProps","nextProps","renderInput","autoComplete","LockIcon_default","InputForSingleSelectList","InputForSingleSelectList_extends","option","Select_default","clearable","InputForString","InputForString_assign","InputForText","InputForText_extends","typeMapping","STRING","TEXT","inputs_InputForText","PASSWORD","inputs_InputForPassword","BOOLEAN","displayedValue","Toggle_default","INTEGER","LONG","FLOAT","PrimitiveInput","PrimitiveInput_extends","other","PrimitiveInput_rest","inputs_InputForSingleSelectList","PrimitiveInput_assign","InputComponent","MultiValueInput","ensureValue","handleSingleInputChange","index","newValue","__spreadArrays","splice","handleDeleteValue","MultiValueInput_extends","isLast","inputs_PrimitiveInput","MultiValueInput_assign","multiValues","PropertySetInput","PropertySetInput_spreadArrays","fieldKey","emptyValue","newFields","PropertySetInput_assign","PropertySetInput_extends","renderFields","fieldValues","fields","field","width","minWidth","marginTop","Input","inputs_MultiValueInput","Input_assign","inputs_PropertySetInput","Definition_Definition","Definition","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","passValidation","checkValue","handleSave","saveValue","Definition_extends","changes","validationMessage","propertyName","effectiveValue","classnames_default","settings-definition-changed","data-key","dangerouslySetInnerHTML","__html","AlertErrorIcon_default","components_DefinitionActions","mapDispatchToProps","getState","rootReducer","defaultValue","api_settings","keys","store_values","components_Definition","es","ownProps","DefinitionsList","settings","EmailForm_EmailForm","EmailForm","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","EmailForm_extends","components_EmailForm","withCurrentUser","SubCategoryDefinitionsList","renderEmailForm","subCategoryKey","category","SubCategoryDefinitionsList_extends","fetchValues","prevKeys","join","bySubCategory","groupBy_default","subCategory","subCategories","sortedSubCategories","sortBy_default","toLowerCase","filteredSubCategories","filter","c","CategoryDefinitionsList_mapDispatchToProps","globalMessages","CategoryDefinitionsList","components_SubCategoryDefinitionsList","GithubForm","appId","privateKey","GithubTab","branchesEnabled","GitHub","GithubTab_assign","AdditionalCategoryKeys","GitlabForm","GitlabTab","GitLab","GitlabTab_assign","tabs","alt","height","src","urls","requiresBranchesEnabled","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlm","BoxedTabs_default","onSelectAlm","tab","azure","bitbucket","github","gitlab","onConfirmDelete","AlmIntegration_AlmIntegration","AlmIntegration","deleteConfiguration","fetchPullRequestDecorationSetting","appState","resolve","handleSelectAlm","AlmIntegration_extends","AlmIntegration_assign","Boolean","almIntegration_AlmIntegration","withAppState","AnalysisScope","selectedCategory","CATEGORY_OVERRIDES","abap","apex","c / c++ / objective-c","c#","cobol","css","flex","go","html","java","javascript","kotlin","php","pl/i","pl/sql","python","rpg","ruby","scala","swift","t-sql","typescript","vb.net","visual basic","xml","components_Languages","withRouter","categories","location","router","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","availableLanguages","originalValue","selectedLanguage","getLanguages","newOption","Languages_assign","query","placeholder","NewCodePeriod","saving","onSelectDays","onSelectSetting","newCodePeriod","NewCodePeriod_extends","fetchNewCodePeriodSetting","projectBaseline_utils","link","optionRenderer","instance","renderField","helpParams","PRDecorationBindingRenderer","repository","slug","instances","originalData","oKey","_f","oRepository","_g","isDataSame","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","REQUIRED_FIELDS_BY_ALM","PRDecorationBinding_a","PRDecorationBinding","fetchDefinitions","project","all","getProjectBinding","newFormData","validateForm","catchError","additionalFields","PRDecorationBinding_rest","submitProjectAlmBinding","PRDecorationBinding_assign","reduce","result","PRDecorationBinding_extends","status","throwGlobalError","almSpecificFields","almSetting","ADDITIONAL_CATEGORIES","renderComponent","AdditionalCategories_assign","availableGlobally","availableForProject","displayTab","components_NewCodePeriod","pullRequestDecorationBinding_PRDecorationBinding","AllCategoriesList_CategoriesList","CategoriesList","AllCategoriesList_extends","renderLink","defaultCategory","pathname","categoriesWithName","concat","sortedCategories","AllCategoriesList","PageHeader","InstanceMessage","AppContainer_App","App","fetchSettings","stopLoading","AppContainer_extends","originalCategory","foundAdditionalCategory","find_default","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","index_module","defer","AppContainer_mapDispatchToProps","filtered","store_definitions","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","WrappedComponent","Wrapper","displayName","_utils__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","AlmKeys","getAlmDefinitions","getAlmSettings","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","almSettings","projects","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY"],"mappings":"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","file":"js/315.1582644816097.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting?: boolean;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days));\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".side-tabs-layout{display:flex;justify-content:space-between;align-items:stretch}.modal .side-tabs-layout{padding-left:10px;background-color:#f3f3f3}.side-tabs-main{position:relative;z-index:2;flex-grow:1;padding:15px 20px;border:1px solid #e6e6e6;box-sizing:border-box;background-color:#fff;overflow:auto;height:100vh}.modal .side-tabs-main{border-top:none;border-bottom:none;border-right:none}.side-tabs-side{position:relative;z-index:3;width:160px;flex-shrink:0;padding:10px 0;box-sizing:border-box;transform:translateX(1px)}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#444;cursor:default}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".settings-layout{margin-bottom:60px}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#777}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormModalProps {\n  action: 'edit' | 'create';\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel: () => void;\n  onSubmit: () => void;\n}\n\nexport default function AlmBindingDefinitionFormModalRenderer(\n  props: AlmBindingDefinitionFormModalProps\n) {\n  const { action, children, help } = props;\n  const header = translate('settings.almintegration.form.header', action);\n\n  return (\n    <SimpleModal header={header} onClose={props.onCancel} onSubmit={props.onSubmit} size=\"medium\">\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form className=\"views-form\" onSubmit={onFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body modal-container\">\n            <div className=\"display-flex-start\">\n              <div className=\"flex-1\">{children}</div>\n\n              {help && (\n                <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n                  {help}\n                </Alert>\n              )}\n            </div>\n          </div>\n\n          <div className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton disabled={submitting || !props.canSubmit()}>\n              {translate('settings.almintegration.form.save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n          </div>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormRendererProps {\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel?: () => void;\n  onDelete?: () => void;\n  onEdit?: () => void;\n  onSubmit: () => void;\n  loading: boolean;\n  success: boolean;\n}\n\nexport default function AlmBindingDefinitionFormRenderer(\n  props: AlmBindingDefinitionFormRendererProps\n) {\n  const { children, help, loading, success } = props;\n\n  return (\n    <form\n      className=\"views-form\"\n      data-test=\"settings__alm-form\"\n      onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        props.onSubmit();\n      }}>\n      <div className=\"display-flex-start\">\n        <div className=\"flex-1\">\n          {children}\n\n          <div className=\"display-flex-center\">\n            {props.onEdit === undefined ? (\n              <SubmitButton disabled={loading || !props.canSubmit()}>\n                {translate('settings.almintegration.form.save')}\n              </SubmitButton>\n            ) : (\n              <Button disabled={loading} onClick={props.onEdit}>\n                {translate('edit')}\n              </Button>\n            )}\n            {props.onDelete && (\n              <Button\n                className=\"button-red spacer-left\"\n                disabled={loading}\n                onClick={props.onDelete}>\n                {translate('delete')}\n              </Button>\n            )}\n            {props.onCancel && (\n              <ResetButtonLink className=\"spacer-left\" onClick={props.onCancel}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            )}\n            {loading && <DeferredSpinner className=\"spacer-left\" />}\n            {!loading && success && (\n              <span className=\"text-success spacer-left\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {help && (\n          <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n            {help}\n          </Alert>\n        )}\n      </div>\n    </form>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual, omit } from 'lodash';\nimport * as React from 'react';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionFormModalRenderer from './AlmBindingDefinitionFormModalRenderer';\nimport AlmBindingDefinitionFormRenderer from './AlmBindingDefinitionFormRenderer';\n\nexport interface AlmBindingDefinitionFormChildrenProps<B> {\n  formData: B;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof B, value: string) => void;\n  readOnly?: boolean;\n}\n\ninterface Props<B> {\n  bindingDefinition: B;\n  children: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  hideKeyField?: boolean;\n  loading?: boolean;\n  onCancel?: () => void;\n  onDelete?: (definitionKey: string) => void;\n  onEdit?: (definitionKey: string) => void;\n  onSubmit: (data: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  readOnly?: boolean;\n  showInModal?: boolean;\n  success?: boolean;\n}\n\ninterface State<B> {\n  formData: B;\n  touched: boolean;\n}\n\nexport default class AlmBindingDefinitionForm<\n  B extends AlmBindingDefinition\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n    this.state = { formData: props.bindingDefinition, touched: false };\n  }\n\n  componentDidUpdate(prevProps: Props<B>) {\n    if (!isEqual(prevProps.bindingDefinition, this.props.bindingDefinition)) {\n      this.setState({ formData: this.props.bindingDefinition, touched: false });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({ formData: this.props.bindingDefinition, touched: false });\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      },\n      touched: true\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    const { hideKeyField, optionalFields } = this.props;\n    const { formData, touched } = this.state;\n\n    let values;\n    if (hideKeyField) {\n      values = omit(formData, 'key');\n    } else {\n      values = { ...formData };\n    }\n\n    if (optionalFields && optionalFields.length > 0) {\n      values = omit(values, optionalFields);\n    }\n\n    return touched && !Object.values(values).some(v => !v);\n  };\n\n  render() {\n    const {\n      bindingDefinition,\n      children,\n      help,\n      hideKeyField,\n      showInModal,\n      loading = false,\n      readOnly = false,\n      success = false\n    } = this.props;\n    const { formData, touched } = this.state;\n\n    const showEdit = this.props.onEdit !== undefined;\n    const showCancel = touched || !showEdit;\n    const showDelete = showEdit && this.props.onDelete !== undefined;\n\n    return showInModal ? (\n      <AlmBindingDefinitionFormModalRenderer\n        action={bindingDefinition.key ? 'edit' : 'create'}\n        canSubmit={this.canSubmit}\n        help={help}\n        onCancel={this.handleCancel}\n        onSubmit={this.handleFormSubmit}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmBindingDefinitionFormModalRenderer>\n    ) : (\n      <AlmBindingDefinitionFormRenderer\n        canSubmit={this.canSubmit}\n        help={help}\n        loading={loading}\n        onCancel={showCancel ? this.handleCancel : undefined}\n        onDelete={showDelete ? this.handleDelete : undefined}\n        onEdit={showEdit ? this.handleEdit : undefined}\n        onSubmit={this.handleFormSubmit}\n        success={success}>\n        {children({\n          formData,\n          hideKeyField,\n          onFieldChange: this.handleFieldChange,\n          readOnly\n        })}\n      </AlmBindingDefinitionFormRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ButtonIcon, DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionsTableProps {\n  additionalColumnsHeaders: Array<string>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  definitions: Array<{\n    key: string;\n    additionalColumns: Array<string>;\n  }>;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n}\n\nexport default function AlmBindingDefinitionsTable(props: AlmBindingDefinitionsTableProps) {\n  const { additionalColumnsHeaders, additionalTableInfo, alm, definitions } = props;\n\n  return (\n    <>\n      <div className=\"spacer-top big-spacer-bottom display-flex-space-between\">\n        <h2 className=\"settings-sub-category-name\">\n          {translate('settings.almintegration.table.title')}\n        </h2>\n        <Button data-test=\"settings__alm-create\" onClick={props.onCreate}>\n          {translate('settings.almintegration.table.create')}\n        </Button>\n      </div>\n\n      {additionalTableInfo}\n\n      <table className=\"data zebra fixed spacer-bottom\">\n        <thead>\n          <tr>\n            <th>{translate('settings.almintegration.table.column.name')}</th>\n            {additionalColumnsHeaders.map(h => (\n              <th key={h}>{h}</th>\n            ))}\n            <th className=\"action-small text-center\">\n              {translate('settings.almintegration.table.column.edit')}\n            </th>\n            <th className=\"action text-center\">\n              {translate('settings.almintegration.table.column.delete')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {definitions.length === 0 ? (\n            <tr data-test=\"settings__alm-empty-table\">\n              <td colSpan={3 + additionalColumnsHeaders.length}>\n                {translate('settings.almintegration.table.empty', alm)}\n              </td>\n            </tr>\n          ) : (\n            definitions.map(({ key, additionalColumns }) => (\n              <tr data-test=\"settings__alm-table-row\" key={key}>\n                <td className=\"nowrap hide-overflow\" title={key}>\n                  {key}\n                </td>\n                {additionalColumns.map(value => (\n                  <td className=\"nowrap hide-overflow\" key={value} title={value}>\n                    {value}\n                  </td>\n                ))}\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-edit\">\n                  <ButtonIcon onClick={() => props.onEdit(key)}>\n                    <EditIcon />\n                  </ButtonIcon>\n                </td>\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-delete\">\n                  <DeleteButton onClick={() => props.onDelete(key)} />\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\n\nexport interface AlmIntegrationFeatureBoxProps {\n  active: boolean;\n  description: React.ReactNode;\n  inactiveReason?: React.ReactNode;\n  name: React.ReactNode;\n}\n\nexport default function AlmIntegrationFeatureBox(props: AlmIntegrationFeatureBoxProps) {\n  const { active, description, inactiveReason, name } = props;\n\n  return (\n    <div\n      className={classNames(\n        'boxed-group-inner display-flex-start width-30 spacer-right spacer-bottom bordered',\n        {\n          'bg-muted': !active\n        }\n      )}>\n      {active ? (\n        <CheckIcon className=\"little-spacer-top spacer-right\" fill={colors.green} />\n      ) : (\n        <ClearIcon className=\"little-spacer-top spacer-right\" fill={colors.gray60} />\n      )}\n      <div className=\"display-flex-column abs-height-100\">\n        <h4>{name}</h4>\n\n        <div className=\"spacer-top flex-1\">{description}</div>\n\n        <div className=\"spacer-top\">\n          {active ? (\n            <em className=\"text-success\">{translate('settings.almintegration.feature.enabled')}</em>\n          ) : (\n            <em className=\"text-muted\">\n              {inactiveReason || translate('settings.almintegration.feature.disabled')}\n            </em>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionForm, {\n  AlmBindingDefinitionFormChildrenProps\n} from './AlmBindingDefinitionForm';\nimport AlmBindingDefinitionsTable from './AlmBindingDefinitionsTable';\nimport AlmIntegrationFeatureBox, {\n  AlmIntegrationFeatureBoxProps\n} from './AlmIntegrationFeatureBox';\n\nexport interface AlmTabRendererProps<B> {\n  additionalColumnsHeaders: string[];\n  additionalColumnsKeys: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  editedDefinition?: B;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  success: boolean;\n}\n\nexport default function AlmTabRenderer<B extends AlmBindingDefinition>(\n  props: AlmTabRendererProps<B>\n) {\n  const {\n    additionalColumnsHeaders,\n    additionalColumnsKeys,\n    additionalTableInfo,\n    alm,\n    defaultBinding,\n    definitions,\n    editedDefinition,\n    features = [],\n    form,\n    loading,\n    multipleAlmEnabled,\n    optionalFields,\n    success,\n    help = (\n      <FormattedMessage\n        defaultMessage={translate(`settings.almintegration.${alm}.info`)}\n        id={`settings.almintegration.${alm}.info`}\n        values={{\n          link: (\n            <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n              {translate('learn_more')}\n            </Link>\n          )\n        }}\n      />\n    )\n  } = props;\n\n  let definition: B | undefined;\n  let mappedDefinitions: Array<{ key: string; additionalColumns: string[] }> = [];\n  let showEdit: boolean | undefined;\n\n  if (!multipleAlmEnabled) {\n    definition = editedDefinition;\n    if (definition === undefined && definitions.length > 0) {\n      definition = definitions[0];\n    }\n    showEdit = definition && editedDefinition === undefined;\n  } else {\n    mappedDefinitions = definitions.map(({ key, ...properties }) => {\n      const additionalColumns = additionalColumnsKeys.map(k => (properties as any)[k]);\n      return {\n        key,\n        additionalColumns\n      };\n    });\n  }\n\n  return (\n    <div className=\"big-padded\">\n      {multipleAlmEnabled ? (\n        <DeferredSpinner loading={loading}>\n          <AlmBindingDefinitionsTable\n            additionalColumnsHeaders={additionalColumnsHeaders}\n            additionalTableInfo={additionalTableInfo}\n            alm={alm}\n            definitions={mappedDefinitions}\n            onCreate={props.onCreate}\n            onDelete={props.onDelete}\n            onEdit={props.onEdit}\n          />\n\n          {editedDefinition && (\n            <AlmBindingDefinitionForm\n              bindingDefinition={editedDefinition}\n              help={help}\n              onCancel={props.onCancel}\n              onSubmit={props.onSubmit}\n              optionalFields={optionalFields}\n              showInModal={true}>\n              {form}\n            </AlmBindingDefinitionForm>\n          )}\n        </DeferredSpinner>\n      ) : (\n        <AlmBindingDefinitionForm\n          bindingDefinition={definition || defaultBinding}\n          help={help}\n          hideKeyField={true}\n          loading={loading}\n          onCancel={props.onCancel}\n          onDelete={definition ? props.onDelete : undefined}\n          onEdit={showEdit ? props.onEdit : undefined}\n          onSubmit={props.onSubmit}\n          optionalFields={optionalFields}\n          readOnly={showEdit}\n          success={success}>\n          {form}\n        </AlmBindingDefinitionForm>\n      )}\n\n      {features.length > 0 && (\n        <div className=\"big-spacer-top big-padded-top bordered-top\">\n          <h3 className=\"big-spacer-bottom\">{translate('settings.almintegration.features')}</h3>\n\n          <div className=\"display-flex-wrap\">\n            {features.map((feature, i) => (\n              <AlmIntegrationFeatureBox key={i} {...feature} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormChildrenProps } from './AlmBindingDefinitionForm';\nimport { AlmIntegrationFeatureBoxProps } from './AlmIntegrationFeatureBox';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props<B> {\n  alm: AlmKeys;\n  additionalColumnsHeaders?: string[];\n  additionalColumnsKeys?: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  createConfiguration: (data: B) => Promise<void>;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n  optionalFields?: Array<keyof B>;\n  updateConfiguration: (data: B & { newKey?: string }) => Promise<void>;\n}\n\ninterface State<B> {\n  editedDefinition?: B;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default class AlmTab<B extends AlmBindingDefinition> extends React.PureComponent<\n  Props<B>,\n  State<B>\n> {\n  mounted = false;\n  state: State<B> = { submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined,\n      success: false\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: this.props.defaultBinding, success: false });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition, success: false });\n  };\n\n  handleSubmit = (config: B, originalKey: string) => {\n    const call = originalKey\n      ? this.props.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : // If there's no support for multi-ALM binding, the key will be an empty string.\n        // Set a default.\n        this.props.createConfiguration(config.key ? config : { ...config, key: this.props.alm });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined, submitting: false, success: true });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      additionalColumnsHeaders = [],\n      additionalColumnsKeys = [],\n      additionalTableInfo,\n      alm,\n      defaultBinding,\n      definitions,\n      features,\n      form,\n      help,\n      loading,\n      multipleAlmEnabled,\n      optionalFields\n    } = this.props;\n    const { editedDefinition, submitting, success } = this.state;\n\n    return (\n      <AlmTabRenderer\n        additionalColumnsHeaders={additionalColumnsHeaders}\n        additionalColumnsKeys={additionalColumnsKeys}\n        additionalTableInfo={additionalTableInfo}\n        alm={alm}\n        defaultBinding={defaultBinding}\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        features={features}\n        form={form}\n        help={help}\n        loading={loading || submitting}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n        optionalFields={optionalFields}\n        success={success}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionFormFieldProps<B extends AlmBindingDefinition> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  optional?: boolean;\n  propKey: keyof B;\n  readOnly?: boolean;\n  value: string;\n}\n\nexport function AlmBindingDefinitionFormField<B extends AlmBindingDefinition>(\n  props: AlmBindingDefinitionFormFieldProps<B>\n) {\n  const {\n    autoFocus,\n    help,\n    id,\n    isTextArea,\n    maxLength,\n    onFieldChange,\n    optional,\n    propKey,\n    readOnly = false,\n    value\n  } = props;\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.almintegration.form', id)}\n        {!optional && <em className=\"mandatory\">*</em>}\n        {help && <HelpTooltip className=\"spacer-left\" overlay={help} placement=\"right\" />}\n      </label>\n      {isTextArea ? (\n        <textarea\n          className=\"settings-large-input\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          required={!optional}\n          rows={5}\n          value={value}\n        />\n      ) : (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface AzureFormProps {\n  formData: AzureBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function AzureForm(props: AzureFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.azure.help')}\n          id=\"name.azure\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport AzureForm from './AzureForm';\n\nexport interface AzureTabProps {\n  definitions: AzureBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function AzureTab(props: AzureTabProps) {\n  const { multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.Azure}\n        createConfiguration={createAzureConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          }\n        ]}\n        form={childProps => <AzureForm {...childProps} />}\n        loading={loading}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateAzureConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface BitbucketFormProps {\n  formData: BitbucketBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof BitbucketBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function BitbucketForm(props: BitbucketFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.bitbucket.help')}\n          id=\"name.bitbucket\"\n          maxLength={100}\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.form.url.bitbucket.help')}\n            id=\"settings.almintegration.form.url.bitbucket.help\"\n            values={{ example: 'https://bitbucket-server.your-company.com' }}\n          />\n        }\n        id=\"url.bitbucket\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  createBitbucketConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/alm-settings';\nimport { AlmKeys, BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport BitbucketForm from './BitbucketForm';\n\nexport interface BitbucketTabProps {\n  definitions: BitbucketBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function BitbucketTab(props: BitbucketTabProps) {\n  const { multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        additionalColumnsHeaders={[translate('settings.almintegration.table.column.bitbucket.url')]}\n        additionalColumnsKeys={['url']}\n        additionalTableInfo={\n          <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n            <FormattedMessage\n              defaultMessage={translate(\n                'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances'\n              )}\n              id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances\"\n              values={{\n                feature: (\n                  <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                )\n              }}\n            />\n          </Alert>\n        }\n        alm={AlmKeys.Bitbucket}\n        createConfiguration={createBitbucketConfiguration}\n        defaultBinding={{ key: '', url: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          },\n          {\n            name: translate('settings.almintegration.feature.alm_repo_import.title'),\n            active: definitions.length === 1,\n            description: translate('settings.almintegration.feature.alm_repo_import.description'),\n            inactiveReason: translateWithParameters(\n              'onboarding.create_project.too_many_bbs_instances_X',\n              definitions.length\n            )\n          }\n        ]}\n        form={childProps => <BitbucketForm {...childProps} />}\n        help={\n          <>\n            <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n            <p className=\"big-spacer-top\">\n              {translate('settings.almintegration.bitbucket.help_1')}\n            </p>\n\n            <ul className=\"big-spacer-top list-styled\">\n              <li>{translate('settings.almintegration.bitbucket.help_2')}</li>\n              <li>{translate('settings.almintegration.bitbucket.help_3')}</li>\n            </ul>\n\n            <p className=\"big-spacer-top big-spacer-bottom\">\n              <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n                {translate('learn_more')}\n              </Link>\n            </p>\n          </>\n        }\n        loading={loading}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateBitbucketConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: T.Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<T.SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in T.SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited,\n  sanitizeTranslation\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: T.Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: T.Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success: boolean;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false,\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: false, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: true, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {this.state.success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters(\n                  'email_configuration.test.email_was_sent_to_x',\n                  this.state.recipient\n                )}\n              </Alert>\n            </div>\n          )}\n\n          {this.state.error != null && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{this.state.error}</Alert>\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={this.state.recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={this.state.subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={this.state.message}\n            />\n          </div>\n\n          <SubmitButton disabled={this.state.loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {this.state.loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { getSubCategoryDescription, getSubCategoryName, sanitizeTranslation } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<T.Setting & { definition: T.SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GithubFormProps {\n  formData: GithubBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GithubForm(props: GithubFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.github.help')}\n          id=\"name.github\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        readOnly={readOnly}\n        value={formData.appId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"privateKey\"\n        readOnly={readOnly}\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GithubForm from './GithubForm';\n\nexport interface GithubTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GithubBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GithubTab(props: GithubTabProps) {\n  const { branchesEnabled, component, multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.github.url'),\n              translate('settings.almintegration.table.column.app_id')\n            ]}\n            additionalColumnsKeys={['appId', 'url']}\n            alm={AlmKeys.GitHub}\n            createConfiguration={createGithubConfiguration}\n            defaultBinding={{ key: '', appId: '', url: '', privateKey: '' }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.pr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.pr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              }\n            ]}\n            form={childProps => <GithubForm {...childProps} />}\n            loading={loading}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            updateConfiguration={updateGithubConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitHub}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GitlabFormProps {\n  formData: GitlabBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GitlabForm(props: GitlabFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.gitlab.help')}\n          id=\"name.gitlab\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.gitlab.help1')}\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.gitlab.help2')}\n            <br />\n            <em>https://gitlab.com/api/v4</em>\n          </>\n        }\n        id=\"url.gitlab\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        optional={true}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GitlabForm from './GitlabForm';\n\nexport interface GitlabTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GitlabBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GitlabTab(props: GitlabTabProps) {\n  const { branchesEnabled, component, multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.gitlab.url')\n            ]}\n            additionalColumnsKeys={['url']}\n            alm={AlmKeys.GitLab}\n            createConfiguration={createGitlabConfiguration}\n            defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.mr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.mr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              }\n            ]}\n            form={childProps => <GitlabForm {...childProps} />}\n            loading={loading}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            optionalFields={['url']}\n            updateConfiguration={updateGitlabConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitLab}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: AlmKeys) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    )\n  },\n  {\n    key: AlmKeys.Bitbucket,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    )\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    component,\n    definitionKeyForDeletion,\n    definitions,\n    currentAlm,\n    loading,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={tabs.filter(tab => !(tab.requiresBranchesEnabled && !branchesEnabled))}\n      />\n\n      {currentAlm === AlmKeys.Azure && (\n        <AzureTab\n          definitions={definitions.azure}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.Bitbucket && (\n        <BitbucketTab\n          definitions={definitions.bitbucket}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitHub && (\n        <GithubTab\n          branchesEnabled={branchesEnabled}\n          component={component}\n          definitions={definitions.github}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitLab && (\n        <GitlabTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.gitlab}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n  component?: T.Component;\n}\n\ninterface State {\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    currentAlm: AlmKeys.GitHub,\n    definitions: {\n      [AlmKeys.Azure]: [],\n      [AlmKeys.Bitbucket]: [],\n      [AlmKeys.GitHub]: [],\n      [AlmKeys.GitLab]: []\n    },\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPullRequestDecorationSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    const {\n      appState: { branchesEnabled }\n    } = this.props;\n\n    if (!branchesEnabled) {\n      return Promise.resolve();\n    }\n\n    this.setState({ loading: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: AlmKeys) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loading: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loading: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled },\n      component\n    } = this.props;\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        component={component}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default withAppState(AlmIntegration);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nexport const CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys, AlmSettingsInstance, ProjectAlmBinding } from '../../../../types/alm-settings';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nfunction renderField(props: {\n  help?: boolean;\n  helpParams?: { [key: string]: string | JSX.Element };\n  id: string;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  optional?: boolean;\n  propKey: keyof ProjectAlmBinding;\n  value: string;\n}) {\n  const { help, helpParams, id, propKey, optional, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.pr_decoration.binding.form', id)}\n        {!optional && <em className=\"mandatory\">*</em>}\n        {help && (\n          <HelpTooltip\n            className=\"spacer-left\"\n            overlay={\n              <FormattedMessage\n                defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n                id={`settings.pr_decoration.binding.form.${id}.help`}\n                values={helpParams}\n              />\n            }\n            placement=\"right\"\n          />\n        )}\n      </label>\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nfunction isDataSame(\n  { key, repository = '', slug = '' }: ProjectAlmBinding,\n  { key: oKey = '', repository: oRepository = '', slug: oSlug = '' }: ProjectAlmBinding\n) {\n  return key === oKey && repository === oRepository && slug === oSlug;\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData: { key, repository, slug },\n    instances,\n    isValid,\n    loading,\n    originalData,\n    saving,\n    success\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = key && instances.find(i => i.key === key);\n  const alm = selected && selected.alm;\n\n  const isChanged = !isDataSame({ key, repository, slug }, originalData || { key: '' });\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <em className=\"mandatory spacer-right\">*</em>\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm === AlmKeys.Bitbucket && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/'}\n                    <strong>{'{KEY}'}</strong>\n                    {'/repos/{SLUG}/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/{KEY}/repos/'}\n                    <strong>{'{SLUG}'}</strong>\n                    {'/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.slug',\n              onFieldChange: props.onFieldChange,\n              propKey: 'slug',\n              value: slug || ''\n            })}\n          </>\n        )}\n\n        {alm === AlmKeys.GitHub &&\n          renderField({\n            help: true,\n            helpParams: { example: 'SonarSource/sonarqube' },\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        {alm === AlmKeys.GitLab &&\n          renderField({\n            help: true,\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            optional: true,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {originalData && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { AlmKeys, AlmSettingsInstance, ProjectAlmBinding } from '../../../../types/alm-settings';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<ProjectAlmBinding, 'key'>>;\n} = {\n  [AlmKeys.Azure]: [],\n  [AlmKeys.Bitbucket]: ['repository', 'slug'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: []\n};\n\nexport default class PRDecorationBinding extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '' },\n    instances: [],\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              originalData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBinding | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === 404) {\n        return Promise.resolve(undefined);\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: ''\n            },\n            originalData: undefined,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<ProjectAlmBinding, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n\n    switch (alm) {\n      case AlmKeys.Azure:\n        return setProjectAzureBinding({\n          almSetting,\n          project\n        });\n      case AlmKeys.Bitbucket: {\n        if (!almSpecificFields) {\n          return Promise.reject();\n        }\n        const { repository = '', slug = '' } = almSpecificFields;\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug\n        });\n      }\n      case AlmKeys.GitHub: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        if (!repository) {\n          return Promise.reject();\n        }\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    if (key) {\n      this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n        .then(() => {\n          if (this.mounted) {\n            this.setState({\n              saving: false,\n              success: true\n            });\n          }\n        })\n        .then(this.fetchDefinitions)\n        .catch(this.catchError);\n    }\n  };\n\n  handleFieldChange = (id: keyof ProjectAlmBinding, value: string) => {\n    this.setState(({ formData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\ninterface Category {\n  key: string;\n  name: string;\n}\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport class CategoriesList extends React.PureComponent<CategoriesListProps> {\n  renderLink(category: Category) {\n    const { component, defaultCategory, selectedCategory } = this.props;\n    const pathname = this.props.component ? '/project/settings' : '/settings';\n    const query = {\n      category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n      id: component && component.key\n    };\n    return (\n      <IndexLink\n        className={classNames({\n          active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n        })}\n        title={category.name}\n        to={{ pathname, query }}>\n        {category.name}\n      </IndexLink>\n    );\n  }\n\n  render() {\n    const { branchesEnabled } = this.props;\n\n    const categoriesWithName = this.props.categories\n      .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n      .map(key => ({\n        key,\n        name: getCategoryName(key)\n      }))\n      .concat(\n        ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n          .filter(c =>\n            this.props.component\n              ? // Project settings\n                c.availableForProject\n              : // Global settings\n                c.availableGlobally\n          )\n          .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n      );\n    const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n    return (\n      <ul className=\"side-tabs-menu\">\n        {sortedCategories.map(category => (\n          <li key={category.key}>{this.renderLink(category)}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\ninterface Props {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: Props) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{title}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport '../side-tabs.css';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div className=\"page page-limited\" id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n\n        <PageHeader component={this.props.component} />\n\n        <div className=\"side-tabs-layout settings-layout\">\n          <div className=\"side-tabs-side\">\n            <AllCategoriesList\n              component={this.props.component}\n              defaultCategory={this.props.defaultCategory}\n              selectedCategory={selectedCategory}\n            />\n          </div>\n          <div className=\"side-tabs-main\">\n            {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n              foundAdditionalCategory.renderComponent({\n                component: this.props.component,\n                selectedCategory: originalCategory\n              })\n            ) : (\n              <CategoryDefinitionsList\n                category={selectedCategory}\n                component={this.props.component}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n"],"sourceRoot":""}