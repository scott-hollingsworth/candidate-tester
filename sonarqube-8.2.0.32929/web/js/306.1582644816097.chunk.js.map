{"version":3,"sources":["webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationModal.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationBox.tsx","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/components/common/VisibilitySelector.tsx","webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx","webpack:///./src/main/js/apps/create/project/style.css?0a3a","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?ab01","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx","webpack:///./src/main/js/apps/create/project/OrganizationInput.tsx","webpack:///./src/main/js/apps/create/project/AlmRepositoryItem.tsx","webpack:///./src/main/js/apps/create/project/SetupProjectBox.tsx","webpack:///./src/main/js/apps/create/project/RemoteRepositories.tsx","webpack:///./src/main/js/apps/create/project/AutoProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageHeader.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarCloud.tsx","webpack:///./src/main/js/apps/create/project/types.ts","webpack:///./src/main/js/apps/create/project/BitbucketProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/BitbucketRepositories.tsx","webpack:///./src/main/js/apps/create/project/BitbucketSearchResults.tsx","webpack:///./src/main/js/apps/create/project/BitbucketImportRepositoryForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketPersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreate.tsx","webpack:///./src/main/js/api/alm-integrations.ts","webpack:///./src/main/js/apps/create/project/CreateProjectModeSelection.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarQube.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts"],"names":["TRIAL_DURATION_DAYS","UpgradeOrganizationAdvantages","index_js_exposed","className","Advantage","Object","l10n","_a","children","CheckIcon_default","a","fill","theme","lightGreen","_super","BillingFormShim","__extends","prototype","render","BillingForm","window","SonarBilling","__assign","this","props","UpgradeOrganizationModal_BillingForm","withCurrentUser","components_BillingFormShim","UpgradeOrganizationModal","_this","apply","arguments","mounted","state","ready","UpgradeOrganizationModal_extends","componentDidMount","extensions","then","setState","componentWillUnmount","header","Modal_default","contentLabel","noBackdrop","insideModal","onRequestClose","onClose","shouldCloseOnOverlayClick","size","onCommit","onUpgradeDone","organizationKey","organization","key","subscriptionPlans","onSubmit","processingUpgrade","renderFormFields","renderNextCharge","renderRecap","renderSubmitButton","id","index_es","defaultMessage","values","org","name","DeferredSpinner_default","loading","buttons","onClick","UpgradeOrganizationBox_UpgradeOrganizationBox","UpgradeOrganizationBox","upgradeOrganizationModal","fetchSubscriptionPlans","request","throwGlobalError","handleUpgradeClick","handleUpgradeOrganizationModalClose","handleOrganizationUpgrade","onOrganizationUpgrade","UpgradeOrganizationBox_extends","startingPrice","price","RadioCard_default","title","titleInfo","undefined","utils","es","target","to","components_UpgradeOrganizationModal","getAlmAppInfo","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getRepositories","data","provisionProject","installationKeys","join","VisibilitySelector","handlePublicClick","event","preventDefault","currentTarget","blur","onChange","handlePrivateClick","react__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_0__","href","is-checked","visibility","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","showDetails","canTurnToPrivate","withUserOrganizations","WrappedComponent","Wrapper","fetchMyOrganizations","react__WEBPACK_IMPORTED_MODULE_0__","displayName","_utils__WEBPACK_IMPORTED_MODULE_4__","mapDispatchToProps","_apps_account_organizations_actions__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_1__","userOrganizations","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","content","__webpack_require__","module","i","options","hmr","transform","insertInto","locals","exports","push","OrganizationSelect","hideIcons","organizations","optionRenderer","icon","alm","almIntegrations","isPaidOrg","subscription","alt","height","src","helpers_urls","getOptionRenderer","Select_default","autoFocus","clearable","labelKey","sortBy_default","o","toLowerCase","placeholder","required","value","valueKey","valueRenderer","OrganizationInput_OrganizationInput","OrganizationInput","handleLinkClick","stopPropagation","storage","Date","now","toString","router","pathname","tab","autoImport","htmlFor","project_OrganizationInput","react_router_es","AlmRepositoryItem","handleMouseEnter","highlightUpgradeBox","handleMouseLeave","handleToggle","disabled","repository","linkedProjectKey","toggleRepository","AlmRepositoryItem_extends","identityProvider","selected","alreadyImported","Boolean","Tooltip_default","overlay","classnames","imported","onMouseEnter","onMouseLeave","role","LockIcon_default","disableGrayText","Checkbox_default","checked","onCheck","identity_default","icon-half-transparent","width","label","private","green","link","urls","SetupProjectBox","submitting","canSubmit","selectedRepositories","length","handleFormSubmit","alm_integration","map","repo","installationKey","projects","onProjectCreate","project","projectKey","handleProvisionFail","onProvisionFail","SetupProjectBox_extends","hasSelectedRepositories","partition_default","_b","privateRepos","_c","publicRepos","open","RemoteRepositories","checkAllRepositories","highlight","repositories","search","successfullyUpgraded","fetchRepositories","filterBySearch","includes","handleHighlightUpgradeBox","updateSelectedRepositories","keys","forEach","newRepository","find","r","handleSearch","onCheckAllRepositories","helpers_organizations","nextState","validRepositories","filter","filterByPlan","filterByImportable","keyBy_default","RemoteRepositories_extends","componentDidUpdate","prevProps","almApplication","hasPrivateRepositories","some","showSearchBox","showCheckAll","showUpgradebox","actions","admin","filteredRepositories","SearchBox_default","minLength","Alert","variant","project_AlmRepositoryItem","create-project-side-with-search","project_SetupProjectBox","types","AutoProjectCreate","call","handleInstallAppClick","handleOrganizationSelect","selectedOrganization","getInitialSelectedOrganization","AutoProjectCreate_extends","boundOrganizations","IdentityProviderLink_default","backgroundColor","iconPath","small","url","installationUrl","project_RemoteRepositories","CreateProjectPageHeader","additionalActions","showBreadcrumb","ManualProjectCreate","checkFreeKey","components","component","alreadyExist","projectKeyError","touched","validating","canChoosePrivate","getOrganization","projectName","trim","selectedVisibility","prevState","handleProjectKeyChange","validateKey","projectNameChanged","projectNameError","validateName","handleProjectNameChange","handleVisibilityChange","test","debounce_default","ManualProjectCreate_extends","system","branchesEnabled","projectKeyIsInvalid","projectKeyIsValid","projectNameIsInvalid","projectNameIsValid","ValidationInput_default","description","error","help","isInvalid","isValid","is-invalid","is-valid","maxLength","type","CreateProjectPageSonarCloud_CreateProjectPageSonarCloud","CreateProjectPageSonarCloud","handleProjectCreate","projectKeys","skipOnboarding","fetchAlmApplication","application","onTabChange","updateUrl","replace","location","query","CreateProjectPageSonarCloud_assign","CreateProjectPageSonarCloud_extends","currentUser","pages","showManualTab","index_module","titleTemplate","Tabs_default","tabs","node","create_project_ManualProjectCreate","provision","project_AutoProjectCreate","users","project_CreateProjectPageSonarCloud","whenLoggedIn","CreateProjectModes","BitbucketProjectAccordion","disableRepositories","selectedRepository","showingAllRepositories","repositoryCount","BoxedGroupAccordion_default","not-clickable","no-hover","mode","BitbucketServer","resetPat","sqProjectKey","Radio_default","text-muted","link-no-underline","onSelectRepository","String","BitbucketRepositories","projectRepositories","openProjectKeys","setOpenProjectKeys","allAreExpanded","p","isOpen","allShown","without_default","uniq_default","__spreadArrays","handleClick","BitbucketSearchResults","searching","searchResults","filteredProjects","BitbucketImportRepositoryForm","onSearch","BitbucketPersonalAccessTokenForm","bitbucketSetting","validationFailed","setTouched","e","FormData","get","onPersonalAccessTokenCreate","display","rel","perm","BitbucketProjectCreateRenderer","canAdmin","importing","showPersonalAccessTokenForm","submittingToken","tokenValidationFailed","onImportRepository","category","AdditionalCategoryKeys","BitbucketProjectCreate_BitbucketProjectCreate","BitbucketProjectCreate","fetchInitialData","__awaiter","checkPersonalAccessToken","patIsValid","sent","fetchBitbucketProjects","fetchBitbucketRepositories","almSetting","response","status","Promise","resolve","all","isLastPage","results","reduce","acc","BitbucketProjectCreate_assign","handlePersonalAccessTokenCreate","token","pat","handleImportRepository","repositorySlug","slug","repositoryName","handleSelectRepository","bitbucketSettings","BitbucketProjectCreate_extends","loadingBindings","project_BitbucketProjectCreate","rootReducer","CreateProjectModeSelection","bbsBindingCount","onSelectMode","Manual","style","lineHeight","HelpTooltip_default","CreateProjectPageSonarQube_CreateProjectPageSonarQube","CreateProjectPageSonarQube","fetchAlmBindings","alm_settings","almSettings","s","types_alm_settings","Bitbucket","handleModeSelect","CreateProjectPageSonarQube_extends","appState","_d","showManualForm","showBBSForm","project_CreateProjectPageSonarQube","withAppState","CreateProjectPage","A11ySkipTarget","anchor","CreateProjectPage_assign","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","weight","librariesExposed","installScript","scriptTag","document","createElement","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","bind","exposeLibraries","default","start","reject","d","__webpack_exports__","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","user","externalProvider","almKey","startsWith","_utils__WEBPACK_IMPORTED_MODULE_3__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","_helpers_users__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1___default","_withCurrentUser__WEBPACK_IMPORTED_MODULE_4__","AlmKeys","Step","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","formatPrice","noSign","priceFormatted","sonar_ui_common_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default","urlQuery","almInstallId","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_3__","jwt","sonar_ui_common_helpers_strings__WEBPACK_IMPORTED_MODULE_4__","iss","getAlmDefinitions","getAlmSettings","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","deleteConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY"],"mappings":"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","file":"js/306.1582644816097.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport BillingFormShim from './BillingFormShim';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  insideModal?: boolean;\n  onUpgradeDone: () => void;\n  onClose: () => void;\n  organization: T.Organization;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  ready: boolean;\n}\n\nexport default class UpgradeOrganizationModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { ready: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const header = translate('billing.upgrade_box.upgrade_to_paid_plan');\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Modal\n        contentLabel={header}\n        noBackdrop={this.props.insideModal}\n        onRequestClose={this.props.onClose}\n        shouldCloseOnOverlayClick={false}\n        size=\"medium\">\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <BillingForm\n          onCommit={this.props.onUpgradeDone}\n          organizationKey={this.props.organization.key}\n          subscriptionPlans={this.props.subscriptionPlans}>\n          {({\n            onSubmit,\n            processingUpgrade,\n            renderFormFields,\n            renderNextCharge,\n            renderRecap,\n            renderSubmitButton\n          }) => (\n            <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n              <div className=\"modal-body modal-container\">\n                <div className=\"huge-spacer-bottom\">\n                  <p className=\"spacer-bottom\">\n                    <FormattedMessage\n                      defaultMessage={translate('billing.upgrade.org_x_advantages')}\n                      id=\"billing.coupon.description\"\n                      values={{\n                        org: <strong>{this.props.organization.name}</strong>\n                      }}\n                    />\n                  </p>\n                  <UpgradeOrganizationAdvantages />\n                </div>\n                {renderFormFields()}\n                <div className=\"big-spacer-top\">{renderRecap()}</div>\n              </div>\n              <footer className=\"modal-foot display-flex-center display-flex-space-between\">\n                {renderNextCharge() || <span />}\n                <div>\n                  <DeferredSpinner loading={processingUpgrade} />\n                  {renderSubmitButton()}\n                  <ResetButtonLink onClick={this.props.onClose}>\n                    {translate('cancel')}\n                  </ResetButtonLink>\n                </div>\n              </footer>\n            </form>\n          )}\n        </BillingForm>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport UpgradeOrganizationModal from './UpgradeOrganizationModal';\n\ninterface Props {\n  className?: string;\n  insideModal?: boolean;\n  onOrganizationUpgrade: () => void;\n  organization: T.Organization;\n}\n\ninterface State {\n  subscriptionPlans: T.SubscriptionPlan[];\n  upgradeOrganizationModal: boolean;\n}\n\nexport default class UpgradeOrganizationBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { subscriptionPlans: [], upgradeOrganizationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSubscriptionPlans();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleUpgradeClick = () => {\n    this.setState({ upgradeOrganizationModal: true });\n  };\n\n  handleUpgradeOrganizationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ upgradeOrganizationModal: false });\n    }\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    this.handleUpgradeOrganizationModalClose();\n  };\n\n  render() {\n    if (!hasMessage('billing.upgrade_box.header')) {\n      return null;\n    }\n\n    const { subscriptionPlans, upgradeOrganizationModal } = this.state;\n    const startingPrice = subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <RadioCard\n          className={this.props.className}\n          title={translate('billing.upgrade_box.header')}\n          titleInfo={\n            startingPrice !== undefined && (\n              <FormattedMessage\n                defaultMessage={translate('billing.price_from_x')}\n                id=\"billing.price_from_x\"\n                values={{\n                  price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n                }}\n              />\n            )\n          }>\n          <>\n            <UpgradeOrganizationAdvantages />\n            <div className=\"big-spacer-left\">\n              <Button className=\"js-upgrade-organization\" onClick={this.handleUpgradeClick}>\n                {translate('billing.paid_plan.upgrade')}\n              </Button>\n              <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n                {translate('billing.pricing.learn_more')}\n              </Link>\n            </div>\n          </>\n        </RadioCard>\n        {upgradeOrganizationModal && (\n          <UpgradeOrganizationModal\n            insideModal={this.props.insideModal}\n            onClose={this.handleUpgradeOrganizationModalClose}\n            onUpgradeDone={this.handleOrganizationUpgrade}\n            organization={this.props.organization}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  canTurnToPrivate?: boolean;\n  className?: string;\n  onChange: (visibility: T.Visibility) => void;\n  showDetails?: boolean;\n  visibility?: T.Visibility;\n}\n\nexport default class VisibilitySelector extends React.PureComponent<Props> {\n  handlePublicClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('public');\n  };\n\n  handlePrivateClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('private');\n  };\n\n  render() {\n    return (\n      <div className={classNames('visibility-select', this.props.className)}>\n        <a\n          className=\"link-base-color link-no-underline visibility-select-option\"\n          href=\"#\"\n          id=\"visibility-public\"\n          onClick={this.handlePublicClick}>\n          <i\n            className={classNames('icon-radio', {\n              'is-checked': this.props.visibility === 'public'\n            })}\n          />\n          <span className=\"spacer-left\">{translate('visibility.public')}</span>\n        </a>\n        {this.props.showDetails && (\n          <span className=\"visibility-details note\">\n            {translate('visibility.public.description.long')}\n          </span>\n        )}\n\n        {this.props.canTurnToPrivate ? (\n          <>\n            <a\n              className=\"link-base-color link-no-underline huge-spacer-left visibility-select-option\"\n              href=\"#\"\n              id=\"visibility-private\"\n              onClick={this.handlePrivateClick}>\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </a>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        ) : (\n          <>\n            <span\n              className=\"huge-spacer-left text-muted cursor-not-allowed visibility-select-option\"\n              id=\"visibility-private\">\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </span>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n}\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .visibility-select-option{margin-left:0!important;margin-bottom:8px;display:flex;align-items:center;font-size:14px}.manual-project-create .visibility-details{display:block;margin:8px 0}.manual-project-create .visibility-select-wrapper{padding:8px 0 16px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"#create-project{padding-top:0!important}#create-project header{padding-top:20px}.white-page #create-project header{background-color:#fff;position:-webkit-sticky;position:sticky;top:48px;z-index:50}.create-project{display:flex!important;justify-content:space-between}.create-project-repository{display:flex;align-items:center;min-width:500px;height:40px;border:1px solid #e6e6e6;padding:8px 16px;margin-bottom:8px;box-sizing:border-box;cursor:pointer;transition:all .3s ease}.create-project-repository.disabled{background-color:#ebebeb;border-color:#ddd;cursor:default}.create-project-repository.imported{cursor:default}.create-project-repository.selected{background-color:#cae3f2;border-color:#236a97}.create-project-repository:not(.imported):not(.disabled):active,.create-project-repository:not(.imported):not(.disabled):focus,.create-project-repository:not(.imported):not(.disabled):hover{border-color:#4b9fd5;box-shadow:none}.create-project-side-with-search{margin-top:32px}.create-project-side-sticky{position:-webkit-sticky;position:sticky;top:68px}.create-project-setup{display:flex;overflow:hidden;opacity:0;flex-direction:column;height:0;width:450px;margin-bottom:0;color:#fff;background-color:#0b3c62;border:none;border-radius:3px;transition:height .5s ease,opacity .4s ease-out,margin-bottom .5s ease-in}.create-project-setup.open{opacity:1;height:160px;margin-bottom:20px}.create-project-setup h2{color:#fff;font-weight:700;font-size:16px}.create-project-setup .boxed-group-inner{display:flex;flex-direction:column;flex-grow:1}.create-project-setup .button{border-color:#4c9bd6;background-color:#4c9bd6;color:#fff;transition:border-color .2s ease,box-shadow .2s ease,background-color .2s ease}.create-project-setup .button:focus,.create-project-setup .button:hover{border-color:#327bb3;background-color:#327bb3}.create-project-actions{min-width:500px;display:flex;justify-content:space-between;align-items:center;padding:8px 0 8px 16px;border-left:1px solid transparent}.create-project-actions .icon-checkbox{margin-right:8px}.create-project-modes{margin:0 auto;max-width:500px}.create-project-import-bbs i.icon-radio{flex-shrink:0}.create-project-import-bbs .open .boxed-group-header{border-bottom:1px solid #e6e6e6}.create-project-import-bbs .boxed-group-inner{padding-top:24px}.create-project-import-bbs-repo{width:250px;min-height:40px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport { ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP } from '../organization/utils';\n\ninterface Props {\n  autoImport?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport class OrganizationInput extends React.PureComponent<Props & WithRouterProps> {\n  handleLinkClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n    this.props.router.push({\n      pathname: '/create-organization',\n      state: { tab: this.props.autoImport ? 'auto' : 'manual' }\n    });\n  };\n\n  render() {\n    const { autoImport, onChange, organization, organizations } = this.props;\n    return (\n      <div className=\"form-field spacer-bottom\">\n        <label htmlFor=\"select-organization\">\n          <span className=\"text-middle\">\n            <strong>{translate('onboarding.create_project.organization')}</strong>\n            <em className=\"mandatory\">*</em>\n          </span>\n        </label>\n        <OrganizationSelect\n          hideIcons={!autoImport}\n          onChange={onChange}\n          organization={organization}\n          organizations={organizations}\n        />\n        <a className=\"big-spacer-left js-new-org\" href=\"#\" onClick={this.handleLinkClick}>\n          {autoImport\n            ? translate('onboarding.create_project.import_new_org')\n            : translate('onboarding.create_project.create_new_org')}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OrganizationInput);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { identity } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\n\ninterface Props {\n  disabled: boolean;\n  highlightUpgradeBox: (highlight: boolean) => void;\n  identityProvider: T.IdentityProvider;\n  repository: T.AlmRepository;\n  selected: boolean;\n  toggleRepository: (repository: T.AlmRepository) => void;\n}\n\nexport default class AlmRepositoryItem extends React.PureComponent<Props> {\n  handleMouseEnter = () => {\n    this.props.highlightUpgradeBox(true);\n  };\n\n  handleMouseLeave = () => {\n    this.props.highlightUpgradeBox(false);\n  };\n\n  handleToggle = () => {\n    if (!this.props.disabled && !this.props.repository.linkedProjectKey) {\n      this.props.toggleRepository(this.props.repository);\n    }\n  };\n\n  render() {\n    const { disabled, identityProvider, repository, selected } = this.props;\n    const alreadyImported = Boolean(repository.linkedProjectKey);\n    return (\n      <Tooltip\n        overlay={\n          disabled\n            ? translate('onboarding.create_project.subscribe_to_import_private_repositories')\n            : undefined\n        }>\n        <li>\n          <div\n            className={classNames('create-project-repository', {\n              disabled,\n              imported: alreadyImported,\n              selected\n            })}\n            onClick={this.handleToggle}\n            onMouseEnter={disabled ? this.handleMouseEnter : undefined}\n            onMouseLeave={disabled ? this.handleMouseLeave : undefined}\n            role=\"listitem\">\n            <div className=\"flex-1 display-flex-center\">\n              {disabled ? (\n                <LockIcon fill={colors.disableGrayText} />\n              ) : (\n                <Checkbox\n                  checked={selected || alreadyImported}\n                  disabled={disabled || alreadyImported}\n                  onCheck={identity}\n                />\n              )}\n              <img\n                alt={identityProvider.name}\n                className={classNames('spacer-left', { 'icon-half-transparent': disabled })}\n                height={14}\n                src={`${getBaseUrl()}/images/sonarcloud/${identityProvider.key}.svg`}\n                width={14}\n              />\n              <span className=\"spacer-left\">{this.props.repository.label}</span>\n              {repository.private && (\n                <div className=\"badge spacer-left\">{translate('visibility.private')}</div>\n              )}\n            </div>\n\n            {repository.linkedProjectKey && (\n              <span>\n                <CheckIcon className=\"little-spacer-right\" fill={colors.green} />\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.repository_imported')}\n                  id=\"onboarding.create_project.repository_imported\"\n                  values={{\n                    link: (\n                      <Link to={getProjectUrl(repository.linkedProjectKey)}>\n                        {translate('onboarding.create_project.see_project')}\n                      </Link>\n                    )\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        </li>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { partition } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { provisionProject } from '../../../api/alm-integration';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  onProvisionFail: () => Promise<void>;\n  organization: T.Organization;\n  selectedRepositories: T.AlmRepository[];\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SetupProjectBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit = () => {\n    return !this.state.submitting && this.props.selectedRepositories.length > 0;\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.canSubmit()) {\n      const { selectedRepositories } = this.props;\n      this.setState({ submitting: true });\n      provisionProject({\n        installationKeys: selectedRepositories.map(repo => repo.installationKey),\n        organization: this.props.organization.key\n      }).then(\n        ({ projects }) =>\n          this.props.onProjectCreate(\n            projects.map(project => project.projectKey),\n            this.props.organization.key\n          ),\n        this.handleProvisionFail\n      );\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.props.onProvisionFail().then(() => {\n      if (this.mounted) {\n        this.setState({ submitting: false });\n      }\n    });\n  };\n\n  render() {\n    const { selectedRepositories } = this.props;\n    const hasSelectedRepositories = selectedRepositories.length > 0;\n    const [privateRepos = [], publicRepos = []] = partition(\n      selectedRepositories,\n      repo => repo.private\n    );\n    return (\n      <form\n        className={classNames('create-project-setup boxed-group', {\n          open: hasSelectedRepositories\n        })}\n        onSubmit={this.handleFormSubmit}>\n        <div className=\"boxed-group-header\">\n          <h2 className=\"spacer-top\">\n            {selectedRepositories.length > 1\n              ? translateWithParameters(\n                  'onboarding.create_project.x_repositories_selected',\n                  selectedRepositories.length\n                )\n              : translate('onboarding.create_project.1_repository_selected')}\n          </h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          <div className=\"flex-1\">\n            {publicRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_public')}</p>\n            )}\n            {publicRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_public',\n                  publicRepos.length\n                )}\n              </p>\n            )}\n            {privateRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_private')}</p>\n            )}\n            {privateRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_private',\n                  privateRepos.length\n                )}\n              </p>\n            )}\n          </div>\n          <div>\n            <SubmitButton className=\"button-large\" disabled={this.state.submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={this.state.submitting} />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getRepositories } from '../../../api/alm-integration';\nimport { isPaidOrganization } from '../../../helpers/organizations';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport AlmRepositoryItem from './AlmRepositoryItem';\nimport SetupProjectBox from './SetupProjectBox';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization: T.Organization;\n}\n\ntype SelectedRepositories = T.Dict<T.AlmRepository | undefined>;\n\ninterface State {\n  checkAllRepositories: boolean;\n  highlight: boolean;\n  loading: boolean;\n  repositories: T.AlmRepository[];\n  search: string;\n  selectedRepositories: SelectedRepositories;\n  successfullyUpgraded: boolean;\n}\n\nexport default class RemoteRepositories extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    checkAllRepositories: false,\n    highlight: false,\n    loading: true,\n    repositories: [],\n    search: '',\n    selectedRepositories: {},\n    successfullyUpgraded: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRepositories();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.organization.key !== this.props.organization.key) {\n      this.setState({ loading: true, selectedRepositories: {} });\n      this.fetchRepositories();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRepositories = () => {\n    const { organization } = this.props;\n    return getRepositories({ organization: organization.key }).then(\n      ({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, repositories });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  filterBySearch = (search: String) => (repo: T.AlmRepository) => {\n    return repo.label.toLowerCase().includes(search.toLowerCase());\n  };\n\n  handleHighlightUpgradeBox = (highlight: boolean) => {\n    this.setState({ highlight });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    if (this.mounted) {\n      this.setState({ successfullyUpgraded: true });\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.fetchRepositories().then(() => {\n      if (this.mounted) {\n        this.setState(({ repositories, selectedRepositories }) => {\n          const updateSelectedRepositories: SelectedRepositories = {};\n          Object.keys(selectedRepositories).forEach(installationKey => {\n            const newRepository = repositories.find(r => r.installationKey === installationKey);\n            if (newRepository && !newRepository.linkedProjectKey) {\n              updateSelectedRepositories[newRepository.installationKey] = newRepository;\n            }\n          });\n          return { selectedRepositories: updateSelectedRepositories };\n        });\n      }\n    });\n  };\n\n  handleSearch = (search: string) => {\n    this.setState({ search, checkAllRepositories: false, selectedRepositories: {} });\n  };\n\n  onCheckAllRepositories = () => {\n    this.setState(({ checkAllRepositories, repositories, search }) => {\n      const { organization } = this.props;\n\n      const isPaidOrg = isPaidOrganization(organization);\n      const filterByPlan = (repo: T.AlmRepository) => (isPaidOrg ? true : !repo.private);\n      const filterByImportable = (repo: T.AlmRepository) => !repo.linkedProjectKey;\n\n      const nextState = {\n        selectedRepositories: {},\n        checkAllRepositories: !checkAllRepositories\n      };\n\n      if (nextState.checkAllRepositories) {\n        const validRepositories = repositories.filter(\n          repo =>\n            this.filterBySearch(search)(repo) && filterByPlan(repo) && filterByImportable(repo)\n        );\n        nextState.selectedRepositories = keyBy(validRepositories, 'installationKey');\n      }\n\n      return nextState;\n    });\n  };\n\n  toggleRepository = (repository: T.AlmRepository) => {\n    this.setState(({ selectedRepositories }) => ({\n      selectedRepositories: {\n        ...selectedRepositories,\n        [repository.installationKey]: selectedRepositories[repository.installationKey]\n          ? undefined\n          : repository\n      }\n    }));\n  };\n\n  render() {\n    const { highlight, loading, repositories, search, selectedRepositories } = this.state;\n    const { almApplication, organization } = this.props;\n    const isPaidOrg = isPaidOrganization(organization);\n    const hasPrivateRepositories = repositories.some(repository => Boolean(repository.private));\n    const showSearchBox = repositories.length > 5;\n    const showCheckAll = repositories.length > 1;\n    const showUpgradebox =\n      !isPaidOrg && hasPrivateRepositories && organization.actions && organization.actions.admin;\n    const filteredRepositories = repositories.filter(this.filterBySearch(search));\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <div className=\"spacer-bottom create-project-actions\">\n            <div>\n              {showCheckAll && (\n                <Checkbox\n                  checked={this.state.checkAllRepositories}\n                  disabled={filteredRepositories.length === 0}\n                  onCheck={this.onCheckAllRepositories}>\n                  {translate('onboarding.create_project.select_all_repositories')}\n                </Checkbox>\n              )}\n            </div>\n            {showSearchBox && (\n              <SearchBox\n                minLength={1}\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_repositories')}\n                value={this.state.search}\n              />\n            )}\n          </div>\n\n          {this.state.successfullyUpgraded && (\n            <Alert variant=\"success\">\n              {translateWithParameters(\n                'onboarding.create_project.subscribtion_success_x',\n                organization.name\n              )}\n            </Alert>\n          )}\n          <DeferredSpinner loading={loading}>\n            <ul>\n              {filteredRepositories.length === 0 && (\n                <li className=\"big-spacer-top note\">\n                  {showUpgradebox\n                    ? translateWithParameters('no_results_for_x', search)\n                    : translate('onboarding.create_project.no_repositories')}\n                </li>\n              )}\n              {filteredRepositories.map(repo => (\n                <AlmRepositoryItem\n                  disabled={Boolean(repo.private && !isPaidOrg)}\n                  highlightUpgradeBox={this.handleHighlightUpgradeBox}\n                  identityProvider={almApplication}\n                  key={repo.installationKey}\n                  repository={repo}\n                  selected={Boolean(selectedRepositories[repo.installationKey])}\n                  toggleRepository={this.toggleRepository}\n                />\n              ))}\n            </ul>\n          </DeferredSpinner>\n        </div>\n        {organization && (\n          <div className={classNames({ 'create-project-side-with-search': showSearchBox })}>\n            <div className=\"create-project-side-sticky\">\n              <SetupProjectBox\n                onProjectCreate={this.props.onProjectCreate}\n                onProvisionFail={this.handleProvisionFail}\n                organization={organization}\n                selectedRepositories={Object.keys(selectedRepositories)\n                  .map(r => selectedRepositories[r])\n                  .filter(isDefined)}\n              />\n              {showUpgradebox && (\n                <UpgradeOrganizationBox\n                  className={classNames({ highlight })}\n                  onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                  organization={organization}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport {\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP\n} from '../organization/utils';\nimport OrganizationInput from './OrganizationInput';\nimport RemoteRepositories from './RemoteRepositories';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  boundOrganizations: T.Organization[];\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization?: string;\n}\n\ninterface State {\n  selectedOrganization: string;\n}\n\nexport default class AutoProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { selectedOrganization: this.getInitialSelectedOrganization(props) };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.organization) {\n      return props.organization;\n    } else if (props.boundOrganizations.length === 1) {\n      return props.boundOrganizations[0].key;\n    } else {\n      return '';\n    }\n  }\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    this.setState({ selectedOrganization: key });\n  };\n\n  render() {\n    const { almApplication, boundOrganizations, onProjectCreate } = this.props;\n\n    if (boundOrganizations.length === 0) {\n      return (\n        <>\n          <p className=\"spacer-bottom\">\n            {translate('onboarding.create_project.install_app_description', almApplication.key)}\n          </p>\n          <IdentityProviderLink\n            backgroundColor={almApplication.backgroundColor}\n            className=\"display-inline-block\"\n            iconPath={almApplication.iconPath}\n            name={almApplication.name}\n            onClick={this.handleInstallAppClick}\n            small={true}\n            url={almApplication.installationUrl}>\n            {translate(\n              'onboarding.import_organization.choose_organization_button',\n              almApplication.key\n            )}\n          </IdentityProviderLink>\n        </>\n      );\n    }\n\n    const { selectedOrganization } = this.state;\n    const organization = boundOrganizations.find(o => o.key === selectedOrganization);\n\n    return (\n      <>\n        <OrganizationInput\n          autoImport={true}\n          onChange={this.handleOrganizationSelect}\n          organization={selectedOrganization}\n          organizations={this.props.boundOrganizations}\n        />\n        {organization && (\n          <RemoteRepositories\n            almApplication={almApplication}\n            onOrganizationUpgrade={this.props.onOrganizationUpgrade}\n            onProjectCreate={onProjectCreate}\n            organization={organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface CreateProjectPageHeaderProps {\n  additionalActions?: React.ReactNode;\n  showBreadcrumb?: boolean;\n  title: React.ReactNode;\n}\n\nexport default function CreateProjectPageHeader(props: CreateProjectPageHeaderProps) {\n  const { additionalActions, showBreadcrumb, title } = props;\n\n  return (\n    <header className=\"huge-spacer-bottom bordered-bottom overflow-hidden\">\n      <h1 className=\"pull-left huge big-spacer-bottom\">\n        {showBreadcrumb && (\n          <>\n            <Link to=\"/projects/create\">{translate('my_account.create_new.TRK')}</Link>\n            <span className=\"big-spacer-left big-spacer-right slash-separator\" />\n          </>\n        )}\n        {title}\n      </h1>\n\n      {additionalActions}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport VisibilitySelector from '../../../components/common/VisibilitySelector';\nimport { isSonarCloud } from '../../../helpers/system';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport './ManualProjectCreate.css';\nimport OrganizationInput from './OrganizationInput';\n\ninterface Props {\n  branchesEnabled?: boolean;\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations?: () => Promise<void>;\n  onProjectCreate: (projectKeys: string[]) => void;\n  organization?: string;\n  userOrganizations?: T.Organization[];\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  selectedOrganization?: T.Organization;\n  selectedVisibility?: T.Visibility;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      selectedOrganization: this.getInitialSelectedOrganization(props),\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canChoosePrivate = (selectedOrganization: T.Organization | undefined) => {\n    return Boolean(selectedOrganization && selectedOrganization.subscription === 'PAID');\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization\n    } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0 &&\n        (!isSonarCloud() || selectedOrganization)\n    );\n  }\n\n  getInitialSelectedOrganization = (props: Props) => {\n    if (props.organization) {\n      return this.getOrganization(props.organization);\n    } else if (props.userOrganizations && props.userOrganizations.length === 1) {\n      return props.userOrganizations[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  getOrganization = (organizationKey: string) => {\n    return (\n      this.props.userOrganizations &&\n      this.props.userOrganizations.find(({ key }: T.Organization) => key === organizationKey)\n    );\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim(),\n        organization: state.selectedOrganization && state.selectedOrganization.key,\n        visibility: this.state.selectedVisibility\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    const selectedOrganization = this.getOrganization(key);\n    let { selectedVisibility } = this.state;\n\n    if (selectedVisibility === undefined) {\n      selectedVisibility = this.canChoosePrivate(selectedOrganization) ? 'private' : 'public';\n    }\n\n    this.setState({\n      selectedOrganization,\n      selectedVisibility\n    });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.fetchMyOrganizations!().then(\n      () => {\n        this.setState(prevState => {\n          if (prevState.selectedOrganization) {\n            const selectedOrganization = this.getOrganization(prevState.selectedOrganization.key);\n            return {\n              selectedOrganization\n            };\n          }\n          return null;\n        });\n      },\n      () => {}\n    );\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  handleVisibilityChange = (selectedVisibility: T.Visibility) => {\n    this.setState({ selectedVisibility });\n  };\n\n  validateKey = (projectKey: string) => {\n    return projectKey.length > 400 || !/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$/.test(projectKey)\n      ? translate('onboarding.create_project.project_key.error')\n      : undefined;\n  };\n\n  validateName = (projectName: string) => {\n    return projectName.length === 0 || projectName.length > 255\n      ? translate('onboarding.create_project.display_name.error')\n      : undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const { branchesEnabled } = this.props;\n    const projectKeyIsInvalid = touched && projectKeyError !== undefined;\n    const projectKeyIsValid = touched && !validating && projectKeyError === undefined;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n    const canChoosePrivate = this.canChoosePrivate(selectedOrganization);\n\n    return (\n      <>\n        <CreateProjectPageHeader\n          showBreadcrumb={branchesEnabled}\n          title={translate('onboarding.create_project.setup_manually')}\n        />\n\n        <div className=\"create-project\">\n          <div className=\"flex-1 huge-spacer-right\">\n            <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n              {isSonarCloud() && this.props.userOrganizations && (\n                <OrganizationInput\n                  onChange={this.handleOrganizationSelect}\n                  organization={selectedOrganization ? selectedOrganization.key : ''}\n                  organizations={this.props.userOrganizations}\n                />\n              )}\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.project_key.description')}\n                error={projectKeyError}\n                help={translate('onboarding.create_project.project_key.help')}\n                id=\"project-key\"\n                isInvalid={projectKeyIsInvalid}\n                isValid={projectKeyIsValid}\n                label={translate('onboarding.create_project.project_key')}\n                required={true}>\n                <input\n                  autoFocus={true}\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectKeyIsInvalid,\n                    'is-valid': projectKeyIsValid\n                  })}\n                  id=\"project-key\"\n                  maxLength={400}\n                  minLength={1}\n                  onChange={this.handleProjectKeyChange}\n                  type=\"text\"\n                  value={projectKey}\n                />\n              </ValidationInput>\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.display_name.description')}\n                error={projectNameError}\n                help={translate('onboarding.create_project.display_name.help')}\n                id=\"project-name\"\n                isInvalid={projectNameIsInvalid}\n                isValid={projectNameIsValid}\n                label={translate('onboarding.create_project.display_name')}\n                required={true}>\n                <input\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectNameIsInvalid,\n                    'is-valid': projectNameIsValid\n                  })}\n                  id=\"project-name\"\n                  maxLength={255}\n                  minLength={1}\n                  onChange={this.handleProjectNameChange}\n                  type=\"text\"\n                  value={projectName}\n                />\n              </ValidationInput>\n\n              {isSonarCloud() && selectedOrganization && (\n                <div\n                  className={classNames('visibility-select-wrapper', {\n                    open: Boolean(this.state.selectedOrganization)\n                  })}>\n                  <VisibilitySelector\n                    canTurnToPrivate={canChoosePrivate}\n                    onChange={this.handleVisibilityChange}\n                    showDetails={true}\n                    visibility={canChoosePrivate ? this.state.selectedVisibility : 'public'}\n                  />\n                </div>\n              )}\n\n              <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n                {translate('set_up')}\n              </SubmitButton>\n              <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n            </form>\n          </div>\n\n          {isSonarCloud() && selectedOrganization && (\n            <div className=\"create-project-side-sticky\">\n              <UpgradeOrganizationBox\n                className={classNames('animated', { open: !canChoosePrivate })}\n                onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                organization={selectedOrganization}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmAppInfo } from '../../../api/alm-integration';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl, getProjectUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport AutoProjectCreate from './AutoProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations: () => Promise<void>;\n  skipOnboarding: () => void;\n  userOrganizations: T.Organization[];\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  loading: boolean;\n}\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  organization?: string;\n  tab?: TabKeys;\n}\n\nexport class CreateProjectPageSonarCloud extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (hasAdvancedALMIntegration(this.props.currentUser)) {\n      this.fetchAlmApplication();\n    } else {\n      this.setState({ loading: false });\n    }\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[], organization?: string) => {\n    this.props.skipOnboarding();\n    if (projectKeys.length > 1) {\n      this.props.router.push({\n        pathname: (organization ? getOrganizationUrl(organization) : '') + '/projects'\n      });\n    } else if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(\n      ({ application }) => {\n        if (this.mounted) {\n          this.setState({ almApplication: application, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrl({ tab });\n  };\n\n  updateUrl = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  render() {\n    const { currentUser, location, userOrganizations } = this.props;\n    const { almApplication, loading } = this.state;\n    const state: LocationState = location.state || {};\n    const header = translate('onboarding.create_project.header');\n    const showManualTab = state.tab === 'manual';\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <>\n              {almApplication && (\n                <Tabs<TabKeys>\n                  onChange={this.onTabChange}\n                  selected={state.tab || 'auto'}\n                  tabs={[\n                    {\n                      key: 'auto',\n                      node: translate('onboarding.create_project.select_repositories')\n                    },\n                    { key: 'manual', node: translate('onboarding.create_project.setup_manually') }\n                  ]}\n                />\n              )}\n\n              {showManualTab || !almApplication ? (\n                <ManualProjectCreate\n                  currentUser={currentUser}\n                  fetchMyOrganizations={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                  userOrganizations={userOrganizations.filter(\n                    ({ actions = {} }) => actions.provision\n                  )}\n                />\n              ) : (\n                <AutoProjectCreate\n                  almApplication={almApplication}\n                  boundOrganizations={userOrganizations.filter(\n                    ({ alm, actions = {} }) => alm && actions.provision\n                  )}\n                  onOrganizationUpgrade={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { skipOnboarding };\n\nexport default whenLoggedIn(\n  withUserOrganizations(connect(null, mapDispatchToProps)(CreateProjectPageSonarCloud))\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum CreateProjectModes {\n  Manual = 'manual',\n  BitbucketServer = 'bbs'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketProjectAccordionProps {\n  disableRepositories: boolean;\n  onClick?: () => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  open: boolean;\n  project: BitbucketProject;\n  repositories: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showingAllRepositories: boolean;\n}\n\nexport default function BitbucketProjectAccordion(props: BitbucketProjectAccordionProps) {\n  const {\n    disableRepositories,\n    open,\n    project,\n    repositories,\n    selectedRepository,\n    showingAllRepositories\n  } = props;\n\n  const repositoryCount = repositories.length;\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open,\n        'not-clickable': !props.onClick,\n        'no-hover': !props.onClick\n      })}\n      key={project.key}\n      onClick={\n        props.onClick\n          ? props.onClick\n          : () => {\n              /* noop */\n            }\n      }\n      open={open}\n      title={<h3>{project.name}</h3>}>\n      {open && (\n        <div className=\"display-flex-wrap\">\n          {repositoryCount === 0 && (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.create_project.no_bbs_repos')}\n                id=\"onboarding.create_project.no_bbs_repos\"\n                values={{\n                  link: (\n                    <Link\n                      to={{\n                        pathname: '/projects/create',\n                        query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                      }}>\n                      {translate('onboarding.create_project.update_your_token')}\n                    </Link>\n                  )\n                }}\n              />\n            </Alert>\n          )}\n\n          {repositories.map(repo =>\n            repo.sqProjectKey ? (\n              <div\n                className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"\n                key={repo.id}>\n                <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                <div className=\"overflow-hidden\">\n                  <div className=\"little-spacer-bottom text-ellipsis\">\n                    <strong title={repo.name}>\n                      <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}</Link>\n                    </strong>\n                  </div>\n                  <em>{translate('onboarding.create_project.repository_imported')}</em>\n                </div>\n              </div>\n            ) : (\n              <Radio\n                checked={selectedRepository?.id === repo.id}\n                className={classNames(\n                  'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',\n                  {\n                    disabled: disableRepositories,\n                    'text-muted': disableRepositories,\n                    'link-no-underline': disableRepositories\n                  }\n                )}\n                key={repo.id}\n                onCheck={() => props.onSelectRepository(repo)}\n                value={String(repo.id)}>\n                <strong className=\"text-ellipsis\" title={repo.name}>\n                  {repo.name}\n                </strong>\n              </Radio>\n            )\n          )}\n\n          {!showingAllRepositories && repositoryCount > 0 && (\n            <Alert variant=\"warning\">\n              {translateWithParameters(\n                'onboarding.create_project.only_showing_X_first_repos',\n                repositoryCount\n              )}\n            </Alert>\n          )}\n        </div>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq, without } from 'lodash';\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketRepositoriesProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  projectRepositories: BitbucketProjectRepositories;\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketRepositories(props: BitbucketRepositoriesProps) {\n  const { disableRepositories, projects, projectRepositories, selectedRepository } = props;\n\n  const [openProjectKeys, setOpenProjectKeys] = React.useState(\n    projects.length > 0 ? [projects[0].key] : []\n  );\n\n  const allAreExpanded = projects.length <= openProjectKeys.length;\n\n  const handleClick = (isOpen: boolean, projectKey: string) => {\n    setOpenProjectKeys(\n      isOpen ? without(openProjectKeys, projectKey) : uniq([...openProjectKeys, projectKey])\n    );\n  };\n\n  return (\n    <>\n      <div className=\"overflow-hidden spacer-bottom\">\n        <ButtonLink\n          className=\"pull-right\"\n          onClick={() => setOpenProjectKeys(allAreExpanded ? [] : projects.map(p => p.key))}>\n          {allAreExpanded ? translate('collapse_all') : translate('expand_all')}\n        </ButtonLink>\n      </div>\n\n      {projects.map(project => {\n        const isOpen = openProjectKeys.includes(project.key);\n        const { allShown, repositories = [] } = projectRepositories[project.key] || {};\n\n        return (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            key={project.key}\n            onClick={() => handleClick(isOpen, project.key)}\n            onSelectRepository={props.onSelectRepository}\n            open={isOpen}\n            project={project}\n            repositories={repositories}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={allShown}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketSearchResultsProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketSearchResults(props: BitbucketSearchResultsProps) {\n  const {\n    disableRepositories,\n    projects,\n    searching,\n    searchResults = [],\n    selectedRepository\n  } = props;\n\n  const filteredProjects = uniq(\n    searchResults.map(r => projects.find(p => p.key === r.projectKey)).filter(isDefined)\n  );\n\n  return filteredProjects.length === 0 && !searching ? (\n    <Alert className=\"big-spacer-top\" variant=\"warning\">\n      {translate('onboarding.create_project.no_bbs_repos.filter')}\n    </Alert>\n  ) : (\n    <div className=\"big-spacer-top\">\n      <DeferredSpinner loading={searching}>\n        {filteredProjects.map(project => {\n          const repositories = searchResults.filter(r => r.projectKey === project.key);\n\n          return (\n            <BitbucketProjectAccordion\n              disableRepositories={disableRepositories}\n              key={project.key}\n              onSelectRepository={props.onSelectRepository}\n              open={true}\n              project={project}\n              repositories={repositories}\n              selectedRepository={selectedRepository}\n              showingAllRepositories={true}\n            />\n          );\n        })}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketRepositories from './BitbucketRepositories';\nimport BitbucketSearchResults from './BitbucketSearchResults';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketImportRepositoryFormProps {\n  disableRepositories: boolean;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketImportRepositoryForm(props: BitbucketImportRepositoryFormProps) {\n  const {\n    disableRepositories,\n    projects = [],\n    projectRepositories = {},\n    searchResults,\n    searching,\n    selectedRepository\n  } = props;\n\n  if (projects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.no_bbs_projects')}\n          id=\"onboarding.create_project.no_bbs_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"create-project-import-bbs\">\n      <SearchBox\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_repositories_by_name')}\n      />\n\n      {searching || searchResults ? (\n        <BitbucketSearchResults\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projects={projects}\n          searchResults={searchResults}\n          searching={searching}\n          selectedRepository={selectedRepository}\n        />\n      ) : (\n        <BitbucketRepositories\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projectRepositories={projectRepositories}\n          projects={projects}\n          selectedRepository={selectedRepository}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface BitbucketPersonalAccessTokenFormProps {\n  bitbucketSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nexport default function BitbucketPersonalAccessTokenForm(\n  props: BitbucketPersonalAccessTokenFormProps\n) {\n  const {\n    bitbucketSetting: { url },\n    submitting = false,\n    validationFailed\n  } = props;\n  const [touched, setTouched] = React.useState(false);\n\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const isInvalid = validationFailed && !touched;\n\n  return (\n    <div className=\"display-flex-start\">\n      <form\n        onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          const value = new FormData(e.currentTarget).get('personal_access_token') as string;\n          props.onPersonalAccessTokenCreate(value);\n        }}>\n        <h2 className=\"big\">{translate('onboarding.create_project.grant_access_to_bbs.title')}</h2>\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.grant_access_to_bbs.help')}\n        </p>\n\n        <ValidationInput\n          error={isInvalid ? translate('onboarding.create_project.pat_incorrect') : undefined}\n          id=\"personal_access_token\"\n          isInvalid={isInvalid}\n          isValid={false}\n          label={translate('onboarding.create_project.enter_pat')}\n          required={true}>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid\n            })}\n            id=\"personal_access_token\"\n            minLength={1}\n            name=\"personal_access_token\"\n            onChange={() => {\n              setTouched(true);\n            }}\n            type=\"text\"\n          />\n        </ValidationInput>\n\n        <SubmitButton disabled={isInvalid || submitting || !touched}>\n          {translate('save')}\n        </SubmitButton>\n        <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n      </form>\n\n      <Alert className=\"big-spacer-left big-spacer-top\" display=\"block\" variant=\"info\">\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_1')}\n        </p>\n\n        {url && (\n          <div className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"16\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            <a\n              href={`${url.replace(/\\/$/, '')}/plugins/servlet/access-tokens/add`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.create_project.pat_help.link')}\n            </a>\n          </div>\n        )}\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_2')}\n        </p>\n\n        <ul>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate(\n                'onboarding.create_project.pat_help.bbs_permission_projects'\n              )}\n              id=\"onboarding.create_project.pat_help.bbs_permission_projects\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.pat_help.bbs_permission_repos')}\n              id=\"onboarding.create_project.pat_help.bbs_permission_repos\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n        </ul>\n      </Alert>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\nimport BitbucketImportRepositoryForm from './BitbucketImportRepositoryForm';\nimport BitbucketPersonalAccessTokenForm from './BitbucketPersonalAccessTokenForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\n\nexport interface BitbucketProjectCreateRendererProps {\n  bitbucketSetting?: AlmSettingsInstance;\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  onImportRepository: () => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onProjectCreate: (projectKeys: string[]) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function BitbucketProjectCreateRenderer(props: BitbucketProjectCreateRendererProps) {\n  const {\n    bitbucketSetting,\n    canAdmin,\n    importing,\n    loading,\n    projects,\n    projectRepositories,\n    selectedRepository,\n    searching,\n    searchResults,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        showBreadcrumb={true}\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.from_bbs')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !bitbucketSetting && (\n        <Alert variant=\"error\">\n          {canAdmin ? (\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.no_bbs_binding.admin')}\n              id=\"onboarding.create_project.no_bbs_binding.admin\"\n              values={{\n                url: (\n                  <Link\n                    to={{\n                      pathname: '/admin/settings',\n                      query: { category: ALM_INTEGRATION }\n                    }}>\n                    {translate('settings.page')}\n                  </Link>\n                )\n              }}\n            />\n          ) : (\n            translate('onboarding.create_project.no_bbs_binding')\n          )}\n        </Alert>\n      )}\n\n      {!loading &&\n        bitbucketSetting &&\n        (showPersonalAccessTokenForm ? (\n          <BitbucketPersonalAccessTokenForm\n            bitbucketSetting={bitbucketSetting}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={tokenValidationFailed}\n          />\n        ) : (\n          <BitbucketImportRepositoryForm\n            disableRepositories={importing}\n            onSearch={props.onSearch}\n            onSelectRepository={props.onSelectRepository}\n            projectRepositories={projectRepositories}\n            projects={projects}\n            searchResults={searchResults}\n            searching={searching}\n            selectedRepository={selectedRepository}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getBitbucketServerProjects,\n  getBitbucketServerRepositories,\n  importBitbucketServerProject,\n  searchForBitbucketServerRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCreateProjectRenderer from './BitbucketProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  bitbucketSettings: AlmSettingsInstance[];\n  canAdmin?: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  bitbucketSetting?: AlmSettingsInstance;\n  importing: boolean;\n  loading: boolean;\n  patIsValid?: boolean;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport class BitbucketProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      bitbucketSetting: props.bitbucketSettings[0],\n      importing: false,\n      loading: false,\n      searching: false,\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.bitbucketSettings.length === 0 && this.props.bitbucketSettings.length > 0) {\n      this.setState({ bitbucketSetting: this.props.bitbucketSettings[0] }, () =>\n        this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects;\n    if (patIsValid) {\n      projects = await this.fetchBitbucketProjects().catch(() => undefined);\n    }\n\n    let projectRepositories;\n    if (projects && projects.length > 0) {\n      projectRepositories = await this.fetchBitbucketRepositories(projects).catch(() => undefined);\n    }\n\n    if (this.mounted) {\n      this.setState({\n        patIsValid,\n        projects,\n        projectRepositories,\n        loading: false\n      });\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(bitbucketSetting.key);\n  };\n\n  fetchBitbucketProjects = (): Promise<BitbucketProject[] | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return getBitbucketServerProjects(bitbucketSetting.key).then(({ projects }) => projects);\n  };\n\n  fetchBitbucketRepositories = (\n    projects: BitbucketProject[]\n  ): Promise<BitbucketProjectRepositories | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return Promise.all(\n      projects.map(p => {\n        return getBitbucketServerRepositories(bitbucketSetting.key, p.name).then(\n          ({ isLastPage, repositories }) => ({\n            isLastPage,\n            repositories,\n            projectKey: p.key\n          })\n        );\n      })\n    ).then(results => {\n      return results.reduce(\n        (acc: BitbucketProjectRepositories, { isLastPage, projectKey, repositories }) => {\n          return { ...acc, [projectKey]: { allShown: isLastPage, repositories } };\n        },\n        {}\n      );\n    });\n  };\n\n  handlePersonalAccessTokenCreate = (token: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n    setAlmPersonalAccessToken(bitbucketSetting.key, token)\n      .then(this.checkPersonalAccessToken)\n      .then(patIsValid => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n          if (patIsValid) {\n            this.fetchInitialData();\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false });\n        }\n      });\n  };\n\n  handleImportRepository = () => {\n    const { bitbucketSetting, selectedRepository } = this.state;\n\n    if (!bitbucketSetting || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n    importBitbucketServerProject(\n      bitbucketSetting.key,\n      selectedRepository.projectKey,\n      selectedRepository.slug\n    )\n      .then(({ project: { key } }) => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n          this.props.onProjectCreate([key]);\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      });\n  };\n\n  handleSearch = (query: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return;\n    }\n\n    if (!query) {\n      this.setState({ searching: false, searchResults: undefined, selectedRepository: undefined });\n      return;\n    }\n\n    this.setState({ searching: true, selectedRepository: undefined });\n    searchForBitbucketServerRepositories(bitbucketSetting.key, query)\n      .then(({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ searching: false, searchResults: repositories });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      });\n  };\n\n  handleSelectRepository = (selectedRepository: BitbucketRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      bitbucketSetting,\n      importing,\n      loading,\n      patIsValid,\n      projectRepositories,\n      projects,\n      searching,\n      searchResults,\n      selectedRepository,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <BitbucketCreateProjectRenderer\n        bitbucketSetting={bitbucketSetting}\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        onImportRepository={this.handleImportRepository}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onProjectCreate={this.props.onProjectCreate}\n        onSearch={this.handleSearch}\n        onSelectRepository={this.handleSelectRepository}\n        projectRepositories={projectRepositories}\n        projects={projects}\n        searchResults={searchResults}\n        searching={searching}\n        selectedRepository={selectedRepository}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const { canAdmin } = getAppState(state);\n  return { canAdmin };\n};\n\nexport default connect(mapStateToProps)(BitbucketProjectCreate);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BitbucketProject, BitbucketRepository } from '../types/alm-integration';\nimport { ProjectBase } from './components';\n\nexport function setAlmPersonalAccessToken(almSetting: string, pat: string): Promise<void> {\n  return post('/api/alm_integrations/set_pat', { almSetting, pat }).catch(throwGlobalError);\n}\n\nexport function checkPersonalAccessTokenIsValid(almSetting: string): Promise<boolean> {\n  return get('/api/alm_integrations/check_pat', { almSetting })\n    .then(() => true)\n    .catch(response => {\n      if (response.status === 400) {\n        return false;\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function getBitbucketServerProjects(\n  almSetting: string\n): Promise<{ projects: BitbucketProject[] }> {\n  return getJSON('/api/alm_integrations/list_bitbucketserver_projects', { almSetting });\n}\n\nexport function getBitbucketServerRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    projectName\n  });\n}\n\nexport function importBitbucketServerProject(\n  almSetting: string,\n  projectKey: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketserver_project', {\n    almSetting,\n    projectKey,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function searchForBitbucketServerRepositories(\n  almSetting: string,\n  repositoryName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    repositoryName\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { CreateProjectModes } from './types';\n\nexport interface CreateProjectModeSelectionProps {\n  bbsBindingCount: number;\n  loadingBindings: boolean;\n  onSelectMode: (mode: CreateProjectModes) => void;\n}\n\nexport default function CreateProjectModeSelection(props: CreateProjectModeSelectionProps) {\n  const { bbsBindingCount, loadingBindings } = props;\n\n  return (\n    <>\n      <header className=\"huge-spacer-top big-spacer-bottom padded\">\n        <h1 className=\"text-center huge big-spacer-bottom\">\n          {translate('my_account.create_new.TRK')}\n        </h1>\n        <p className=\"text-center big\">{translate('onboarding.create_project.select_method')}</p>\n      </header>\n\n      <div className=\"create-project-modes huge-spacer-top display-flex-space-around\">\n        <button\n          className=\"button button-huge display-flex-column create-project-mode-type-manual\"\n          onClick={() => props.onSelectMode(CreateProjectModes.Manual)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/sonarcloud/analysis/manual.svg`}\n            width={80}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.manual')}\n          </div>\n        </button>\n\n        <button\n          className=\"button button-huge big-spacer-left display-flex-column create-project-mode-type-bbs\"\n          disabled={bbsBindingCount !== 1}\n          onClick={() => props.onSelectMode(CreateProjectModes.BitbucketServer)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            width={80}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.from_bbs')}\n          </div>\n\n          {loadingBindings && (\n            <span>\n              {translate('onboarding.create_project.check_bbs_supported')}\n              <i className=\"little-spacer-left spinner\" />\n            </span>\n          )}\n\n          {!loadingBindings && bbsBindingCount !== 1 && (\n            <div className=\"text-muted small spacer-top\" style={{ lineHeight: 1.5 }}>\n              {translate('onboarding.create_project.bbs_not_configured')}\n              <HelpTooltip\n                className=\"little-spacer-left\"\n                overlay={\n                  bbsBindingCount === 0\n                    ? translate('onboarding.create_project.zero_bbs_instances')\n                    : translateWithParameters(\n                        'onboarding.create_project.too_many_bbs_instances_X',\n                        bbsBindingCount\n                      )\n                }\n              />\n            </div>\n          )}\n        </button>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmSettings } from '../../../api/alm-settings';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketProjectCreate from './BitbucketProjectCreate';\nimport CreateProjectModeSelection from './CreateProjectModeSelection';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\nimport { CreateProjectModes } from './types';\n\ninterface Props extends Pick<WithRouterProps, 'router' | 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  bitbucketSettings: AlmSettingsInstance[];\n  loading: boolean;\n}\n\nexport class CreateProjectPageSonarQube extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { bitbucketSettings: [], loading: false };\n\n  componentDidMount() {\n    const {\n      appState: { branchesEnabled },\n      location\n    } = this.props;\n    this.mounted = true;\n    if (branchesEnabled) {\n      this.fetchAlmBindings();\n    }\n\n    if (location.query?.mode || !branchesEnabled) {\n      addWhitePageClass();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.location.query?.mode && !prevProps.location.query?.mode) {\n      addWhitePageClass();\n    } else if (!this.props.location.query?.mode && prevProps.location.query?.mode) {\n      removeWhitePageClass();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  fetchAlmBindings = () => {\n    this.setState({ loading: true });\n    getAlmSettings()\n      .then(almSettings => {\n        if (this.mounted) {\n          this.setState({\n            bitbucketSettings: almSettings.filter(s => s.alm === AlmKeys.Bitbucket),\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  handleModeSelect = (mode: CreateProjectModes) => {\n    const { router, location } = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: { mode }\n    });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled },\n      currentUser,\n      location\n    } = this.props;\n    const { bitbucketSettings, loading } = this.state;\n\n    const mode: CreateProjectModes | undefined = location.query?.mode;\n    const showManualForm = !branchesEnabled || mode === CreateProjectModes.Manual;\n    const showBBSForm = branchesEnabled && mode === CreateProjectModes.BitbucketServer;\n\n    return (\n      <>\n        <Helmet title={translate('my_account.create_new.TRK')} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-bottom position-relative\" id=\"create-project\">\n          {!showBBSForm && !showManualForm && (\n            <CreateProjectModeSelection\n              bbsBindingCount={bitbucketSettings.length}\n              loadingBindings={loading}\n              onSelectMode={this.handleModeSelect}\n            />\n          )}\n\n          {showManualForm && (\n            <ManualProjectCreate\n              branchesEnabled={branchesEnabled}\n              currentUser={currentUser}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n\n          {showBBSForm && (\n            <BitbucketProjectCreate\n              bitbucketSettings={bitbucketSettings}\n              loadingBindings={loading}\n              location={location}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(withAppState(CreateProjectPageSonarQube));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { isSonarCloud } from '../../../helpers/system';\nimport CreateProjectPageSonarCloud from './CreateProjectPageSonarCloud';\nimport CreateProjectPageSonarQube from './CreateProjectPageSonarQube';\n\nexport default function CreateProjectPage(props: WithRouterProps) {\n  return (\n    <>\n      <A11ySkipTarget anchor=\"create_project_main\" />\n      {isSonarCloud() ? (\n        <CreateProjectPageSonarCloud {...props} />\n      ) : (\n        <CreateProjectPageSonarQube {...props} />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n"],"sourceRoot":""}