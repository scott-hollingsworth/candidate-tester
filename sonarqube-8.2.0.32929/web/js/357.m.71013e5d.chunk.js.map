{"version":3,"sources":["webpack:///./src/main/js/apps/coding-rules/components/ActivationFormModal.tsx","webpack:///./src/main/js/components/shared/SeverityHelper.tsx"],"names":["ActivationFormModal","react__WEBPACK_IMPORTED_MODULE_1__","[object Object]","props","_this","super","this","mounted","getParams","_ref","arguments","length","undefined","activation","rule","params","param","key","defaultValue","value","getQualityProfilesWithDepth","_ref2","profiles","Object","_quality_profiles_utils__WEBPACK_IMPORTED_MODULE_10__","filter","profile","isBuiltIn","actions","edit","language","lang","map","_objectSpread","depth","handleFormSubmit","event","preventDefault","setState","submitting","data","state","organization","severity","_api_quality_profiles__WEBPACK_IMPORTED_MODULE_7__","then","onDone","onClose","handleParameterChange","_event$currentTarget","currentTarget","name","handleProfileChange","_ref3","handleSeverityChange","_ref4","renderSeverityOption","_ref5","_components_shared_SeverityHelper__WEBPACK_IMPORTED_MODULE_8__","profilesWithDepth","_this$props","_this$state","_rule$params","isCustomRule","templateKey","activeInAllProfiles","isUpdateMode","sonar_ui_common_components_controls_Modal__WEBPACK_IMPORTED_MODULE_3___default","a","contentLabel","modalHeader","onRequestClose","size","onSubmit","className","classnames__WEBPACK_IMPORTED_MODULE_0__","modal-container","sonar_ui_common_components_ui_Alert__WEBPACK_IMPORTED_MODULE_5__","variant","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","sonar_ui_common_components_controls_Select__WEBPACK_IMPORTED_MODULE_4___default","clearable","disabled","onChange","options","label","repeat","optionRenderer","_helpers_constants__WEBPACK_IMPORTED_MODULE_9__","searchable","valueRenderer","title","type","placeholder","rows","dangerouslySetInnerHTML","__html","htmlDesc","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_2__","onClick","__webpack_require__","d","__webpack_exports__","SeverityHelper","react__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_components_icons_SeverityIcon__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_SeverityIcon__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"js/357.m.71013e5d.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { activateRule, Profile } from '../../../api/quality-profiles';\nimport SeverityHelper from '../../../components/shared/SeverityHelper';\nimport { SEVERITIES } from '../../../helpers/constants';\nimport { sortProfiles } from '../../quality-profiles/utils';\n\ninterface Props {\n  activation?: T.RuleActivation;\n  modalHeader: string;\n  onClose: () => void;\n  onDone: (severity: string) => Promise<void>;\n  organization: string | undefined;\n  profiles: Profile[];\n  rule: T.Rule | T.RuleDetails;\n}\n\ninterface State {\n  params: T.Dict<string>;\n  profile: string;\n  severity: string;\n  submitting: boolean;\n}\n\nexport default class ActivationFormModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const profilesWithDepth = this.getQualityProfilesWithDepth(props);\n    this.state = {\n      params: this.getParams(props),\n      profile: profilesWithDepth.length > 0 ? profilesWithDepth[0].key : '',\n      severity: props.activation ? props.activation.severity : props.rule.severity,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getParams = ({ activation, rule } = this.props) => {\n    const params: T.Dict<string> = {};\n    if (rule && rule.params) {\n      for (const param of rule.params) {\n        params[param.key] = param.defaultValue || '';\n      }\n      if (activation && activation.params) {\n        for (const param of activation.params) {\n          params[param.key] = param.value;\n        }\n      }\n    }\n    return params;\n  };\n\n  // Choose QP which a user can administrate, which are the same language and which are not built-in\n  getQualityProfilesWithDepth = ({ profiles } = this.props) => {\n    return sortProfiles(\n      profiles.filter(\n        profile =>\n          !profile.isBuiltIn &&\n          profile.actions &&\n          profile.actions.edit &&\n          profile.language === this.props.rule.lang\n      )\n    ).map(profile => ({\n      ...profile,\n      // Decrease depth by 1, so the top level starts at 0\n      depth: profile.depth - 1\n    }));\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const data = {\n      key: this.state.profile,\n      organization: this.props.organization,\n      params: this.state.params,\n      rule: this.props.rule.key,\n      severity: this.state.severity\n    };\n    activateRule(data)\n      .then(() => this.props.onDone(data.severity))\n      .then(\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n            this.props.onClose();\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n  };\n\n  handleParameterChange = (event: React.SyntheticEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.currentTarget;\n    this.setState((state: State) => ({ params: { ...state.params, [name]: value } }));\n  };\n\n  handleProfileChange = ({ value }: { value: string }) => {\n    this.setState({ profile: value });\n  };\n\n  handleSeverityChange = ({ value }: { value: string }) => {\n    this.setState({ severity: value });\n  };\n\n  renderSeverityOption = ({ value }: { value: string }) => {\n    return <SeverityHelper severity={value} />;\n  };\n\n  render() {\n    const { activation, rule } = this.props;\n    const { profile, severity, submitting } = this.state;\n    const { params = [] } = rule;\n    const profilesWithDepth = this.getQualityProfilesWithDepth();\n    const isCustomRule = !!(rule as T.RuleDetails).templateKey;\n    const activeInAllProfiles = profilesWithDepth.length <= 0;\n    const isUpdateMode = !!activation;\n\n    return (\n      <Modal contentLabel={this.props.modalHeader} onRequestClose={this.props.onClose} size=\"small\">\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{this.props.modalHeader}</h2>\n          </div>\n\n          <div className={classNames('modal-body', { 'modal-container': params.length > 0 })}>\n            {!isUpdateMode && activeInAllProfiles && (\n              <Alert variant=\"info\">{translate('coding_rules.active_in_all_profiles')}</Alert>\n            )}\n\n            <div className=\"modal-field\">\n              <label>{translate('coding_rules.quality_profile')}</label>\n              <Select\n                className=\"js-profile\"\n                clearable={false}\n                disabled={submitting || profilesWithDepth.length === 1}\n                onChange={this.handleProfileChange}\n                options={profilesWithDepth.map(profile => ({\n                  label: '   '.repeat(profile.depth) + profile.name,\n                  value: profile.key\n                }))}\n                value={profile}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <label>{translate('severity')}</label>\n              <Select\n                className=\"js-severity\"\n                clearable={false}\n                disabled={submitting}\n                onChange={this.handleSeverityChange}\n                optionRenderer={this.renderSeverityOption}\n                options={SEVERITIES.map(severity => ({\n                  label: translate('severity', severity),\n                  value: severity\n                }))}\n                searchable={false}\n                value={severity}\n                valueRenderer={this.renderSeverityOption}\n              />\n            </div>\n            {isCustomRule ? (\n              <div className=\"modal-field\">\n                <p className=\"note\">{translate('coding_rules.custom_rule.activation_notice')}</p>\n              </div>\n            ) : (\n              params.map(param => (\n                <div className=\"modal-field\" key={param.key}>\n                  <label title={param.key}>{param.key}</label>\n                  {param.type === 'TEXT' ? (\n                    <textarea\n                      disabled={submitting}\n                      name={param.key}\n                      onChange={this.handleParameterChange}\n                      placeholder={param.defaultValue}\n                      rows={3}\n                      value={this.state.params[param.key] || ''}\n                    />\n                  ) : (\n                    <input\n                      disabled={submitting}\n                      name={param.key}\n                      onChange={this.handleParameterChange}\n                      placeholder={param.defaultValue}\n                      type=\"text\"\n                      value={this.state.params[param.key] || ''}\n                    />\n                  )}\n                  <div\n                    className=\"note\"\n                    // Safe: defined by rule creator (instance admin?)\n                    dangerouslySetInnerHTML={{ __html: param.htmlDesc || '' }}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n\n          <footer className=\"modal-foot\">\n            {submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitting || activeInAllProfiles}>\n              {isUpdateMode ? translate('save') : translate('coding_rules.activate')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SeverityIcon from 'sonar-ui-common/components/icons/SeverityIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  className?: string;\n  severity: string;\n}\n\nexport default function SeverityHelper({ className, severity }: Props) {\n  if (!severity) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <SeverityIcon className=\"little-spacer-right\" severity={severity} />\n      {translate('severity', severity)}\n    </span>\n  );\n}\n"],"sourceRoot":""}