{"version":3,"sources":["webpack:///./src/main/js/apps/create/project/style.css?0a3a","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?ab01","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/apps/create/components/OrganizationSelect.tsx","webpack:///./src/main/js/apps/create/project/OrganizationInput.tsx","webpack:///./src/main/js/apps/create/project/AlmRepositoryItem.tsx","webpack:///./src/main/js/apps/create/project/SetupProjectBox.tsx","webpack:///./src/main/js/apps/create/project/RemoteRepositories.tsx","webpack:///./src/main/js/apps/create/project/AutoProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageHeader.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarCloud.tsx","webpack:///./src/main/js/apps/create/project/types.ts","webpack:///./src/main/js/apps/create/project/BitbucketProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/BitbucketRepositories.tsx","webpack:///./src/main/js/apps/create/project/BitbucketSearchResults.tsx","webpack:///./src/main/js/apps/create/project/BitbucketImportRepositoryForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketPersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreate.tsx","webpack:///./src/main/js/api/alm-integrations.ts","webpack:///./src/main/js/apps/create/project/CreateProjectModeSelection.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarQube.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/apps/create/organization/utils.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationAdvantages.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationModal.tsx","webpack:///./src/main/js/apps/create/components/BillingFormShim.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationBox.tsx","webpack:///./src/main/js/api/billing.ts","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/components/common/VisibilitySelector.tsx","webpack:///./src/main/js/components/hoc/withUserOrganizations.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","OrganizationSelect","_ref","hideIcons","onChange","organization","organizations","optionRenderer","icon","alm","concat","Object","almIntegrations","key","isPaidOrg","subscription","index_js_exposed","className","alt","height","src","helpers_urls","name","l10n","getOptionRenderer","Select_default","a","autoFocus","clearable","id","labelKey","sortBy_default","o","toLowerCase","placeholder","required","value","valueKey","valueRenderer","project_OrganizationInput","react_router_es","[object Object]","this","handleLinkClick","event","preventDefault","stopPropagation","storage","utils","Date","now","toString","props","router","pathname","state","tab","autoImport","_this$props","htmlFor","href","onClick","AlmRepositoryItem_AlmRepositoryItem","handleMouseEnter","highlightUpgradeBox","handleMouseLeave","handleToggle","disabled","repository","linkedProjectKey","toggleRepository","identityProvider","selected","alreadyImported","Boolean","Tooltip_default","overlay","classnames","imported","onMouseEnter","onMouseLeave","role","LockIcon_default","fill","theme","disableGrayText","Checkbox_default","checked","onCheck","identity_default","icon-half-transparent","width","label","private","CheckIcon_default","green","index_es","defaultMessage","values","link","to","urls","SetupProjectBox_SetupProjectBox","mounted","submitting","canSubmit","selectedRepositories","length","handleFormSubmit","setState","alm_integration","installationKeys","map","repo","installationKey","then","projects","onProjectCreate","project","projectKey","handleProvisionFail","onProvisionFail","hasSelectedRepositories","_partition3","_slicedToArray","partition_default","_partition3$","privateRepos","_partition3$2","publicRepos","open","onSubmit","buttons","DeferredSpinner_default","loading","RemoteRepositories_RemoteRepositories","checkAllRepositories","highlight","repositories","search","successfullyUpgraded","fetchRepositories","filterBySearch","includes","handleHighlightUpgradeBox","handleOrganizationUpgrade","onOrganizationUpgrade","_ref2","updateSelectedRepositories","keys","forEach","newRepository","find","r","handleSearch","onCheckAllRepositories","_ref3","helpers_organizations","nextState","validRepositories","filter","filterByPlan","filterByImportable","keyBy_default","_ref4","_objectSpread","prevProps","_this$state","almApplication","hasPrivateRepositories","some","showSearchBox","showCheckAll","showUpgradebox","actions","admin","filteredRepositories","SearchBox_default","minLength","Alert","variant","create-project-side-with-search","types","UpgradeOrganizationBox","AutoProjectCreate_AutoProjectCreate","super","handleInstallAppClick","handleOrganizationSelect","selectedOrganization","getInitialSelectedOrganization","boundOrganizations","IdentityProviderLink_default","backgroundColor","iconPath","small","url","installationUrl","CreateProjectPageHeader","additionalActions","showBreadcrumb","title","ManualProjectCreate_ManualProjectCreate","checkFreeKey","components","component","alreadyExist","projectKeyError","touched","validating","catch","canChoosePrivate","getOrganization","userOrganizations","organizationKey","projectName","trim","visibility","selectedVisibility","fetchMyOrganizations","prevState","handleProjectKeyChange","currentTarget","validateKey","projectNameChanged","projectNameError","validateName","handleProjectNameChange","handleVisibilityChange","test","debounce_default","system","branchesEnabled","projectKeyIsInvalid","projectKeyIsValid","projectNameIsInvalid","projectNameIsValid","ValidationInput_default","description","error","help","isInvalid","isValid","is-invalid","is-valid","maxLength","type","VisibilitySelector","canTurnToPrivate","showDetails","mapDispatchToProps","skipOnboarding","users","project_CreateProjectPageSonarCloud","whenLoggedIn","withUserOrganizations","es","_this","handleProjectCreate","projectKeys","fetchAlmApplication","application","onTabChange","updateUrl","arguments","replace","location","query","CreateProjectPageSonarCloud_objectSpread","currentUser","pages","header","showManualTab","index_module","titleTemplate","Tabs_default","tabs","node","_ref2$actions","provision","_ref3$actions","CreateProjectModes","BitbucketProjectAccordion","disableRepositories","selectedRepository","showingAllRepositories","repositoryCount","BoxedGroupAccordion_default","not-clickable","no-hover","mode","BitbucketServer","resetPat","sqProjectKey","size","Radio_default","_a","text-muted","link-no-underline","onSelectRepository","String","BitbucketRepositories","projectRepositories","_React$useState2","BitbucketRepositories_slicedToArray","openProjectKeys","setOpenProjectKeys","allAreExpanded","p","isOpen","allShown","_ref$repositories","without_default","uniq_default","handleClick","BitbucketSearchResults","searching","_props$searchResults","searchResults","filteredProjects","BitbucketImportRepositoryForm","_props$projects","_props$projectReposit","onSearch","BitbucketPersonalAccessTokenForm","bitbucketSetting","_props$submitting","validationFailed","BitbucketPersonalAccessTokenForm_slicedToArray","setTouched","e","FormData","get","onPersonalAccessTokenCreate","display","rel","target","perm","BitbucketProjectCreateRenderer","canAdmin","importing","showPersonalAccessTokenForm","submittingToken","tokenValidationFailed","onImportRepository","category","AdditionalCategoryKeys","project_BitbucketProjectCreate","rootReducer","fetchInitialData","async","patIsValid","checkPersonalAccessToken","fetchBitbucketProjects","fetchBitbucketRepositories","almSetting","request","response","status","throwGlobalError","checkPersonalAccessTokenIsValid","Promise","resolve","getBitbucketServerProjects","all","getBitbucketServerRepositories","isLastPage","results","reduce","acc","BitbucketProjectCreate_objectSpread","handlePersonalAccessTokenCreate","token","pat","setAlmPersonalAccessToken","handleImportRepository","repositorySlug","importBitbucketServerProject","slug","repositoryName","searchForBitbucketServerRepositories","_ref5","handleSelectRepository","bitbucketSettings","loadingBindings","_this$state2","CreateProjectModeSelection","bbsBindingCount","onSelectMode","Manual","style","lineHeight","HelpTooltip_default","project_CreateProjectPageSonarQube","withAppState","fetchAlmBindings","alm_settings","almSettings","s","types_alm_settings","Bitbucket","handleModeSelect","_this$props2","appState","_b","_c","_d","_this$props3","showManualForm","showBBSForm","CreateProjectPage","A11ySkipTarget","anchor","assign","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","_A11yContext__WEBPACK_IMPORTED_MODULE_2__","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","_this$props$label","weight","installScript","getExtensionStart","sonar_ui_common_helpers_urls__WEBPACK_IMPORTED_MODULE_0__","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","librariesExposed","scriptTag","document","createElement","onload","getElementsByTagName","appendChild","fromCache","exposeLibraries","bind","default","start","reject","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","WrappedComponent","Wrapper","displayName","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","user","externalProvider","almKey","startsWith","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","org","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_1___default","n","_helpers_users__WEBPACK_IMPORTED_MODULE_2__","_withCurrentUser__WEBPACK_IMPORTED_MODULE_4__","AlmKeys","ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP","ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP","BIND_ORGANIZATION_KEY","BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP","Step","formatPrice","price","noSign","priceFormatted","sonar_ui_common_helpers_measures__WEBPACK_IMPORTED_MODULE_2__","lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default","urlQuery","almInstallId","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_3__","jwt","sonar_ui_common_helpers_strings__WEBPACK_IMPORTED_MODULE_4__","iss","getAlmDefinitions","getAlmSettings","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","deleteConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","TRIAL_DURATION_DAYS","UpgradeOrganizationAdvantages","Advantage","children","lightGreen","UpgradeOrganizationModal_BillingForm","withCurrentUser","BillingForm","window","SonarBilling","UpgradeOrganizationModal_UpgradeOrganizationModal","ready","extensions","Modal_default","contentLabel","noBackdrop","insideModal","onRequestClose","onClose","shouldCloseOnOverlayClick","onCommit","onUpgradeDone","subscriptionPlans","processingUpgrade","renderFormFields","renderNextCharge","renderRecap","renderSubmitButton","UpgradeOrganizationBox_UpgradeOrganizationBox","upgradeOrganizationModal","fetchSubscriptionPlans","handleUpgradeClick","handleUpgradeOrganizationModalClose","startingPrice","RadioCard_default","titleInfo","getAlmAppInfo","getRepositories","provisionProject","join","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","handlePublicClick","blur","handlePrivateClick","is-checked","_apps_account_organizations_actions__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"js/305.m.a4af1965.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .visibility-select-option{margin-left:0!important;margin-bottom:8px;display:flex;align-items:center;font-size:14px}.manual-project-create .visibility-details{display:block;margin:8px 0}.manual-project-create .visibility-select-wrapper{padding:8px 0 16px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"#create-project{padding-top:0!important}#create-project header{padding-top:20px}.white-page #create-project header{background-color:#fff;position:-webkit-sticky;position:sticky;top:48px;z-index:50}.create-project{display:flex!important;justify-content:space-between}.create-project-repository{display:flex;align-items:center;min-width:500px;height:40px;border:1px solid #e6e6e6;padding:8px 16px;margin-bottom:8px;box-sizing:border-box;cursor:pointer;transition:all .3s ease}.create-project-repository.disabled{background-color:#ebebeb;border-color:#ddd;cursor:default}.create-project-repository.imported{cursor:default}.create-project-repository.selected{background-color:#cae3f2;border-color:#236a97}.create-project-repository:not(.imported):not(.disabled):active,.create-project-repository:not(.imported):not(.disabled):focus,.create-project-repository:not(.imported):not(.disabled):hover{border-color:#4b9fd5;box-shadow:none}.create-project-side-with-search{margin-top:32px}.create-project-side-sticky{position:-webkit-sticky;position:sticky;top:68px}.create-project-setup{display:flex;overflow:hidden;opacity:0;flex-direction:column;height:0;width:450px;margin-bottom:0;color:#fff;background-color:#0b3c62;border:none;border-radius:3px;transition:height .5s ease,opacity .4s ease-out,margin-bottom .5s ease-in}.create-project-setup.open{opacity:1;height:160px;margin-bottom:20px}.create-project-setup h2{color:#fff;font-weight:700;font-size:16px}.create-project-setup .boxed-group-inner{display:flex;flex-direction:column;flex-grow:1}.create-project-setup .button{border-color:#4c9bd6;background-color:#4c9bd6;color:#fff;transition:border-color .2s ease,box-shadow .2s ease,background-color .2s ease}.create-project-setup .button:focus,.create-project-setup .button:hover{border-color:#327bb3;background-color:#327bb3}.create-project-actions{min-width:500px;display:flex;justify-content:space-between;align-items:center;padding:8px 0 8px 16px;border-left:1px solid transparent}.create-project-actions .icon-checkbox{margin-right:8px}.create-project-modes{margin:0 auto;max-width:500px}.create-project-import-bbs i.icon-radio{flex-shrink:0}.create-project-import-bbs .open .boxed-group-header{border-bottom:1px solid #e6e6e6}.create-project-import-bbs .boxed-group-inner{padding-top:24px}.create-project-import-bbs-repo{width:250px;min-height:40px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  hideIcons?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationSelect({\n  hideIcons,\n  onChange,\n  organization,\n  organizations\n}: Props) {\n  const optionRenderer = getOptionRenderer(hideIcons);\n  return (\n    <Select\n      autoFocus={!organization}\n      className=\"input-super-large\"\n      clearable={false}\n      id=\"select-organization\"\n      labelKey=\"name\"\n      onChange={onChange}\n      optionRenderer={optionRenderer}\n      options={sortBy(organizations, o => o.name.toLowerCase())}\n      placeholder={translate('onboarding.import_organization.choose_organization')}\n      required={true}\n      value={organization}\n      valueKey=\"key\"\n      valueRenderer={optionRenderer}\n    />\n  );\n}\n\nexport function getOptionRenderer(hideIcons?: boolean) {\n  return function optionRenderer(organization: T.Organization) {\n    const icon = organization.alm\n      ? `sonarcloud/${sanitizeAlmId(organization.alm.key)}`\n      : 'sonarcloud-square-logo';\n    const isPaidOrg = organization.subscription === 'PAID';\n    return (\n      <div className=\"display-flex-space-between\">\n        <span className=\"text-ellipsis flex-1\">\n          {!hideIcons && (\n            <img\n              alt={organization.alm ? organization.alm.key : 'SonarCloud'}\n              className=\"little-spacer-right\"\n              height={14}\n              src={`${getBaseUrl()}/images/${icon}.svg`}\n            />\n          )}\n          {organization.name}\n          <span className=\"note little-spacer-left\">{organization.key}</span>\n        </span>\n        {isPaidOrg && <div className=\"badge\">{translate('organization.paid_plan.badge')}</div>}\n      </div>\n    );\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport { ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP } from '../organization/utils';\n\ninterface Props {\n  autoImport?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport class OrganizationInput extends React.PureComponent<Props & WithRouterProps> {\n  handleLinkClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n    this.props.router.push({\n      pathname: '/create-organization',\n      state: { tab: this.props.autoImport ? 'auto' : 'manual' }\n    });\n  };\n\n  render() {\n    const { autoImport, onChange, organization, organizations } = this.props;\n    return (\n      <div className=\"form-field spacer-bottom\">\n        <label htmlFor=\"select-organization\">\n          <span className=\"text-middle\">\n            <strong>{translate('onboarding.create_project.organization')}</strong>\n            <em className=\"mandatory\">*</em>\n          </span>\n        </label>\n        <OrganizationSelect\n          hideIcons={!autoImport}\n          onChange={onChange}\n          organization={organization}\n          organizations={organizations}\n        />\n        <a className=\"big-spacer-left js-new-org\" href=\"#\" onClick={this.handleLinkClick}>\n          {autoImport\n            ? translate('onboarding.create_project.import_new_org')\n            : translate('onboarding.create_project.create_new_org')}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OrganizationInput);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { identity } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\n\ninterface Props {\n  disabled: boolean;\n  highlightUpgradeBox: (highlight: boolean) => void;\n  identityProvider: T.IdentityProvider;\n  repository: T.AlmRepository;\n  selected: boolean;\n  toggleRepository: (repository: T.AlmRepository) => void;\n}\n\nexport default class AlmRepositoryItem extends React.PureComponent<Props> {\n  handleMouseEnter = () => {\n    this.props.highlightUpgradeBox(true);\n  };\n\n  handleMouseLeave = () => {\n    this.props.highlightUpgradeBox(false);\n  };\n\n  handleToggle = () => {\n    if (!this.props.disabled && !this.props.repository.linkedProjectKey) {\n      this.props.toggleRepository(this.props.repository);\n    }\n  };\n\n  render() {\n    const { disabled, identityProvider, repository, selected } = this.props;\n    const alreadyImported = Boolean(repository.linkedProjectKey);\n    return (\n      <Tooltip\n        overlay={\n          disabled\n            ? translate('onboarding.create_project.subscribe_to_import_private_repositories')\n            : undefined\n        }>\n        <li>\n          <div\n            className={classNames('create-project-repository', {\n              disabled,\n              imported: alreadyImported,\n              selected\n            })}\n            onClick={this.handleToggle}\n            onMouseEnter={disabled ? this.handleMouseEnter : undefined}\n            onMouseLeave={disabled ? this.handleMouseLeave : undefined}\n            role=\"listitem\">\n            <div className=\"flex-1 display-flex-center\">\n              {disabled ? (\n                <LockIcon fill={colors.disableGrayText} />\n              ) : (\n                <Checkbox\n                  checked={selected || alreadyImported}\n                  disabled={disabled || alreadyImported}\n                  onCheck={identity}\n                />\n              )}\n              <img\n                alt={identityProvider.name}\n                className={classNames('spacer-left', { 'icon-half-transparent': disabled })}\n                height={14}\n                src={`${getBaseUrl()}/images/sonarcloud/${identityProvider.key}.svg`}\n                width={14}\n              />\n              <span className=\"spacer-left\">{this.props.repository.label}</span>\n              {repository.private && (\n                <div className=\"badge spacer-left\">{translate('visibility.private')}</div>\n              )}\n            </div>\n\n            {repository.linkedProjectKey && (\n              <span>\n                <CheckIcon className=\"little-spacer-right\" fill={colors.green} />\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.repository_imported')}\n                  id=\"onboarding.create_project.repository_imported\"\n                  values={{\n                    link: (\n                      <Link to={getProjectUrl(repository.linkedProjectKey)}>\n                        {translate('onboarding.create_project.see_project')}\n                      </Link>\n                    )\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        </li>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { partition } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { provisionProject } from '../../../api/alm-integration';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  onProvisionFail: () => Promise<void>;\n  organization: T.Organization;\n  selectedRepositories: T.AlmRepository[];\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SetupProjectBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit = () => {\n    return !this.state.submitting && this.props.selectedRepositories.length > 0;\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.canSubmit()) {\n      const { selectedRepositories } = this.props;\n      this.setState({ submitting: true });\n      provisionProject({\n        installationKeys: selectedRepositories.map(repo => repo.installationKey),\n        organization: this.props.organization.key\n      }).then(\n        ({ projects }) =>\n          this.props.onProjectCreate(\n            projects.map(project => project.projectKey),\n            this.props.organization.key\n          ),\n        this.handleProvisionFail\n      );\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.props.onProvisionFail().then(() => {\n      if (this.mounted) {\n        this.setState({ submitting: false });\n      }\n    });\n  };\n\n  render() {\n    const { selectedRepositories } = this.props;\n    const hasSelectedRepositories = selectedRepositories.length > 0;\n    const [privateRepos = [], publicRepos = []] = partition(\n      selectedRepositories,\n      repo => repo.private\n    );\n    return (\n      <form\n        className={classNames('create-project-setup boxed-group', {\n          open: hasSelectedRepositories\n        })}\n        onSubmit={this.handleFormSubmit}>\n        <div className=\"boxed-group-header\">\n          <h2 className=\"spacer-top\">\n            {selectedRepositories.length > 1\n              ? translateWithParameters(\n                  'onboarding.create_project.x_repositories_selected',\n                  selectedRepositories.length\n                )\n              : translate('onboarding.create_project.1_repository_selected')}\n          </h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          <div className=\"flex-1\">\n            {publicRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_public')}</p>\n            )}\n            {publicRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_public',\n                  publicRepos.length\n                )}\n              </p>\n            )}\n            {privateRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_private')}</p>\n            )}\n            {privateRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_private',\n                  privateRepos.length\n                )}\n              </p>\n            )}\n          </div>\n          <div>\n            <SubmitButton className=\"button-large\" disabled={this.state.submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={this.state.submitting} />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getRepositories } from '../../../api/alm-integration';\nimport { isPaidOrganization } from '../../../helpers/organizations';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport AlmRepositoryItem from './AlmRepositoryItem';\nimport SetupProjectBox from './SetupProjectBox';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization: T.Organization;\n}\n\ntype SelectedRepositories = T.Dict<T.AlmRepository | undefined>;\n\ninterface State {\n  checkAllRepositories: boolean;\n  highlight: boolean;\n  loading: boolean;\n  repositories: T.AlmRepository[];\n  search: string;\n  selectedRepositories: SelectedRepositories;\n  successfullyUpgraded: boolean;\n}\n\nexport default class RemoteRepositories extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    checkAllRepositories: false,\n    highlight: false,\n    loading: true,\n    repositories: [],\n    search: '',\n    selectedRepositories: {},\n    successfullyUpgraded: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRepositories();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.organization.key !== this.props.organization.key) {\n      this.setState({ loading: true, selectedRepositories: {} });\n      this.fetchRepositories();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRepositories = () => {\n    const { organization } = this.props;\n    return getRepositories({ organization: organization.key }).then(\n      ({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, repositories });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  filterBySearch = (search: String) => (repo: T.AlmRepository) => {\n    return repo.label.toLowerCase().includes(search.toLowerCase());\n  };\n\n  handleHighlightUpgradeBox = (highlight: boolean) => {\n    this.setState({ highlight });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    if (this.mounted) {\n      this.setState({ successfullyUpgraded: true });\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.fetchRepositories().then(() => {\n      if (this.mounted) {\n        this.setState(({ repositories, selectedRepositories }) => {\n          const updateSelectedRepositories: SelectedRepositories = {};\n          Object.keys(selectedRepositories).forEach(installationKey => {\n            const newRepository = repositories.find(r => r.installationKey === installationKey);\n            if (newRepository && !newRepository.linkedProjectKey) {\n              updateSelectedRepositories[newRepository.installationKey] = newRepository;\n            }\n          });\n          return { selectedRepositories: updateSelectedRepositories };\n        });\n      }\n    });\n  };\n\n  handleSearch = (search: string) => {\n    this.setState({ search, checkAllRepositories: false, selectedRepositories: {} });\n  };\n\n  onCheckAllRepositories = () => {\n    this.setState(({ checkAllRepositories, repositories, search }) => {\n      const { organization } = this.props;\n\n      const isPaidOrg = isPaidOrganization(organization);\n      const filterByPlan = (repo: T.AlmRepository) => (isPaidOrg ? true : !repo.private);\n      const filterByImportable = (repo: T.AlmRepository) => !repo.linkedProjectKey;\n\n      const nextState = {\n        selectedRepositories: {},\n        checkAllRepositories: !checkAllRepositories\n      };\n\n      if (nextState.checkAllRepositories) {\n        const validRepositories = repositories.filter(\n          repo =>\n            this.filterBySearch(search)(repo) && filterByPlan(repo) && filterByImportable(repo)\n        );\n        nextState.selectedRepositories = keyBy(validRepositories, 'installationKey');\n      }\n\n      return nextState;\n    });\n  };\n\n  toggleRepository = (repository: T.AlmRepository) => {\n    this.setState(({ selectedRepositories }) => ({\n      selectedRepositories: {\n        ...selectedRepositories,\n        [repository.installationKey]: selectedRepositories[repository.installationKey]\n          ? undefined\n          : repository\n      }\n    }));\n  };\n\n  render() {\n    const { highlight, loading, repositories, search, selectedRepositories } = this.state;\n    const { almApplication, organization } = this.props;\n    const isPaidOrg = isPaidOrganization(organization);\n    const hasPrivateRepositories = repositories.some(repository => Boolean(repository.private));\n    const showSearchBox = repositories.length > 5;\n    const showCheckAll = repositories.length > 1;\n    const showUpgradebox =\n      !isPaidOrg && hasPrivateRepositories && organization.actions && organization.actions.admin;\n    const filteredRepositories = repositories.filter(this.filterBySearch(search));\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <div className=\"spacer-bottom create-project-actions\">\n            <div>\n              {showCheckAll && (\n                <Checkbox\n                  checked={this.state.checkAllRepositories}\n                  disabled={filteredRepositories.length === 0}\n                  onCheck={this.onCheckAllRepositories}>\n                  {translate('onboarding.create_project.select_all_repositories')}\n                </Checkbox>\n              )}\n            </div>\n            {showSearchBox && (\n              <SearchBox\n                minLength={1}\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_repositories')}\n                value={this.state.search}\n              />\n            )}\n          </div>\n\n          {this.state.successfullyUpgraded && (\n            <Alert variant=\"success\">\n              {translateWithParameters(\n                'onboarding.create_project.subscribtion_success_x',\n                organization.name\n              )}\n            </Alert>\n          )}\n          <DeferredSpinner loading={loading}>\n            <ul>\n              {filteredRepositories.length === 0 && (\n                <li className=\"big-spacer-top note\">\n                  {showUpgradebox\n                    ? translateWithParameters('no_results_for_x', search)\n                    : translate('onboarding.create_project.no_repositories')}\n                </li>\n              )}\n              {filteredRepositories.map(repo => (\n                <AlmRepositoryItem\n                  disabled={Boolean(repo.private && !isPaidOrg)}\n                  highlightUpgradeBox={this.handleHighlightUpgradeBox}\n                  identityProvider={almApplication}\n                  key={repo.installationKey}\n                  repository={repo}\n                  selected={Boolean(selectedRepositories[repo.installationKey])}\n                  toggleRepository={this.toggleRepository}\n                />\n              ))}\n            </ul>\n          </DeferredSpinner>\n        </div>\n        {organization && (\n          <div className={classNames({ 'create-project-side-with-search': showSearchBox })}>\n            <div className=\"create-project-side-sticky\">\n              <SetupProjectBox\n                onProjectCreate={this.props.onProjectCreate}\n                onProvisionFail={this.handleProvisionFail}\n                organization={organization}\n                selectedRepositories={Object.keys(selectedRepositories)\n                  .map(r => selectedRepositories[r])\n                  .filter(isDefined)}\n              />\n              {showUpgradebox && (\n                <UpgradeOrganizationBox\n                  className={classNames({ highlight })}\n                  onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                  organization={organization}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport IdentityProviderLink from 'sonar-ui-common/components/controls/IdentityProviderLink';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { save } from 'sonar-ui-common/helpers/storage';\nimport {\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP\n} from '../organization/utils';\nimport OrganizationInput from './OrganizationInput';\nimport RemoteRepositories from './RemoteRepositories';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  boundOrganizations: T.Organization[];\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization?: string;\n}\n\ninterface State {\n  selectedOrganization: string;\n}\n\nexport default class AutoProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { selectedOrganization: this.getInitialSelectedOrganization(props) };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.organization) {\n      return props.organization;\n    } else if (props.boundOrganizations.length === 1) {\n      return props.boundOrganizations[0].key;\n    } else {\n      return '';\n    }\n  }\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    this.setState({ selectedOrganization: key });\n  };\n\n  render() {\n    const { almApplication, boundOrganizations, onProjectCreate } = this.props;\n\n    if (boundOrganizations.length === 0) {\n      return (\n        <>\n          <p className=\"spacer-bottom\">\n            {translate('onboarding.create_project.install_app_description', almApplication.key)}\n          </p>\n          <IdentityProviderLink\n            backgroundColor={almApplication.backgroundColor}\n            className=\"display-inline-block\"\n            iconPath={almApplication.iconPath}\n            name={almApplication.name}\n            onClick={this.handleInstallAppClick}\n            small={true}\n            url={almApplication.installationUrl}>\n            {translate(\n              'onboarding.import_organization.choose_organization_button',\n              almApplication.key\n            )}\n          </IdentityProviderLink>\n        </>\n      );\n    }\n\n    const { selectedOrganization } = this.state;\n    const organization = boundOrganizations.find(o => o.key === selectedOrganization);\n\n    return (\n      <>\n        <OrganizationInput\n          autoImport={true}\n          onChange={this.handleOrganizationSelect}\n          organization={selectedOrganization}\n          organizations={this.props.boundOrganizations}\n        />\n        {organization && (\n          <RemoteRepositories\n            almApplication={almApplication}\n            onOrganizationUpgrade={this.props.onOrganizationUpgrade}\n            onProjectCreate={onProjectCreate}\n            organization={organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface CreateProjectPageHeaderProps {\n  additionalActions?: React.ReactNode;\n  showBreadcrumb?: boolean;\n  title: React.ReactNode;\n}\n\nexport default function CreateProjectPageHeader(props: CreateProjectPageHeaderProps) {\n  const { additionalActions, showBreadcrumb, title } = props;\n\n  return (\n    <header className=\"huge-spacer-bottom bordered-bottom overflow-hidden\">\n      <h1 className=\"pull-left huge big-spacer-bottom\">\n        {showBreadcrumb && (\n          <>\n            <Link to=\"/projects/create\">{translate('my_account.create_new.TRK')}</Link>\n            <span className=\"big-spacer-left big-spacer-right slash-separator\" />\n          </>\n        )}\n        {title}\n      </h1>\n\n      {additionalActions}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport VisibilitySelector from '../../../components/common/VisibilitySelector';\nimport { isSonarCloud } from '../../../helpers/system';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport './ManualProjectCreate.css';\nimport OrganizationInput from './OrganizationInput';\n\ninterface Props {\n  branchesEnabled?: boolean;\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations?: () => Promise<void>;\n  onProjectCreate: (projectKeys: string[]) => void;\n  organization?: string;\n  userOrganizations?: T.Organization[];\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  selectedOrganization?: T.Organization;\n  selectedVisibility?: T.Visibility;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      selectedOrganization: this.getInitialSelectedOrganization(props),\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canChoosePrivate = (selectedOrganization: T.Organization | undefined) => {\n    return Boolean(selectedOrganization && selectedOrganization.subscription === 'PAID');\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization\n    } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0 &&\n        (!isSonarCloud() || selectedOrganization)\n    );\n  }\n\n  getInitialSelectedOrganization = (props: Props) => {\n    if (props.organization) {\n      return this.getOrganization(props.organization);\n    } else if (props.userOrganizations && props.userOrganizations.length === 1) {\n      return props.userOrganizations[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  getOrganization = (organizationKey: string) => {\n    return (\n      this.props.userOrganizations &&\n      this.props.userOrganizations.find(({ key }: T.Organization) => key === organizationKey)\n    );\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim(),\n        organization: state.selectedOrganization && state.selectedOrganization.key,\n        visibility: this.state.selectedVisibility\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    const selectedOrganization = this.getOrganization(key);\n    let { selectedVisibility } = this.state;\n\n    if (selectedVisibility === undefined) {\n      selectedVisibility = this.canChoosePrivate(selectedOrganization) ? 'private' : 'public';\n    }\n\n    this.setState({\n      selectedOrganization,\n      selectedVisibility\n    });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.fetchMyOrganizations!().then(\n      () => {\n        this.setState(prevState => {\n          if (prevState.selectedOrganization) {\n            const selectedOrganization = this.getOrganization(prevState.selectedOrganization.key);\n            return {\n              selectedOrganization\n            };\n          }\n          return null;\n        });\n      },\n      () => {}\n    );\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  handleVisibilityChange = (selectedVisibility: T.Visibility) => {\n    this.setState({ selectedVisibility });\n  };\n\n  validateKey = (projectKey: string) => {\n    return projectKey.length > 400 || !/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$/.test(projectKey)\n      ? translate('onboarding.create_project.project_key.error')\n      : undefined;\n  };\n\n  validateName = (projectName: string) => {\n    return projectName.length === 0 || projectName.length > 255\n      ? translate('onboarding.create_project.display_name.error')\n      : undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      selectedOrganization,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const { branchesEnabled } = this.props;\n    const projectKeyIsInvalid = touched && projectKeyError !== undefined;\n    const projectKeyIsValid = touched && !validating && projectKeyError === undefined;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n    const canChoosePrivate = this.canChoosePrivate(selectedOrganization);\n\n    return (\n      <>\n        <CreateProjectPageHeader\n          showBreadcrumb={branchesEnabled}\n          title={translate('onboarding.create_project.setup_manually')}\n        />\n\n        <div className=\"create-project\">\n          <div className=\"flex-1 huge-spacer-right\">\n            <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n              {isSonarCloud() && this.props.userOrganizations && (\n                <OrganizationInput\n                  onChange={this.handleOrganizationSelect}\n                  organization={selectedOrganization ? selectedOrganization.key : ''}\n                  organizations={this.props.userOrganizations}\n                />\n              )}\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.project_key.description')}\n                error={projectKeyError}\n                help={translate('onboarding.create_project.project_key.help')}\n                id=\"project-key\"\n                isInvalid={projectKeyIsInvalid}\n                isValid={projectKeyIsValid}\n                label={translate('onboarding.create_project.project_key')}\n                required={true}>\n                <input\n                  autoFocus={true}\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectKeyIsInvalid,\n                    'is-valid': projectKeyIsValid\n                  })}\n                  id=\"project-key\"\n                  maxLength={400}\n                  minLength={1}\n                  onChange={this.handleProjectKeyChange}\n                  type=\"text\"\n                  value={projectKey}\n                />\n              </ValidationInput>\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.display_name.description')}\n                error={projectNameError}\n                help={translate('onboarding.create_project.display_name.help')}\n                id=\"project-name\"\n                isInvalid={projectNameIsInvalid}\n                isValid={projectNameIsValid}\n                label={translate('onboarding.create_project.display_name')}\n                required={true}>\n                <input\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectNameIsInvalid,\n                    'is-valid': projectNameIsValid\n                  })}\n                  id=\"project-name\"\n                  maxLength={255}\n                  minLength={1}\n                  onChange={this.handleProjectNameChange}\n                  type=\"text\"\n                  value={projectName}\n                />\n              </ValidationInput>\n\n              {isSonarCloud() && selectedOrganization && (\n                <div\n                  className={classNames('visibility-select-wrapper', {\n                    open: Boolean(this.state.selectedOrganization)\n                  })}>\n                  <VisibilitySelector\n                    canTurnToPrivate={canChoosePrivate}\n                    onChange={this.handleVisibilityChange}\n                    showDetails={true}\n                    visibility={canChoosePrivate ? this.state.selectedVisibility : 'public'}\n                  />\n                </div>\n              )}\n\n              <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n                {translate('set_up')}\n              </SubmitButton>\n              <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n            </form>\n          </div>\n\n          {isSonarCloud() && selectedOrganization && (\n            <div className=\"create-project-side-sticky\">\n              <UpgradeOrganizationBox\n                className={classNames('animated', { open: !canChoosePrivate })}\n                onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                organization={selectedOrganization}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport Tabs from 'sonar-ui-common/components/controls/Tabs';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmAppInfo } from '../../../api/alm-integration';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { hasAdvancedALMIntegration } from '../../../helpers/almIntegrations';\nimport { getOrganizationUrl, getProjectUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport AutoProjectCreate from './AutoProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations: () => Promise<void>;\n  skipOnboarding: () => void;\n  userOrganizations: T.Organization[];\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  loading: boolean;\n}\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  organization?: string;\n  tab?: TabKeys;\n}\n\nexport class CreateProjectPageSonarCloud extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (hasAdvancedALMIntegration(this.props.currentUser)) {\n      this.fetchAlmApplication();\n    } else {\n      this.setState({ loading: false });\n    }\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[], organization?: string) => {\n    this.props.skipOnboarding();\n    if (projectKeys.length > 1) {\n      this.props.router.push({\n        pathname: (organization ? getOrganizationUrl(organization) : '') + '/projects'\n      });\n    } else if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(\n      ({ application }) => {\n        if (this.mounted) {\n          this.setState({ almApplication: application, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrl({ tab });\n  };\n\n  updateUrl = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  render() {\n    const { currentUser, location, userOrganizations } = this.props;\n    const { almApplication, loading } = this.state;\n    const state: LocationState = location.state || {};\n    const header = translate('onboarding.create_project.header');\n    const showManualTab = state.tab === 'manual';\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <>\n              {almApplication && (\n                <Tabs<TabKeys>\n                  onChange={this.onTabChange}\n                  selected={state.tab || 'auto'}\n                  tabs={[\n                    {\n                      key: 'auto',\n                      node: translate('onboarding.create_project.select_repositories')\n                    },\n                    { key: 'manual', node: translate('onboarding.create_project.setup_manually') }\n                  ]}\n                />\n              )}\n\n              {showManualTab || !almApplication ? (\n                <ManualProjectCreate\n                  currentUser={currentUser}\n                  fetchMyOrganizations={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                  userOrganizations={userOrganizations.filter(\n                    ({ actions = {} }) => actions.provision\n                  )}\n                />\n              ) : (\n                <AutoProjectCreate\n                  almApplication={almApplication}\n                  boundOrganizations={userOrganizations.filter(\n                    ({ alm, actions = {} }) => alm && actions.provision\n                  )}\n                  onOrganizationUpgrade={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { skipOnboarding };\n\nexport default whenLoggedIn(\n  withUserOrganizations(connect(null, mapDispatchToProps)(CreateProjectPageSonarCloud))\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum CreateProjectModes {\n  Manual = 'manual',\n  BitbucketServer = 'bbs'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketProjectAccordionProps {\n  disableRepositories: boolean;\n  onClick?: () => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  open: boolean;\n  project: BitbucketProject;\n  repositories: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showingAllRepositories: boolean;\n}\n\nexport default function BitbucketProjectAccordion(props: BitbucketProjectAccordionProps) {\n  const {\n    disableRepositories,\n    open,\n    project,\n    repositories,\n    selectedRepository,\n    showingAllRepositories\n  } = props;\n\n  const repositoryCount = repositories.length;\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open,\n        'not-clickable': !props.onClick,\n        'no-hover': !props.onClick\n      })}\n      key={project.key}\n      onClick={\n        props.onClick\n          ? props.onClick\n          : () => {\n              /* noop */\n            }\n      }\n      open={open}\n      title={<h3>{project.name}</h3>}>\n      {open && (\n        <div className=\"display-flex-wrap\">\n          {repositoryCount === 0 && (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.create_project.no_bbs_repos')}\n                id=\"onboarding.create_project.no_bbs_repos\"\n                values={{\n                  link: (\n                    <Link\n                      to={{\n                        pathname: '/projects/create',\n                        query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                      }}>\n                      {translate('onboarding.create_project.update_your_token')}\n                    </Link>\n                  )\n                }}\n              />\n            </Alert>\n          )}\n\n          {repositories.map(repo =>\n            repo.sqProjectKey ? (\n              <div\n                className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"\n                key={repo.id}>\n                <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                <div className=\"overflow-hidden\">\n                  <div className=\"little-spacer-bottom text-ellipsis\">\n                    <strong title={repo.name}>\n                      <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}</Link>\n                    </strong>\n                  </div>\n                  <em>{translate('onboarding.create_project.repository_imported')}</em>\n                </div>\n              </div>\n            ) : (\n              <Radio\n                checked={selectedRepository?.id === repo.id}\n                className={classNames(\n                  'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',\n                  {\n                    disabled: disableRepositories,\n                    'text-muted': disableRepositories,\n                    'link-no-underline': disableRepositories\n                  }\n                )}\n                key={repo.id}\n                onCheck={() => props.onSelectRepository(repo)}\n                value={String(repo.id)}>\n                <strong className=\"text-ellipsis\" title={repo.name}>\n                  {repo.name}\n                </strong>\n              </Radio>\n            )\n          )}\n\n          {!showingAllRepositories && repositoryCount > 0 && (\n            <Alert variant=\"warning\">\n              {translateWithParameters(\n                'onboarding.create_project.only_showing_X_first_repos',\n                repositoryCount\n              )}\n            </Alert>\n          )}\n        </div>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq, without } from 'lodash';\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketRepositoriesProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  projectRepositories: BitbucketProjectRepositories;\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketRepositories(props: BitbucketRepositoriesProps) {\n  const { disableRepositories, projects, projectRepositories, selectedRepository } = props;\n\n  const [openProjectKeys, setOpenProjectKeys] = React.useState(\n    projects.length > 0 ? [projects[0].key] : []\n  );\n\n  const allAreExpanded = projects.length <= openProjectKeys.length;\n\n  const handleClick = (isOpen: boolean, projectKey: string) => {\n    setOpenProjectKeys(\n      isOpen ? without(openProjectKeys, projectKey) : uniq([...openProjectKeys, projectKey])\n    );\n  };\n\n  return (\n    <>\n      <div className=\"overflow-hidden spacer-bottom\">\n        <ButtonLink\n          className=\"pull-right\"\n          onClick={() => setOpenProjectKeys(allAreExpanded ? [] : projects.map(p => p.key))}>\n          {allAreExpanded ? translate('collapse_all') : translate('expand_all')}\n        </ButtonLink>\n      </div>\n\n      {projects.map(project => {\n        const isOpen = openProjectKeys.includes(project.key);\n        const { allShown, repositories = [] } = projectRepositories[project.key] || {};\n\n        return (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            key={project.key}\n            onClick={() => handleClick(isOpen, project.key)}\n            onSelectRepository={props.onSelectRepository}\n            open={isOpen}\n            project={project}\n            repositories={repositories}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={allShown}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketSearchResultsProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketSearchResults(props: BitbucketSearchResultsProps) {\n  const {\n    disableRepositories,\n    projects,\n    searching,\n    searchResults = [],\n    selectedRepository\n  } = props;\n\n  const filteredProjects = uniq(\n    searchResults.map(r => projects.find(p => p.key === r.projectKey)).filter(isDefined)\n  );\n\n  return filteredProjects.length === 0 && !searching ? (\n    <Alert className=\"big-spacer-top\" variant=\"warning\">\n      {translate('onboarding.create_project.no_bbs_repos.filter')}\n    </Alert>\n  ) : (\n    <div className=\"big-spacer-top\">\n      <DeferredSpinner loading={searching}>\n        {filteredProjects.map(project => {\n          const repositories = searchResults.filter(r => r.projectKey === project.key);\n\n          return (\n            <BitbucketProjectAccordion\n              disableRepositories={disableRepositories}\n              key={project.key}\n              onSelectRepository={props.onSelectRepository}\n              open={true}\n              project={project}\n              repositories={repositories}\n              selectedRepository={selectedRepository}\n              showingAllRepositories={true}\n            />\n          );\n        })}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketRepositories from './BitbucketRepositories';\nimport BitbucketSearchResults from './BitbucketSearchResults';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketImportRepositoryFormProps {\n  disableRepositories: boolean;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketImportRepositoryForm(props: BitbucketImportRepositoryFormProps) {\n  const {\n    disableRepositories,\n    projects = [],\n    projectRepositories = {},\n    searchResults,\n    searching,\n    selectedRepository\n  } = props;\n\n  if (projects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.no_bbs_projects')}\n          id=\"onboarding.create_project.no_bbs_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"create-project-import-bbs\">\n      <SearchBox\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_repositories_by_name')}\n      />\n\n      {searching || searchResults ? (\n        <BitbucketSearchResults\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projects={projects}\n          searchResults={searchResults}\n          searching={searching}\n          selectedRepository={selectedRepository}\n        />\n      ) : (\n        <BitbucketRepositories\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projectRepositories={projectRepositories}\n          projects={projects}\n          selectedRepository={selectedRepository}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface BitbucketPersonalAccessTokenFormProps {\n  bitbucketSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nexport default function BitbucketPersonalAccessTokenForm(\n  props: BitbucketPersonalAccessTokenFormProps\n) {\n  const {\n    bitbucketSetting: { url },\n    submitting = false,\n    validationFailed\n  } = props;\n  const [touched, setTouched] = React.useState(false);\n\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const isInvalid = validationFailed && !touched;\n\n  return (\n    <div className=\"display-flex-start\">\n      <form\n        onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          const value = new FormData(e.currentTarget).get('personal_access_token') as string;\n          props.onPersonalAccessTokenCreate(value);\n        }}>\n        <h2 className=\"big\">{translate('onboarding.create_project.grant_access_to_bbs.title')}</h2>\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.grant_access_to_bbs.help')}\n        </p>\n\n        <ValidationInput\n          error={isInvalid ? translate('onboarding.create_project.pat_incorrect') : undefined}\n          id=\"personal_access_token\"\n          isInvalid={isInvalid}\n          isValid={false}\n          label={translate('onboarding.create_project.enter_pat')}\n          required={true}>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid\n            })}\n            id=\"personal_access_token\"\n            minLength={1}\n            name=\"personal_access_token\"\n            onChange={() => {\n              setTouched(true);\n            }}\n            type=\"text\"\n          />\n        </ValidationInput>\n\n        <SubmitButton disabled={isInvalid || submitting || !touched}>\n          {translate('save')}\n        </SubmitButton>\n        <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n      </form>\n\n      <Alert className=\"big-spacer-left big-spacer-top\" display=\"block\" variant=\"info\">\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_1')}\n        </p>\n\n        {url && (\n          <div className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"16\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            <a\n              href={`${url.replace(/\\/$/, '')}/plugins/servlet/access-tokens/add`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.create_project.pat_help.link')}\n            </a>\n          </div>\n        )}\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.bbs_help_2')}\n        </p>\n\n        <ul>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate(\n                'onboarding.create_project.pat_help.bbs_permission_projects'\n              )}\n              id=\"onboarding.create_project.pat_help.bbs_permission_projects\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.pat_help.bbs_permission_repos')}\n              id=\"onboarding.create_project.pat_help.bbs_permission_repos\"\n              values={{\n                perm: (\n                  <strong>{translate('onboarding.create_project.pat_help.read_permission')}</strong>\n                )\n              }}\n            />\n          </li>\n        </ul>\n      </Alert>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\nimport BitbucketImportRepositoryForm from './BitbucketImportRepositoryForm';\nimport BitbucketPersonalAccessTokenForm from './BitbucketPersonalAccessTokenForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\n\nexport interface BitbucketProjectCreateRendererProps {\n  bitbucketSetting?: AlmSettingsInstance;\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  onImportRepository: () => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onProjectCreate: (projectKeys: string[]) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function BitbucketProjectCreateRenderer(props: BitbucketProjectCreateRendererProps) {\n  const {\n    bitbucketSetting,\n    canAdmin,\n    importing,\n    loading,\n    projects,\n    projectRepositories,\n    selectedRepository,\n    searching,\n    searchResults,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        showBreadcrumb={true}\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.from_bbs')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !bitbucketSetting && (\n        <Alert variant=\"error\">\n          {canAdmin ? (\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.no_bbs_binding.admin')}\n              id=\"onboarding.create_project.no_bbs_binding.admin\"\n              values={{\n                url: (\n                  <Link\n                    to={{\n                      pathname: '/admin/settings',\n                      query: { category: ALM_INTEGRATION }\n                    }}>\n                    {translate('settings.page')}\n                  </Link>\n                )\n              }}\n            />\n          ) : (\n            translate('onboarding.create_project.no_bbs_binding')\n          )}\n        </Alert>\n      )}\n\n      {!loading &&\n        bitbucketSetting &&\n        (showPersonalAccessTokenForm ? (\n          <BitbucketPersonalAccessTokenForm\n            bitbucketSetting={bitbucketSetting}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={tokenValidationFailed}\n          />\n        ) : (\n          <BitbucketImportRepositoryForm\n            disableRepositories={importing}\n            onSearch={props.onSearch}\n            onSelectRepository={props.onSelectRepository}\n            projectRepositories={projectRepositories}\n            projects={projects}\n            searchResults={searchResults}\n            searching={searching}\n            selectedRepository={selectedRepository}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getBitbucketServerProjects,\n  getBitbucketServerRepositories,\n  importBitbucketServerProject,\n  searchForBitbucketServerRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCreateProjectRenderer from './BitbucketProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  bitbucketSettings: AlmSettingsInstance[];\n  canAdmin?: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  bitbucketSetting?: AlmSettingsInstance;\n  importing: boolean;\n  loading: boolean;\n  patIsValid?: boolean;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport class BitbucketProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      bitbucketSetting: props.bitbucketSettings[0],\n      importing: false,\n      loading: false,\n      searching: false,\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.bitbucketSettings.length === 0 && this.props.bitbucketSettings.length > 0) {\n      this.setState({ bitbucketSetting: this.props.bitbucketSettings[0] }, () =>\n        this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects;\n    if (patIsValid) {\n      projects = await this.fetchBitbucketProjects().catch(() => undefined);\n    }\n\n    let projectRepositories;\n    if (projects && projects.length > 0) {\n      projectRepositories = await this.fetchBitbucketRepositories(projects).catch(() => undefined);\n    }\n\n    if (this.mounted) {\n      this.setState({\n        patIsValid,\n        projects,\n        projectRepositories,\n        loading: false\n      });\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(bitbucketSetting.key);\n  };\n\n  fetchBitbucketProjects = (): Promise<BitbucketProject[] | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return getBitbucketServerProjects(bitbucketSetting.key).then(({ projects }) => projects);\n  };\n\n  fetchBitbucketRepositories = (\n    projects: BitbucketProject[]\n  ): Promise<BitbucketProjectRepositories | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return Promise.all(\n      projects.map(p => {\n        return getBitbucketServerRepositories(bitbucketSetting.key, p.name).then(\n          ({ isLastPage, repositories }) => ({\n            isLastPage,\n            repositories,\n            projectKey: p.key\n          })\n        );\n      })\n    ).then(results => {\n      return results.reduce(\n        (acc: BitbucketProjectRepositories, { isLastPage, projectKey, repositories }) => {\n          return { ...acc, [projectKey]: { allShown: isLastPage, repositories } };\n        },\n        {}\n      );\n    });\n  };\n\n  handlePersonalAccessTokenCreate = (token: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n    setAlmPersonalAccessToken(bitbucketSetting.key, token)\n      .then(this.checkPersonalAccessToken)\n      .then(patIsValid => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n          if (patIsValid) {\n            this.fetchInitialData();\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false });\n        }\n      });\n  };\n\n  handleImportRepository = () => {\n    const { bitbucketSetting, selectedRepository } = this.state;\n\n    if (!bitbucketSetting || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n    importBitbucketServerProject(\n      bitbucketSetting.key,\n      selectedRepository.projectKey,\n      selectedRepository.slug\n    )\n      .then(({ project: { key } }) => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n          this.props.onProjectCreate([key]);\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      });\n  };\n\n  handleSearch = (query: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return;\n    }\n\n    if (!query) {\n      this.setState({ searching: false, searchResults: undefined, selectedRepository: undefined });\n      return;\n    }\n\n    this.setState({ searching: true, selectedRepository: undefined });\n    searchForBitbucketServerRepositories(bitbucketSetting.key, query)\n      .then(({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ searching: false, searchResults: repositories });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      });\n  };\n\n  handleSelectRepository = (selectedRepository: BitbucketRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      bitbucketSetting,\n      importing,\n      loading,\n      patIsValid,\n      projectRepositories,\n      projects,\n      searching,\n      searchResults,\n      selectedRepository,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <BitbucketCreateProjectRenderer\n        bitbucketSetting={bitbucketSetting}\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        onImportRepository={this.handleImportRepository}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onProjectCreate={this.props.onProjectCreate}\n        onSearch={this.handleSearch}\n        onSelectRepository={this.handleSelectRepository}\n        projectRepositories={projectRepositories}\n        projects={projects}\n        searchResults={searchResults}\n        searching={searching}\n        selectedRepository={selectedRepository}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const { canAdmin } = getAppState(state);\n  return { canAdmin };\n};\n\nexport default connect(mapStateToProps)(BitbucketProjectCreate);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BitbucketProject, BitbucketRepository } from '../types/alm-integration';\nimport { ProjectBase } from './components';\n\nexport function setAlmPersonalAccessToken(almSetting: string, pat: string): Promise<void> {\n  return post('/api/alm_integrations/set_pat', { almSetting, pat }).catch(throwGlobalError);\n}\n\nexport function checkPersonalAccessTokenIsValid(almSetting: string): Promise<boolean> {\n  return get('/api/alm_integrations/check_pat', { almSetting })\n    .then(() => true)\n    .catch(response => {\n      if (response.status === 400) {\n        return false;\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function getBitbucketServerProjects(\n  almSetting: string\n): Promise<{ projects: BitbucketProject[] }> {\n  return getJSON('/api/alm_integrations/list_bitbucketserver_projects', { almSetting });\n}\n\nexport function getBitbucketServerRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    projectName\n  });\n}\n\nexport function importBitbucketServerProject(\n  almSetting: string,\n  projectKey: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketserver_project', {\n    almSetting,\n    projectKey,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function searchForBitbucketServerRepositories(\n  almSetting: string,\n  repositoryName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    repositoryName\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { CreateProjectModes } from './types';\n\nexport interface CreateProjectModeSelectionProps {\n  bbsBindingCount: number;\n  loadingBindings: boolean;\n  onSelectMode: (mode: CreateProjectModes) => void;\n}\n\nexport default function CreateProjectModeSelection(props: CreateProjectModeSelectionProps) {\n  const { bbsBindingCount, loadingBindings } = props;\n\n  return (\n    <>\n      <header className=\"huge-spacer-top big-spacer-bottom padded\">\n        <h1 className=\"text-center huge big-spacer-bottom\">\n          {translate('my_account.create_new.TRK')}\n        </h1>\n        <p className=\"text-center big\">{translate('onboarding.create_project.select_method')}</p>\n      </header>\n\n      <div className=\"create-project-modes huge-spacer-top display-flex-space-around\">\n        <button\n          className=\"button button-huge display-flex-column create-project-mode-type-manual\"\n          onClick={() => props.onSelectMode(CreateProjectModes.Manual)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/sonarcloud/analysis/manual.svg`}\n            width={80}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.manual')}\n          </div>\n        </button>\n\n        <button\n          className=\"button button-huge big-spacer-left display-flex-column create-project-mode-type-bbs\"\n          disabled={bbsBindingCount !== 1}\n          onClick={() => props.onSelectMode(CreateProjectModes.BitbucketServer)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            width={80}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.from_bbs')}\n          </div>\n\n          {loadingBindings && (\n            <span>\n              {translate('onboarding.create_project.check_bbs_supported')}\n              <i className=\"little-spacer-left spinner\" />\n            </span>\n          )}\n\n          {!loadingBindings && bbsBindingCount !== 1 && (\n            <div className=\"text-muted small spacer-top\" style={{ lineHeight: 1.5 }}>\n              {translate('onboarding.create_project.bbs_not_configured')}\n              <HelpTooltip\n                className=\"little-spacer-left\"\n                overlay={\n                  bbsBindingCount === 0\n                    ? translate('onboarding.create_project.zero_bbs_instances')\n                    : translateWithParameters(\n                        'onboarding.create_project.too_many_bbs_instances_X',\n                        bbsBindingCount\n                      )\n                }\n              />\n            </div>\n          )}\n        </button>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from 'sonar-ui-common/helpers/pages';\nimport { getAlmSettings } from '../../../api/alm-settings';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketProjectCreate from './BitbucketProjectCreate';\nimport CreateProjectModeSelection from './CreateProjectModeSelection';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\nimport { CreateProjectModes } from './types';\n\ninterface Props extends Pick<WithRouterProps, 'router' | 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  bitbucketSettings: AlmSettingsInstance[];\n  loading: boolean;\n}\n\nexport class CreateProjectPageSonarQube extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { bitbucketSettings: [], loading: false };\n\n  componentDidMount() {\n    const {\n      appState: { branchesEnabled },\n      location\n    } = this.props;\n    this.mounted = true;\n    if (branchesEnabled) {\n      this.fetchAlmBindings();\n    }\n\n    if (location.query?.mode || !branchesEnabled) {\n      addWhitePageClass();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.location.query?.mode && !prevProps.location.query?.mode) {\n      addWhitePageClass();\n    } else if (!this.props.location.query?.mode && prevProps.location.query?.mode) {\n      removeWhitePageClass();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  fetchAlmBindings = () => {\n    this.setState({ loading: true });\n    getAlmSettings()\n      .then(almSettings => {\n        if (this.mounted) {\n          this.setState({\n            bitbucketSettings: almSettings.filter(s => s.alm === AlmKeys.Bitbucket),\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  handleModeSelect = (mode: CreateProjectModes) => {\n    const { router, location } = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: { mode }\n    });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled },\n      currentUser,\n      location\n    } = this.props;\n    const { bitbucketSettings, loading } = this.state;\n\n    const mode: CreateProjectModes | undefined = location.query?.mode;\n    const showManualForm = !branchesEnabled || mode === CreateProjectModes.Manual;\n    const showBBSForm = branchesEnabled && mode === CreateProjectModes.BitbucketServer;\n\n    return (\n      <>\n        <Helmet title={translate('my_account.create_new.TRK')} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-bottom position-relative\" id=\"create-project\">\n          {!showBBSForm && !showManualForm && (\n            <CreateProjectModeSelection\n              bbsBindingCount={bitbucketSettings.length}\n              loadingBindings={loading}\n              onSelectMode={this.handleModeSelect}\n            />\n          )}\n\n          {showManualForm && (\n            <ManualProjectCreate\n              branchesEnabled={branchesEnabled}\n              currentUser={currentUser}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n\n          {showBBSForm && (\n            <BitbucketProjectCreate\n              bitbucketSettings={bitbucketSettings}\n              loadingBindings={loading}\n              location={location}\n              onProjectCreate={this.handleProjectCreate}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(withAppState(CreateProjectPageSonarQube));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { isSonarCloud } from '../../../helpers/system';\nimport CreateProjectPageSonarCloud from './CreateProjectPageSonarCloud';\nimport CreateProjectPageSonarQube from './CreateProjectPageSonarQube';\n\nexport default function CreateProjectPage(props: WithRouterProps) {\n  return (\n    <>\n      <A11ySkipTarget anchor=\"create_project_main\" />\n      {isSonarCloud() ? (\n        <CreateProjectPageSonarCloud {...props} />\n      ) : (\n        <CreateProjectPageSonarQube {...props} />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { cleanQuery, parseAsOptionalString, serializeString } from 'sonar-ui-common/helpers/query';\nimport { decodeJwt } from 'sonar-ui-common/helpers/strings';\nimport { isBitbucket, isGithub } from '../../../helpers/almIntegrations';\n\nexport const ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP =\n  'sonarcloud.import_org.binding_in_progress';\n\nexport const ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP =\n  'sonarcloud.import_org.redirect_to_projects';\n\nexport const BIND_ORGANIZATION_KEY = 'sonarcloud.bind_org.key';\n\nexport const BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP = 'sonarcloud.bind_org.redirect_to_org';\n\nexport enum Step {\n  OrganizationDetails,\n  Plan\n}\n\nexport function formatPrice(price?: number, noSign?: boolean) {\n  const priceFormatted = formatMeasure(price, 'FLOAT')\n    .replace(/[.|,]0$/, '')\n    .replace(/([.|,]\\d)$/, '$10');\n  return noSign ? priceFormatted : translateWithParameters('billing.price_format', priceFormatted);\n}\n\nexport interface Query {\n  almInstallId?: string;\n  almKey?: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery = {}): Query => {\n    let almInstallId = undefined;\n    let almKey = undefined;\n\n    if (urlQuery['installation_id']) {\n      almKey = 'github';\n      almInstallId = parseAsOptionalString(urlQuery['installation_id']);\n    } else if (urlQuery['clientKey']) {\n      almKey = 'bitbucket';\n      almInstallId = parseAsOptionalString(urlQuery['clientKey']);\n    } else if (urlQuery['jwt']) {\n      const jwt = decodeJwt(urlQuery['jwt']);\n      if (jwt && jwt.iss) {\n        almKey = 'bitbucket';\n        almInstallId = jwt.iss;\n      }\n    }\n    return { almInstallId, almKey };\n  }\n);\n\nexport const serializeQuery = (query: Query): T.RawQuery =>\n  cleanQuery({\n    installation_id: isGithub(query.almKey) ? serializeString(query.almInstallId) : undefined,\n    clientKey: isBitbucket(query.almKey) ? serializeString(query.almInstallId) : undefined\n  });\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\n\nconst TRIAL_DURATION_DAYS = 14;\n\nexport default function UpgradeOrganizationAdvantages() {\n  return (\n    <ul className=\"note\">\n      <Advantage>{translate('billing.upgrade_box.unlimited_private_projects')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.strict_control_private_data')}</Advantage>\n      <Advantage>{translate('billing.upgrade_box.cancel_anytime')}</Advantage>\n      <Advantage>\n        <strong>\n          {translateWithParameters('billing.upgrade_box.free_trial_x', TRIAL_DURATION_DAYS)}\n        </strong>\n      </Advantage>\n    </ul>\n  );\n}\n\nexport function Advantage({ children }: { children: React.ReactNode }) {\n  return (\n    <li className=\"display-flex-center little-spacer-bottom\">\n      <CheckIcon className=\"spacer-right\" fill={colors.lightGreen} />\n      {children}\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport BillingFormShim from './BillingFormShim';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  insideModal?: boolean;\n  onUpgradeDone: () => void;\n  onClose: () => void;\n  organization: T.Organization;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  ready: boolean;\n}\n\nexport default class UpgradeOrganizationModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { ready: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const header = translate('billing.upgrade_box.upgrade_to_paid_plan');\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Modal\n        contentLabel={header}\n        noBackdrop={this.props.insideModal}\n        onRequestClose={this.props.onClose}\n        shouldCloseOnOverlayClick={false}\n        size=\"medium\">\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <BillingForm\n          onCommit={this.props.onUpgradeDone}\n          organizationKey={this.props.organization.key}\n          subscriptionPlans={this.props.subscriptionPlans}>\n          {({\n            onSubmit,\n            processingUpgrade,\n            renderFormFields,\n            renderNextCharge,\n            renderRecap,\n            renderSubmitButton\n          }) => (\n            <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n              <div className=\"modal-body modal-container\">\n                <div className=\"huge-spacer-bottom\">\n                  <p className=\"spacer-bottom\">\n                    <FormattedMessage\n                      defaultMessage={translate('billing.upgrade.org_x_advantages')}\n                      id=\"billing.coupon.description\"\n                      values={{\n                        org: <strong>{this.props.organization.name}</strong>\n                      }}\n                    />\n                  </p>\n                  <UpgradeOrganizationAdvantages />\n                </div>\n                {renderFormFields()}\n                <div className=\"big-spacer-top\">{renderRecap()}</div>\n              </div>\n              <footer className=\"modal-foot display-flex-center display-flex-space-between\">\n                {renderNextCharge() || <span />}\n                <div>\n                  <DeferredSpinner loading={processingUpgrade} />\n                  {renderSubmitButton()}\n                  <ResetButtonLink onClick={this.props.onClose}>\n                    {translate('cancel')}\n                  </ResetButtonLink>\n                </div>\n              </footer>\n            </form>\n          )}\n        </BillingForm>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ChildrenProps {\n  onSubmit: React.FormEventHandler;\n  processingUpgrade: boolean;\n  renderFormFields: () => React.ReactNode;\n  renderNextCharge: (className?: string) => React.ReactNode;\n  renderRecap: () => React.ReactNode;\n  renderSubmitButton: (submitText?: string) => React.ReactNode;\n  renderSubmitGroup: (submitText?: string) => React.ReactNode;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  initialCountry?: string;\n  currentUser: T.CurrentUser;\n  onCommit: () => void | Promise<void>;\n  onFailToUpgrade?: () => void;\n  organizationKey: string | (() => Promise<string>);\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\nexport default class BillingFormShim extends React.Component<Props> {\n  render() {\n    const { BillingForm } = (window as any).SonarBilling;\n    return <BillingForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport { formatPrice } from '../organization/utils';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport UpgradeOrganizationModal from './UpgradeOrganizationModal';\n\ninterface Props {\n  className?: string;\n  insideModal?: boolean;\n  onOrganizationUpgrade: () => void;\n  organization: T.Organization;\n}\n\ninterface State {\n  subscriptionPlans: T.SubscriptionPlan[];\n  upgradeOrganizationModal: boolean;\n}\n\nexport default class UpgradeOrganizationBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { subscriptionPlans: [], upgradeOrganizationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSubscriptionPlans();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleUpgradeClick = () => {\n    this.setState({ upgradeOrganizationModal: true });\n  };\n\n  handleUpgradeOrganizationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ upgradeOrganizationModal: false });\n    }\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    this.handleUpgradeOrganizationModalClose();\n  };\n\n  render() {\n    if (!hasMessage('billing.upgrade_box.header')) {\n      return null;\n    }\n\n    const { subscriptionPlans, upgradeOrganizationModal } = this.state;\n    const startingPrice = subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <RadioCard\n          className={this.props.className}\n          title={translate('billing.upgrade_box.header')}\n          titleInfo={\n            startingPrice !== undefined && (\n              <FormattedMessage\n                defaultMessage={translate('billing.price_from_x')}\n                id=\"billing.price_from_x\"\n                values={{\n                  price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n                }}\n              />\n            )\n          }>\n          <>\n            <UpgradeOrganizationAdvantages />\n            <div className=\"big-spacer-left\">\n              <Button className=\"js-upgrade-organization\" onClick={this.handleUpgradeClick}>\n                {translate('billing.paid_plan.upgrade')}\n              </Button>\n              <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n                {translate('billing.pricing.learn_more')}\n              </Link>\n            </div>\n          </>\n        </RadioCard>\n        {upgradeOrganizationModal && (\n          <UpgradeOrganizationModal\n            insideModal={this.props.insideModal}\n            onClose={this.handleUpgradeOrganizationModalClose}\n            onUpgradeDone={this.handleOrganizationUpgrade}\n            organization={this.props.organization}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getSubscriptionPlans(): Promise<T.SubscriptionPlan[]> {\n  return getJSON('/api/billing/show_subscription_plans').then(\n    ({ subscriptionPlans }) => subscriptionPlans,\n    throwGlobalError\n  );\n}\n\nexport function giveDowngradeFeedback(data: {\n  organization: string;\n  feedback: string;\n  additionalFeedback?: string;\n}): Promise<void> {\n  return post('/api/billing/send_feedback', data);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport {\n  getCorsJSON,\n  getJSON,\n  post,\n  postJSON,\n  requestTryAndRepeatUntil\n} from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  canTurnToPrivate?: boolean;\n  className?: string;\n  onChange: (visibility: T.Visibility) => void;\n  showDetails?: boolean;\n  visibility?: T.Visibility;\n}\n\nexport default class VisibilitySelector extends React.PureComponent<Props> {\n  handlePublicClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('public');\n  };\n\n  handlePrivateClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('private');\n  };\n\n  render() {\n    return (\n      <div className={classNames('visibility-select', this.props.className)}>\n        <a\n          className=\"link-base-color link-no-underline visibility-select-option\"\n          href=\"#\"\n          id=\"visibility-public\"\n          onClick={this.handlePublicClick}>\n          <i\n            className={classNames('icon-radio', {\n              'is-checked': this.props.visibility === 'public'\n            })}\n          />\n          <span className=\"spacer-left\">{translate('visibility.public')}</span>\n        </a>\n        {this.props.showDetails && (\n          <span className=\"visibility-details note\">\n            {translate('visibility.public.description.long')}\n          </span>\n        )}\n\n        {this.props.canTurnToPrivate ? (\n          <>\n            <a\n              className=\"link-base-color link-no-underline huge-spacer-left visibility-select-option\"\n              href=\"#\"\n              id=\"visibility-private\"\n              onClick={this.handlePrivateClick}>\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </a>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        ) : (\n          <>\n            <span\n              className=\"huge-spacer-left text-muted cursor-not-allowed visibility-select-option\"\n              id=\"visibility-private\">\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </span>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMyOrganizations } from '../../apps/account/organizations/actions';\nimport { getMyOrganizations, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\ninterface OwnProps {\n  fetchMyOrganizations: () => Promise<void>;\n  userOrganizations: T.Organization[];\n}\n\nexport function withUserOrganizations<P>(\n  WrappedComponent: React.ComponentType<P & Partial<OwnProps>>\n) {\n  class Wrapper extends React.Component<P & OwnProps> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withUserOrganizations');\n\n    componentDidMount() {\n      this.props.fetchMyOrganizations();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = { fetchMyOrganizations: fetchMyOrganizations as any };\n\n  function mapStateToProps(state: Store) {\n    return { userOrganizations: getMyOrganizations(state) };\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n}\n"],"sourceRoot":""}