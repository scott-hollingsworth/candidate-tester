{"version":3,"sources":["webpack:///../sonar-docs/src/tooltips/quality-profiles/quality-profile-projects.md","webpack:///../sonar-docs/src/tooltips/quality-profiles/default-quality-profile.md","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionDeprecated.tsx","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionRules.tsx","webpack:///./src/main/js/apps/quality-profiles/home/EvolutionStagnant.tsx","webpack:///./src/main/js/apps/quality-profiles/home/Evolution.tsx","webpack:///./src/main/js/apps/quality-profiles/home/CreateProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/home/RestoreProfileForm.tsx","webpack:///./src/main/js/apps/quality-profiles/home/PageHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesListHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesListRow.tsx","webpack:///./src/main/js/apps/quality-profiles/home/ProfilesList.tsx","webpack:///./src/main/js/apps/quality-profiles/home/HomeContainer.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./node_modules/lodash/groupBy.js","webpack:///./src/main/js/api/rules.ts"],"names":["__webpack_require__","r","__webpack_exports__","_super","EvolutionDeprecated","_this","apply","this","arguments","getDeprecatedRulesInheritanceChain","profile","profilesWithDeprecations","rules","count","activeDeprecatedRuleCount","parentKey","parentProfile","find","p","key","parentRules","length","reduce","n","rule","concat","push","from","renderInheritedInfo","index_js_exposed","map","className","Object","l10n","name","__extends","prototype","render","props","profiles","filter","sortedProfiles","sortBy_default","ProfileLink","language","organization","languageName","es","to","urls","qprofile","parseRules","actives","activations","__assign","EvolutionRules","call","mounted","state","startDate","Date","setFullYear","getFullYear","periodStartDate","dates","EvolutionRules_extends","componentDidMount","loadLatestRules","componentWillUnmount","data","asc","available_since","f","undefined","ps","s","api_rules","then","_a","total","setState","latestRules","latestRulesTotal","newRulesUrl","rule_key","langName","measures","EvolutionStagnant","outdated","isBuiltIn","utils","rulesUpdatedAt","DateFormatter","date","long","formattedDate","Evolution","home_EvolutionDeprecated","home_EvolutionRules","CreateProfileForm","importers","loading","preloading","handleNameChange","event","currentTarget","value","handleLanguageChange","option","handleParentChange","parent","handleFormSubmit","__awaiter","preventDefault","FormData","append","quality_profiles","sent","onCreate","CreateProfileForm_extends","fetchImporters","header","languages","selectedLanguage","importer","includes","languageProfiles","__spreadArrays","label","Modal_default","a","contentLabel","onRequestClose","onClose","size","id","onSubmit","htmlFor","autoFocus","maxLength","onChange","required","type","Select_default","clearable","options","data-key","buttons","disabled","onClick","RestoreProfileForm","response","ruleFailures","ruleSuccesses","onRestore","RestoreProfileForm_extends","renderAlert","Alert","variant","PageHeader_PageHeader","PageHeader","createFormOpen","restoreFormOpen","handleCreateClick","handleCreate","updateProfiles","router","closeCreateForm","handleRestoreClick","closeRestoreForm","PageHeader_extends","actions","create","target","pathname","home_RestoreProfileForm","home_CreateProfileForm","home_PageHeader","withRouter","ProfilesListHeader_ProfilesListHeader","ProfilesListHeader","handleChange","replace","ProfilesListHeader_extends","currentFilter","currentLanguage","l","home_ProfilesListHeader","home_ProfilesListRow","offset","depth","activeRulesUrl","activation","deprecatedRulesUrl","statuses","data-name","style","paddingLeft","BuiltInQualityProfileBadge","isDefault","DocTooltip","doc","Promise","resolve","bind","projectCount","Tooltip_default","overlay","activeRuleCount","ProfileDate","lastUsed","ProfileActions","fromList","ProfilesList","renderLanguage","languageKey","data-language","renderHeader","renderProfiles","ProfilesList_extends","profilesCount","location","query","profilesIndex","groupBy_default","profilesToShow","pick_default","languagesToShow","keys","HomeContainer","HomeContainer_assign","home_ProfilesList","formatterOption","year","month","day","longFormatterOption","children","react__WEBPACK_IMPORTED_MODULE_0__","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","baseAssignValue","createAggregator","hasOwnProperty","groupBy","result","module","exports","d","getRulesApp","searchRules","takeFacet","getRuleDetails","getRuleTags","createRule","deleteRule","updateRule","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","property","facet","facets","values","parameters","tags","status","reject"],"mappings":"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","file":"js/333.1582644816097.chunk.js","sourcesContent":["export default \"Projects assigned to a profile will always be analyzed with it for that language, regardless of which profile is the default. Quality Profile administrators may assign projects to a profile. Project administrators may also choose a non-default profile for each language.\\n\"","export default \"For each language there is a default profile. All projects not explicitly assigned to some other profile will be analyzed with the default.\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getDeprecatedActiveRulesUrl } from '../../../helpers/urls';\nimport ProfileLink from '../components/ProfileLink';\nimport { Profile } from '../types';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\ninterface InheritedRulesInfo {\n  count: number;\n  from: Profile;\n}\n\nexport default class EvolutionDeprecated extends React.PureComponent<Props> {\n  getDeprecatedRulesInheritanceChain = (profile: Profile, profilesWithDeprecations: Profile[]) => {\n    let rules: InheritedRulesInfo[] = [];\n    let count = profile.activeDeprecatedRuleCount;\n\n    if (count === 0) {\n      return rules;\n    }\n\n    if (profile.parentKey) {\n      const parentProfile = profilesWithDeprecations.find(p => p.key === profile.parentKey);\n      if (parentProfile) {\n        const parentRules = this.getDeprecatedRulesInheritanceChain(\n          parentProfile,\n          profilesWithDeprecations\n        );\n        if (parentRules.length) {\n          count -= parentRules.reduce((n, rule) => n + rule.count, 0);\n          rules = rules.concat(parentRules);\n        }\n      }\n    }\n\n    if (count > 0) {\n      rules.push({\n        count,\n        from: profile\n      });\n    }\n\n    return rules;\n  };\n\n  renderInheritedInfo = (profile: Profile, profilesWithDeprecations: Profile[]) => {\n    const rules = this.getDeprecatedRulesInheritanceChain(profile, profilesWithDeprecations);\n    if (rules.length) {\n      return (\n        <>\n          {rules.map(rule => {\n            if (rule.from.key === profile.key) {\n              return null;\n            }\n\n            return (\n              <div className=\"muted\" key={rule.from.key}>\n                {' '}\n                {translateWithParameters(\n                  'coding_rules.filters.inheritance.x_inherited_from_y',\n                  rule.count,\n                  rule.from.name\n                )}\n              </div>\n            );\n          })}\n        </>\n      );\n    }\n    return null;\n  };\n\n  render() {\n    const profilesWithDeprecations = this.props.profiles.filter(\n      profile => profile.activeDeprecatedRuleCount > 0\n    );\n\n    if (profilesWithDeprecations.length === 0) {\n      return null;\n    }\n\n    const sortedProfiles = sortBy(profilesWithDeprecations, p => -p.activeDeprecatedRuleCount);\n\n    return (\n      <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-deprecated\">\n        <div className=\"spacer-bottom\">\n          <strong>{translate('quality_profiles.deprecated_rules')}</strong>\n        </div>\n        <div className=\"spacer-bottom\">\n          {translateWithParameters(\n            'quality_profiles.deprecated_rules_are_still_activated',\n            profilesWithDeprecations.length\n          )}\n        </div>\n        <ul>\n          {sortedProfiles.map(profile => (\n            <li className=\"spacer-top\" key={profile.key}>\n              <div className=\"text-ellipsis\">\n                <ProfileLink\n                  className=\"link-no-underline\"\n                  language={profile.language}\n                  name={profile.name}\n                  organization={this.props.organization}>\n                  {profile.name}\n                </ProfileLink>\n              </div>\n              <div className=\"note\">\n                {profile.languageName}\n                {', '}\n                <Link\n                  className=\"text-muted\"\n                  to={getDeprecatedActiveRulesUrl(\n                    { qprofile: profile.key },\n                    this.props.organization\n                  )}>\n                  {translateWithParameters(\n                    'quality_profile.x_rules',\n                    profile.activeDeprecatedRuleCount\n                  )}\n                </Link>\n                {this.renderInheritedInfo(profile, profilesWithDeprecations)}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { searchRules } from '../../../api/rules';\nimport { getRulesUrl } from '../../../helpers/urls';\n\nconst RULES_LIMIT = 10;\n\nfunction parseRules(rules: T.Rule[], actives?: T.Dict<T.RuleActivation[]>): ExtendedRule[] {\n  return rules.map(rule => {\n    const activations = actives && actives[rule.key];\n    return { ...rule, activations: activations ? activations.length : 0 };\n  });\n}\n\ninterface Props {\n  organization: string | null;\n}\n\ninterface ExtendedRule extends T.Rule {\n  activations: number;\n}\n\ninterface State {\n  latestRules?: ExtendedRule[];\n  latestRulesTotal?: number;\n}\n\nexport default class EvolutionRules extends React.PureComponent<Props, State> {\n  periodStartDate: string;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    const startDate = new Date();\n    startDate.setFullYear(startDate.getFullYear() - 1);\n    this.periodStartDate = toShortNotSoISOString(startDate);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLatestRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLatestRules() {\n    const data = {\n      asc: false,\n      available_since: this.periodStartDate,\n      f: 'name,langName,actives',\n      organization: this.props.organization || undefined,\n      ps: RULES_LIMIT,\n      s: 'createdAt'\n    };\n\n    searchRules(data).then(\n      ({ actives, rules, total }) => {\n        if (this.mounted) {\n          this.setState({\n            latestRules: sortBy(parseRules(rules, actives), 'langName'),\n            latestRulesTotal: total\n          });\n        }\n      },\n      () => {}\n    );\n  }\n\n  render() {\n    if (!this.state.latestRulesTotal || !this.state.latestRules) {\n      return null;\n    }\n\n    const newRulesUrl = getRulesUrl(\n      { available_since: this.periodStartDate },\n      this.props.organization\n    );\n\n    return (\n      <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-rules\">\n        <div className=\"clearfix\">\n          <strong className=\"pull-left\">{translate('quality_profiles.latest_new_rules')}</strong>\n        </div>\n        <ul>\n          {this.state.latestRules.map(rule => (\n            <li className=\"spacer-top\" key={rule.key}>\n              <div className=\"text-ellipsis\">\n                <Link\n                  className=\"link-no-underline\"\n                  to={getRulesUrl({ rule_key: rule.key }, this.props.organization)}>\n                  {' '}\n                  {rule.name}\n                </Link>\n                <div className=\"note\">\n                  {rule.activations\n                    ? translateWithParameters(\n                        'quality_profiles.latest_new_rules.activated',\n                        rule.langName!,\n                        rule.activations\n                      )\n                    : translateWithParameters(\n                        'quality_profiles.latest_new_rules.not_activated',\n                        rule.langName!\n                      )}\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n        {this.state.latestRulesTotal > RULES_LIMIT && (\n          <div className=\"spacer-top\">\n            <Link className=\"small\" to={newRulesUrl}>\n              {translate('see_all')} {formatMeasure(this.state.latestRulesTotal, 'SHORT_INT', null)}\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport ProfileLink from '../components/ProfileLink';\nimport { Profile } from '../types';\nimport { isStagnant } from '../utils';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\nexport default function EvolutionStagnant(props: Props) {\n  const outdated = props.profiles.filter(profile => !profile.isBuiltIn && isStagnant(profile));\n\n  if (outdated.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"boxed-group boxed-group-inner quality-profiles-evolution-stagnant\">\n      <div className=\"spacer-bottom\">\n        <strong>{translate('quality_profiles.stagnant_profiles')}</strong>\n      </div>\n      <div className=\"spacer-bottom\">\n        {translate('quality_profiles.not_updated_more_than_year')}\n      </div>\n      <ul>\n        {outdated.map(profile => (\n          <li className=\"spacer-top\" key={profile.key}>\n            <div className=\"text-ellipsis\">\n              <ProfileLink\n                className=\"link-no-underline\"\n                language={profile.language}\n                name={profile.name}\n                organization={props.organization}>\n                {profile.name}\n              </ProfileLink>\n            </div>\n            {profile.rulesUpdatedAt && (\n              <DateFormatter date={profile.rulesUpdatedAt} long={true}>\n                {formattedDate => (\n                  <div className=\"note\">\n                    {translateWithParameters(\n                      'quality_profiles.x_updated_on_y',\n                      profile.languageName,\n                      formattedDate\n                    )}\n                  </div>\n                )}\n              </DateFormatter>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Profile } from '../types';\nimport EvolutionDeprecated from './EvolutionDeprecated';\nimport EvolutionRules from './EvolutionRules';\nimport EvolutionStagnant from './EvolutionStagnant';\n\ninterface Props {\n  organization: string | null;\n  profiles: Profile[];\n}\n\nexport default function Evolution({ organization, profiles }: Props) {\n  return (\n    <div className=\"quality-profiles-evolution\">\n      <EvolutionDeprecated organization={organization} profiles={profiles} />\n      <EvolutionStagnant organization={organization} profiles={profiles} />\n      <EvolutionRules organization={organization} />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  changeProfileParent,\n  createQualityProfile,\n  getImporters\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  languages: Array<{ key: string; name: string }>;\n  onClose: () => void;\n  onCreate: Function;\n  organization: string | null;\n  profiles: Profile[];\n}\n\ninterface State {\n  importers: Array<{ key: string; languages: Array<string>; name: string }>;\n  language?: string;\n  loading: boolean;\n  name: string;\n  parent?: string;\n  preloading: boolean;\n}\n\nexport default class CreateProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { importers: [], loading: false, name: '', preloading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchImporters();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchImporters() {\n    getImporters().then(\n      importers => {\n        if (this.mounted) {\n          this.setState({ importers, preloading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ preloading: false });\n        }\n      }\n    );\n  }\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleLanguageChange = (option: { value: string }) => {\n    this.setState({ language: option.value });\n  };\n\n  handleParentChange = (option: { value: string } | null) => {\n    this.setState({ parent: option ? option.value : undefined });\n  };\n\n  handleFormSubmit = async (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState({ loading: true });\n\n    const data = new FormData(event.currentTarget);\n    if (this.props.organization) {\n      data.append('organization', this.props.organization);\n    }\n\n    try {\n      const { profile } = await createQualityProfile(data);\n\n      const parentProfile = this.props.profiles.find(p => p.key === this.state.parent);\n      if (parentProfile) {\n        await changeProfileParent(profile, parentProfile);\n      }\n\n      this.props.onCreate(profile);\n    } finally {\n      if (this.mounted) {\n        this.setState({ loading: false });\n      }\n    }\n  };\n\n  render() {\n    const header = translate('quality_profiles.new_profile');\n    const languages = sortBy(this.props.languages, 'name');\n    let profiles: Array<{ label: string; value: string }> = [];\n\n    const selectedLanguage = this.state.language || languages[0].key;\n    const importers = this.state.importers.filter(importer =>\n      importer.languages.includes(selectedLanguage)\n    );\n\n    if (selectedLanguage) {\n      const languageProfiles = this.props.profiles.filter(p => p.language === selectedLanguage);\n      profiles = [\n        { label: translate('none'), value: '' },\n        ...sortBy(languageProfiles, 'name').map(profile => ({\n          label: profile.isBuiltIn\n            ? `${profile.name} (${translate('quality_profiles.built_in')})`\n            : profile.name,\n          value: profile.key\n        }))\n      ];\n    }\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"small\">\n        <form id=\"create-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          {this.state.preloading ? (\n            <div className=\"modal-body\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <div className=\"modal-body\">\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-profile-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-profile-name\"\n                  maxLength={100}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  size={50}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-profile-language\">\n                  {translate('language')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <Select\n                  clearable={false}\n                  id=\"create-profile-language\"\n                  name=\"language\"\n                  onChange={this.handleLanguageChange}\n                  options={languages.map(language => ({\n                    label: language.name,\n                    value: language.key\n                  }))}\n                  value={selectedLanguage}\n                />\n              </div>\n              {selectedLanguage && profiles.length && (\n                <div className=\"modal-field\">\n                  <label htmlFor=\"create-profile-parent\">\n                    {translate('quality_profiles.parent')}\n                  </label>\n                  <Select\n                    clearable={true}\n                    id=\"create-profile-parent\"\n                    name=\"parentKey\"\n                    onChange={this.handleParentChange}\n                    options={profiles}\n                    value={this.state.parent || ''}\n                  />\n                </div>\n              )}\n              {importers.map(importer => (\n                <div\n                  className=\"modal-field spacer-bottom js-importer\"\n                  data-key={importer.key}\n                  key={importer.key}>\n                  <label htmlFor={'create-profile-form-backup-' + importer.key}>\n                    {importer.name}\n                  </label>\n                  <input\n                    id={'create-profile-form-backup-' + importer.key}\n                    name={'backup_' + importer.key}\n                    type=\"file\"\n                  />\n                  <p className=\"note\">\n                    {translate('quality_profiles.optional_configuration_file')}\n                  </p>\n                </div>\n              ))}\n              {/* drop me when we stop supporting ie11 */}\n              <input name=\"hello-ie11\" type=\"hidden\" value=\"\" />\n            </div>\n          )}\n\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            {!this.state.preloading && (\n              <SubmitButton disabled={this.state.loading} id=\"create-profile-submit\">\n                {translate('create')}\n              </SubmitButton>\n            )}\n            <ResetButtonLink id=\"create-profile-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { restoreQualityProfile } from '../../../api/quality-profiles';\n\ninterface Props {\n  onClose: () => void;\n  onRestore: () => void;\n  organization: string | null;\n}\n\ninterface State {\n  loading: boolean;\n  profile?: { name: string };\n  ruleFailures?: number;\n  ruleSuccesses?: number;\n}\n\nexport default class RestoreProfileForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState({ loading: true });\n\n    const data = new FormData(event.currentTarget);\n    if (this.props.organization) {\n      data.append('organization', this.props.organization);\n    }\n\n    restoreQualityProfile(data).then(\n      (response: any) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            profile: response.profile,\n            ruleFailures: response.ruleFailures,\n            ruleSuccesses: response.ruleSuccesses\n          });\n        }\n        this.props.onRestore();\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  renderAlert(profile: { name: string }, ruleFailures = 0, ruleSuccesses: number): React.ReactNode {\n    return ruleFailures ? (\n      <Alert variant=\"warning\">\n        {translateWithParameters(\n          'quality_profiles.restore_profile.warning',\n          profile.name,\n          ruleSuccesses,\n          ruleFailures\n        )}\n      </Alert>\n    ) : (\n      <Alert variant=\"success\">\n        {translateWithParameters(\n          'quality_profiles.restore_profile.success',\n          profile.name,\n          ruleSuccesses\n        )}\n      </Alert>\n    );\n  }\n\n  render() {\n    const header = translate('quality_profiles.restore_profile');\n\n    const { loading, profile, ruleFailures, ruleSuccesses } = this.state;\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"small\">\n        <form id=\"restore-profile-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body\">\n            {profile != null && ruleSuccesses != null ? (\n              this.renderAlert(profile, ruleFailures, ruleSuccesses)\n            ) : (\n              <div className=\"modal-field\">\n                <label htmlFor=\"restore-profile-backup\">\n                  {translate('backup')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input id=\"restore-profile-backup\" name=\"backup\" required={true} type=\"file\" />\n              </div>\n            )}\n          </div>\n\n          {ruleSuccesses == null ? (\n            <div className=\"modal-foot\">\n              {loading && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={loading} id=\"restore-profile-submit\">\n                {translate('restore')}\n              </SubmitButton>\n              <ResetButtonLink id=\"restore-profile-cancel\" onClick={this.props.onClose}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </div>\n          ) : (\n            <div className=\"modal-foot\">\n              <ResetButtonLink id=\"restore-profile-cancel\" onClick={this.props.onClose}>\n                {translate('close')}\n              </ResetButtonLink>\n            </div>\n          )}\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Actions } from '../../../api/quality-profiles';\nimport { Router, withRouter } from '../../../components/hoc/withRouter';\nimport { Profile } from '../types';\nimport { getProfilePath } from '../utils';\nimport CreateProfileForm from './CreateProfileForm';\nimport RestoreProfileForm from './RestoreProfileForm';\n\ninterface Props {\n  actions: Actions;\n  languages: Array<{ key: string; name: string }>;\n  organization: string | null;\n  profiles: Profile[];\n  router: Pick<Router, 'push'>;\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  createFormOpen: boolean;\n  restoreFormOpen: boolean;\n}\n\nexport class PageHeader extends React.PureComponent<Props, State> {\n  state: State = {\n    createFormOpen: false,\n    restoreFormOpen: false\n  };\n\n  handleCreateClick = () => {\n    this.setState({ createFormOpen: true });\n  };\n\n  handleCreate = (profile: Profile) => {\n    this.props.updateProfiles().then(\n      () => {\n        this.props.router.push(\n          getProfilePath(profile.name, profile.language, this.props.organization)\n        );\n      },\n      () => {}\n    );\n  };\n\n  closeCreateForm = () => {\n    this.setState({ createFormOpen: false });\n  };\n\n  handleRestoreClick = () => {\n    this.setState({ restoreFormOpen: true });\n  };\n\n  closeRestoreForm = () => {\n    this.setState({ restoreFormOpen: false });\n  };\n\n  render() {\n    const { actions, languages, organization, profiles } = this.props;\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('quality_profiles.page')}</h1>\n\n        {actions.create && (\n          <div className=\"page-actions\">\n            <Button\n              disabled={languages.length === 0}\n              id=\"quality-profiles-create\"\n              onClick={this.handleCreateClick}>\n              {translate('create')}\n            </Button>\n            <Button\n              className=\"little-spacer-left\"\n              id=\"quality-profiles-restore\"\n              onClick={this.handleRestoreClick}>\n              {translate('restore')}\n            </Button>\n            {languages.length === 0 && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('quality_profiles.no_languages_available')}\n              </Alert>\n            )}\n          </div>\n        )}\n\n        <div className=\"page-description markdown\">\n          {translate('quality_profiles.intro1')}\n          <br />\n          {translate('quality_profiles.intro2')}\n          <Link\n            className=\"spacer-left\"\n            target=\"_blank\"\n            to={{\n              pathname: '/documentation/instance-administration/quality-profiles/'\n            }}>\n            {translate('learn_more')}\n          </Link>\n        </div>\n\n        {this.state.restoreFormOpen && (\n          <RestoreProfileForm\n            onClose={this.closeRestoreForm}\n            onRestore={this.props.updateProfiles}\n            organization={organization}\n          />\n        )}\n\n        {this.state.createFormOpen && (\n          <CreateProfileForm\n            languages={languages}\n            onClose={this.closeCreateForm}\n            onCreate={this.handleCreate}\n            organization={organization}\n            profiles={profiles}\n          />\n        )}\n      </header>\n    );\n  }\n}\n\nexport default withRouter(PageHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getProfilesForLanguagePath, getProfilesPath } from '../utils';\n\ninterface Props {\n  currentFilter?: string;\n  languages: Array<{ key: string; name: string }>;\n  organization: string | null;\n  router: Pick<Router, 'replace'>;\n}\n\nexport class ProfilesListHeader extends React.PureComponent<Props> {\n  handleChange = (option: { value: string } | null) => {\n    const { organization, router } = this.props;\n\n    router.replace(\n      !option\n        ? getProfilesPath(organization)\n        : getProfilesForLanguagePath(option.value, organization)\n    );\n  };\n\n  render() {\n    const { currentFilter, languages } = this.props;\n    if (languages.length < 2) {\n      return null;\n    }\n\n    const options = languages.map(language => ({\n      label: language.name,\n      value: language.key\n    }));\n\n    const currentLanguage = currentFilter && options.find(l => l.value === currentFilter);\n\n    return (\n      <header className=\"quality-profiles-list-header clearfix\">\n        <span className=\"spacer-right\">{translate('quality_profiles.filter_by')}:</span>\n        <Select\n          className=\"input-medium\"\n          clearable={true}\n          onChange={this.handleChange}\n          options={options}\n          value={currentLanguage}\n        />\n      </header>\n    );\n  }\n}\n\nexport default withRouter(ProfilesListHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../components/docs/DocTooltip';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport ProfileActions from '../components/ProfileActions';\nimport ProfileDate from '../components/ProfileDate';\nimport ProfileLink from '../components/ProfileLink';\nimport { Profile } from '../types';\n\nexport interface ProfilesListRowProps {\n  organization: string | null;\n  profile: Profile;\n  updateProfiles: () => Promise<void>;\n}\n\nexport function ProfilesListRow(props: ProfilesListRowProps) {\n  const { organization, profile } = props;\n\n  const offset = 25 * (profile.depth - 1);\n  const activeRulesUrl = getRulesUrl(\n    {\n      qprofile: profile.key,\n      activation: 'true'\n    },\n    organization\n  );\n  const deprecatedRulesUrl = getRulesUrl(\n    {\n      qprofile: profile.key,\n      activation: 'true',\n      statuses: 'DEPRECATED'\n    },\n    organization\n  );\n\n  return (\n    <tr\n      className=\"quality-profiles-table-row text-middle\"\n      data-key={profile.key}\n      data-name={profile.name}>\n      <td className=\"quality-profiles-table-name text-middle\">\n        <div className=\"display-flex-center\" style={{ paddingLeft: offset }}>\n          <div>\n            <ProfileLink\n              language={profile.language}\n              name={profile.name}\n              organization={organization}>\n              {profile.name}\n            </ProfileLink>\n          </div>\n          {profile.isBuiltIn && <BuiltInQualityProfileBadge className=\"spacer-left\" />}\n        </div>\n      </td>\n\n      <td className=\"quality-profiles-table-projects thin nowrap text-middle text-right\">\n        {profile.isDefault ? (\n          <DocTooltip\n            doc={import(\n              /* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/default-quality-profile.md'\n            )}>\n            <span className=\"badge\">{translate('default')}</span>\n          </DocTooltip>\n        ) : (\n          <span>{profile.projectCount}</span>\n        )}\n      </td>\n\n      <td className=\"quality-profiles-table-rules thin nowrap text-middle text-right\">\n        <div>\n          {profile.activeDeprecatedRuleCount > 0 && (\n            <span className=\"spacer-right\">\n              <Tooltip overlay={translate('quality_profiles.deprecated_rules')}>\n                <Link className=\"badge badge-error\" to={deprecatedRulesUrl}>\n                  {profile.activeDeprecatedRuleCount}\n                </Link>\n              </Tooltip>\n            </span>\n          )}\n\n          <Link to={activeRulesUrl}>{profile.activeRuleCount}</Link>\n        </div>\n      </td>\n\n      <td className=\"quality-profiles-table-date thin nowrap text-middle text-right\">\n        <ProfileDate date={profile.rulesUpdatedAt} />\n      </td>\n\n      <td className=\"quality-profiles-table-date thin nowrap text-middle text-right\">\n        <ProfileDate date={profile.lastUsed} />\n      </td>\n\n      <td className=\"quality-profiles-table-actions thin nowrap text-middle text-right\">\n        <ProfileActions\n          fromList={true}\n          organization={organization}\n          profile={profile}\n          updateProfiles={props.updateProfiles}\n        />\n      </td>\n    </tr>\n  );\n}\n\nexport default React.memo(ProfilesListRow);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Location } from 'history';\nimport { groupBy, pick, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../components/docs/DocTooltip';\nimport { Profile } from '../types';\nimport ProfilesListHeader from './ProfilesListHeader';\nimport ProfilesListRow from './ProfilesListRow';\n\ninterface Props {\n  languages: T.Language[];\n  location: Pick<Location, 'query'>;\n  organization: string | null;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfilesList extends React.PureComponent<Props> {\n  renderProfiles(profiles: Profile[]) {\n    return profiles.map(profile => (\n      <ProfilesListRow\n        key={profile.key}\n        organization={this.props.organization}\n        profile={profile}\n        updateProfiles={this.props.updateProfiles}\n      />\n    ));\n  }\n\n  renderHeader(languageKey: string, profilesCount: number) {\n    const language = this.props.languages.find(l => l.key === languageKey);\n\n    if (!language) {\n      return null;\n    }\n\n    return (\n      <thead>\n        <tr>\n          <th>\n            {language.name}\n            {', '}\n            {translateWithParameters('quality_profiles.x_profiles', profilesCount)}\n          </th>\n          <th className=\"text-right nowrap\">\n            {translate('quality_profiles.list.projects')}\n            <DocTooltip\n              className=\"table-cell-doc\"\n              doc={import(\n                /* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/quality-profile-projects.md'\n              )}\n            />\n          </th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.rules')}</th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.updated')}</th>\n          <th className=\"text-right nowrap\">{translate('quality_profiles.list.used')}</th>\n          <th>&nbsp;</th>\n        </tr>\n      </thead>\n    );\n  }\n\n  renderLanguage = (languageKey: string, profiles: Profile[] | undefined) => {\n    return (\n      <div className=\"boxed-group boxed-group-inner quality-profiles-table\" key={languageKey}>\n        <table className=\"data zebra zebra-hover\" data-language={languageKey}>\n          {profiles !== undefined && this.renderHeader(languageKey, profiles.length)}\n          <tbody>{profiles !== undefined && this.renderProfiles(profiles)}</tbody>\n        </table>\n      </div>\n    );\n  };\n\n  render() {\n    const { profiles, languages } = this.props;\n    const { language } = this.props.location.query;\n\n    const profilesIndex: T.Dict<Profile[]> = groupBy<Profile>(\n      profiles,\n      profile => profile.language\n    );\n\n    const profilesToShow = language ? pick(profilesIndex, language) : profilesIndex;\n\n    const languagesToShow = sortBy(Object.keys(profilesToShow));\n\n    return (\n      <div>\n        <ProfilesListHeader\n          currentFilter={language}\n          languages={languages}\n          organization={this.props.organization}\n        />\n\n        {Object.keys(profilesToShow).length === 0 && (\n          <Alert className=\"spacer-top\" variant=\"warning\">\n            {translate('no_results')}\n          </Alert>\n        )}\n\n        {languagesToShow.map(languageKey =>\n          this.renderLanguage(languageKey, profilesToShow[languageKey])\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Actions } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport Evolution from './Evolution';\nimport PageHeader from './PageHeader';\nimport ProfilesList from './ProfilesList';\n\ninterface Props {\n  actions: Actions;\n  languages: Array<{ key: string; name: string }>;\n  location: { query: T.Dict<string> };\n  organization: string | null;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default function HomeContainer(props: Props) {\n  return (\n    <div>\n      <PageHeader {...props} />\n\n      <div className=\"page-with-sidebar\">\n        <div className=\"page-main\">\n          <ProfilesList {...props} />\n        </div>\n        <div className=\"page-sidebar\">\n          <Evolution {...props} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n"],"sourceRoot":""}