{"version":3,"sources":["webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/components/common/CodeSnippet.css?2955","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///../sonar-docs/src/tooltips/project/visibility-private.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-paid-org-admin.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-paid-org.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-admin.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public.md","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/api/projectLinks.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLink.tsx","webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/api/notifications.ts","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css?fb16","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css","webpack:///../sonar-docs/src/tooltips/branches/no-branch-support.md","webpack:///../sonar-docs/src/tooltips/branches/single-branch.md","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css?432a","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css","webpack:///./src/main/js/app/components/nav/component/Menu.css?d0b0","webpack:///./src/main/js/app/components/nav/component/Menu.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css?b6ff","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css?6f16","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css?a773","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLike.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItemList.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLikeMergeInformation.tsx","webpack:///./src/main/js/app/components/nav/component/Breadcrumb.tsx","webpack:///./src/main/js/app/components/nav/component/Header.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.tsx","webpack:///./src/main/js/app/components/nav/component/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/utils.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeButton.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeParams.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/ProjectBadges.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawerPage.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationPages.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/DrawerLink.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaKey.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLinks.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityGate.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaSize.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTags.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationRenderer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/intl/DateTimeFormatter.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/types/metrics.ts","webpack:///./src/main/js/types/component.ts","webpack:///./src/main/js/api/rules.ts","webpack:///./src/main/js/components/tags/TagsList.css?aed4","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/components/shared/DrilldownLink.tsx","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx"],"names":["__webpack_require__","d","__webpack_exports__","getBranches","getPullRequests","deleteBranch","deletePullRequest","renameBranch","excludeBranchFromPurge","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","project","Object","then","r","branches","pullRequests","data","catch","name","projectKey","branchName","excluded","branch","value","ComponentContext","react__WEBPACK_IMPORTED_MODULE_0__","branchLike","undefined","component","content","module","i","options","hmr","transform","insertInto","locals","exports","push","valid_url__WEBPACK_IMPORTED_MODULE_0__","url","test","react_redux__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_2___default","n","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","state","_a","status","a","level","small","fetchWebApi","fetchResponseExample","showInternal","include_internals","webServices","domain","action","controller","NotificationsList","_super","__extends","prototype","isEnabled","type","channel","this","props","notifications","find","notification","handleCheck","checked","onAdd","onRemove","getDispatcherLabel","dispatcher","globalMessageKey","projectMessageKey","__spreadArrays","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","apply","render","_this","channels","checkboxId","types","map","key","className","sonar_ui_common_components_controls_Checkbox__WEBPACK_IMPORTED_MODULE_1___default","id","onCheck","getProjectLinks","deleteLink","createLink","links","linkId","link","MetaLink","arguments","expanded","handleClick","event","preventDefault","setState","handleCollapse","handleSelect","currentTarget","select","iconOnly","linkTitle","_helpers_projectLinks__WEBPACK_IMPORTED_MODULE_3__","href","onClick","_utils_isValidUri__WEBPACK_IMPORTED_MODULE_4__","rel","target","title","sonar_ui_common_components_icons_ProjectLinkIcon__WEBPACK_IMPORTED_MODULE_2___default","readOnly","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_1__","withNotifications","WrappedComponent","Wrapper","mounted","globalTypes","loading","perProjectTypes","fetchNotifications","request","throwGlobalError","response","addNotificationToState","added","uniqWith_default","areNotificationsEqual","removeNotificationFromState","removed","filter","addNotification","removeNotification","b","componentDidMount","componentWillUnmount","index_js_exposed","__assign","displayName","utils","ComponentContainerNotFound","index_module","defaultTitle","l10n","defer","react_router_es","to","ComponentNavLicenseNotif_ComponentNavLicenseNotif","ComponentNavLicenseNotif","fetchIsValidLicense","marketplace","isValidLicense","currentTask","errorType","Alert","display","variant","componentQualifier","types_component","Project","errorMessage","appState","canAdmin","component_ComponentNavLicenseNotif","withAppState","ComponentNavBgTaskNotif","ComponentNavBgTaskNotif_extends","renderMessage","messageKey","canSeeBackgroundTasks","configuration","showBackgroundTasks","urls","index_es","defaultMessage","values","currentTaskOnSameBranch","isInProgress","isPending","constants","ALL","FAILED","pullRequest","pullRequestTitle","message","branch_like_CurrentBranchLike","branchesEnabled","currentBranchLike","hasManyBranches","branch_like","isApplication","qualifier","Application","canAdminComponent","showSettings","BranchLikeIcon","plusIcon","PlusCircleIcon_default","fill","theme","blue","size","DropdownIcon_default","HelpTooltip_default","overlay","DocTooltip","data-test","doc","Promise","resolve","bind","additionalIcon","branch_like_MenuItem","indent","setSelectedNode","onSelect","selected","classnames","active","ref","big-spacer-left","BranchStatus","branch_like_MenuItemList","listNode","selectedNode","scrolling","parent","smooth","branchLikeTree","hasResults","selectedBranchLike","renderItem","node","mainBranchTree","branchTree","tree","length","pr","parentlessPullRequests","orphanPullRequests","Menu_Menu","Menu","call","processBranchLikes","branchLikes","branchLikesToDisplay","Menu_spreadArrays","reduce","prev","t","branchLikesToDisplayTree","openHighlightedBranchLike","handleOnSelect","highlightSiblingBranchlike","indexDelta","selectBranchLikeIndex","findIndex","newIndex","handleKeyDown","keyCode","keycodes","Enter","UpArrow","DownArrow","handleSearchChange","query","q","toLowerCase","filteredBranchLikes","bl","includes","onClose","router","some","Menu_extends","_b","showManageLink","Dropdown","noPadding","SearchBox_default","autoFocus","onChange","onKeyDown","placeholder","pathname","branch_like_Menu","withRouter","branch_like_BranchLikeNavigation","isMenuOpen","setIsMenuOpen","isMenuEnabled","currentBranchLikeElement","Boolean","dropdown","Toggler_default","onRequestClose","open","branch_like_CurrentBranchLikeMergeInformation","Breadcrumb","breadcrumbs","lastBreadcrumbElement","last_default","isNoMainBranch","breadcrumbElement","isFirst","isNotLast","QualifierIcon_default","component_Header","es","currentUser","rootReducer","users","Favorite","favorite","isFavorite","AnalysisWarningsModal","lazyLoad","all","e","ComponentNavWarnings","modal","blur","handleCloseModal","ComponentNavWarnings_extends","warnings","warningsCount","component_HeaderMeta","isABranch","currentPage","Portfolio","SubPortfolio","getCurrentPage","displayVersion","version","component_ComponentNavWarnings","analysisDate","DateTimeFormatter","date","HomePageSelect","DetachIcon_default","SETTINGS_URLS","component_Menu_Menu","getQuery","Menu_assign","renderExtension","isAdmin","activeClassName","component_Menu_extends","isProject","isDeveloper","Developper","isPortfolio","getConfiguration","renderDashboardLink","renderCodeLink","renderActivityLink","renderIssuesLink","resolved","renderComponentMeasuresLink","renderSecurityHotspotsLink","renderSecurityReports","extensions","extension","startsWith","renderAdministration","isSettingsActive","window","location","indexOf","adminLinks","renderAdministrationLinks","Dropdown_default","tagName","onToggleClick","aria-expanded","aria-haspopup","component_Menu_spreadArrays","renderSettingsLink","renderBranchesLink","renderBaselineLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderAdminExtensions","renderDeletionLink","renderProjectInformationButton","onToggleProjectInfo","role","tabIndex","BulletListIcon_default","showQualityProfiles","showQualityGates","system","showManualMeasures","showLinks","showPermissions","showUpdateKey","renderExtensions","withoutSecurityExtension","NavBarTabs_default","nav_component_Menu","InfoDrawer_InfoDrawer","children","displayed","top","style","buttons","EscKeydownHandler_default","onKeydown","OutsideClickHandler_default","onClickOutside","BadgeType","getBadgeSnippet","getBadgeUrl","format","metric","label","projectUrl","marketing","measure","qualityGate","helpers_urls","mdImage","color","_c","querystring_es3","BadgeButton","BadgeButton_extends","width","alt","src","BadgeParams","badgeMetrics","getColorOptions","getFormatOptions","getMetricOptions","metrics","handleColorChange","updateOptions","handleFormatChange","handleMetricChange","renderBadgeType","htmlFor","Select_default","clearable","searchable","menuStyle","maxHeight","BadgeParams_extends","fetchBadgeMetrics","web_api","webservices","path","ws","actions","w","param","params","p","possibleValues","spacer-top","ProjectBadges","selectedType","badgeOptions","types_metrics","alert_status","handleSelectBadge","handleUpdateOptions","ProjectBadges_assign","ProjectBadges_extends","fullBadgeOptions","badges_BadgeButton","badges_BadgeParams","CodeSnippet","isOneLine","snippet","InfoDrawerPage","onPageChange","BackIcon_default","ProjectInformationPages","notifications_ProjectNotifications","projectNotifications","DeferredSpinner_default","aria-label","projectInformation_DrawerLink","ChevronRightIcon_default","MetaKey","componentKey","clipboard","copyValue","MetaLinks","loadLinks","projectLinks","MetaLinks_extends","componentDidUpdate","prevProps","orderedLinks","helpers_projectLinks","MetaQualityGate","isDefault","MetaQualityProfiles_MetaQualityProfiles","MetaQualityProfiles","deprecatedByKey","MetaQualityProfiles_extends","loadDeprecatedRules","existingProfiles","profiles","deleted","requests","profile","loadDeprecatedRulesForProfile","responses","deprecatedByKey_1","forEach","count","profileKey","activation","organization","ps","qprofile","statuses","rules","total","getDeprecatedRulesCount","renderProfile","languageFromStore","languages","language","languageName","inner","tooltip","Tooltip_default","headerClassName","meta_MetaQualityProfiles","MetaSize","measures","isApp","ncloc","projects","helpers_measures","DrilldownLink","SizeRating_default","Number","LIST_SIZE","MetaTagsSelector","searchResult","onSearch","components","Math","min","selectedTags","tags","tag","setProjectTags","MetaTagsSelector_spreadArrays","onUnselect","without_default","MetaTagsSelector_extends","availableTags","difference_default","TagsSelector","listSize","MetaTags","canUpdateTags","getPopupPos","eltPos","containerPos","height","right","handleSetProjectTags","join","onComponentChange","MetaTags_extends","card","closeOnClick","closeOnClickOutside","meta_MetaTagsSelector","overlayPlacement","popups","BottomLeft","innerRef","tagsList","stopPropagation","TagsList","allowUpdate","projectInformation_ProjectInformationRenderer","canConfigureNotifications","canUseBadges","description","visibility","PrivacyBadgeContainer","tooltipProps","meta_MetaTags","qualityProfiles","meta_MetaLinks","badges","ProjectInformation_ProjectInformation","ProjectInformation","page","main","setPage","loadMeasures","api_measures","metricKeys","ProjectInformation_extends","fetchMetrics","badges_ProjectBadges","mapDispatchToProps","rootActions","component_projectInformation_ProjectInformation","ComponentNav","notifComponent","contextNavHeightRaw","globalNavHeightRaw","displayProjectInfo","setDisplayProjectInfo","RecentHistory","add","component_ComponentNavBgTaskNotif","contextNavHeight","ContextNavBar_default","notif","padded-bottom","FETCH_STATUS_WAIT_TIME","ComponentContainer_ComponentContainer","ComponentContainer","addQualifier","ComponentContainer_assign","fetchBranches","breadcrumb","ComponentContainer_spreadArrays","getCurrentBranchLike","registerBranchStatuses","fetchStatus","ce","current","queue","shouldFetchComponent_1","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","IN_PROGRESS","currentTaskChanged","progressChanged","differenceBy_default","clearTimeout","watchStatusTimer","setTimeout","PENDING","fetchComponent","fetchWarnings","isMain","isSameBranch","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","ComponentContainer_extends","api_nav","nav","componentWithQualifier","fetchOrganization","requireAuthorization","Provider","onBranchesChange","ComponentContainer_mapDispatchToProps","formatterOption","year","month","day","hour","minute","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","DocMarkdownBlock","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","close","default","document","addEventListener","removeEventListener","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1___default","childProps","overlayProps","_helpers_markdown__WEBPACK_IMPORTED_MODULE_3__","isTooltip","getFrontMatterPosition","lines","firstLine","lastLine","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","beginning","ending","newContent","start","end","substring","console","error","Error","getFrontMatter","position","slice","separateFrontMatter","frontmatter","content_1","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","MetricKey","isMetricKey","ComponentQualifier","getRulesApp","searchRules","takeFacet","getRuleDetails","getRuleTags","createRule","deleteRule","updateRule","property","facet","facets","parameters","rule","reject","_utils__WEBPACK_IMPORTED_MODULE_3__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_components_icons_TagsIcon__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_icons_TagsIcon__WEBPACK_IMPORTED_MODULE_3___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","aria-hidden","MultiSelectOption","custom","disabled","element","onHover","renderLabel","onFocus","onMouseOver","Checkbox_default","onSelectChange","MultiSelect_MultiSelect","MultiSelect","handleSelectChange","item","onSelectItem","onUnselectItem","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","handleKeyboard","evt","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","selectedElements","elements","updateSelectedElements","filterSelected","updateUnselectedElements","unselectedElements","setElementActive","idx","allElements","container","componentWillReceiveProps","nextProps","totalElements","searchInput","focus","allowSelection","allowNewElements","_d","footerNode","_e","activeElement","showNewElement","infiniteList","listClasses","menu-vertically-limited","with-top-separator","with-bottom-separator","div","defaultProps","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","ALL_EXCEPT_PENDING","SUCCESS","CANCELED","ONLY_CURRENTS","taskType","currents","minSubmittedAt","maxExecutedAt","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","_users__WEBPACK_IMPORTED_MODULE_0__","subscription","userOrganizations","admin","org","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","_common_MultiSelect__WEBPACK_IMPORTED_MODULE_2__","validateTag","addFavorite","removeFavorite","Favorite_Favorite","toggleFavorite","newFavorite","handleFavorite","_prevProps","FavoriteButton_default","sonar_ui_common_components_controls_clipboard__WEBPACK_IMPORTED_MODULE_2__","s","noCopy","wrap","snippetArray","Array","isArray","line","finalSnippet","code-snippet-oneline","code-snippet-wrap","getAnalysisStatus","getActivity","getStatus","getTask","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","componentId","assign","additionalFields","taskTypes","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","setHomePage","_helpers_users__WEBPACK_IMPORTED_MODULE_7__","homepage","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","sonar_ui_common_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_4___default","sonar_ui_common_components_icons_HomeIcon__WEBPACK_IMPORTED_MODULE_5___default","filled","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_3__","_store_users__WEBPACK_IMPORTED_MODULE_9__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_8__","__rest","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_icons_PullRequestIcon__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_components_icons_BranchIcon__WEBPACK_IMPORTED_MODULE_1___default","PROVIDED_TYPES","isProvided","orderLinks","lodash_partition__WEBPACK_IMPORTED_MODULE_1___default","provided","unknown","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","getLinkName","ISSUE_MEASURES","issueParamsPerMetric","blocker_violations","severities","new_blocker_violations","critical_violations","new_critical_violations","major_violations","new_major_violations","minor_violations","new_minor_violations","info_violations","new_info_violations","open_issues","reopened_issues","confirmed_issues","false_positive_issues","resolutions","code_smells","new_code_smells","bugs","new_bugs","vulnerabilities","new_vulnerabilities","isIssueMeasure","propsToIssueParams","sinceLeakPeriod","_helpers_urls__WEBPACK_IMPORTED_MODULE_3__","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_1__","listView","getDoc","icon","_store_rootReducer__WEBPACK_IMPORTED_MODULE_9__","onSonarCloud","_helpers_system__WEBPACK_IMPORTED_MODULE_8__","_helpers_organizations__WEBPACK_IMPORTED_MODULE_7__","sonar_ui_common_components_icons_VisibleIcon__WEBPACK_IMPORTED_MODULE_4___default","_app_theme__WEBPACK_IMPORTED_MODULE_6__","badge","badge-info","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","_docs_DocTooltip__WEBPACK_IMPORTED_MODULE_10__","sonar_ui_common_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_3___default"],"mappings":"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","file":"js/284.1582644816097.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Branch, PullRequest } from '../types/branch-like';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n\nexport function excludeBranchFromPurge(projectKey: string, branchName: string, excluded: boolean) {\n  return post('/api/project_branches/set_automatic_deletion_protection', {\n    project: projectKey,\n    branch: branchName,\n    value: excluded\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".code-snippet{position:relative;margin:8px 0;background:#404040;color:#f0f0f0;border-radius:3px}.code-snippet pre{padding:16px;overflow:auto}.code-snippet>button{position:absolute;top:16px;right:16px;line-height:18px;border:1px solid #fff;color:#fff;font-size:11px;font-weight:400;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:#fff;color:#404040}.code-snippet-oneline pre{padding-bottom:40px}.code-snippet-oneline>button{top:auto;bottom:16px}.code-snippet-wrap pre{white-space:pre-wrap;word-break:break-all}.code-snippet .highlight{font-weight:700;color:#f4b1b0}.code-snippet .button-icon{color:#fff!important}.code-snippet .button-icon:active svg,.code-snippet .button-icon:focus svg,.code-snippet .button-icon:hover svg{background-color:#fff;color:#404040}\", \"\"]);\n\n","export default \"This project is private. Only the members of this organization are able to browse it and its source code.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Go to your project's [Administration > Permissions](/#sonarcloud#/project_roles?id=#projectKey#) to make it private.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Contact the project administrator to make it private.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Subscribe to a paid plan to get unlimited private projects in [Administration > Billing](/#sonarcloud#/organizations/#organization#/extension/billing/billing).\\n\\n---\\n\\nSee also: [Pricing](/sonarcloud-pricing/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Contact the organization administrator if you want to make it private.\\n\\n---\\n\\nSee also: [Pricing](/sonarcloud-pricing/)\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { getBranchStatusByBranchLike, Store } from '../../store/rootReducer';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface Props {\n  branchLike: BranchLike;\n  component: string;\n  status?: string;\n}\n\nexport function BranchStatus({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, { branchLike, component }: Props) => {\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\ninterface RawDomain {\n  actions: T.WebApi.Action[];\n  deprecatedSince?: string;\n  description: string;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<RawDomain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r => r.webServices)\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<T.WebApi.Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { getLinkName } from '../../../../../../helpers/projectLinks';\nimport isValidUri from '../../../../../utils/isValidUri';\n\ninterface Props {\n  iconOnly?: boolean;\n  link: T.ProjectLink;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class MetaLink extends React.PureComponent<Props, State> {\n  state = { expanded: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  handleCollapse = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleSelect = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n  };\n\n  render() {\n    const { iconOnly, link } = this.props;\n    const linkTitle = getLinkName(link);\n    return (\n      <li>\n        <a\n          className=\"link-with-icon\"\n          href={link.url}\n          onClick={!isValidUri(link.url) ? this.handleClick : undefined}\n          rel=\"nofollow noreferrer noopener\"\n          target=\"_blank\"\n          title={linkTitle}>\n          <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n          {!iconOnly && linkTitle}\n        </a>\n        {this.state.expanded && (\n          <div className=\"little-spacer-top display-flex-center\">\n            <input\n              className=\"overview-key width-80\"\n              onClick={this.handleSelect}\n              readOnly={true}\n              type=\"text\"\n              value={link.url}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.handleCollapse} />\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n","\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".branch-like-navigation-toggler-container .popup{min-width:430px;max-width:650px}.branch-like-navigation-menu .search-box-container{padding:8px}.branch-like-navigation-menu .search-box-container .search-box,.branch-like-navigation-menu .search-box-container .search-box-input{max-width:none!important}.branch-like-navigation-menu .item-list{padding-bottom:8px;max-height:300px;overflow-y:auto}.branch-like-navigation-menu .item{padding:4px 8px}.branch-like-navigation-menu .item.header{color:#777}.branch-like-navigation-menu .item:not(.header).active,.branch-like-navigation-menu .item:not(.header):hover{background-color:#f3f3f3;cursor:pointer}.branch-like-navigation-menu .hint-container{padding:8px;background-color:#f3f3f3;border-top:1px solid #e6e6e6}\", \"\"]);\n\n","export default \"**Get the most out of SonarQube with branches analysis**\\n\\nAnalyze each branch of your project separately with the Developer Edition.\\n\\n---\\n\\n[Learn More](https://redirect.sonarsource.com/editions/developer.html)\\n\"","export default \"**Learn how to analyze branches in {instance}**\\n\\nQuickly setup branch analysis and get separate insights for each of your branches and pull requests.\\n\\n---\\n\\n[Branches Documentation](/branches/overview/)  \\n[Pull Request Analysis](/analysis/pull-request/)\\n\"","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".header-meta-warnings .alert{margin-bottom:0}.header-meta-warnings .alert-content{padding:6px 8px}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".navbar-tabs>li>a.menu-button{color:#236a97}.navbar-tabs>li>a.menu-button:hover{color:#4b9fd5;border-bottom-color:transparent}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".navbar-inner-with-notif .info-drawer{border-top:1px solid #e6e6e6}.info-drawer-pane{background-color:#fff;right:-380px;width:380px;transition:right .3s ease-in-out;border-left:1px solid #e6e6e6;box-sizing:border-box}.info-drawer-pane.open{right:0}.info-drawer{position:fixed;bottom:0;z-index:51}.info-drawer .close-button{position:absolute;top:0;right:0;background:#fff;padding:16px;z-index:2}.info-drawer .back-button{cursor:pointer}.info-drawer .back-button:hover{color:#4b9fd5}.info-drawer-page{position:absolute;top:0;bottom:0}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".badges-list{display:flex;justify-content:space-around;justify-content:space-evenly;flex-wrap:nowrap}.button.badge-button{display:flex;justify-content:center;padding:8px;min-width:146px;height:116px;background-color:#f3f3f3;border:1px solid #e6e6e6;border-radius:3px;transition:all .3s ease}.button.badge-button:active,.button.badge-button:focus,.button.badge-button:hover{background-color:#f3f3f3;border-color:#4b9fd5;box-shadow:none}.button.badge-button.selected{background-color:#cae3f2;border-color:#236a97}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".project-info-list>li{padding-left:1px;padding-bottom:4px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-info-tags{position:relative}.project-info-deleted-profile,.project-info-deprecated-rules{margin:4px -6px;padding:3px 6px!important;border:1px solid #f4b1b0;border-radius:3px;background-color:#f2dede}.project-info-deleted-profile a,.project-info-deprecated-rules a{color:#0e516f;border-color:darken(#cae3f2)}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ComponentQualifier } from '../../../../types/component';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: T.Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translateWithParameters(\n            'component_navigation.status.last_blocked_due_to_bad_license_X',\n            translate('qualifier', currentTask.componentQualifier || ComponentQualifier.Project)\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\n\ninterface Props {\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component, currentTask } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n\n    let type;\n    if (currentTask && hasMessage('background_task.type', currentTask.type)) {\n      messageKey += '_X';\n      type = translate('background_task.type', currentTask.type);\n    }\n\n    let url;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n      url = (\n        <Link to={getComponentBackgroundTaskUrl(component.key, status)}>\n          {translate('background_tasks.page')}\n        </Link>\n      );\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url, type }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === STATUSES.FAILED) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../../../components/docs/DocTooltip';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName } from '../../../../../helpers/branch-like';\nimport { getPortfolioAdminUrl } from '../../../../../helpers/urls';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { colors } from '../../../../theme';\n\nexport interface CurrentBranchLikeProps {\n  branchesEnabled: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  hasManyBranches: boolean;\n}\n\nexport function CurrentBranchLike(props: CurrentBranchLikeProps) {\n  const {\n    branchesEnabled,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    hasManyBranches\n  } = props;\n\n  const displayName = getBranchLikeDisplayName(currentBranchLike);\n  const isApplication = component.qualifier === ComponentQualifier.Application;\n  const canAdminComponent = configuration && configuration.showSettings;\n\n  const additionalIcon = () => {\n    const plusIcon = <PlusCircleIcon fill={colors.blue} size={12} />;\n\n    if (branchesEnabled && hasManyBranches) {\n      return <DropdownIcon />;\n    }\n\n    if (isApplication) {\n      if (!hasManyBranches && canAdminComponent) {\n        return (\n          <HelpTooltip\n            overlay={\n              <>\n                <p>{translate('application.branches.help')}</p>\n                <hr className=\"spacer-top spacer-bottom\" />\n                <Link to={getPortfolioAdminUrl(component.key, component.qualifier)}>\n                  {translate('application.branches.link')}\n                </Link>\n              </>\n            }>\n            {plusIcon}\n          </HelpTooltip>\n        );\n      }\n    } else {\n      if (!branchesEnabled) {\n        return (\n          <DocTooltip\n            data-test=\"branches-support-disabled\"\n            doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/no-branch-support.md')}>\n            {plusIcon}\n          </DocTooltip>\n        );\n      }\n\n      if (!hasManyBranches) {\n        return (\n          <DocTooltip\n            data-test=\"only-one-branch-like\"\n            doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/single-branch.md')}>\n            {plusIcon}\n          </DocTooltip>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <span className=\"display-flex-center flex-shrink text-ellipsis\">\n      <BranchLikeIcon branchLike={currentBranchLike} />\n      <span\n        className=\"spacer-left spacer-right flex-shrink text-ellipsis js-branch-like-name\"\n        title={displayName}>\n        {displayName}\n      </span>\n      {additionalIcon()}\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLike);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../../components/common/BranchStatus';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName, isMainBranch } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface MenuItemProps {\n  branchLike: BranchLike;\n  component: T.Component;\n  indent?: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n  setSelectedNode?: (node: HTMLLIElement) => void;\n}\n\nexport function MenuItem(props: MenuItemProps) {\n  const { branchLike, component, indent, setSelectedNode, onSelect, selected } = props;\n  const displayName = getBranchLikeDisplayName(branchLike);\n\n  return (\n    <li\n      className={classNames('item', {\n        active: selected\n      })}\n      onClick={() => onSelect(branchLike)}\n      ref={selected ? setSelectedNode : undefined}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between', {\n          'big-spacer-left': indent\n        })}>\n        <div className=\"item-name text-ellipsis\" title={displayName}>\n          <BranchLikeIcon branchLike={branchLike} />\n          <span className=\"spacer-left\">{displayName}</span>\n          {isMainBranch(branchLike) && (\n            <span className=\"badge spacer-left\">{translate('branches.main_branch')}</span>\n          )}\n        </div>\n        <div className=\"spacer-left\">\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default React.memo(MenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getBranchLikeKey, isSameBranchLike } from '../../../../../helpers/branch-like';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport MenuItem from './MenuItem';\n\nexport interface MenuItemListProps {\n  branchLikeTree: BranchLikeTree;\n  component: T.Component;\n  hasResults: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport function MenuItemList(props: MenuItemListProps) {\n  let listNode: HTMLUListElement | null = null;\n  let selectedNode: HTMLLIElement | null = null;\n\n  React.useEffect(() => {\n    if (listNode && selectedNode) {\n      scrollToElement(selectedNode, { parent: listNode, smooth: false });\n    }\n  });\n\n  const { branchLikeTree, component, hasResults, onSelect, selectedBranchLike } = props;\n\n  const renderItem = (branchLike: BranchLike, indent?: boolean) => (\n    <MenuItem\n      branchLike={branchLike}\n      component={component}\n      indent={indent}\n      key={getBranchLikeKey(branchLike)}\n      onSelect={onSelect}\n      selected={isSameBranchLike(branchLike, selectedBranchLike)}\n      setSelectedNode={node => (selectedNode = node)}\n    />\n  );\n\n  return (\n    <ul className=\"item-list\" ref={node => (listNode = node)}>\n      {!hasResults && (\n        <li className=\"item\">\n          <span className=\"note\">{translate('no_results')}</span>\n        </li>\n      )}\n\n      {/* BRANCHES & PR */}\n      {[branchLikeTree.mainBranchTree, ...branchLikeTree.branchTree].filter(isDefined).map(tree => (\n        <React.Fragment key={getBranchLikeKey(tree.branch)}>\n          {renderItem(tree.branch)}\n          {tree.pullRequests.length > 0 && (\n            <>\n              <li className=\"item header\">\n                <span className=\"big-spacer-left\">\n                  {translate('branch_like_navigation.pull_requests')}\n                </span>\n              </li>\n              {tree.pullRequests.map(pr => renderItem(pr, true))}\n            </>\n          )}\n          <hr />\n        </React.Fragment>\n      ))}\n\n      {/* PARENTLESS PR (for display during search) */}\n      {branchLikeTree.parentlessPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">{translate('branch_like_navigation.pull_requests')}</li>\n          {branchLikeTree.parentlessPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n\n      {/* ORPHAN PR */}\n      {branchLikeTree.orphanPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">\n            {translate('branch_like_navigation.orphan_pull_requests')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('branch_like_navigation.orphan_pull_requests.tooltip')}\n            />\n          </li>\n          {branchLikeTree.orphanPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n    </ul>\n  );\n}\n\nexport default React.memo(MenuItemList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { KeyCodes } from 'sonar-ui-common/helpers/keycodes';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../../../components/hoc/withRouter';\nimport {\n  getBrancheLikesAsTree,\n  isBranch,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../../../helpers/branch-like';\nimport { getBranchLikeUrl } from '../../../../../helpers/urls';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport MenuItemList from './MenuItemList';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdminComponent?: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  branchLikesToDisplay: BranchLike[];\n  branchLikesToDisplayTree: BranchLikeTree;\n  query: string;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport class Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let selectedBranchLike = undefined;\n\n    if (props.branchLikes.some(b => isSameBranchLike(b, props.currentBranchLike))) {\n      selectedBranchLike = props.currentBranchLike;\n    } else if (props.branchLikes.length > 0) {\n      selectedBranchLike = props.branchLikes[0];\n    }\n\n    this.state = {\n      query: '',\n      selectedBranchLike,\n      ...this.processBranchLikes(props.branchLikes)\n    };\n  }\n\n  processBranchLikes = (branchLikes: BranchLike[]) => {\n    const tree = getBrancheLikesAsTree(branchLikes);\n    return {\n      branchLikesToDisplay: [\n        ...(tree.mainBranchTree\n          ? [tree.mainBranchTree.branch, ...tree.mainBranchTree.pullRequests]\n          : []),\n        ...tree.branchTree.reduce((prev, t) => [...prev, t.branch, ...t.pullRequests], []),\n        ...tree.parentlessPullRequests,\n        ...tree.orphanPullRequests\n      ],\n      branchLikesToDisplayTree: tree\n    };\n  };\n\n  openHighlightedBranchLike = () => {\n    if (this.state.selectedBranchLike) {\n      this.handleOnSelect(this.state.selectedBranchLike);\n    }\n  };\n\n  highlightSiblingBranchlike = (indexDelta: number) => {\n    const selectBranchLikeIndex = this.state.branchLikesToDisplay.findIndex(b =>\n      isSameBranchLike(b, this.state.selectedBranchLike)\n    );\n    const newIndex = selectBranchLikeIndex + indexDelta;\n\n    if (\n      selectBranchLikeIndex !== -1 &&\n      newIndex >= 0 &&\n      newIndex < this.state.branchLikesToDisplay.length\n    ) {\n      this.setState(({ branchLikesToDisplay }) => ({\n        selectedBranchLike: branchLikesToDisplay[newIndex]\n      }));\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.preventDefault();\n        this.openHighlightedBranchLike();\n        break;\n      case KeyCodes.UpArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(-1);\n        break;\n      case KeyCodes.DownArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(+1);\n        break;\n    }\n  };\n\n  handleSearchChange = (query: string) => {\n    const q = query.toLowerCase();\n\n    const filterBranch = (branch: BranchLike) =>\n      isBranch(branch) && branch.name.toLowerCase().includes(q);\n    const filterPullRequest = (pr: BranchLike) =>\n      isPullRequest(pr) && (pr.title.toLowerCase().includes(q) || pr.key.toLowerCase().includes(q));\n\n    const filteredBranchLikes = this.props.branchLikes.filter(\n      bl => filterBranch(bl) || filterPullRequest(bl)\n    );\n\n    this.setState({\n      query: q,\n      selectedBranchLike: filteredBranchLikes.length > 0 ? filteredBranchLikes[0] : undefined,\n      ...this.processBranchLikes(filteredBranchLikes)\n    });\n  };\n\n  handleOnSelect = (branchLike: BranchLike) => {\n    this.setState({ selectedBranchLike: branchLike }, () => {\n      this.props.onClose();\n      this.props.router.push(getBranchLikeUrl(this.props.component.key, branchLike));\n    });\n  };\n\n  render() {\n    const { canAdminComponent, component, onClose } = this.props;\n    const {\n      branchLikesToDisplay,\n      branchLikesToDisplayTree,\n      query,\n      selectedBranchLike\n    } = this.state;\n\n    const showManageLink = component.qualifier === ComponentQualifier.Project && canAdminComponent;\n    const hasResults = branchLikesToDisplay.length > 0;\n\n    return (\n      <DropdownOverlay className=\"branch-like-navigation-menu\" noPadding={true}>\n        <div className=\"search-box-container\">\n          <SearchBox\n            autoFocus={true}\n            onChange={this.handleSearchChange}\n            onKeyDown={this.handleKeyDown}\n            placeholder={translate('branch_like_navigation.search_for_branch_like')}\n            value={query}\n          />\n        </div>\n\n        <div className=\"item-list-container\">\n          <MenuItemList\n            branchLikeTree={branchLikesToDisplayTree}\n            component={component}\n            hasResults={hasResults}\n            onSelect={this.handleOnSelect}\n            selectedBranchLike={selectedBranchLike}\n          />\n        </div>\n\n        {showManageLink && (\n          <div className=\"hint-container text-right\">\n            <Link\n              onClick={() => onClose()}\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branch_like_navigation.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Toggler from 'sonar-ui-common/components/controls/Toggler';\nimport { withAppState } from '../../../../../components/hoc/withAppState';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport './BranchLikeNavigation.css';\nimport CurrentBranchLike from './CurrentBranchLike';\nimport Menu from './Menu';\n\nexport interface BranchLikeNavigationProps {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike;\n}\n\nexport function BranchLikeNavigation(props: BranchLikeNavigationProps) {\n  const {\n    appState: { branchesEnabled },\n    branchLikes,\n    component,\n    component: { configuration },\n    currentBranchLike\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const canAdminComponent = configuration && configuration.showSettings;\n  const hasManyBranches = branchLikes.length >= 2;\n  const isMenuEnabled = branchesEnabled && hasManyBranches;\n\n  const currentBranchLikeElement = (\n    <CurrentBranchLike\n      branchesEnabled={Boolean(branchesEnabled)}\n      component={component}\n      currentBranchLike={currentBranchLike}\n      hasManyBranches={hasManyBranches}\n    />\n  );\n\n  return (\n    <span\n      className={classNames('big-spacer-left flex-0 branch-like-navigation-toggler-container', {\n        dropdown: isMenuEnabled\n      })}>\n      {isMenuEnabled ? (\n        <Toggler\n          onRequestClose={() => setIsMenuOpen(false)}\n          open={isMenuOpen}\n          overlay={\n            <Menu\n              branchLikes={branchLikes}\n              canAdminComponent={canAdminComponent}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              onClose={() => setIsMenuOpen(false)}\n            />\n          }>\n          <a\n            className=\"link-base-color link-no-underline\"\n            href=\"#\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {currentBranchLikeElement}\n          </a>\n        </Toggler>\n      ) : (\n        currentBranchLikeElement\n      )}\n    </span>\n  );\n}\n\nexport default withAppState(React.memo(BranchLikeNavigation));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPullRequest } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface CurrentBranchLikeMergeInformationProps {\n  currentBranchLike: BranchLike;\n}\n\nexport function CurrentBranchLikeMergeInformation(props: CurrentBranchLikeMergeInformationProps) {\n  const { currentBranchLike } = props;\n\n  if (!isPullRequest(currentBranchLike)) {\n    return null;\n  }\n\n  return (\n    <span className=\"big-spacer-left flex-shrink note text-ellipsis\">\n      <FormattedMessage\n        defaultMessage={translate('branch_like_navigation.for_merge_into_x_from_y')}\n        id=\"branch_like_navigation.for_merge_into_x_from_y\"\n        values={{\n          target: <strong>{currentBranchLike.target}</strong>,\n          branch: <strong>{currentBranchLike.branch}</strong>\n        }}\n      />\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLikeMergeInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { last } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { isMainBranch } from '../../../../helpers/branch-like';\nimport { getProjectUrl } from '../../../../helpers/urls';\nimport { BranchLike } from '../../../../types/branch-like';\n\ninterface Props {\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n}\n\nexport function Breadcrumb(props: Props) {\n  const {\n    component: { breadcrumbs },\n    currentBranchLike\n  } = props;\n  const lastBreadcrumbElement = last(breadcrumbs);\n  const isNoMainBranch = currentBranchLike && !isMainBranch(currentBranchLike);\n\n  return (\n    <div className=\"big flex-shrink display-flex-center\">\n      {breadcrumbs.map((breadcrumbElement, i) => {\n        const isFirst = i === 0;\n        const isNotLast = i < breadcrumbs.length - 1;\n\n        return (\n          <span className=\"flex-shrink display-flex-center\" key={breadcrumbElement.key}>\n            {isFirst && lastBreadcrumbElement && (\n              <QualifierIcon className=\"spacer-right\" qualifier={lastBreadcrumbElement.qualifier} />\n            )}\n            {isNoMainBranch || isNotLast ? (\n              <Link\n                className=\"link-no-underline text-ellipsis\"\n                title={breadcrumbElement.name}\n                to={getProjectUrl(breadcrumbElement.key)}>\n                {breadcrumbElement.name}\n              </Link>\n            ) : (\n              <span className=\"text-ellipsis\" title={breadcrumbElement.name}>\n                {breadcrumbElement.name}\n              </span>\n            )}\n            {isNotLast && <span className=\"slash-separator\" />}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(Breadcrumb);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport Favorite from '../../../../components/controls/Favorite';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport BranchLikeNavigation from './branch-like/BranchLikeNavigation';\nimport CurrentBranchLikeMergeInformation from './branch-like/CurrentBranchLikeMergeInformation';\nimport { Breadcrumb } from './Breadcrumb';\n\nexport interface HeaderProps {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n  currentUser: T.CurrentUser;\n}\n\nexport function Header(props: HeaderProps) {\n  const { branchLikes, component, currentBranchLike, currentUser } = props;\n\n  return (\n    <>\n      <Helmet title={component.name} />\n      <header className=\"display-flex-center flex-shrink\">\n        <Breadcrumb component={component} currentBranchLike={currentBranchLike} />\n        {isLoggedIn(currentUser) && (\n          <Favorite\n            className=\"spacer-left\"\n            component={component.key}\n            favorite={Boolean(component.isFavorite)}\n            qualifier={component.qualifier}\n          />\n        )}\n        {currentBranchLike && (\n          <>\n            <BranchLikeNavigation\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={currentBranchLike}\n            />\n            <CurrentBranchLikeMergeInformation currentBranchLike={currentBranchLike} />\n          </>\n        )}\n      </header>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(React.memo(Header));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst AnalysisWarningsModal = lazyLoad(() =>\n  import('../../../../components/common/AnalysisWarningsModal')\n);\n\ninterface Props {\n  warnings: string[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Alert className=\"js-component-analysis-warnings flex-1\" display=\"inline\" variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analysis_had_warnings')}\n            id=\"component_navigation.last_analysis_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  <FormattedMessage\n                    defaultMessage={translate('component_navigation.x_warnings')}\n                    id=\"component_navigation.x_warnings\"\n                    values={{\n                      warningsCount: this.props.warnings.length\n                    }}\n                  />\n                </a>\n              )\n            }}\n          />\n        </Alert>\n        {this.state.modal && (\n          <AnalysisWarningsModal onClose={this.handleCloseModal} warnings={this.props.warnings} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport DateTimeFormatter from '../../../../components/intl/DateTimeFormatter';\nimport { isBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport './HeaderMeta.css';\n\nexport interface HeaderMetaProps {\n  branchLike?: BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  warnings: string[];\n}\n\nexport function HeaderMeta(props: HeaderMetaProps) {\n  const { branchLike, component, currentUser, warnings } = props;\n\n  const isABranch = isBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && isABranch;\n\n  return (\n    <>\n      <div className=\"display-flex-center flex-0 small\">\n        {warnings.length > 0 && (\n          <span className=\"header-meta-warnings\">\n            <ComponentNavWarnings warnings={warnings} />\n          </span>\n        )}\n        {component.analysisDate && (\n          <span className=\"spacer-left nowrap note\">\n            <DateTimeFormatter date={component.analysisDate} />\n          </span>\n        )}\n        {displayVersion && (\n          <span className=\"spacer-left nowrap note\">{`${translate('version')} ${\n            component.version\n          }`}</span>\n        )}\n        {isLoggedIn(currentUser) && isABranch && currentPage !== undefined && (\n          <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n        )}\n      </div>\n      {isPullRequest(branchLike) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n\n  switch (component.qualifier) {\n    case ComponentQualifier.Portfolio:\n    case ComponentQualifier.SubPortfolio:\n      currentPage = { type: 'PORTFOLIO', component: component.key };\n      break;\n    case ComponentQualifier.Application:\n      currentPage = {\n        type: 'APPLICATION',\n        component: component.key,\n        branch: isBranch(branchLike) ? branchLike.name : undefined\n      };\n      break;\n    case ComponentQualifier.Project:\n      // when home page is set to the default branch of a project, its name is returned as `undefined`\n      currentPage = {\n        type: 'PROJECT',\n        component: component.key,\n        branch: isBranch(branchLike) ? branchLike.name : undefined\n      };\n      break;\n  }\n\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(HeaderMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport NavBarTabs from 'sonar-ui-common/components/ui/NavBarTabs';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getBranchLikeQuery, isMainBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport './Menu.css';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/baseline',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: BranchLike | undefined;\n  component: T.Component;\n  onToggleProjectInfo: () => void;\n}\n\nexport class Menu extends React.PureComponent<Props> {\n  isProject() {\n    return this.props.component.qualifier === ComponentQualifier.Project;\n  }\n\n  isDeveloper() {\n    return this.props.component.qualifier === ComponentQualifier.Developper;\n  }\n\n  isPortfolio() {\n    const { qualifier } = this.props.component;\n    return (\n      qualifier === ComponentQualifier.Portfolio || qualifier === ComponentQualifier.SubPortfolio\n    );\n  }\n\n  isApplication() {\n    return this.props.component.qualifier === ComponentQualifier.Application;\n  }\n\n  getConfiguration() {\n    return this.props.component.configuration || {};\n  }\n\n  getQuery = () => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink() {\n    const pathname = this.isPortfolio() ? '/portfolio' : '/dashboard';\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname, query: this.getQuery() }}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCodeLink() {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname: '/code', query: this.getQuery() }}>\n          {this.isPortfolio() || this.isApplication()\n            ? translate('view_projects.page')\n            : translate('code.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderActivityLink() {\n    const { branchLike } = this.props;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/activity', query: this.getQuery() }}>\n          {translate('project_activity.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderIssuesLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/issues', query: { ...this.getQuery(), resolved: 'false' } }}>\n          {translate('issues.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderComponentMeasuresLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/component_measures', query: this.getQuery() }}>\n          {translate('layout.measures')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderSecurityHotspotsLink() {\n    return (\n      !this.isPortfolio() && (\n        <li>\n          <Link\n            activeClassName=\"active\"\n            to={{ pathname: '/security_hotspots', query: this.getQuery() }}>\n            {translate('layout.security_hotspots')}\n          </Link>\n        </li>\n      )\n    );\n  }\n\n  renderSecurityReports() {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query: this.getQuery()\n          }}>\n          {translate('layout.security_reports')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderAdministration() {\n    const { branchLike, component } = this.props;\n\n    if (!this.getConfiguration().showSettings || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks();\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {hasMessage('layout.settings', component.qualifier)\n              ? translate('layout.settings', component.qualifier)\n              : translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderAdministrationLinks() {\n    return [\n      this.renderSettingsLink(),\n      this.renderBranchesLink(),\n      this.renderBaselineLink(),\n      this.renderProfilesLink(),\n      this.renderQualityGateLink(),\n      this.renderCustomMeasuresLink(),\n      this.renderLinksLink(),\n      this.renderPermissionsLink(),\n      this.renderBackgroundTasksLink(),\n      this.renderUpdateKeyLink(),\n      this.renderWebhooksLink(),\n      ...this.renderAdminExtensions(),\n      this.renderDeletionLink()\n    ];\n  }\n\n  renderProjectInformationButton() {\n    if (isPullRequest(this.props.branchLike)) {\n      return null;\n    }\n\n    return (\n      (this.isProject() || this.isApplication()) && (\n        <li>\n          <a\n            className=\"menu-button\"\n            onClick={(e: React.SyntheticEvent<HTMLAnchorElement>) => {\n              e.preventDefault();\n              e.currentTarget.blur();\n              this.props.onToggleProjectInfo();\n            }}\n            role=\"button\"\n            tabIndex={0}>\n            <BulletListIcon className=\"little-spacer-right\" />\n            {translate(this.isProject() ? 'project' : 'application', 'info.title')}\n          </a>\n        </li>\n      )\n    );\n  }\n\n  renderSettingsLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/settings', query: this.getQuery() }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBranchesLink() {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !this.isProject() ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/branches', query: this.getQuery() }}>\n          {translate('project_branch_pull_request.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBaselineLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"baseline\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/baseline', query: this.getQuery() }}>\n          {translate('project_baseline.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderProfilesLink() {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_profiles', query: this.getQuery() }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderQualityGateLink() {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_gate', query: this.getQuery() }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCustomMeasuresLink() {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/custom_measures', query: this.getQuery() }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderLinksLink() {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/links', query: this.getQuery() }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderPermissionsLink() {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project_roles', query: this.getQuery() }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBackgroundTasksLink() {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/background_tasks', query: this.getQuery() }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderUpdateKeyLink() {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/key', query: this.getQuery() }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderWebhooksLink() {\n    if (!this.getConfiguration().showSettings || !this.isProject()) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/webhooks', query: this.getQuery() }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderDeletionLink() {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (\n      ![\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/deletion', query: this.getQuery() }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { ...this.getQuery(), qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions() {\n    if (this.props.branchLike && !isMainBranch(this.props.branchLike)) {\n      return [];\n    }\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true));\n  }\n\n  renderExtensions() {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n    if (\n      withoutSecurityExtension.length === 0 ||\n      (this.props.branchLike && !isMainBranch(this.props.branchLike))\n    ) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"display-flex-center display-flex-space-between\">\n        <NavBarTabs>\n          {this.renderDashboardLink()}\n          {this.renderIssuesLink()}\n          {this.renderSecurityHotspotsLink()}\n          {this.renderSecurityReports()}\n          {this.renderComponentMeasuresLink()}\n          {this.renderCodeLink()}\n          {this.renderActivityLink()}\n          {this.renderExtensions()}\n        </NavBarTabs>\n        <NavBarTabs>\n          {this.renderAdministration()}\n          {this.renderProjectInformationButton()}\n        </NavBarTabs>\n      </div>\n    );\n  }\n}\n\nexport default withAppState(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport EscKeydownHandler from 'sonar-ui-common/components/controls/EscKeydownHandler';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport './InfoDrawer.css';\n\nexport interface InfoDrawerProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onClose: () => void;\n  top: number;\n}\n\nexport default function InfoDrawer(props: InfoDrawerProps) {\n  const { children, displayed, onClose, top } = props;\n\n  return (\n    <div\n      className={classNames('info-drawer info-drawer-pane', { open: displayed })}\n      style={{ top }}>\n      <div className=\"close-button\">\n        <ClearButton onClick={onClose} />\n      </div>\n      {displayed && (\n        <EscKeydownHandler onKeydown={onClose}>\n          <OutsideClickHandler onClickOutside={onClose}>\n            <div className=\"display-flex-column max-height-100\">{children}</div>\n          </OutsideClickHandler>\n        </EscKeydownHandler>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { getLocalizedMetricName } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { getHostUrl, getPathUrlAsString } from 'sonar-ui-common/helpers/urls';\nimport { getProjectUrl } from '../../../../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\nexport type BadgeFormats = 'md' | 'url';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  format?: BadgeFormats;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeSnippet(type: BadgeType, options: BadgeOptions) {\n  const url = getBadgeUrl(type, options);\n  const { branch, format = 'md', metric = 'alert_status', project } = options;\n\n  if (format === 'url') {\n    return url;\n  } else {\n    let label;\n    let projectUrl;\n\n    switch (type) {\n      case BadgeType.marketing:\n        label = 'SonarCloud';\n        break;\n      case BadgeType.measure:\n        label = getLocalizedMetricName({ key: metric });\n        break;\n      case BadgeType.qualityGate:\n      default:\n        label = 'Quality gate';\n        break;\n    }\n\n    if (project) {\n      projectUrl = getPathUrlAsString(getProjectUrl(project, branch), false);\n    }\n\n    const mdImage = `![${label}](${url})`;\n    return projectUrl ? `[${mdImage}](${projectUrl})` : mdImage;\n  }\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BadgeType } from './utils';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchWebApi } from '../../../../../../api/web-api';\nimport { BadgeColors, BadgeFormats, BadgeOptions, BadgeType } from './utils';\n\ninterface Props {\n  className?: string;\n  metrics: T.Dict<T.Metric>;\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(d => d.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(w => w.key === 'measure');\n          const param = ws && ws.params && ws.params.find(p => p.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () => {\n    return ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n  };\n\n  getFormatOptions = () => {\n    return ['md', 'url'].map(format => ({\n      label: translate('overview.badges.options.formats', format),\n      value: format\n    }));\n  };\n\n  getMetricOptions = () => {\n    return this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n  };\n\n  handleColorChange = ({ value }: { value: BadgeColors }) => {\n    this.props.updateOptions({ color: value });\n  };\n\n  handleFormatChange = ({ value }: { value: BadgeFormats }) => {\n    this.props.updateOptions({ format: value });\n  };\n\n  handleMetricChange = ({ value }: { value: string }) => {\n    this.props.updateOptions({ metric: value });\n  };\n\n  renderBadgeType = (type: BadgeType, options: BadgeOptions) => {\n    if (type === BadgeType.marketing) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-color\">\n            {translate('color')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            name=\"badge-color\"\n            onChange={this.handleColorChange}\n            options={this.getColorOptions()}\n            searchable={false}\n            value={options.color}\n          />\n        </>\n      );\n    } else if (type === BadgeType.measure) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-metric\">\n            {translate('overview.badges.metric')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            menuStyle={{ maxHeight: 100 }}\n            name=\"badge-metric\"\n            onChange={this.handleMetricChange}\n            options={this.getMetricOptions()}\n            searchable={false}\n            value={options.metric}\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { className, options, type } = this.props;\n    return (\n      <div className={className}>\n        {this.renderBadgeType(type, options)}\n\n        <label\n          className={classNames('spacer-right', {\n            'spacer-top': type !== BadgeType.qualityGate\n          })}\n          htmlFor=\"badge-format\">\n          {translate('format')}:\n        </label>\n        <Select\n          className=\"input-medium\"\n          clearable={false}\n          name=\"badge-format\"\n          onChange={this.handleFormatChange}\n          options={this.getFormatOptions()}\n          searchable={false}\n          value={this.props.options.format || 'md'}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CodeSnippet from '../../../../../../components/common/CodeSnippet';\nimport { getBranchLikeQuery } from '../../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../../types/branch-like';\nimport { MetricKey } from '../../../../../../types/metrics';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport './styles.css';\nimport { BadgeOptions, BadgeType, getBadgeSnippet, getBadgeUrl } from './utils';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: T.Dict<T.Metric>;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class ProjectBadges extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: MetricKey.alert_status }\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n\n    return (\n      <div className=\"display-flex-column\">\n        <h3>{translate('overview.badges.get_badge', qualifier)}</h3>\n        <p className=\"big-spacer-bottom\">{translate('overview.badges.description', qualifier)}</p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.measure === selectedType}\n          type={BadgeType.measure}\n          url={getBadgeUrl(BadgeType.measure, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.measure, 'description', qualifier)}\n        </p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.qualityGate === selectedType}\n          type={BadgeType.qualityGate}\n          url={getBadgeUrl(BadgeType.qualityGate, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.qualityGate, 'description', qualifier)}\n        </p>\n        <BadgeParams\n          className=\"big-spacer-bottom display-flex-column\"\n          metrics={this.props.metrics}\n          options={badgeOptions}\n          type={selectedType}\n          updateOptions={this.handleUpdateOptions}\n        />\n        <CodeSnippet isOneLine={true} snippet={getBadgeSnippet(selectedType, fullBadgeOptions)} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport BackIcon from 'sonar-ui-common/components/icons/BackIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface InfoDrawerPageProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onPageChange: () => void;\n}\n\nexport default function InfoDrawerPage(props: InfoDrawerPageProps) {\n  const { children, displayed, onPageChange } = props;\n  return (\n    <div\n      className={classNames(\n        'info-drawer-page info-drawer-pane display-flex-column overflow-hidden',\n        {\n          open: displayed\n        }\n      )}>\n      <h2 className=\"back-button big-padded bordered-bottom\" onClick={() => onPageChange()}>\n        <BackIcon className=\"little-spacer-right\" />\n        {translate('back')}\n      </h2>\n\n      {displayed && <div className=\"overflow-y-auto big-padded\">{children}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from '../../../../../../apps/account/notifications/NotificationsList';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../../../../components/hoc/withNotifications';\n\ninterface Props {\n  className?: string;\n  component: T.Component;\n}\n\nexport function ProjectNotifications(props: WithNotificationsProps & Props) {\n  const { channels, component, loading, notifications, perProjectTypes } = props;\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ project: component.key, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      project: component.key,\n      channel,\n      type\n    });\n  };\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${component.key}-${type}-${channel}`;\n  };\n\n  const projectNotifications = notifications.filter(n => n.project && n.project === component.key);\n\n  return (\n    <>\n      <h3>{translate('project.info.notifications')}</h3>\n\n      <Alert className=\"spacer-top\" variant=\"info\">\n        {translate('notification.dispatcher.information')}\n      </Alert>\n\n      <DeferredSpinner loading={loading}>\n        <table className=\"data zebra notifications-table\">\n          <thead>\n            <tr>\n              <th aria-label={translate('project')} />\n              {channels.map(channel => (\n                <th className=\"text-center\" key={channel}>\n                  <h4>{translate('notification.channel', channel)}</h4>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <NotificationsList\n            channels={channels}\n            checkboxId={getCheckboxId}\n            notifications={projectNotifications}\n            onAdd={handleAddNotification}\n            onRemove={handleRemoveNotification}\n            project={true}\n            types={perProjectTypes}\n          />\n        </table>\n      </DeferredSpinner>\n    </>\n  );\n}\n\nexport default withNotifications(ProjectNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ProjectInformationPages {\n  main,\n  badges,\n  notifications\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\n\nexport interface DrawerLinkProps<P> {\n  label: string;\n  onPageChange: (page: P) => void;\n  to: P;\n}\n\nexport function DrawerLink<P>(props: DrawerLinkProps<P>) {\n  const { label, to } = props;\n\n  return (\n    <a\n      className=\"display-flex-space-between bordered-bottom big-padded\"\n      onClick={() => props.onPageChange(to)}\n      role=\"link\"\n      tabIndex={0}>\n      {label}\n      <ChevronRightIcon />\n    </a>\n  );\n}\n\nexport default React.memo(DrawerLink);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h3>{translate('overview.project_key', qualifier)}</h3>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" readOnly={true} type=\"text\" value={componentKey} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectLinks } from '../../../../../../api/projectLinks';\nimport { orderLinks } from '../../../../../../helpers/projectLinks';\nimport MetaLink from './MetaLink';\n\ninterface Props {\n  component: T.LightComponent;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <>\n        <div className=\"big-padded bordered-bottom\">\n          <h3>{translate('overview.external_links')}</h3>\n          <ul className=\"project-info-list\">\n            {orderedLinks.map(link => (\n              <MetaLink key={link.id} link={link} />\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityGateUrl } from '../../../../../../helpers/urls';\n\ninterface Props {\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate }: Props) {\n  return (\n    <>\n      <h3>{translate('project.info.quality_gate')}</h3>\n\n      <ul className=\"project-info-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">({translate('default')})</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../../../../api/rules';\nimport { getQualityProfileUrl } from '../../../../../../helpers/urls';\nimport { getLanguages, Store } from '../../../../../../store/rootReducer';\n\ninterface StateProps {\n  languages: T.Languages;\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  profiles: T.ComponentQualityProfile[];\n}\n\ninterface State {\n  deprecatedByKey: T.Dict<number>;\n}\n\nexport class MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const existingProfiles = this.props.profiles.filter(p => !p.deleted);\n    const requests = existingProfiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: T.Dict<number> = {};\n          responses.forEach((count, i) => {\n            const profileKey = existingProfiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      organization: undefined,\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: T.ComponentQualityProfile) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">({languageName})</span>\n        {profile.deleted ? (\n          profile.name\n        ) : (\n          <Link to={getQualityProfileUrl(profile.name, profile.language)}>{profile.name}</Link>\n        )}\n      </div>\n    );\n\n    if (profile.deleted) {\n      const tooltip = translateWithParameters('overview.deleted_profile', profile.name);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deleted-profile\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h3 className={headerClassName}>{translate('overview.quality_profiles')}</h3>\n\n        <ul className=\"project-info-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure, localizeMetric } from 'sonar-ui-common/helpers/measures';\nimport DrilldownLink from '../../../../../../components/shared/DrilldownLink';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport { MetricKey } from '../../../../../../types/metrics';\n\nexport interface MetaSizeProps {\n  component: T.Component;\n  measures: T.Measure[];\n}\n\nexport default function MetaSize({ component, measures }: MetaSizeProps) {\n  const isApp = component.qualifier === ComponentQualifier.Application;\n  const ncloc = measures.find(measure => measure.metric === MetricKey.ncloc);\n  const projects = isApp\n    ? measures.find(measure => measure.metric === MetricKey.projects)\n    : undefined;\n\n  return (\n    <>\n      <h3>{localizeMetric(MetricKey.ncloc)}</h3>\n      <div className=\"display-flex-center\">\n        {ncloc ? (\n          <>\n            <DrilldownLink className=\"huge\" component={component.key} metric={MetricKey.ncloc}>\n              {formatMeasure(ncloc.value, 'SHORT_INT')}\n            </DrilldownLink>\n\n            <span className=\"spacer-left\">\n              <SizeRating value={Number(ncloc.value)} />\n            </span>\n          </>\n        ) : (\n          <span>0</span>\n        )}\n\n        {isApp && (\n          <span className=\"huge-spacer-left display-inline-flex-center\">\n            {projects ? (\n              <DrilldownLink component={component.key} metric={MetricKey.projects}>\n                <span className=\"big\">{formatMeasure(projects.value, 'SHORT_INT')}</span>\n              </DrilldownLink>\n            ) : (\n              <span className=\"big\">0</span>\n            )}\n            <span className=\"little-spacer-left text-muted\">\n              {translate('metric.projects.name')}\n            </span>\n          </span>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, without } from 'lodash';\nimport * as React from 'react';\nimport { searchProjectTags } from '../../../../../../api/components';\nimport TagsSelector from '../../../../../../components/tags/TagsSelector';\n\ninterface Props {\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setProjectTags } from '../../../../../../api/components';\nimport TagsList from '../../../../../../components/tags/TagsList';\nimport MetaTagsSelector from './MetaTagsSelector';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class MetaTags extends React.PureComponent<Props> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  handleSetProjectTags = (values: string[]) => {\n    setProjectTags({\n      project: this.props.component.key,\n      tags: values.join(',')\n    }).then(\n      () => this.props.onComponentChange({ tags: values }),\n      () => {}\n    );\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"project-info-tags\" ref={card => (this.card = card)}>\n          <Dropdown\n            closeOnClick={false}\n            closeOnClickOutside={true}\n            overlay={\n              <MetaTagsSelector\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            }\n            overlayPlacement={PopupPlacement.BottomLeft}>\n            <ButtonLink innerRef={tagsList => (this.tagsList = tagsList)} stopPropagation={true}>\n              <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n            </ButtonLink>\n          </Dropdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top project-info-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../../../components/common/PrivacyBadgeContainer';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport DrawerLink from './DrawerLink';\nimport MetaKey from './meta/MetaKey';\nimport MetaLinks from './meta/MetaLinks';\nimport MetaQualityGate from './meta/MetaQualityGate';\nimport MetaQualityProfiles from './meta/MetaQualityProfiles';\nimport MetaSize from './meta/MetaSize';\nimport MetaTags from './meta/MetaTags';\nimport { ProjectInformationPages } from './ProjectInformationPages';\n\nexport interface ProjectInformationRendererProps {\n  canConfigureNotifications: boolean;\n  canUseBadges: boolean;\n  component: T.Component;\n  measures?: T.Measure[];\n  onComponentChange: (changes: {}) => void;\n  onPageChange: (page: ProjectInformationPages) => void;\n}\n\nexport function ProjectInformationRenderer(props: ProjectInformationRendererProps) {\n  const { canConfigureNotifications, canUseBadges, component, measures = [] } = props;\n\n  const isApp = component.qualifier === ComponentQualifier.Application;\n\n  return (\n    <>\n      <div>\n        <h2 className=\"big-padded bordered-bottom\">\n          {translate(isApp ? 'application' : 'project', 'info.title')}\n        </h2>\n      </div>\n\n      <div className=\"overflow-y-auto\">\n        {(component.description || !isApp) && (\n          <div className=\"big-padded bordered-bottom\">\n            <div className=\"display-flex-center\">\n              <h3 className=\"spacer-right\">{translate('project.info.description')}</h3>\n              {component.visibility && (\n                <PrivacyBadgeContainer\n                  organization={undefined}\n                  qualifier={component.qualifier}\n                  tooltipProps={{ projectKey: component.key }}\n                  visibility={component.visibility}\n                />\n              )}\n            </div>\n\n            {component.description && <p className=\"spacer-bottom\">{component.description}</p>}\n\n            {!isApp && (\n              <MetaTags component={component} onComponentChange={props.onComponentChange} />\n            )}\n          </div>\n        )}\n\n        <div className=\"big-padded bordered-bottom it__project-loc-value\">\n          <MetaSize component={component} measures={measures} />\n        </div>\n\n        {(component.qualityGate ||\n          (component.qualityProfiles && component.qualityProfiles.length > 0)) && (\n          <>\n            <div className=\"big-padded bordered-bottom\">\n              {component.qualityGate && <MetaQualityGate qualityGate={component.qualityGate} />}\n\n              {component.qualityProfiles && component.qualityProfiles.length > 0 && (\n                <MetaQualityProfiles\n                  headerClassName={component.qualityGate ? 'big-spacer-top' : undefined}\n                  profiles={component.qualityProfiles}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n        {!isApp && <MetaLinks component={component} />}\n\n        <div className=\"big-padded bordered-bottom\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n        </div>\n\n        {canUseBadges && (\n          <DrawerLink\n            label={translate('overview.badges.get_badge', component.qualifier)}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.badges}\n          />\n        )}\n        {canConfigureNotifications && (\n          <DrawerLink\n            label={translate('project.info.to_notifications')}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.notifications}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ProjectInformationRenderer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getMeasures } from '../../../../../api/measures';\nimport { isLoggedIn } from '../../../../../helpers/users';\nimport { fetchMetrics } from '../../../../../store/rootActions';\nimport { getCurrentUser, getMetrics, Store } from '../../../../../store/rootReducer';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { MetricKey } from '../../../../../types/metrics';\nimport ProjectBadges from './badges/ProjectBadges';\nimport InfoDrawerPage from './InfoDrawerPage';\nimport ProjectNotifications from './notifications/ProjectNotifications';\nimport './ProjectInformation.css';\nimport { ProjectInformationPages } from './ProjectInformationPages';\nimport ProjectInformationRenderer from './ProjectInformationRenderer';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  currentUser: T.CurrentUser;\n  fetchMetrics: () => void;\n  onComponentChange: (changes: {}) => void;\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface State {\n  measures?: T.Measure[];\n  page: ProjectInformationPages;\n}\n\nexport class ProjectInformation extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    page: ProjectInformationPages.main\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  setPage = (page: ProjectInformationPages = ProjectInformationPages.main) => {\n    this.setState({ page });\n  };\n\n  loadMeasures = () => {\n    const {\n      component: { key }\n    } = this.props;\n\n    return getMeasures({\n      component: key,\n      metricKeys: [MetricKey.ncloc, MetricKey.projects].join()\n    }).then(measures => {\n      if (this.mounted) {\n        this.setState({ measures });\n      }\n    });\n  };\n\n  render() {\n    const { branchLike, component, currentUser, metrics } = this.props;\n    const { measures, page } = this.state;\n\n    const canConfigureNotifications =\n      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;\n    const canUseBadges =\n      metrics !== undefined &&\n      component.visibility !== 'private' &&\n      (component.qualifier === ComponentQualifier.Application ||\n        component.qualifier === ComponentQualifier.Project);\n\n    return (\n      <>\n        <ProjectInformationRenderer\n          canConfigureNotifications={canConfigureNotifications}\n          canUseBadges={canUseBadges}\n          component={component}\n          measures={measures}\n          onComponentChange={this.props.onComponentChange}\n          onPageChange={this.setPage}\n        />\n        {canUseBadges && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.badges}\n            onPageChange={this.setPage}>\n            <ProjectBadges\n              branchLike={branchLike}\n              metrics={metrics}\n              project={component.key}\n              qualifier={component.qualifier}\n            />\n          </InfoDrawerPage>\n        )}\n        {canConfigureNotifications && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.notifications}\n            onPageChange={this.setPage}>\n            <ProjectNotifications component={component} />\n          </InfoDrawerPage>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ContextNavBar from 'sonar-ui-common/components/ui/ContextNavBar';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { rawSizes } from '../../../theme';\nimport RecentHistory from '../../RecentHistory';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport Header from './Header';\nimport HeaderMeta from './HeaderMeta';\nimport Menu from './Menu';\nimport InfoDrawer from './projectInformation/InfoDrawer';\nimport ProjectInformation from './projectInformation/ProjectInformation';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n  warnings: string[];\n}\n\nexport default function ComponentNav(props: Props) {\n  const {\n    branchLikes,\n    component,\n    currentBranchLike,\n    currentTask,\n    currentTaskOnSameBranch,\n    isInProgress,\n    isPending,\n    warnings\n  } = props;\n  const { contextNavHeightRaw, globalNavHeightRaw } = rawSizes;\n\n  const [displayProjectInfo, setDisplayProjectInfo] = React.useState(false);\n\n  React.useEffect(() => {\n    const { breadcrumbs, key, name, organization } = component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (\n      [\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application,\n        ComponentQualifier.Developper\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      RecentHistory.add(key, name, qualifier.toLowerCase(), organization);\n    }\n  }, [component, component.key]);\n\n  let notifComponent;\n  if (isInProgress || isPending || (currentTask && currentTask.status === STATUSES.FAILED)) {\n    notifComponent = (\n      <ComponentNavBgTaskNotif\n        component={component}\n        currentTask={currentTask}\n        currentTaskOnSameBranch={currentTaskOnSameBranch}\n        isInProgress={isInProgress}\n        isPending={isPending}\n      />\n    );\n  }\n\n  const contextNavHeight = notifComponent ? contextNavHeightRaw + 30 : contextNavHeightRaw;\n\n  return (\n    <ContextNavBar height={contextNavHeight} id=\"context-navigation\" notif={notifComponent}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between little-padded-top', {\n          'padded-bottom': warnings.length === 0\n        })}>\n        <Header\n          branchLikes={branchLikes}\n          component={component}\n          currentBranchLike={currentBranchLike}\n        />\n        <HeaderMeta branchLike={currentBranchLike} component={component} warnings={warnings} />\n      </div>\n      <Menu\n        branchLike={currentBranchLike}\n        component={component}\n        onToggleProjectInfo={() => setDisplayProjectInfo(!displayProjectInfo)}\n      />\n      <InfoDrawer\n        displayed={displayProjectInfo}\n        onClose={() => setDisplayProjectInfo(false)}\n        top={globalNavHeightRaw + contextNavHeightRaw}>\n        <ProjectInformation\n          branchLike={currentBranchLike}\n          component={component}\n          onComponentChange={props.onComponentChange}\n        />\n      </InfoDrawer>\n    </ContextNavBar>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getAnalysisStatus, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { STATUSES } from '../../apps/background-tasks/constants';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../helpers/branch-like';\nimport { isSonarCloud } from '../../helpers/system';\nimport {\n  fetchOrganization,\n  registerBranchStatus,\n  requireAuthorization\n} from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport { ComponentContext } from './ComponentContext';\nimport ComponentNav from './nav/component/ComponentNav';\n\ninterface Props {\n  children: React.ReactElement;\n  fetchOrganization: (organization: string) => void;\n  location: Pick<Location, 'query'>;\n  registerBranchStatus: (branchLike: BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component?: T.Component;\n  currentTask?: T.Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: T.Task[];\n  warnings: string[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (response?: Response) => {\n      if (this.mounted) {\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        if (isSonarCloud()) {\n          this.props.fetchOrganization(componentWithQualifier.organization);\n        }\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: BranchLike;\n    branchLikes: BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === STATUSES.IN_PROGRESS\n              );\n\n              const currentTaskChanged =\n                currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id;\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === STATUSES.PENDING);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: T.Task, branchLike?: BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === STATUSES.FAILED || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: T.Task[], branchLike?: BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (task: Pick<T.Task, 'branch' | 'pullRequest'>, branchLike?: BranchLike) => {\n    if (branchLike && !isMainBranch(branchLike)) {\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isBranch(branchLike)) {\n        return branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            onComponentChange={this.handleComponentChange}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization, registerBranchStatus, requireAuthorization };\n\nexport default withRouter(connect(null, mapDispatchToProps)(ComponentContainer));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport const formatterOption = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nexport default function DateTimeFormatter({ children, date }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...formatterOption}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum MetricKey {\n  alert_status = 'alert_status',\n  blocker_violations = 'blocker_violations',\n  branch_coverage = 'branch_coverage',\n  bugs = 'bugs',\n  burned_budget = 'burned_budget',\n  business_value = 'business_value',\n  class_complexity = 'class_complexity',\n  classes = 'classes',\n  code_smells = 'code_smells',\n  cognitive_complexity = 'cognitive_complexity',\n  comment_lines = 'comment_lines',\n  comment_lines_data = 'comment_lines_data',\n  comment_lines_density = 'comment_lines_density',\n  complexity = 'complexity',\n  complexity_in_classes = 'complexity_in_classes',\n  complexity_in_functions = 'complexity_in_functions',\n  conditions_to_cover = 'conditions_to_cover',\n  confirmed_issues = 'confirmed_issues',\n  coverage = 'coverage',\n  critical_violations = 'critical_violations',\n  development_cost = 'development_cost',\n  directories = 'directories',\n  duplicated_blocks = 'duplicated_blocks',\n  duplicated_files = 'duplicated_files',\n  duplicated_lines = 'duplicated_lines',\n  duplicated_lines_density = 'duplicated_lines_density',\n  duplications_data = 'duplications_data',\n  effort_to_reach_maintainability_rating_a = 'effort_to_reach_maintainability_rating_a',\n  executable_lines_data = 'executable_lines_data',\n  false_positive_issues = 'false_positive_issues',\n  file_complexity = 'file_complexity',\n  file_complexity_distribution = 'file_complexity_distribution',\n  filename_size = 'filename_size',\n  filename_size_rating = 'filename_size_rating',\n  files = 'files',\n  function_complexity = 'function_complexity',\n  function_complexity_distribution = 'function_complexity_distribution',\n  functions = 'functions',\n  generated_lines = 'generated_lines',\n  generated_ncloc = 'generated_ncloc',\n  info_violations = 'info_violations',\n  last_change_on_maintainability_rating = 'last_change_on_maintainability_rating',\n  last_change_on_releasability_rating = 'last_change_on_releasability_rating',\n  last_change_on_reliability_rating = 'last_change_on_reliability_rating',\n  last_change_on_security_rating = 'last_change_on_security_rating',\n  last_change_on_security_review_rating = 'last_change_on_security_review_rating',\n  last_commit_date = 'last_commit_date',\n  leak_projects = 'leak_projects',\n  line_coverage = 'line_coverage',\n  lines = 'lines',\n  lines_to_cover = 'lines_to_cover',\n  maintainability_rating_effort = 'maintainability_rating_effort',\n  major_violations = 'major_violations',\n  minor_violations = 'minor_violations',\n  ncloc = 'ncloc',\n  ncloc_data = 'ncloc_data',\n  ncloc_language_distribution = 'ncloc_language_distribution',\n  new_blocker_violations = 'new_blocker_violations',\n  new_branch_coverage = 'new_branch_coverage',\n  new_bugs = 'new_bugs',\n  new_code_smells = 'new_code_smells',\n  new_conditions_to_cover = 'new_conditions_to_cover',\n  new_coverage = 'new_coverage',\n  new_critical_violations = 'new_critical_violations',\n  new_development_cost = 'new_development_cost',\n  new_duplicated_blocks = 'new_duplicated_blocks',\n  new_duplicated_lines = 'new_duplicated_lines',\n  new_duplicated_lines_density = 'new_duplicated_lines_density',\n  new_info_violations = 'new_info_violations',\n  new_line_coverage = 'new_line_coverage',\n  new_lines = 'new_lines',\n  new_lines_to_cover = 'new_lines_to_cover',\n  new_maintainability_rating = 'new_maintainability_rating',\n  new_major_violations = 'new_major_violations',\n  new_minor_violations = 'new_minor_violations',\n  new_reliability_rating = 'new_reliability_rating',\n  new_reliability_remediation_effort = 'new_reliability_remediation_effort',\n  new_security_hotspots = 'new_security_hotspots',\n  new_security_hotspots_reviewed = 'new_security_hotspots_reviewed',\n  new_security_rating = 'new_security_rating',\n  new_security_remediation_effort = 'new_security_remediation_effort',\n  new_security_review_rating = 'new_security_review_rating',\n  new_sqale_debt_ratio = 'new_sqale_debt_ratio',\n  new_technical_debt = 'new_technical_debt',\n  new_uncovered_conditions = 'new_uncovered_conditions',\n  new_uncovered_lines = 'new_uncovered_lines',\n  new_violations = 'new_violations',\n  new_vulnerabilities = 'new_vulnerabilities',\n  open_issues = 'open_issues',\n  projects = 'projects',\n  public_api = 'public_api',\n  public_documented_api_density = 'public_documented_api_density',\n  public_undocumented_api = 'public_undocumented_api',\n  quality_gate_details = 'quality_gate_details',\n  quality_profiles = 'quality_profiles',\n  releasability_effort = 'releasability_effort',\n  releasability_rating = 'releasability_rating',\n  reliability_rating = 'reliability_rating',\n  reliability_rating_effort = 'reliability_rating_effort',\n  reliability_remediation_effort = 'reliability_remediation_effort',\n  reopened_issues = 'reopened_issues',\n  security_hotspots = 'security_hotspots',\n  security_hotspots_reviewed = 'security_hotspots_reviewed',\n  security_rating = 'security_rating',\n  security_rating_effort = 'security_rating_effort',\n  security_remediation_effort = 'security_remediation_effort',\n  security_review_rating = 'security_review_rating',\n  security_review_rating_effort = 'security_review_rating_effort',\n  skipped_tests = 'skipped_tests',\n  sonarjava_feedback = 'sonarjava_feedback',\n  sqale_debt_ratio = 'sqale_debt_ratio',\n  sqale_index = 'sqale_index',\n  sqale_rating = 'sqale_rating',\n  statements = 'statements',\n  team_at_sonarsource = 'team_at_sonarsource',\n  team_size = 'team_size',\n  test_errors = 'test_errors',\n  test_execution_time = 'test_execution_time',\n  test_failures = 'test_failures',\n  test_success_density = 'test_success_density',\n  tests = 'tests',\n  uncovered_conditions = 'uncovered_conditions',\n  uncovered_lines = 'uncovered_lines',\n  violations = 'violations',\n  vulnerabilities = 'vulnerabilities',\n  wont_fix_issues = 'wont_fix_issues'\n}\n\nexport function isMetricKey(key: string): key is MetricKey {\n  return (Object.values(MetricKey) as string[]).includes(key);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ComponentQualifier {\n  Application = 'APP',\n  Directory = 'DIR',\n  Developper = 'DEV',\n  File = 'FIL',\n  Portfolio = 'VW',\n  Project = 'TRK',\n  SubPortfolio = 'SVW',\n  SubProject = 'BRC',\n  TestFile = 'UTS'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <MultiSelect\n      elements={props.tags}\n      listSize={props.listSize}\n      onSearch={props.onSearch}\n      onSelect={props.onSelect}\n      onUnselect={props.onUnselect}\n      placeholder={translate('search.search_for_tags')}\n      selectedElements={props.selectedTags}\n      validateSearchInput={validateTag}\n    />\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport './CodeSnippet.css';\n\ninterface Props {\n  className?: string;\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  render?: () => JSX.Element;\n  snippet: string | (string | undefined)[];\n  wrap?: boolean;\n}\n\n// keep this \"useless\" concatentation for the readability reason\n// eslint-disable-next-line no-useless-concat\nconst s = ' \\\\' + '\\n  ';\n\nexport default function CodeSnippet({\n  className,\n  isOneLine,\n  noCopy,\n  render,\n  snippet,\n  wrap\n}: Props) {\n  const snippetArray = Array.isArray(snippet)\n    ? snippet.filter(line => line !== undefined)\n    : [snippet];\n  const finalSnippet = isOneLine ? snippetArray.join(' ') : snippetArray.join(s);\n  return (\n    <div\n      className={classNames(\n        'code-snippet',\n        { 'code-snippet-oneline': isOneLine, 'code-snippet-wrap': wrap },\n        className\n      )}>\n      <pre>{render ? render() : finalSnippet}</pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(\n    () => getTask(id),\n    () => getTask(id)\n  );\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nclass HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const checked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const tooltip = checked ? translate('homepage.current') : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {checked ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={checked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={this.handleClick}>\n            <HomeIcon filled={checked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component &&\n    (a as any).organization === (b as any).organization\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getBranchLikeQuery } from '../../helpers/branch-like';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\nconst issueParamsPerMetric: T.Dict<T.Dict<string>> = {\n  blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  new_blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  new_critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  major_violations: { resolved: 'false', severities: 'MAJOR' },\n  new_major_violations: { resolved: 'false', severities: 'MAJOR' },\n  minor_violations: { resolved: 'false', severities: 'MINOR' },\n  new_minor_violations: { resolved: 'false', severities: 'MINOR' },\n  info_violations: { resolved: 'false', severities: 'INFO' },\n  new_info_violations: { resolved: 'false', severities: 'INFO' },\n  open_issues: { resolved: 'false', statuses: 'OPEN' },\n  reopened_issues: { resolved: 'false', statuses: 'REOPENED' },\n  confirmed_issues: { resolved: 'false', statuses: 'CONFIRMED' },\n  false_positive_issues: { resolutions: 'FALSE-POSITIVE' },\n  code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  new_code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  bugs: { resolved: 'false', types: 'BUG' },\n  new_bugs: { resolved: 'false', types: 'BUG' },\n  vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' },\n  new_vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' }\n};\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: T.Dict<string | boolean> = {\n      ...(issueParamsPerMetric[this.props.metric] || { resolved: 'false' })\n    };\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl({\n      componentKey: this.props.component,\n      metric: this.props.metric,\n      branchLike: this.props.branchLike,\n      listView: true\n    });\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport VisibleIcon from 'sonar-ui-common/components/icons/VisibleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../app/theme';\nimport { isCurrentUserMemberOf, isPaidOrganization } from '../../helpers/organizations';\nimport { isSonarCloud } from '../../helpers/system';\nimport {\n  getCurrentUser,\n  getMyOrganizations,\n  getOrganizationByKey,\n  Store\n} from '../../store/rootReducer';\nimport DocTooltip from '../docs/DocTooltip';\n\ninterface StateToProps {\n  currentUser: T.CurrentUser;\n  organization?: T.Organization;\n  userOrganizations: T.Organization[];\n}\n\ninterface OwnProps {\n  className?: string;\n  organization: T.Organization | string | undefined;\n  qualifier: string;\n  tooltipProps?: { projectKey: string };\n  visibility: T.Visibility;\n}\n\ninterface Props extends OwnProps, StateToProps {\n  organization: T.Organization | undefined;\n}\n\nexport function PrivacyBadge({\n  className,\n  currentUser,\n  organization,\n  qualifier,\n  userOrganizations,\n  tooltipProps,\n  visibility\n}: Props) {\n  const onSonarCloud = isSonarCloud();\n  if (\n    visibility !== 'private' &&\n    (!onSonarCloud || !isCurrentUserMemberOf(currentUser, organization, userOrganizations))\n  ) {\n    return null;\n  }\n\n  let icon = null;\n  if (isPaidOrganization(organization) && visibility === 'public') {\n    icon = <VisibleIcon className=\"little-spacer-right\" fill={colors.blue} />;\n  }\n\n  const badge = (\n    <div\n      className={classNames('badge', className, {\n        'badge-info': Boolean(icon)\n      })}>\n      {icon}\n      {translate('visibility', visibility)}\n    </div>\n  );\n\n  if (onSonarCloud && organization) {\n    return (\n      <DocTooltip\n        className={className}\n        doc={getDoc(visibility, icon, organization)}\n        overlayProps={{ ...tooltipProps, organization: organization.key }}>\n        {badge}\n      </DocTooltip>\n    );\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      {badge}\n    </Tooltip>\n  );\n}\n\nconst mapStateToProps = (state: Store, { organization }: OwnProps) => {\n  if (typeof organization === 'string') {\n    organization = getOrganizationByKey(state, organization);\n  }\n  return {\n    currentUser: getCurrentUser(state),\n    organization,\n    userOrganizations: getMyOrganizations(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrivacyBadge);\n\nfunction getDoc(visibility: T.Visibility, icon: JSX.Element | null, organization: T.Organization) {\n  let doc;\n  const { actions = {} } = organization;\n  if (visibility === 'private') {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-private.md');\n  } else if (icon) {\n    if (actions.admin) {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org-admin.md'\n      );\n    } else {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org.md'\n      );\n    }\n  } else if (actions.admin) {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-admin.md');\n  } else {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public.md');\n  }\n  return doc;\n}\n"],"sourceRoot":""}