{"version":3,"sources":["webpack:///./src/main/js/components/docs/DocMarkdownBlock.css?5430","webpack:///./src/main/js/components/docs/DocMarkdownBlock.css","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/components/docs/DocCollapsibleBlock.tsx","webpack:///./src/main/js/components/docs/DocImg.tsx","webpack:///./src/main/js/components/docs/DocLink.tsx","webpack:///./src/main/js/components/docs/plugins/remark-only-toc.js","webpack:///./src/main/js/components/docs/DocToc.tsx","webpack:///./src/main/js/components/docs/DocTooltipLink.tsx","webpack:///./src/main/js/components/docs/DocMarkdownBlock.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","withAppState","WrappedComponent","Wrapper","_super","__extends","prototype","render","react__WEBPACK_IMPORTED_MODULE_0__","__assign","this","props","displayName","Object","_utils__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_1__","state","appState","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","DocCollapsibleBlock","_this","apply","arguments","open","handleClick","event","setState","stopPropagation","preventDefault","renderTitle","children","index_js_exposed","aria-expanded","aria-haspopup","className","href","onClick","OpenCloseIcon_default","a","childrenAsArray","toArray","length","firstChildChildren","slice","DocImg","alt","src","other","__rest","urls","SONARCLOUD_LINK","SONARQUBE_LINK","SONARQUBE_ADMIN_LINK","DocLink_DocLink","DocLink","handleClickOnAnchor","_a","customProps","_b","onAnchorClick","DocLink_extends","DocLink_rest","startsWith","SonarCloudLink","url","SonarQubeLink","SonarQubeAdminLink","canAdmin","es","DocLink_assign","to","rel","target","DetachIcon_default","size","docs_DocLink","system","substr","onlyToc","use","remark_slug_default","node","result","mdast_util_toc_default","heading","maxDepth","index","map","docs_DocToc","DocToc","call","anchors","scrollHandler","react_dom_index_js_exposed","parentNode","highlightAnchor","headings","querySelectorAll","scrollTop","window","pageYOffset","document","body","len","item","offsetTop","id","debouncedScrollHandler","debounce_default","DocToc_extends","getDerivedStateFromProps","getAnchors","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","l10n","anchor","classnames","active","key","title","memoize_default","file","remark_default","remark_react_default","processSync","contents","list","limit","type","li","filter","DocTooltipLink_SONARCLOUD_LINK","DocTooltipLink","DocTooltipLink_rest","forEach_default","value","replace","encodeURIComponent","DocTooltipLink_assign","DocMarkdownBlock_DocMarkdownBlock","DocMarkdownBlock","handleAnchorClick","element","querySelector","scrolling","bottomOffset","innerHeight","history","pushState","DocMarkdownBlock_extends","childProps","stickyToc","isTooltip","md","dist_default","danger","classes","warning","info","success","collapse","remarkReactComponents","div","Block","DocMarkdownBlock_withChildProps","img","toHast","sanitize","has-toc","ref","_ref","DocMarkdownBlock_assign","includes","docs_DocCollapsibleBlock"],"mappings":"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","file":"js/10.1582644816097.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DocMarkdownBlock.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DocMarkdownBlock.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DocMarkdownBlock.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".markdown-content .alert{margin-bottom:8px;border:1px solid;border-radius:2px}.markdown-content .alert.is-inline{display:inline-flex}.markdown-content .alert:empty{display:none}.markdown-content .alert-danger,.markdown-content .alert-error{border-color:#f4b1b0;background-color:#f2dede;color:#862422}.markdown-content .alert-danger .alert-icon,.markdown-content .alert-error .alert-icon{border-color:#f4b1b0}.markdown-content .alert-warning{border-color:#faebcc;background-color:#fcf8e3;color:#6f4f17}.markdown-content .alert-warning .alert-icon{border-color:#faebcc}.markdown-content .alert-info{border-color:#b1dff3;background-color:#d9edf7;color:#0e516f}.markdown-content .alert-info .alert-icon{border-color:#b1dff3}.markdown-content .alert-success{border-color:#d6e9c6;background-color:#dff0d8;color:#215821}.markdown-content .alert-success .alert-icon{border-color:#d6e9c6}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport OpenCloseIcon from 'sonar-ui-common/components/icons/OpenCloseIcon';\n\ninterface State {\n  open: boolean;\n}\n\nexport default class DocCollapsibleBlock extends React.PureComponent<{}, State> {\n  state = { open: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    this.setState(state => ({ open: !state.open }));\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  renderTitle(children: any) {\n    return (\n      <a\n        aria-expanded={this.state.open}\n        aria-haspopup={true}\n        className=\"link-no-underline\"\n        href=\"#\"\n        onClick={this.handleClick}>\n        <OpenCloseIcon className=\"text-middle little-spacer-right\" open={this.state.open} />\n        {children.props ? children.props.children : children}\n      </a>\n    );\n  }\n\n  render() {\n    const childrenAsArray = React.Children.toArray(this.props.children);\n    if (childrenAsArray.length < 1) {\n      return null;\n    }\n\n    const firstChildChildren = React.Children.toArray(\n      (childrenAsArray[0] as React.ReactElement<any>).props.children\n    );\n    if (firstChildChildren.length < 2) {\n      return null;\n    }\n\n    return (\n      <div className=\"collapse-container\">\n        {this.renderTitle(firstChildChildren[0])}\n        {this.state.open && firstChildChildren.slice(1)}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\n\nexport default function DocImg(props: React.ImgHTMLAttributes<HTMLImageElement>) {\n  const { alt, src, ...other } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    return <img alt={alt} className=\"max-width-100\" src={getBaseUrl() + src} {...other} />;\n  }\n\n  return (\n    <img\n      alt={alt}\n      className=\"max-width-100\"\n      src={getBaseUrl() + '/images/embed-doc' + src}\n      {...other}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { isSonarCloud } from '../../helpers/system';\nimport { withAppState } from '../hoc/withAppState';\n\ninterface OwnProps {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  customProps?: {\n    [k: string]: any;\n  };\n}\n\ntype Props = OwnProps & React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\nconst SONARCLOUD_LINK = '/#sonarcloud#/';\nconst SONARQUBE_LINK = '/#sonarqube#/';\nconst SONARQUBE_ADMIN_LINK = '/#sonarqube-admin#/';\n\nexport class DocLink extends React.PureComponent<Props> {\n  handleClickOnAnchor = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const { customProps, href = '#' } = this.props;\n    if (customProps && customProps.onAnchorClick) {\n      customProps.onAnchorClick(href, event);\n    }\n  };\n\n  render() {\n    const { children, href, customProps, ...other } = this.props;\n    if (href && href.startsWith('#')) {\n      return (\n        <a href=\"#\" onClick={this.handleClickOnAnchor}>\n          {children}\n        </a>\n      );\n    }\n\n    if (href && href.startsWith('/')) {\n      if (href.startsWith(SONARCLOUD_LINK)) {\n        return <SonarCloudLink url={href}>{children}</SonarCloudLink>;\n      } else if (href.startsWith(SONARQUBE_LINK)) {\n        return <SonarQubeLink url={href}>{children}</SonarQubeLink>;\n      } else if (href.startsWith(SONARQUBE_ADMIN_LINK)) {\n        return (\n          <SonarQubeAdminLink canAdmin={this.props.appState.canAdmin} url={href}>\n            {children}\n          </SonarQubeAdminLink>\n        );\n      } else {\n        const url = '/documentation' + href;\n        return (\n          <Link to={url} {...other}>\n            {children}\n          </Link>\n        );\n      }\n    }\n\n    return (\n      <>\n        <a href={href} rel=\"noopener noreferrer\" target=\"_blank\" {...other}>\n          {children}\n        </a>\n        <DetachIcon\n          className=\"text-muted little-spacer-left little-spacer-right text-baseline\"\n          size={12}\n        />\n      </>\n    );\n  }\n}\n\nexport default withAppState(DocLink);\n\ninterface SonarCloudLinkProps {\n  children: React.ReactNode;\n  url: string;\n}\n\nfunction SonarCloudLink({ children, url }: SonarCloudLinkProps) {\n  if (!isSonarCloud()) {\n    return <>{children}</>;\n  } else {\n    const to = `/${url.substr(SONARCLOUD_LINK.length)}`;\n    return <Link to={to}>{children}</Link>;\n  }\n}\n\ninterface SonarQubeLinkProps {\n  children: React.ReactNode;\n  url: string;\n}\n\nfunction SonarQubeLink({ children, url }: SonarQubeLinkProps) {\n  if (isSonarCloud()) {\n    return <>{children}</>;\n  } else {\n    const to = `/${url.substr(SONARQUBE_LINK.length)}`;\n    return (\n      <Link target=\"_blank\" to={to}>\n        {children}\n      </Link>\n    );\n  }\n}\n\ninterface SonarQubeAdminLinkProps {\n  canAdmin?: boolean;\n  children: React.ReactNode;\n  url: string;\n}\n\nfunction SonarQubeAdminLink({ canAdmin, children, url }: SonarQubeAdminLinkProps) {\n  if (isSonarCloud() || !canAdmin) {\n    return <>{children}</>;\n  } else {\n    const to = `/${url.substr(SONARQUBE_ADMIN_LINK.length)}`;\n    return (\n      <Link target=\"_blank\" to={to}>\n        {children}\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport util from 'mdast-util-toc';\nimport slug from 'remark-slug';\n\n/**\n * This is a simplified version of the remark-toc plugin: https://github.com/remarkjs/remark-toc\n * It *only* renders the TOC, and leaves all the rest out.\n */\nexport default function onlyToc() {\n  this.use(slug);\n\n  return transformer;\n\n  function transformer(node) {\n    const result = util(node, { heading: 'doctoc', maxDepth: 2 });\n\n    if (result.index === null || result.index === -1 || !result.map) {\n      node.children = [];\n    } else {\n      node.children = [result.map];\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce, memoize } from 'lodash';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport remark from 'remark';\nimport reactRenderer from 'remark-react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport onlyToc from './plugins/remark-only-toc';\n\ninterface Props {\n  content: string;\n  onAnchorClick: (href: string, event: React.MouseEvent<HTMLAnchorElement>) => void;\n}\n\ninterface State {\n  anchors: AnchorObject[];\n  highlightAnchor?: string;\n}\n\ninterface AnchorObject {\n  href: string;\n  title: string;\n}\n\nexport default class DocToc extends React.PureComponent<Props, State> {\n  debouncedScrollHandler: () => void;\n\n  node: HTMLDivElement | null = null;\n\n  state: State = { anchors: [] };\n\n  static getAnchors = memoize((content: string) => {\n    const file: { contents: JSX.Element } = remark()\n      .use(reactRenderer)\n      .use(onlyToc)\n      .processSync('\\n## doctoc\\n' + content);\n\n    if (file && file.contents.props.children) {\n      let list = file.contents;\n      let limit = 10;\n      while (limit && list.props.children.length && list.type !== 'ul') {\n        list = list.props.children[0];\n        limit--;\n      }\n\n      if (list.type === 'ul' && list.props.children.length) {\n        return list.props.children\n          .map((li: JSX.Element | string) => {\n            if (typeof li === 'string') {\n              return null;\n            }\n\n            const anchor = li.props.children[0];\n            return {\n              href: anchor.props.href,\n              title: anchor.props.children[0]\n            } as AnchorObject;\n          })\n          .filter((item: AnchorObject | null) => item);\n      }\n    }\n    return [];\n  });\n\n  static getDerivedStateFromProps(props: Props) {\n    const { content } = props;\n    return { anchors: DocToc.getAnchors(content) };\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedScrollHandler = debounce(this.scrollHandler);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.debouncedScrollHandler, true);\n    this.scrollHandler();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.debouncedScrollHandler, true);\n  }\n\n  scrollHandler = () => {\n    // eslint-disable-next-line react/no-find-dom-node\n    const node = findDOMNode(this) as HTMLElement;\n\n    if (!node || !node.parentNode) {\n      return;\n    }\n\n    const headings: NodeListOf<HTMLHeadingElement> = node.parentNode.querySelectorAll('h2[id]');\n    const scrollTop = window.pageYOffset || document.body.scrollTop;\n    let highlightAnchor;\n\n    for (let i = 0, len = headings.length; i < len; i++) {\n      if (headings.item(i).offsetTop > scrollTop + 120) {\n        break;\n      }\n      highlightAnchor = `#${headings.item(i).id}`;\n    }\n\n    this.setState({\n      highlightAnchor\n    });\n  };\n\n  render() {\n    const { anchors, highlightAnchor } = this.state;\n\n    if (anchors.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"markdown-toc\">\n        <div className=\"markdown-toc-content\">\n          <h4>{translate('documentation.on_this_page')}</h4>\n          {anchors.map(anchor => {\n            return (\n              <a\n                className={classNames({ active: highlightAnchor === anchor.href })}\n                href={anchor.href}\n                key={anchor.title}\n                onClick={(event: React.MouseEvent<HTMLAnchorElement>) => {\n                  this.props.onAnchorClick(anchor.href, event);\n                }}>\n                {anchor.title}\n              </a>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { forEach } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\n\ninterface OwnProps {\n  customProps?: T.Dict<string>;\n}\n\ntype Props = OwnProps & React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\nconst SONARCLOUD_LINK = '/#sonarcloud#/';\n\nexport default function DocTooltipLink({ children, customProps, href, ...other }: Props) {\n  if (customProps) {\n    forEach(customProps, (value, key) => {\n      if (href) {\n        href = href.replace(`#${key}#`, encodeURIComponent(value));\n      }\n    });\n  }\n\n  if (href && href.startsWith('/')) {\n    if (href.startsWith(SONARCLOUD_LINK)) {\n      href = `/${href.substr(SONARCLOUD_LINK.length)}`;\n    } else {\n      href = `/documentation/${href.substr(1)}`;\n    }\n\n    return (\n      <Link rel=\"noopener noreferrer\" target=\"_blank\" to={href} {...other}>\n        {children}\n      </Link>\n    );\n  }\n\n  return (\n    <>\n      <a href={href} rel=\"noopener noreferrer\" target=\"_blank\" {...other}>\n        {children}\n      </a>\n      <DetachIcon className=\"little-spacer-left little-spacer-right text-baseline\" size={12} />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport remark from 'remark';\nimport remarkCustomBlocks from 'remark-custom-blocks';\nimport reactRenderer from 'remark-react';\nimport slug from 'remark-slug';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport DocCollapsibleBlock from './DocCollapsibleBlock';\nimport DocImg from './DocImg';\nimport DocLink from './DocLink';\nimport './DocMarkdownBlock.css';\nimport DocToc from './DocToc';\nimport DocTooltipLink from './DocTooltipLink';\n\ninterface Props {\n  childProps?: T.Dict<string>;\n  className?: string;\n  content: string;\n  isTooltip?: boolean;\n  stickyToc?: boolean;\n  title?: string;\n}\n\nexport default class DocMarkdownBlock extends React.PureComponent<Props> {\n  node: HTMLElement | null = null;\n\n  handleAnchorClick = (href: string, event: React.MouseEvent<HTMLAnchorElement>) => {\n    if (this.node) {\n      const element = this.node.querySelector(href);\n      if (element) {\n        event.preventDefault();\n        scrollToElement(element, { bottomOffset: window.innerHeight - 80 });\n        if (history.pushState) {\n          history.pushState(null, '', href);\n        }\n      }\n    }\n  };\n\n  render() {\n    const { childProps, content, className, title, stickyToc, isTooltip } = this.props;\n\n    const md = remark();\n\n    // TODO find a way to replace these custom blocks with real Alert components\n    md.use(remarkCustomBlocks, {\n      danger: { classes: 'alert alert-danger' },\n      warning: { classes: 'alert alert-warning' },\n      info: { classes: 'alert alert-info' },\n      success: { classes: 'alert alert-success' },\n      collapse: { classes: 'collapse' }\n    })\n      .use(reactRenderer, {\n        remarkReactComponents: {\n          div: Block,\n          // use custom link to render documentation anchors\n          a: isTooltip\n            ? withChildProps(DocTooltipLink, childProps)\n            : withChildProps(DocLink, { onAnchorClick: this.handleAnchorClick }),\n          // use custom img tag to render documentation images\n          img: DocImg\n        },\n        toHast: {},\n        sanitize: false\n      })\n      .use(slug);\n\n    return (\n      <div\n        className={classNames('markdown', className, { 'has-toc': stickyToc })}\n        ref={ref => (this.node = ref)}>\n        <div className=\"markdown-content\">\n          {title !== undefined && <h1 className=\"documentation-title\">{title}</h1>}\n          {md.processSync(content).contents}\n        </div>\n        {stickyToc && <DocToc content={content} onAnchorClick={this.handleAnchorClick} />}\n      </div>\n    );\n  }\n}\n\nfunction withChildProps<P>(\n  WrappedComponent: React.ComponentType<P & { customProps?: T.Dict<any> }>,\n  childProps?: T.Dict<any>\n) {\n  return function withChildProps(props: P) {\n    return <WrappedComponent customProps={childProps} {...props} />;\n  };\n}\n\nfunction Block(props: React.HtmlHTMLAttributes<HTMLDivElement>) {\n  if (props.className) {\n    if (props.className.includes('collapse')) {\n      return <DocCollapsibleBlock>{props.children}</DocCollapsibleBlock>;\n    } else {\n      return <div className={classNames('cut-margins', props.className)}>{props.children}</div>;\n    }\n  } else {\n    return props.children;\n  }\n}\n"],"sourceRoot":""}