{"version":3,"sources":["webpack:///./src/main/js/apps/projectActivity/components/EventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/ChangeEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/forms/RemoveEventForm.tsx","webpack:///./src/main/js/apps/projectActivity/components/Event.tsx","webpack:///./src/main/js/apps/projectActivity/components/Events.tsx","webpack:///./src/main/js/apps/projectBaseline/styles.css?3c1d","webpack:///./src/main/js/apps/projectBaseline/styles.css","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingAnalysis.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchAnalysisList.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchBaselineSettingModal.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BranchList.tsx","webpack:///./src/main/js/apps/projectBaseline/components/ProjectBaselineSelector.tsx","webpack:///./src/main/js/apps/projectBaseline/components/App.tsx","webpack:///./src/main/js/apps/projectBaseline/components/AppContainer.ts","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateTimeFormatter.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/types/metrics.ts","webpack:///./src/main/js/components/activity-graph/utils.ts","webpack:///./src/main/js/types/project-activity.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/apps/projectActivity/utils.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/api/projectActivity.ts","webpack:///./src/main/js/apps/projectActivity/components/DefinitionChangeEventInner.tsx","webpack:///./src/main/js/apps/projectActivity/components/RichQualityGateEventInner.tsx","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx"],"names":["EventInner","_ref","event","Object","RichQualityGateEventInner","index_js_exposed","DefinitionChangeEventInner","ComponentContext","Consumer","_ref2","branchLike","content","className","l10n","category","name","description","Tooltip_default","a","overlay","ChangeEventForm_ChangeEventForm","[object Object]","props","super","this","changeInput","setState","target","value","handleSubmit","changeEvent","key","state","ConfirmModal_default","confirmButtonText","confirmDisable","header","onClose","onConfirm","size","autoFocus","onChange","type","RemoveEventForm","analysisKey","removeEventQuestion","isDestructive","components_Event","canAdmin","isFirst","_React$useState2","_slicedToArray","changing","setChanging","_React$useState4","deleting","setDeleting","isOther","isVersion","canChange","canDelete","onDelete","showActions","ProjectEventIcon_default","classnames","buttons","aria-label","data-test","onClick","stopPropagation","concat","__webpack_exports__","events","sortedEvents","sortBy_default","map","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","BaselineSettingAnalysis","disabled","onSelect","selected","RadioCard_default","title","BranchAnalysisList_BranchAnalysisList","mounted","badges","analyses","loading","range","scroll","handleScroll","e","currentTarget","updateScroll","scrollTop","registerBadgeNode","version","el","getAttribute","setAttribute","String","offsetTop","shouldStick","badge","Number","handleRangeChange","fetchAnalyses","rootNodeRef","throttle_default","selectedNode","document","querySelector","current","scrolling","parent","bottomOffset","initial","arguments","length","_this$props","analysis","branch","component","projectActivity","project","from","dates","date_fns","Date","then","result","find","_objectSpread","date","scrollToSelected","label","_this$state","byVersionByDay","projectActivity_utils","hasFilteredData","keys","byDay","Select_default","autoBlur","clearable","getRangeOptions","searchable","onScroll","ref","DeferredSpinner_default","idx","days","first","sticky","mouseEnterDelay","day","data-day","DateFormatter","long","data-date","valueOf","onSelectAnalysis","TimeFormatter","formattedTime","dateTime","toISOString","Events","is-checked","BranchBaselineSettingModal_BranchBaselineSettingModal","preventDefault","analysisDate","utils","saving","api_newCodePeriod","effectiveValue","requestClose","handleSelectAnalysis","handleSelectDays","handleSelectSetting","getValueFromProps","newCodePeriod","_this$state2","currentSetting","currentSettingValue","_validateSetting","isChanged","isValid","Modal_default","contentLabel","onRequestClose","onSubmit","role","BaselineSettingPreviousVersion","isDefault","BaselineSettingDays","onChangeDays","BranchList_BranchList","branches","updateBranchNewCodePeriod","newSetting","updated","b","slice","openEditModal","editedBranch","closeEditModal","fetchBranches","branchLikes","branch_like","filter","sortedBranches","sortAndFilterBranches","branchSettings","newCodePeriods","ncp","inherited","branchesWithBaseline","branchKey","_newCodePeriod$type","BranchList_objectSpread","DateTimeFormatter","BranchLikeIcon","isMain","renderNewCodePeriodSetting","ActionsDropdown_default","ActionsDropdown","resetToDefault","ProjectBaselineSelector","branchesEnabled","generalSetting","overrideGeneralSetting","Radio_default","checked","onCheck","onToggleSpecificSetting","setting","renderGeneralSetting","onSelectSetting","onSelectDays","invisible","onCancel","DEFAULT_GENERAL_SETTING","es","rootReducer","resetSuccess","debounce_default","success","resetSetting","handleCancel","_ref$generalSetting","getUpdatedState","handleToggleSpecificSetting","fetchLeakPeriodSetting","params","defaultDays","Boolean","Promise","all","_ref3","index_es","defaultMessage","id","values","link","react_router_es","to","Suggestions","suggestions","renderHeader","AlertSuccessIcon_default","inheritedSetting","d","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","formatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","year","month","hour","minute","children","assign","longFormatterOption","MetricKey","isMetricKey","includes","DEFAULT_GRAPH","_types_project_activity__WEBPACK_IMPORTED_MODULE_8__","issues","GRAPHS_METRICS_DISPLAYED","_types_metrics__WEBPACK_IMPORTED_MODULE_7__","bugs","code_smells","vulnerabilities","coverage","lines_to_cover","uncovered_lines","duplications","ncloc","duplicated_lines","GRAPHS_METRICS","reliability_rating","security_rating","sqale_rating","duplicated_lines_density","isCustomGraph","graph","custom","getGraphTypes","ignoreCustom","graphs","hasDataValues","serie","data","some","point","y","hasHistoryData","series","getSeriesMetricType","getDisplayedHistoryMetrics","customMetrics","getHistoryMetrics","splitSeriesInGraphs","maxGraph","maxSeries","lodash_flatMap__WEBPACK_IMPORTED_MODULE_2___default","lodash_groupBy__WEBPACK_IMPORTED_MODULE_1___default","lodash_chunk__WEBPACK_IMPORTED_MODULE_3___default","generateSeries","measuresHistory","metrics","displayedMetrics","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","measure","indexOf","metric","uncoveredLines","linesToCover","history","x","translatedName","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","generateCoveredLinesMetric","Array","isArray","findMetric","_helpers_measures__WEBPACK_IMPORTED_MODULE_6__","saveActivityGraph","namespace","sonar_ui_common_helpers_storage__WEBPACK_IMPORTED_MODULE_5__","join","getActivityGraph","customGraphs","split","GraphType","second","_objectWithoutProperties","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_icons_PullRequestIcon__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_components_icons_BranchIcon__WEBPACK_IMPORTED_MODULE_1___default","EVENT_TYPES","APPLICATION_EVENT_TYPES","activityQueryChanged","prevQuery","nextQuery","datesQueryChanged","customMetricsChanged","lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default","historyQueryChanged","getAnalysesByVersionByDay","query","reduce","acc","currentVersion","versionEvent","newVersion","date_fns_start_of_day__WEBPACK_IMPORTED_MODULE_1__","getTime","toString","matchFilters","isAfterFrom","isBeforeTo","hasSelectedCategoryEvents","parseQuery","urlQuery","sonar_ui_common_helpers_query__WEBPACK_IMPORTED_MODULE_3__","parseGraph","selectedDate","serializeQuery","serializeUrlQuery","custom_metrics","_components_activity_graph_utils__WEBPACK_IMPORTED_MODULE_4__","selected_date","_types_project_activity__WEBPACK_IMPORTED_MODULE_5__","getProjectActivity","createEvent","deleteEvent","deleteAnalysis","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","r","isDefinitionChangeEvent","react_router__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_icons_BranchIcon__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_components_icons_BranchIcon__WEBPACK_IMPORTED_MODULE_4___default","n","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_5__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_5___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","sonar_ui_common_helpers_path__WEBPACK_IMPORTED_MODULE_7__","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_8__","_helpers_urls__WEBPACK_IMPORTED_MODULE_9__","definitionChange","expanded","toggleProjectsList","renderProjectLink","renderBranch","mainBranch","changeType","message","newBranch","oldBranch","turned","projects","renderProjectChange","isRichQualityGateEvent","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_4___default","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_5__","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_5___default","_helpers_urls__WEBPACK_IMPORTED_MODULE_7__","qualityGate","stillFailing","status","level","small","failing","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","parsed","parseInt","isNaN","getSettingValue","validateSetting","_state$analysis","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1___default","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","error","isInvalid","required","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"kNA8Be,SAASA,EAAVC,GAA+C,IAAxBC,EAAwBD,EAAxBC,MACnC,GAAIC,OAAAC,EAAA,EAAAD,CAAuBD,GACzB,OAAOG,EAAA,cAACD,EAAA,EAAyB,CAACF,MAAOA,IACpC,GAAIC,OAAAG,EAAA,EAAAH,CAAwBD,GACjC,OACEG,EAAA,cAACE,EAAA,EAAiBC,SAAQ,KACvBC,IAAA,IAAGC,EAAHD,EAAGC,WAAH,OAAoBL,EAAA,cAACC,EAAA,EAA0B,CAACI,WAAYA,EAAYR,MAAOA,MAG/E,CACL,MAAMS,EACJN,EAAA,sBAAMO,UAAU,eACdP,EAAA,sBAAMO,UAAU,4BACbT,OAAAU,EAAA,UAAAV,CAAU,iBAAkBD,EAAMY,UAC9B,KACPT,EAAA,wBAAQO,UAAU,gBAAgBV,EAAMa,OAG5C,OAAOb,EAAMc,YAAcX,EAAA,cAACY,EAAAC,EAAO,CAACC,QAASjB,EAAMc,aAAcL,GAAqBA,yBCd3E,MAAMS,UAAwBf,EAAA,cAC3CgB,YAAYC,GACVC,MAAMD,GAIRE,KAAAC,YAAevB,IACbsB,KAAKE,SAAS,CAAEX,KAAMb,EAAMyB,OAAOC,SAGrCJ,KAAAK,aAAe,IACNL,KAAKF,MAAMQ,YAAYN,KAAKF,MAAMpB,MAAM6B,IAAKP,KAAKQ,MAAMjB,MAR/DS,KAAKQ,MAAQ,CAAEjB,KAAMO,EAAMpB,MAAMa,MAWnCM,SAAM,MACIN,EAASS,KAAKQ,MAAdjB,KACR,OACEV,EAAA,cAAC4B,EAAAf,EAAY,CACXgB,kBAAmB/B,OAAAU,EAAA,UAAAV,CAAU,eAC7BgC,gBAAiBpB,GAAQA,IAASS,KAAKF,MAAMpB,MAAMa,KACnDqB,OAAQZ,KAAKF,MAAMc,OACnBC,QAASb,KAAKF,MAAMe,QACpBC,UAAWd,KAAKK,aAChBU,KAAK,SACLlC,EAAA,qBAAKO,UAAU,eACbP,EAAA,2BAAQF,OAAAU,EAAA,UAAAV,CAAU,SAClBE,EAAA,uBAAOmC,WAAW,EAAMC,SAAUjB,KAAKC,YAAaiB,KAAK,OAAOd,MAAOb,OC5BlE,SAAS4B,EAAgBrB,GAA2B,MACzDsB,EAAoDtB,EAApDsB,YAAa1C,EAAuCoB,EAAvCpB,MAAOkC,EAAgCd,EAAhCc,OAAQS,EAAwBvB,EAAxBuB,oBACpC,OACExC,EAAA,cAAC4B,EAAAf,EAAY,CACXgB,kBAAmB/B,OAAAU,EAAA,UAAAV,CAAU,UAC7BiC,OAAQA,EACRU,eAAe,EACfT,QAASf,EAAMe,QACfC,UAAW,IAAMhB,EAAMgB,UAAUM,EAAa1C,EAAM6B,MACnDc,qZC2EQ,IAAAE,EAAA1C,EAAA,KA/ER,SAAeiB,GAAiB,MAC7BsB,EAA0CtB,EAA1CsB,YAAa1C,EAA6BoB,EAA7BpB,MAAO8C,EAAsB1B,EAAtB0B,SAAUC,EAAY3B,EAAZ2B,QADDC,EAAAC,EAGL9C,EAAA,UAAe,GAHV,GAG9B+C,EAH8BF,EAAA,GAGpBG,EAHoBH,EAAA,GAAAI,EAAAH,EAIL9C,EAAA,UAAe,GAJV,GAI9BkD,EAJ8BD,EAAA,GAIpBE,EAJoBF,EAAA,GAM/BG,EAA6B,UAAnBvD,EAAMY,SAChB4C,EAA+B,YAAnBxD,EAAMY,SAClB6C,GAAaF,GAAWC,IAAcpC,EAAMmB,SAC5CmB,GAAaH,GAAYC,IAAcT,IAAa3B,EAAMuC,SAC1DC,EAAcd,IAAaW,GAAaC,GAE9C,OACEvD,EAAA,qBAAKO,UAAU,0BACbP,EAAA,cAAC0D,EAAA7C,EAAgB,CACfN,UAAWoD,EACT,8DACA9D,EAAMY,YAIVT,EAAA,cAACL,EAAU,CAACE,MAAOA,IAElB4D,GACCzD,EAAA,sBAAMO,UAAU,UACb+C,GACCtD,EAAA,cAAC4D,EAAA,WAAU,CAAAC,aACG/D,OAAAU,EAAA,UAAAV,CAAU,wCACtBS,UAAU,eAAcuD,YACd,+BACVC,QAAS,IAAMf,GAAY,GAC3BgB,iBAAiB,IAGpBT,GACCvD,EAAA,cAAC4D,EAAA,aAAY,CAAAC,aACC/D,OAAAU,EAAA,UAAAV,CAAU,0CACtBS,UAAU,eAAcuD,YACd,iCACVC,QAAS,IAAMZ,GAAY,GAC3Ba,iBAAiB,KAMxBjB,GAAY9B,EAAMmB,UACjBpC,EAAA,cAACe,EAAe,CACdU,YAAaR,EAAMmB,SACnBvC,MAAOA,EACPkC,OACEsB,EACIvD,OAAAU,EAAA,UAAAV,CAAU,mCACVA,OAAAU,EAAA,UAAAV,CAAU,wCAEhBkC,QAAS,IAAMgB,GAAY,KAI9BE,GAAYjC,EAAMuC,UACjBxD,EAAA,cAACsC,EAAe,CACdC,YAAaA,EACb1C,MAAOA,EACPkC,OACEsB,EACIvD,OAAAU,EAAA,UAAAV,CAAU,mCACVA,OAAAU,EAAA,UAAAV,CAAU,wCAEhBkC,QAAS,IAAMmB,GAAY,GAC3BlB,UAAWhB,EAAMuC,SACjBhB,oBAAqB1C,OAAAU,EAAA,UAAAV,CAAS,oBAAAmE,OACRZ,EAAY,iBAAmB,sBADvB,mBC/CzBa,EAAA,EAAAlE,EAAA,KA5BR,SAAgBiB,GAAkB,MAC/BsB,EAA2CtB,EAA3CsB,YAAaI,EAA8B1B,EAA9B0B,SAAUwB,EAAoBlD,EAApBkD,OAAQvB,EAAY3B,EAAZ2B,QAEjCwB,EAAeC,IACnBF,EAEAtE,GAA6B,YAAnBA,EAAMY,SAAyB,EAAI,EAE7C,YAGF,OACET,EAAA,qBAAKO,UAAU,kBACZ6D,EAAaE,IAAIzE,GAChBG,EAAA,cAAC0C,EAAK,CACJH,YAAaA,EACbI,SAAUA,EACV9C,MAAOA,EACP+C,QAASA,EACTlB,IAAK7B,EAAM6B,IACXU,SAAUnB,EAAMmB,SAChBoB,SAAUvC,EAAMuC,qCCpD1B,IAAAlD,EAAciE,EAAQ,MAEtB,iBAAAjE,MAAA,EAA4CkE,EAAAC,EAASnE,EAAA,MAOrD,IAAAoE,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaP,EAAQ,IAARA,CAAoEjE,EAAAoE,GAEjFpE,EAAAyE,SAAAP,EAAAQ,QAAA1E,EAAAyE,+BCjBAP,EAAAQ,QAA2BT,EAAQ,IAARA,EAAoE,IAE/FU,KAAA,CAAcT,EAAAC,EAAS,mxDAAmxD,0SC2B3xD,SAASS,EAAVtF,GAAyE,IAArCuF,EAAqCvF,EAArCuF,SAAUC,EAA2BxF,EAA3BwF,SAAUC,EAAiBzF,EAAjByF,SACpE,OACErF,EAAA,cAACsF,EAAAzE,EAAS,CACRsE,SAAUA,EACVpB,QAAS,IAAMqB,EAAS,qBACxBC,SAAUA,EACVE,MAAOzF,OAAAU,EAAA,UAAAV,CAAU,+BACjBE,EAAA,mBAAGO,UAAU,qBAAqBT,OAAAU,EAAA,UAAAV,CAAU,gTCanC,MAAM0F,UAA2BxF,EAAA,cAW9CgB,YAAYC,GACVC,MAAMD,GAXRE,KAAAsE,SAAU,EACVtE,KAAAuE,OAAiC,GAEjCvE,KAAAQ,MAAe,CACbgE,SAAU,GACVC,SAAS,EACTC,MAAO,GACPC,OAAQ,GAwDV3E,KAAA4E,aAAgBC,IACVA,EAAEC,eACJ9E,KAAK+E,aAAaF,EAAEC,cAAcE,YAItChF,KAAA+E,aAAgBJ,IACd3E,KAAKE,SAAS,CAAEyE,YAGlB3E,KAAAiF,kBAAqBC,GAAqBC,IACpCA,IACGA,EAAGC,aAAa,oBACnBD,EAAGE,aAAa,kBAAmBC,OAAOH,EAAGI,YAE/CvF,KAAKuE,OAAOW,GAAWC,IAI3BnF,KAAAwF,YAAeN,IACb,MAAMO,EAAQzF,KAAKuE,OAAOW,GAC1B,OAAOO,GAASC,OAAOD,EAAML,aAAa,oBAAsBpF,KAAKQ,MAAMmE,OAAS,IAgBtF3E,KAAA2F,kBAAoBlH,IAAiC,IAA9B2B,EAA8B3B,EAA9B2B,MACrBJ,KAAKE,SAAS,CAAEwE,MAAOtE,GAAS,IAAMJ,KAAK4F,kBAzF3C5F,KAAK6F,YAAchH,EAAA,YACnBmB,KAAK+E,aAAee,IAAS9F,KAAK+E,aAAc,IAGlDlF,oBACEG,KAAKsE,SAAU,EACftE,KAAK4F,eAAc,GAGrB/F,uBACEG,KAAKsE,SAAU,EAGjBzE,mBACE,MAAMkG,EAAeC,SAASC,cAAc,6BACxCjG,KAAK6F,YAAYK,SAAWH,GAC9BpH,OAAAwH,EAAA,gBAAAxH,CAAgBoH,EAAc,CAAEK,OAAQpG,KAAK6F,YAAYK,QAASG,aAAc,KAIpFxG,gBAA6B,IAAfyG,EAAeC,UAAAC,OAAA,QAAA7C,IAAA4C,UAAA,IAAAA,UAAA,SAAAE,EACazG,KAAKF,MAArC4G,EADmBD,EACnBC,SAAUC,EADSF,EACTE,OAAQC,EADCH,EACDG,UAClBlC,EAAU1E,KAAKQ,MAAfkE,MAGR,OAFA1E,KAAKE,SAAS,CAAEuE,SAAS,IAElB9F,OAAAkI,EAAA,EAAAlI,CAAmB,CACxBgI,SACAG,QAASF,EACTG,KAAMrC,EAAQ/F,OAAAqI,EAAA,sBAAArI,CAAsBA,OAAAsI,EAAA,QAAAtI,CAAQ,IAAIuI,KAAQxC,SAAUf,IACjEwD,KAAMC,IAEHd,GAAWI,IAAaU,EAAO5C,SAAS6C,KAAK3H,GAAKA,EAAEa,MAAQmG,GAC9D1G,KAAK2F,kBAAkB,CAAEvF,MAAO,IAIlCJ,KAAKE,SACH,CACEsE,SAAU4C,EAAO5C,SAASrB,IAAIuD,uUAAQY,CAAA,GACjCZ,EADiC,CAEpCa,KAAM5I,OAAAqI,EAAA,UAAArI,CAAU+H,EAASa,SAE3B9C,SAAS,GAEX,KACEzE,KAAKwH,uBA8Bb3H,kBACE,MAAO,CACL,CACE4H,MAAO9I,OAAAU,EAAA,UAAAV,CAAU,0CACjByB,MAAO,IAET,CACEqH,MAAO9I,OAAAU,EAAA,UAAAV,CAAU,2CACjByB,MAAO,IASbP,SAAM,MAAA6H,EACiC1H,KAAKQ,MAAlCgE,EADJkD,EACIlD,SAAUC,EADdiD,EACcjD,QAASC,EADvBgD,EACuBhD,MAErBiD,EAAiBhJ,OAAAiJ,EAAA,EAAAjJ,CAA0B6F,EAAU,CACzDlF,SAAU,KAGNuI,EACJF,EAAenB,OAAS,GACG,IAA1BmB,EAAenB,QAAgB7H,OAAOmJ,KAAKH,EAAe,GAAGI,OAAOvB,OAAS,EAEhF,OACE3H,EAAA,cAAAA,EAAA,cACEA,EAAA,qBAAKO,UAAU,iBACZT,OAAAU,EAAA,UAAAV,CAAU,0BACXE,EAAA,cAACmJ,EAAAtI,EAAM,CACLuI,UAAU,EACV7I,UAAU,2BACV8I,WAAW,EACXjH,SAAUjB,KAAK2F,kBACfpC,QAASvD,KAAKmI,kBACdC,YAAY,EACZhI,MAAOsE,KAGX7F,EAAA,qBAAKO,UAAU,gCACbP,EAAA,qBACEO,UAAU,gCACViJ,SAAUrI,KAAK4E,aACf0D,IAAKtI,KAAK6F,aACTpB,GAAW5F,EAAA,cAAC0J,EAAA7I,EAAe,CAACN,UAAU,mBAErCqF,GAAYoD,EAKZhJ,EAAA,wBACG8I,EAAexE,IAAI,CAAC+B,EAASsD,KAC5B,MAAMC,EAAO9J,OAAOmJ,KAAK5C,EAAQ6C,OACjC,OAAIU,EAAKjC,QAAU,EACV,KAGP3H,EAAA,oBAAI0B,IAAK2E,EAAQ3E,KAAO,aACrB2E,EAAQA,SACPrG,EAAA,qBACEO,UAAWoD,EAAW,gCAAiC,CACrDkG,MAAe,IAARF,EACPG,OAAQ3I,KAAKwF,YAAYN,EAAQA,WAEnCoD,IAAKtI,KAAKiF,kBAAkBC,EAAQA,UACpCrG,EAAA,cAACY,EAAAC,EAAO,CACNkJ,gBAAiB,GACjBjJ,QAAO,GAAAmD,OAAKnE,OAAAU,EAAA,UAAAV,CAAU,WAAf,KAAAmE,OAA6BoC,EAAQA,UAC5CrG,EAAA,sBAAMO,UAAU,SAAS8F,EAAQA,WAIvCrG,EAAA,oBAAIO,UAAU,6BACXqJ,EAAKtF,IAAI0F,GACRhK,EAAA,oBACEO,UAAU,sBAAqB0J,WACrBnK,OAAAqI,EAAA,sBAAArI,CAAsB+G,OAAOmD,IACvCtI,IAAKsI,GACLhK,EAAA,qBAAKO,UAAU,wBACbP,EAAA,cAACkK,EAAA,EAAa,CAACxB,KAAM7B,OAAOmD,GAAMG,MAAM,KAE1CnK,EAAA,oBAAIO,UAAU,iCACW,MAAtB8F,EAAQ6C,MAAMc,IACb3D,EAAQ6C,MAAMc,GAAK1F,IAAIuD,GACrB7H,EAAA,oBACEO,UAAWoD,EAAW,kBAAmB,CACvC0B,SAAUwC,EAASnG,MAAQP,KAAKF,MAAM4G,WACtCuC,YACStK,OAAAqI,EAAA,UAAArI,CAAU+H,EAASa,MAAM2B,UACpC3I,IAAKmG,EAASnG,IACdqC,QAAS,IAAM5C,KAAKF,MAAMqJ,iBAAiBzC,IAC3C7H,EAAA,qBAAKO,UAAU,qCACbP,EAAA,cAACuK,EAAA,EAAa,CAAC7B,KAAM5I,OAAAqI,EAAA,UAAArI,CAAU+H,EAASa,MAAOyB,MAAM,GAClDK,GACCxK,EAAA,sBACEO,UAAU,cACVkK,SAAU3K,OAAAqI,EAAA,UAAArI,CAAU+H,EAASa,MAAMgC,eAClCF,KAMR3C,EAAS1D,OAAOwD,OAAS,GACxB3H,EAAA,cAAC2K,EAAA,EAAM,CACLpI,YAAasF,EAASnG,IACtByC,OAAQ0D,EAAS1D,OACjBvB,QAAS+C,EAAS,GAAGjE,MAAQmG,EAASnG,MAI1C1B,EAAA,qBAAKO,UAAU,6BACbP,EAAA,mBACEO,UAAWoD,EAAW,aAAc,CAClCiH,aAAc/C,EAASnG,MAAQP,KAAKF,MAAM4G,wBApEtE7H,EAAA,qBAAKO,UAAU,2CACZT,OAAAU,EAAA,UAAAV,CAAU,6BC7IZ,MAAM+K,UAAmC7K,EAAA,cAGtDgB,YAAYC,GACVC,MAAMD,GAHRE,KAAAsE,SAAU,EA2BVtE,KAAAK,aAAgBwE,IACdA,EAAE8E,iBADwD,MAAAlD,EAG5BzG,KAAKF,MAA3B6G,EAHkDF,EAGlDE,OAAQC,EAH0CH,EAG1CG,UAH0Cc,EAID1H,KAAKQ,MAAtDkG,EAJkDgB,EAIlDhB,SAAUkD,EAJwClC,EAIxCkC,aAAcnB,EAJ0Bf,EAI1Be,KAAgBvH,EAJUwG,EAIpBxD,SAEhC9D,EAAQzB,OAAAkL,EAAA,EAAAlL,CAAgB,CAAEuC,OAAMwF,WAAU+B,SAE5CvH,IACFlB,KAAKE,SAAS,CAAE4J,QAAQ,IACxBnL,OAAAoL,EAAA,EAAApL,CAAiB,CACfmI,QAASF,EACT1F,OACAd,QACAuG,OAAQA,EAAOpH,OACd4H,KACD,KACEnH,KAAKE,SAAS,CACZ4J,QAAQ,IAEV9J,KAAKF,MAAMe,QAAQ8F,EAAOpH,KAAM,CAC9B2B,OACAd,QACA4J,eAAgBJ,GAAgBjL,OAAAqI,EAAA,iBAAArI,CAAiBiL,MAGrD,KACE5J,KAAKE,SAAS,CACZ4J,QAAQ,QAOlB9J,KAAAiK,aAAe,IAAMjK,KAAKF,MAAMe,UAEhCb,KAAAkK,qBAAwBxD,GACtB1G,KAAKE,SAAS,CAAEwG,SAAUA,EAASnG,IAAKqJ,aAAclD,EAASa,OAEjEvH,KAAAmK,iBAAoB1B,GAAiBzI,KAAKE,SAAS,CAAEuI,SAErDzI,KAAAoK,oBAAuBlG,GAAyClE,KAAKE,SAAS,CAAEgE,aAhE9ElE,KAAKQ,MAAQ,CACXkG,SAAU1G,KAAKqK,kBAAkB,sBAAwB,GACzD5B,KAAMzI,KAAKqK,kBAAkB,mBAAqB,KAClDP,QAAQ,EACR5F,SAAUlE,KAAKF,MAAM6G,OAAO2D,eAAiBtK,KAAKF,MAAM6G,OAAO2D,cAAcpJ,MAIjFrB,oBACEG,KAAKsE,SAAU,EAGjBzE,uBACEG,KAAKsE,SAAU,EAGjBzE,kBAAkBqB,GAChB,OAAOlB,KAAKF,MAAM6G,OAAO2D,eAAiBtK,KAAKF,MAAM6G,OAAO2D,cAAcpJ,OAASA,EAC/ElB,KAAKF,MAAM6G,OAAO2D,cAAclK,MAChC,KA+CNP,SAAM,MACI8G,EAAW3G,KAAKF,MAAhB6G,OADJ4D,EAEyCvK,KAAKQ,MAA1CkG,EAFJ6D,EAEI7D,SAAU+B,EAFd8B,EAEc9B,KAAMqB,EAFpBS,EAEoBT,OAAQ5F,EAF5BqG,EAE4BrG,SAE1BtD,EAASjC,OAAAU,EAAA,wBAAAV,CAAwB,wCAAyCgI,EAAOpH,MAEjFiL,EAAiB7D,EAAO2D,eAAiB3D,EAAO2D,cAAcpJ,KAC9DuJ,EAAsB9D,EAAO2D,eAAiB3D,EAAO2D,cAAclK,MAPrEsK,EAS2B/L,OAAAkL,EAAA,EAAAlL,CAAgB,CAC7C+H,WACA8D,iBACAC,sBACAhC,OACAvE,aALMyG,EATJD,EASIC,UAAWC,EATfF,EASeE,QAQnB,OACE/L,EAAA,cAACgM,EAAAnL,EAAK,CAACoL,aAAclK,EAAQmK,eAAgB/K,KAAKiK,aAAclJ,KAAK,SACnElC,EAAA,wBAAQO,UAAU,cAChBP,EAAA,wBAAK+B,IAEP/B,EAAA,sBAAMmM,SAAUhL,KAAKK,cACnBxB,EAAA,qBAAKO,UAAU,4DACbP,EAAA,qBAAKO,UAAU,sCAAsC6L,KAAK,cACxDpM,EAAA,cAACqM,EAAA,EAA8B,CAC7BC,WAAW,EACXlH,SAAUjE,KAAKoK,oBACflG,SAAuB,qBAAbA,IAEZrF,EAAA,cAACuM,EAAA,EAAmB,CAClB3C,KAAMA,EACNkC,UAAWA,EACXC,QAASA,EACTS,aAAcrL,KAAKmK,iBACnBlG,SAAUjE,KAAKoK,oBACflG,SAAuB,mBAAbA,IAEZrF,EAAA,cAACkF,EAAuB,CACtBE,SAAUjE,KAAKoK,oBACflG,SAAuB,sBAAbA,KAGA,sBAAbA,GACCrF,EAAA,cAACwF,EAAkB,CACjBqC,SAAUA,EACVC,OAAQA,EAAOpH,KACfqH,UAAW5G,KAAKF,MAAM8G,UACtBuC,iBAAkBnJ,KAAKkK,wBAI7BrL,EAAA,wBAAQO,UAAU,cAChBP,EAAA,cAAC0J,EAAA7I,EAAe,CAACN,UAAU,eAAeqF,QAASqF,IACnDjL,EAAA,cAAC4D,EAAA,aAAY,CAACuB,UAAW2G,GAAab,IAAWc,GAC9CjM,OAAAU,EAAA,UAAAV,CAAU,SAEbE,EAAA,cAAC4D,EAAA,gBAAe,CAACG,QAAS5C,KAAKF,MAAMe,SAAUlC,OAAAU,EAAA,UAAAV,CAAU,uICpItD,MAAM2M,UAAmBzM,EAAA,cAAxCgB,kCACEG,KAAAsE,SAAU,EACVtE,KAAAQ,MAAe,CACb+K,SAAU,GACV9G,SAAS,GAgDXzE,KAAAwL,0BAA4B,CAAC7E,EAAgB8E,KAA2C,MAC9EF,EAAavL,KAAKQ,MAAlB+K,SAEFG,EAAUH,EAASlE,KAAKsE,GAAKA,EAAEpM,OAASoH,GAI9C,OAHI+E,IACFA,EAAQpB,cAAgBmB,GAEnBF,EAASK,MAAM,IAGxB5L,KAAA6L,cAAiBlF,IACf3G,KAAKE,SAAS,CAAE4L,aAAcnF,KAGhC3G,KAAA+L,eAAiB,CAACpF,EAAiB8E,KAC7B9E,EACF3G,KAAKE,SAAS,CACZqL,SAAUvL,KAAKwL,0BAA0B7E,EAAQ8E,GACjDK,kBAAcnI,IAGhB3D,KAAKE,SAAS,CAAE4L,kBAAcnI,KAlElC9D,oBACEG,KAAKsE,SAAU,EACftE,KAAKgM,gBAGPnM,uBACEG,KAAKsE,SAAU,EAGjBzE,wBAAoD,IAA9BoM,EAA8B1F,UAAAC,OAAA,QAAA7C,IAAA4C,UAAA,GAAAA,UAAA,GAAF,GAChD,OAAO5H,OAAAuN,EAAA,EAAAvN,CAAasN,EAAYE,OAAOD,EAAA,IAGzCrM,gBACE,MAAMiH,EAAU9G,KAAKF,MAAM8G,UAAUrG,IACrCP,KAAKE,SAAS,CAAEuE,SAAS,IAEzB,MAAM2H,EAAiBpM,KAAKqM,sBAAsBrM,KAAKF,MAAMmM,aAE7DtN,OAAAoL,EAAA,EAAApL,CAA0B,CAAEmI,YAAWK,KACrCmF,IACE,MAAMC,EAAiBD,EAAeC,eAClCD,EAAeC,eAAeJ,OAAOK,IAAQA,EAAIC,WACjD,GAEEC,EAAuBN,EAAejJ,IAAIwI,IAC9C,MAAMrB,EAAgBiC,EAAelF,KAAKmF,GAAOA,EAAIG,YAAchB,EAAEpM,MACrE,IAAK+K,EACH,OAAOqB,EAHyC,MAAAiB,EAKWtC,EAArDpJ,YAL0C,IAAA0L,EAKnC,mBALmCA,EAKfxM,EAA0BkK,EAA1BlK,MAAO4J,EAAmBM,EAAnBN,eAC1C,yUAAO6C,CAAA,GACFlB,EADL,CAEErB,cAAe,CAAEpJ,OAAMd,QAAO4J,sBAIlChK,KAAKE,SAAS,CAAEqL,SAAUmB,EAAsBjI,SAAS,KAE3D,KACEzE,KAAKE,SAAS,CAAEuE,SAAS,MA8B/B5E,eAAe8G,GACb,OAAOhI,OAAAoL,EAAA,EAAApL,CAAmB,CACxBmI,QAAS9G,KAAKF,MAAM8G,UAAUrG,IAC9BoG,WACCQ,KAAK,KACNnH,KAAKE,SAAS,CAAEqL,SAAUvL,KAAKwL,0BAA0B7E,OAAQhD,OAIrE9D,2BAA2ByK,GACzB,OAAQA,EAAcpJ,MACpB,IAAK,oBACH,OACErC,EAAA,cAAAA,EAAA,iBAAAiE,OACMnE,OAAAU,EAAA,UAAAV,CAAU,8BADhB,MAEG2L,EAAcN,eACbnL,EAAA,cAACiO,EAAA,EAAiB,CAACvF,KAAM+C,EAAcN,iBAEvC,KAIR,IAAK,iBACH,SAAAlH,OAAUnE,OAAAU,EAAA,UAAAV,CAAU,wBAApB,MAAAmE,OAAgDwH,EAAclK,OAChE,IAAK,mBACH,OAAOzB,OAAAU,EAAA,UAAAV,CAAU,6BACnB,QACE,OAAO2L,EAAcpJ,MAI3BrB,SAAM,MAAA6H,EACwC1H,KAAKQ,MAAzC+K,EADJ7D,EACI6D,SAAUO,EADdpE,EACcoE,aAAcrH,EAD5BiD,EAC4BjD,QAEhC,OAAI8G,EAAS/E,OAAS,EACb,KAGL/B,EACK5F,EAAA,cAAC0J,EAAA7I,EAAe,MAIvBb,EAAA,cAAAA,EAAA,cACEA,EAAA,uBAAOO,UAAU,cACfP,EAAA,2BACEA,EAAA,wBACEA,EAAA,wBAAKF,OAAAU,EAAA,UAAAV,CAAU,uBACfE,EAAA,oBAAIO,UAAU,4BACXT,OAAAU,EAAA,UAAAV,CAAU,gCAEbE,EAAA,oBAAIO,UAAU,eAAeT,OAAAU,EAAA,UAAAV,CAAU,0BAG3CE,EAAA,2BACG0M,EAASpI,IAAIwD,GACZ9H,EAAA,oBAAI0B,IAAKoG,EAAOpH,MACdV,EAAA,oBAAIO,UAAU,UACZP,EAAA,cAACkO,EAAA,EAAc,CAAC7N,WAAYyH,EAAQvH,UAAU,wBAC7CuH,EAAOpH,KACPoH,EAAOqG,QACNnO,EAAA,qBAAKO,UAAU,qBAAqBT,OAAAU,EAAA,UAAAV,CAAU,0BAGlDE,EAAA,oBAAIO,UAAU,4BACXuH,EAAO2D,cACJtK,KAAKiN,2BAA2BtG,EAAO2D,eACvC3L,OAAAU,EAAA,UAAAV,CAAU,gCAEhBE,EAAA,oBAAIO,UAAU,cACZP,EAAA,cAACqO,EAAAxN,EAAe,KACdb,EAAA,cAACsO,EAAA,oBAAmB,CAACvK,QAAS,IAAM5C,KAAK6L,cAAclF,IACpDhI,OAAAU,EAAA,UAAAV,CAAU,SAEZgI,EAAO2D,eACNzL,EAAA,cAACsO,EAAA,oBAAmB,CAACvK,QAAS,IAAM5C,KAAKoN,eAAezG,EAAOpH,OAC5DZ,OAAAU,EAAA,UAAAV,CAAU,2BAS1BmN,GACCjN,EAAA,cAAC6K,EAA0B,CACzB/C,OAAQmF,EACRlF,UAAW5G,KAAKF,MAAM8G,UAAUrG,IAChCM,QAASb,KAAK+L,yCC3IX,SAASsB,EAAwBvN,GAAmC,MAE/E4G,EAUE5G,EAVF4G,SACA4G,EASExN,EATFwN,gBACA1G,EAQE9G,EARF8G,UACA4D,EAOE1K,EAPF0K,eACAC,EAME3K,EANF2K,oBACAhC,EAKE3I,EALF2I,KACA8E,EAIEzN,EAJFyN,eACAzD,EAGEhK,EAHFgK,OACA5F,EAEEpE,EAFFoE,SACAsJ,EACE1N,EADF0N,uBAX+E9C,EAclD/L,OAAAkL,EAAA,EAAAlL,CAAgB,CAC7C+H,WACA8D,iBACAC,sBACAhC,OACAvE,WACAsJ,2BANM7C,EAdyED,EAczEC,UAAWC,EAd8DF,EAc9DE,QASnB,OACE/L,EAAA,sBAAMO,UAAU,4BAA4B4L,SAAUlL,EAAMkL,UAC1DnM,EAAA,qBAAKO,UAAU,+BAA+B6L,KAAK,cACjDpM,EAAA,cAAC4O,EAAA/N,EAAK,CACJgO,SAAUF,EACVpO,UAAU,oBACVuO,QAAS,IAAM7N,EAAM8N,yBAAwB,GAC7CxN,MAAM,WACLzB,OAAAU,EAAA,UAAAV,CAAU,qCAEbE,EAAA,qBAAKO,UAAU,mBAtDvB,SAA8BmO,GAC5B,IAAIM,EACArO,EAYJ,MAX4B,mBAAxB+N,EAAerM,MACjB2M,EAAO,GAAA/K,OAAMnE,OAAAU,EAAA,UAAAV,CAAU,wBAAhB,MAAAmE,OAA4CnE,OAAAU,EAAA,wBAAAV,CACjD,gBACA4O,EAAenN,OAAS,KAFnB,KAIPZ,EAAcb,OAAAU,EAAA,UAAAV,CAAU,sCAExBkP,EAAUlP,OAAAU,EAAA,UAAAV,CAAU,6BACpBa,EAAcb,OAAAU,EAAA,UAAAV,CAAU,0CAIxBE,EAAA,qBAAKO,UAAU,mBACbP,EAAA,4BAASgP,QAAoBrO,GAsCOsO,CAAqBP,IAEvD1O,EAAA,cAAC4O,EAAA/N,EAAK,CACJgO,QAASF,EACTpO,UAAU,kBACVuO,QAAS,IAAM7N,EAAM8N,yBAAwB,GAC7CxN,MAAM,YACLzB,OAAAU,EAAA,UAAAV,CAAU,uCAIfE,EAAA,qBAAKO,UAAU,kEACbP,EAAA,qBAAKO,UAAU,qCAAqC6L,KAAK,cACvDpM,EAAA,cAACqM,EAAA,EAA8B,CAC7BlH,UAAWwJ,EACXvJ,SAAUnE,EAAMiO,gBAChB7J,SAAUsJ,GAAuC,qBAAbtJ,IAEtCrF,EAAA,cAACuM,EAAA,EAAmB,CAClB3C,KAAMA,EACNzE,UAAWwJ,EACX7C,UAAWA,EACXC,QAASA,EACTS,aAAcvL,EAAMkO,aACpB/J,SAAUnE,EAAMiO,gBAChB7J,SAAUsJ,GAAuC,mBAAbtJ,KAEpCoJ,GACAzO,EAAA,cAACkF,EAAuB,CACtBC,UAAWwJ,EACXvJ,SAAUnE,EAAMiO,gBAChB7J,SAAUsJ,GAAuC,sBAAbtJ,KAI5B,sBAAbA,GACCrF,EAAA,cAACwF,EAAkB,CACjBqC,SAAUA,GAAY,GACtBC,OAAO,SACPC,UAAWA,EACXuC,iBAAkBrJ,EAAMqJ,oBAI9BtK,EAAA,qBAAKO,UAAWoD,EAAW,iBAAkB,CAAEyL,WAAYtD,KACzD9L,EAAA,mBAAGO,UAAU,iBAAiBT,OAAAU,EAAA,UAAAV,CAAU,kCACxCE,EAAA,cAAC0J,EAAA7I,EAAe,CAACN,UAAU,eAAeqF,QAASqF,IACnDjL,EAAA,cAAC4D,EAAA,aAAY,CAACuB,SAAU8F,IAAWc,IAAYD,GAAYhM,OAAAU,EAAA,UAAAV,CAAU,SACrEE,EAAA,cAAC4D,EAAA,gBAAe,CAACrD,UAAU,cAAcwD,QAAS9C,EAAMoO,UACrDvP,OAAAU,EAAA,UAAAV,CAAU,gaClGrB,MAAMwP,GAAgE,CACpEjN,KAAM,oBC5BO6B,EAAA,QAAApE,OAAAyP,EAAA,QAAAzP,CALU6B,IAAD,CACtB8M,gBAAiB3O,OAAA0P,EAAA,YAAA1P,CAAY6B,GAAO8M,gBACpC9L,SAAU7C,OAAA0P,EAAA,YAAA1P,CAAY6B,GAAOgB,WAGhB,CD+BA,cAAkB3C,EAAA,cAAjCgB,kCACEG,KAAAsE,SAAU,EACVtE,KAAAQ,MAAe,CACbiI,KAAM,KACNhE,SAAS,EACTqF,QAAQ,GAIV9J,KAAAsO,aAAeC,IAAS,IAAMvO,KAAKE,SAAS,CAAEsO,aAAS7K,IAAc,KA8DrE3D,KAAAyO,aAAe,KACbzO,KAAKE,SAAS,CAAE4J,QAAQ,IACxBnL,OAAAoL,EAAA,EAAApL,CAAmB,CAAEmI,QAAS9G,KAAKF,MAAM8G,UAAUrG,MAAO4G,KACxD,KACEnH,KAAKE,SAAS,CACZ4J,QAAQ,EACRU,oBAAgB7G,EAChBO,cAAUP,EACV6K,SAAS,IAEXxO,KAAKsO,gBAEP,KACEtO,KAAKE,SAAS,CAAE4J,QAAQ,OAK9B9J,KAAAkK,qBAAwBxD,GAA+B1G,KAAKE,SAAS,CAAEwG,SAAUA,EAASnG,MAE1FP,KAAAmK,iBAAoB1B,GAAiBzI,KAAKE,SAAS,CAAEuI,SAErDzI,KAAA0O,aAAe,IACb1O,KAAKE,SACHzB,IAAA,IAAAkQ,EAAAlQ,EAAG8O,sBAAH,IAAAoB,EAAoBR,GAApBQ,EAA6CnE,EAA7C/L,EAA6C+L,eAAgBC,EAA7DhM,EAA6DgM,oBAA7D,OACEzK,KAAK4O,gBAAgB,CAAErB,iBAAgB/C,iBAAgBC,0BAG7DzK,KAAAoK,oBAAuBlG,GAA0ClE,KAAKE,SAAS,CAAEgE,aAEjFlE,KAAA6O,4BAA+BrB,GAC7BxN,KAAKE,SAAS,CAAEsN,2BAElBxN,KAAAK,aAAgBwE,IACdA,EAAE8E,iBADwD,MAGlD/C,EAAc5G,KAAKF,MAAnB8G,UAHkDc,EAIS1H,KAAKQ,MAAhEkG,EAJkDgB,EAIlDhB,SAAU+B,EAJwCf,EAIxCe,KAAgBvH,EAJwBwG,EAIlCxD,SAExB,IAN0DwD,EAIlB8F,uBAItC,YADAxN,KAAKyO,eAIP,MAAMrO,EAAQzB,OAAAkL,EAAA,EAAAlL,CAAgB,CAAEuC,OAAMwF,WAAU+B,SAE5CvH,IACFlB,KAAKE,SAAS,CAAE4J,QAAQ,IACxBnL,OAAAoL,EAAA,EAAApL,CAAiB,CACfmI,QAASF,EAAUrG,IACnBW,OACAd,UACC+G,KACD,KACEnH,KAAKE,SAAS,CACZ4J,QAAQ,EACRU,eAAgBtJ,EAChBuJ,oBAAqBrK,QAASuD,EAC9B6K,SAAS,IAEXxO,KAAKsO,gBAEP,KACEtO,KAAKE,SAAS,CAAE4J,QAAQ,QA3HhCjK,oBACEG,KAAKsE,SAAU,EACftE,KAAK8O,yBAGPjP,uBACEG,KAAKsE,SAAU,EAGjBzE,gBAAgBkP,GAIf,MACSvE,EAAwDuE,EAAxDvE,eAAgBC,EAAwCsE,EAAxCtE,oBAAqB8C,EAAmBwB,EAAnBxB,eAEvCyB,GACFxE,GAA0C,mBAAxB+C,EAAerM,MAA6BqM,EAAenN,OAAU,KAE3F,MAAO,CACLqE,SAAS,EACT+F,iBACAC,sBACA8C,iBACArJ,SAAUsG,GAAkB+C,EAAerM,KAC3CsM,uBAAwByB,QAAQzE,GAChC/B,KAA0B,mBAAnB+B,GAAuCC,GAAwBuE,EACtEtI,SAA8B,sBAAnB8D,GAA0CC,GAAwB,IAIjF5K,yBACEG,KAAKE,SAAS,CAAEuE,SAAS,IAEzByK,QAAQC,IAAI,CACVxQ,OAAAoL,EAAA,EAAApL,GACAA,OAAAoL,EAAA,EAAApL,CAAiB,CACfgI,OAAS3G,KAAKF,MAAMwN,qBAA6B3J,EAAX,SACtCmD,QAAS9G,KAAKF,MAAM8G,UAAUrG,QAE/B4G,KACDlI,IAA8B,IAAAmQ,EAAAzN,GAAA1C,EAAA,GAA5BsO,EAA4B6B,EAAA,GAAZvB,EAAYuB,EAAA,GAC5B,GAAIpP,KAAKsE,QAAS,CACXiJ,EAAerM,OAClBqM,EAAiBY,IAEnB,MAAM1D,EAAsBoD,EAAQzN,MAC9BoK,EAAiBqD,EAAQpB,eAAY9I,EAAYkK,EAAQ3M,MAAQ,mBAEvElB,KAAKE,SACHF,KAAK4O,gBAAgB,CAAErB,iBAAgB/C,iBAAgBC,2BAI7D,KACEzK,KAAKE,SAAS,CAAEuE,SAAS,MA0E/B5E,eACE,OACEhB,EAAA,wBAAQO,UAAU,eAChBP,EAAA,oBAAIO,UAAU,cAAcT,OAAAU,EAAA,UAAAV,CAAU,0BACtCE,EAAA,mBAAGO,UAAU,oBACXP,EAAA,cAACwQ,EAAA,iBAAgB,CACfC,eAAgB3Q,OAAAU,EAAA,UAAAV,CAAU,qCAC1B4Q,GAAG,oCACHC,OAAQ,CACNC,KACE5Q,EAAA,cAAC6Q,EAAA,KAAI,CAACC,GAAG,0DACNhR,OAAAU,EAAA,UAAAV,CAAU,8CAKnBE,EAAA,yBACCmB,KAAKF,MAAM0B,UACV3C,EAAA,cAACwQ,EAAA,iBAAgB,CACfC,eAAgB3Q,OAAAU,EAAA,UAAAV,CAAU,sCAC1B4Q,GAAG,qCACHC,OAAQ,CACNC,KACE5Q,EAAA,cAAC6Q,EAAA,KAAI,CAACC,GAAG,4CACNhR,OAAAU,EAAA,UAAAV,CAAU,iDAW7BkB,SAAM,MAAA4G,EACgDzG,KAAKF,MAAjDmM,EADJxF,EACIwF,YAAaqB,EADjB7G,EACiB6G,gBAAiB1G,EADlCH,EACkCG,UADlC2D,EAaAvK,KAAKQ,MAVPkG,EAHE6D,EAGF7D,SACA8D,EAJED,EAIFC,eACA/B,EALE8B,EAKF9B,KACA8E,EANEhD,EAMFgD,eACA9I,EAPE8F,EAOF9F,QACAgG,EAREF,EAQFE,oBACA+C,EATEjD,EASFiD,uBACA1D,EAVES,EAUFT,OACA5F,EAXEqG,EAWFrG,SACAsK,EAZEjE,EAYFiE,QAGF,OACE3P,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC+Q,EAAA,EAAW,CAACC,YAAY,qBACzBhR,EAAA,qBAAKO,UAAU,qBACZY,KAAK8P,eACLrL,EACC5F,EAAA,cAAC0J,EAAA7I,EAAe,MAEhBb,EAAA,qBAAKO,UAAU,gCACZkO,GAAmBzO,EAAA,wBAAKF,OAAAU,EAAA,UAAAV,CAAU,qCAElC4O,QAA6C5J,IAA3B6J,GACjB3O,EAAA,cAACwO,EAAuB,CACtB3G,SAAUA,EACV4G,gBAAiBA,EACjB1G,UAAWA,EAAUrG,IACrBiK,eAAgBA,EAChBC,oBAAqBA,EACrBhC,KAAMA,EACN8E,eAAgBA,EAChBW,SAAUlO,KAAK0O,aACfvF,iBAAkBnJ,KAAKkK,qBACvB8D,aAAchO,KAAKmK,iBACnB4D,gBAAiB/N,KAAKoK,oBACtBY,SAAUhL,KAAKK,aACfuN,wBAAyB5N,KAAK6O,4BAC9BrB,uBAAwBA,EACxB1D,OAAQA,EACR5F,SAAUA,IAIdrF,EAAA,qBAAKO,UAAWoD,EAAW,aAAc,CAAEyL,UAAWnE,IAAW0E,KAC/D3P,EAAA,sBAAMO,UAAU,gBACdP,EAAA,cAACkR,EAAArQ,EAAgB,CAACN,UAAU,iBAC3BT,OAAAU,EAAA,UAAAV,CAAU,0BAGd4O,GAAkBD,GACjBzO,EAAA,qBAAKO,UAAU,4CACbP,EAAA,yBACAA,EAAA,wBAAKF,OAAAU,EAAA,UAAAV,CAAU,wCACfE,EAAA,cAACyM,EAAU,CACTW,YAAaA,EACbrF,UAAWA,EACXoJ,iBACExF,EACI,CACEtJ,KAAMsJ,EACNpK,MAAOqK,GAET8C,6CE5S1BnK,EAAA6M,EAAAlN,EAAA,sBAAA6M,IAAA,IAAAM,EAAA9M,EAAA,GAAA+M,EAAA/M,EAAA,KA0Be,SAASwM,EAAVnR,GAA4C,IAApBoR,EAAoBpR,EAApBoR,YACpC,OACEK,EAAA,cAACC,EAAA,EAAmBnR,SAAQ,KACzBC,IAAA,IAAGmR,EAAHnR,EAAGmR,eAAgBC,EAAnBpR,EAAmBoR,kBAAnB,OACCH,EAAA,cAACI,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnBR,YAAaA,MAavB,MAAMS,UAAyBJ,EAAA,cAC7BrQ,oBACEG,KAAKF,MAAMsQ,eAAepQ,KAAKF,MAAM+P,aAGvChQ,mBAAmB0Q,GACbA,EAAUV,cAAgB7P,KAAKF,MAAM+P,cACvC7P,KAAKF,MAAMuQ,kBAAkBrQ,KAAKF,MAAM+P,aACxC7P,KAAKF,MAAMsQ,eAAeG,EAAUV,cAIxChQ,uBACEG,KAAKF,MAAMuQ,kBAAkBrQ,KAAKF,MAAM+P,aAG1ChQ,SACE,OAAO,yCC/DXuD,EAAA6M,EAAAlN,EAAA,sBAAAyN,IAAApN,EAAA6M,EAAAlN,EAAA,sBAAA+J,IAAA,IAAAoD,EAAA9M,EAAA,GAAAqN,EAAArN,EAAA,KAAAsN,EAAAtN,EAAA,IA4BO,MAAMoN,EAAkB,CAC7BG,KAAM,UACNC,MAAO,OACP/H,IAAK,UACLgI,KAAM,UACNC,OAAQ,WAGK,SAAShE,EAAVrO,GAAqD,IAAvBsS,EAAuBtS,EAAvBsS,SAAUxJ,EAAa9I,EAAb8I,KACpD,OACE2I,EAAA,cAACO,EAAA,cAAa9R,OAAAqS,OAAA,CAAC5Q,MAAOzB,OAAA+R,EAAA,UAAA/R,CAAU4I,IAAWiJ,GACxCO,sCCvCP3N,EAAA6M,EAAAlN,EAAA,sBAAAkO,IAAA7N,EAAA6M,EAAAlN,EAAA,sBAAAgG,IAAA,IAAAmH,EAAA9M,EAAA,GAAAqN,EAAArN,EAAA,KAAAsN,EAAAtN,EAAA,IA6BO,MAAMoN,EAAkB,CAAEG,KAAM,UAAWC,MAAO,QAAS/H,IAAK,WAE1DoI,EAAsB,CAAEN,KAAM,UAAWC,MAAO,OAAQ/H,IAAK,WAE3D,SAASE,EAAVtK,GAAuD,IAA7BsS,EAA6BtS,EAA7BsS,SAAUxJ,EAAmB9I,EAAnB8I,KAAMyB,EAAavK,EAAbuK,KACtD,OACEkH,EAAA,cAACO,EAAA,cAAa9R,OAAAqS,OAAA,CAAC5Q,MAAOzB,OAAA+R,EAAA,UAAA/R,CAAU4I,IAAYyB,EAAOiI,EAAsBT,GACtEO,sCCjBP,IAAYG,EAiIL,SAASC,EAAY5Q,GAC1B,OAAQ5B,OAAO6Q,OAAO0B,GAAwBE,SAAS7Q,GArJzD6C,EAAA6M,EAAAlN,EAAA,sBAAAmO,IAAA9N,EAAA6M,EAAAlN,EAAA,sBAAAoO,IAmBA,SAAYD,GACVA,EAAA,4BACAA,EAAA,wCACAA,EAAA,kCACAA,EAAA,YACAA,EAAA,8BACAA,EAAA,gCACAA,EAAA,oCACAA,EAAA,kBACAA,EAAA,0BACAA,EAAA,4CACAA,EAAA,8BACAA,EAAA,wCACAA,EAAA,8CACAA,EAAA,wBACAA,EAAA,8CACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,oCACAA,EAAA,oBACAA,EAAA,0CACAA,EAAA,oCACAA,EAAA,0BACAA,EAAA,sCACAA,EAAA,oCACAA,EAAA,oCACAA,EAAA,oDACAA,EAAA,sCACAA,EAAA,oFACAA,EAAA,8CACAA,EAAA,8CACAA,EAAA,kCACAA,EAAA,4DACAA,EAAA,8BACAA,EAAA,4CACAA,EAAA,cACAA,EAAA,0CACAA,EAAA,oEACAA,EAAA,sBACAA,EAAA,kCACAA,EAAA,kCACAA,EAAA,kCACAA,EAAA,8EACAA,EAAA,0EACAA,EAAA,sEACAA,EAAA,gEACAA,EAAA,8EACAA,EAAA,oCACAA,EAAA,8BACAA,EAAA,8BACAA,EAAA,cACAA,EAAA,gCACAA,EAAA,8DACAA,EAAA,oCACAA,EAAA,oCACAA,EAAA,cACAA,EAAA,wBACAA,EAAA,0DACAA,EAAA,gDACAA,EAAA,0CACAA,EAAA,oBACAA,EAAA,kCACAA,EAAA,kDACAA,EAAA,4BACAA,EAAA,kDACAA,EAAA,4CACAA,EAAA,8CACAA,EAAA,4CACAA,EAAA,4DACAA,EAAA,0CACAA,EAAA,sCACAA,EAAA,sBACAA,EAAA,wCACAA,EAAA,wDACAA,EAAA,4CACAA,EAAA,4CACAA,EAAA,gDACAA,EAAA,wEACAA,EAAA,8CACAA,EAAA,gEACAA,EAAA,0CACAA,EAAA,kEACAA,EAAA,wDACAA,EAAA,4CACAA,EAAA,wCACAA,EAAA,oDACAA,EAAA,0CACAA,EAAA,gCACAA,EAAA,0CACAA,EAAA,0BACAA,EAAA,oBACAA,EAAA,wBACAA,EAAA,8DACAA,EAAA,kDACAA,EAAA,4CACAA,EAAA,oCACAA,EAAA,4CACAA,EAAA,4CACAA,EAAA,wCACAA,EAAA,sDACAA,EAAA,gEACAA,EAAA,kCACAA,EAAA,sCACAA,EAAA,wDACAA,EAAA,kCACAA,EAAA,gDACAA,EAAA,0DACAA,EAAA,gDACAA,EAAA,8DACAA,EAAA,8BACAA,EAAA,wCACAA,EAAA,oCACAA,EAAA,0BACAA,EAAA,4BACAA,EAAA,wBACAA,EAAA,0CACAA,EAAA,sBACAA,EAAA,0BACAA,EAAA,0CACAA,EAAA,8BACAA,EAAA,4CACAA,EAAA,cACAA,EAAA,4CACAA,EAAA,kCACAA,EAAA,wBACAA,EAAA,kCACAA,EAAA,kCA9HF,CAAYA,MAAS,6hBCOd,MAAMG,EAAgBC,EAAA,EAAUC,OAEjCC,EAA6C,CACjD3R,CAACyR,EAAA,EAAUC,QAAS,CAACE,EAAA,EAAUC,KAAMD,EAAA,EAAUE,YAAaF,EAAA,EAAUG,iBACtE/R,CAACyR,EAAA,EAAUO,UAAW,CAACJ,EAAA,EAAUK,eAAgBL,EAAA,EAAUM,iBAC3DlS,CAACyR,EAAA,EAAUU,cAAe,CAACP,EAAA,EAAUQ,MAAOR,EAAA,EAAUS,mBAGlDC,EAAmC,CACvCtS,CAACyR,EAAA,EAAUC,QAASC,EAAyBF,EAAA,EAAUC,QAAQzO,OAAO,CACpE2O,EAAA,EAAUW,mBACVX,EAAA,EAAUY,gBACVZ,EAAA,EAAUa,eAEZzS,CAACyR,EAAA,EAAUO,UAAW,IAAIL,EAAyBF,EAAA,EAAUO,UAAWJ,EAAA,EAAUI,UAClFhS,CAACyR,EAAA,EAAUU,cAAe,IACrBR,EAAyBF,EAAA,EAAUU,cACtCP,EAAA,EAAUc,2BAIP,SAASC,EAAcC,GAC5B,OAAOA,IAAUnB,EAAA,EAAUoB,OAGtB,SAASC,IAAkC,IAApBC,EAAoBrM,UAAAC,OAAA,QAAA7C,IAAA4C,UAAA,IAAAA,UAAA,GAChD,MAAMsM,EAAS,CAACvB,EAAA,EAAUC,OAAQD,EAAA,EAAUO,SAAUP,EAAA,EAAUU,cAChE,OAAOY,EAAeC,EAAS,IAAIA,EAAQvB,EAAA,EAAUoB,QAGhD,SAASI,EAAcC,GAC5B,OAAOA,EAAMC,KAAKC,KAAKC,GAASjE,QAAQiE,EAAMC,GAAiB,IAAZD,EAAMC,IAGpD,SAASC,EAAeC,GAC7B,OAAOA,EAAOJ,KAAKF,GAASA,EAAMC,MAAQD,EAAMC,KAAKxM,OAAS,GAGzD,SAAS8M,EAAoBD,GAClC,OAAOA,EAAO7M,OAAS,EAAI6M,EAAO,GAAGnS,KAAO,MAGvC,SAASqS,EAA2Bd,EAAkBe,GAC3D,OAAOhB,EAAcC,GAASe,EAAgBhC,EAAyBiB,GAGlE,SAASgB,EAAkBhB,EAAkBe,GAClD,OAAOhB,EAAcC,GAASe,EAAgBrB,EAAeM,GAOxD,SAASiB,EAAoBL,EAAiBM,EAAkBC,GACrE,OAAOC,IACLC,IAAQT,EAAQN,GAASA,EAAM7R,MAC/BA,GAAQ6S,IAAM7S,EAAM0S,IACpBhI,MAAM,EAAG+H,GAqBN,SAASK,EACdC,EACAxB,EACAyB,EACAC,GAEA,OAAIA,EAAiB3N,QAAU,QAAyB7C,IAApBsQ,EAC3B,GAEFG,IACLH,EACG9H,OAAOkI,GAAWF,EAAiBG,QAAQD,EAAQE,SAAW,GAC9DpR,IAAIkR,IACH,GAAIA,EAAQE,SAAW9C,EAAA,EAAUM,kBAAoBS,EAAcC,GACjE,OAhCH,SACL+B,EACAP,GAEA,MAAMQ,EAAeR,EAAgB5M,KAAKgN,GAAWA,EAAQE,SAAW9C,EAAA,EAAUK,gBAClF,MAAO,CACLkB,KAAMyB,EACFD,EAAeE,QAAQvR,IAAI,CAACuD,EAAU8B,KAAX,CACzBmM,EAAGjO,EAASa,KACZ4L,EAAGzN,OAAO+O,EAAaC,QAAQlM,GAAKpI,OAASsF,OAAOgB,EAAStG,UAE/D,GACJb,KAAM,gBACNqV,eAAgBjW,OAAAkW,EAAA,UAAAlW,CAAU,gDAC1BuC,KAAM,OAkBO4T,CAA2BT,EAASJ,GAE7C,MAAMM,EAuCd,SAAoBhU,EAAa2T,GAC/B,GAAIa,MAAMC,QAAQd,GAChB,OAAOA,EAAQ7M,KAAKkN,GAAUA,EAAOhU,MAAQA,GAE/C,OAAO2T,EAAQ3T,GA3CM0U,CAAWZ,EAAQE,OAAQL,GAC1C,MAAO,CACLlB,KAAMqB,EAAQK,QAAQvR,IAAIuD,IAAQ,CAChCiO,EAAGjO,EAASa,KACZ4L,EAAGoB,GAA0B,UAAhBA,EAAOrT,KAAmBwF,EAAStG,MAAQsF,OAAOgB,EAAStG,UAE1Eb,KAAM8U,EAAQE,OACdK,eAAgBL,EAAS5V,OAAAkW,EAAA,uBAAAlW,CAAuB4V,GAAU5V,OAAAuW,EAAA,eAAAvW,CAAe0V,EAAQE,QACjFrT,KAAMqT,EAASA,EAAOrT,KAAO,SAGnC6R,GACEoB,EAAiBG,QAAuB,kBAAfvB,EAAMxT,KAA2B,kBAAoBwT,EAAMxT,OAInF,SAAS4V,EACdC,EACAtO,EACA2L,GACsB,IAAtByB,EAAsB3N,UAAAC,OAAA,QAAA7C,IAAA4C,UAAA,GAAAA,UAAA,GAAF,GAEpB5H,OAAA0W,EAAA,KAAA1W,CAAKyW,EAAW3C,EAAO3L,GACnB0L,EAAcC,IAChB9T,OAAA0W,EAAA,KAAA1W,CAAI,GAAAmE,OAAIsS,EAAJ,WAAwBlB,EAAQoB,KAAK,KAAMxO,GAI5C,SAASyO,EACdH,EACAtO,GAEA,MAAM0O,EAAe7W,OAAA0W,EAAA,IAAA1W,CAAG,GAAAmE,OAAIsS,EAAJ,WAAwBtO,GAChD,MAAO,CACL2L,MAAQ9T,OAAA0W,EAAA,IAAA1W,CAAIyW,EAAWtO,IAA0BuK,EACjDmE,aAAcA,EAAeA,EAAaC,MAAM,KAAO,uCCzI3D,IAAYC,EAnBZtS,EAAA6M,EAAAlN,EAAA,sBAAA2S,IAmBA,SAAYA,GACVA,EAAA,gBACAA,EAAA,oBACAA,EAAA,4BACAA,EAAA,gBAJF,CAAYA,MAAS,uCCnBrBtS,EAAA6M,EAAAlN,EAAA,sBAAAqG,IAAA,IAAA8G,EAAA9M,EAAA,GAAAqN,EAAArN,EAAA,KAAAsN,EAAAtN,EAAA,IA6BO,MAAMoN,EAAkB,CAAEK,KAAM,UAAWC,OAAQ,WAE7CG,EAAsB,CAAEJ,KAAM,UAAWC,OAAQ,UAAW6E,OAAQ,WAElE,SAASvM,EAAV3K,GAAuD,IAA7BsS,EAA6BtS,EAA7BsS,SAAUxJ,EAAmB9I,EAAnB8I,KAAMyB,EAAavK,EAAbuK,KACtD,OACEkH,EAAA,cAACO,EAAA,cAAa9R,OAAAqS,OAAA,CAAC5Q,MAAOzB,OAAA+R,EAAA,UAAA/R,CAAU4I,IAAYyB,EAAOiI,EAAsBT,GACtEO,kfCNQ,SAAShE,EAAVtO,GAAsE,IAA3CS,EAA2CT,EAA3CS,WAAeY,EAA4B8V,EAAAnX,EAAA,gBAClF,OAAIE,OAAAkX,EAAA,EAAAlX,CAAcO,GACTgR,EAAA,cAAC4F,EAAApW,EAAef,OAAAqS,OAAA,GAAKlR,IAErBoQ,EAAA,cAAC6F,EAAArW,EAAUf,OAAAqS,OAAA,GAAKlR,yaCUpB,MAAMkW,EAAc,CAAC,UAAW,eAAgB,kBAAmB,SAC7DC,EAA0B,CAAC,eAAgB,oBAAqB,SAEtE,SAASC,EAAqBC,EAAkBC,GACrD,OAAOD,EAAU7W,WAAa8W,EAAU9W,UAAY+W,EAAkBF,EAAWC,GAG5E,SAASE,EAAqBH,EAAkBC,GACrD,OAAQG,IAAQJ,EAAU3C,cAAe4C,EAAU5C,eAG9C,SAAS6C,EAAkBF,EAAkBC,GAClD,OAAQG,IAAQJ,EAAUpP,KAAMqP,EAAUrP,QAAUwP,IAAQJ,EAAUxG,GAAIyG,EAAUzG,IAG/E,SAAS6G,EAAoBL,EAAkBC,GACpD,OAAOD,EAAU1D,QAAU2D,EAAU3D,MAahC,SAASgE,EACdjS,EACAkS,GAEA,OAAOlS,EAASmS,OAAwB,CAACC,EAAKlQ,KAC5C,IAAImQ,EAAiBD,EAAIA,EAAIpQ,OAAS,GACtC,MAAMsQ,EAAepQ,EAAS1D,OAAOqE,KAAK3I,GAA4B,YAAnBA,EAAMY,UACzD,GAAIwX,EAAc,CAChB,MAAMC,EAAa,CAAE7R,QAAS4R,EAAavX,KAAMgB,IAAKuW,EAAavW,IAAKwH,MAAO,KAC1E8O,GAAkBlY,OAAOmJ,KAAK+O,EAAe9O,OAAOvB,OAAS,EAChEoQ,EAAI9S,KAAKiT,GAETH,EAAIA,EAAIpQ,OAAS,GAAKuQ,EAExBF,EAAiBE,OACPF,IAEVA,EAAiB,CAAE3R,QAAS,KAAM3E,IAAK,KAAMwH,MAAO,IACpD6O,EAAI9S,KAAK+S,IAGX,MAAMhO,EAAMmO,EAAWrY,OAAA+R,EAAA,UAAA/R,CAAU+H,EAASa,OACvC0P,UACAC,WAEH,IAAIC,GAAe,EACnB,GAAIT,EAAMpX,UAAYoX,EAAM3P,MAAQ2P,EAAM/G,GAAI,CAC5C,MAAMyH,GAAeV,EAAM3P,MAAQL,EAASa,MAAQmP,EAAM3P,KACpDsQ,GAAcX,EAAM/G,IAAMjJ,EAASa,MAAQmP,EAAM/G,GACjD2H,GACHZ,EAAMpX,UAAgF,MAApEoH,EAAS1D,OAAOqE,KAAK3I,GAASA,EAAMY,WAAaoX,EAAMpX,UAC5E6X,EAAeC,GAAeC,GAAcC,EAS9C,OANIH,IACGN,EAAe9O,MAAMc,KACxBgO,EAAe9O,MAAMc,GAAO,IAE9BgO,EAAe9O,MAAMc,GAAK/E,KAAK4C,IAE1BkQ,GACN,IAGE,SAASW,EAAWC,GACzB,MAAO,CACLlY,SAAUX,OAAA8Y,EAAA,cAAA9Y,CAAc6Y,EAAQ,UAChChE,cAAe7U,OAAA8Y,EAAA,aAAA9Y,CAAa6Y,EAAQ,eAAoBC,EAAA,eACxD1Q,KAAMpI,OAAA8Y,EAAA,YAAA9Y,CAAY6Y,EAAQ,MAC1B/E,MAAOiF,EAAWF,EAAQ,OAC1B1Q,QAASnI,OAAA8Y,EAAA,cAAA9Y,CAAc6Y,EAAQ,IAC/B7H,GAAIhR,OAAA8Y,EAAA,YAAA9Y,CAAY6Y,EAAQ,IACxBG,aAAchZ,OAAA8Y,EAAA,YAAA9Y,CAAY6Y,EAAQ,gBAI/B,SAASI,EAAelB,GAC7B,OAAO/X,OAAA8Y,EAAA,WAAA9Y,CAAW,CAChBW,SAAUX,OAAA8Y,EAAA,gBAAA9Y,CAAgB+X,EAAMpX,UAChCyH,KAAMpI,OAAA8Y,EAAA,cAAA9Y,CAAc+X,EAAM3P,MAC1BD,QAASnI,OAAA8Y,EAAA,gBAAA9Y,CAAgB+X,EAAM5P,SAC/B6I,GAAIhR,OAAA8Y,EAAA,cAAA9Y,CAAc+X,EAAM/G,MAIrB,SAASkI,EAAkBnB,GAChC,OAAO/X,OAAA8Y,EAAA,WAAA9Y,CAAW,CAChBW,SAAUX,OAAA8Y,EAAA,gBAAA9Y,CAAgB+X,EAAMpX,UAChCwY,eAAgBnZ,OAAA8Y,EAAA,qBAAA9Y,CAAqB+X,EAAMlD,eAC3CzM,KAAMpI,OAAA8Y,EAAA,cAAA9Y,CAAc+X,EAAM3P,MAC1B0L,OAYoBrS,EAZEsW,EAAMjE,MAavBrS,IAAU2X,EAAA,OAAgBpU,EAAYvD,GAZ3CmP,GAAI5Q,OAAA8Y,EAAA,gBAAA9Y,CAAgB+X,EAAM5P,SAC1B6I,GAAIhR,OAAA8Y,EAAA,cAAA9Y,CAAc+X,EAAM/G,IACxBqI,cAAerZ,OAAA8Y,EAAA,cAAA9Y,CAAc+X,EAAMiB,gBASvC,IAAwBvX,EALxB,SAASsX,EAAWtX,GAClB,MAAMqS,EAAQ9T,OAAA8Y,EAAA,cAAA9Y,CAAcyB,GAC5B,OAAOzB,OAAOmJ,KAAKmQ,EAAA,GAAW7G,SAASqB,GAAUA,EAAsBsF,EAAA,qCCxJzE3U,EAAA6M,EAAAlN,EAAA,sBAAAhE,IAAA,IAAAmR,EAAA9M,EAAA,GA2BO,MAAMrE,EAAmBmR,EAAA,cAA0C,CACxEhR,gBAAYyE,EACZiD,eAAWjD,sCC7BbP,EAAA6M,EAAAlN,EAAA,sBAAAmV,IAAA9U,EAAA6M,EAAAlN,EAAA,sBAAAoV,IAAA/U,EAAA6M,EAAAlN,EAAA,sBAAAqV,IAAAhV,EAAA6M,EAAAlN,EAAA,sBAAAzC,IAAA8C,EAAA6M,EAAAlN,EAAA,sBAAAsV,IAAA,IAAAC,EAAAlV,EAAA,GAAAmV,EAAAnV,EAAA,KAuBO,SAAS8U,EACdlF,GAQA,OAAOrU,OAAA2Z,EAAA,QAAA3Z,CAAQ,+BAAgCqU,GAAMwF,MAAMD,EAAA,GAWtD,SAASJ,EACdzR,EACAnH,EACAD,EACAE,GAEA,MAAMwT,EAAoB,CAAEtM,WAAUnH,QAOtC,OANID,IACF0T,EAAK1T,SAAWA,GAEdE,IACFwT,EAAKxT,YAAcA,GAEdb,OAAA2Z,EAAA,SAAA3Z,CAAS,qCAAsCqU,GAAM7L,KAAKsR,GAAKA,EAAE/Z,MAAO6Z,EAAA,GAG1E,SAASH,EAAY1Z,GAC1B,OAAOC,OAAA2Z,EAAA,KAAA3Z,CAAK,qCAAsC,CAAED,UAAS8Z,MAAMD,EAAA,GAG9D,SAASjY,EACd5B,EACAa,EACAC,GAEA,MAAMwT,EAAoB,CAAEtU,SAO5B,OANIa,IACFyT,EAAKzT,KAAOA,GAEVC,IACFwT,EAAKxT,YAAcA,GAEdb,OAAA2Z,EAAA,SAAA3Z,CAAS,qCAAsCqU,GAAM7L,KAAKsR,GAAKA,EAAE/Z,MAAO6Z,EAAA,GAG1E,SAASF,EAAe3R,GAC7B,OAAO/H,OAAA2Z,EAAA,KAAA3Z,CAAK,+BAAgC,CAAE+H,aAAY8R,MAAMD,EAAA,sCC/ElEnV,EAAA6M,EAAAlN,EAAA,sBAAA2V,IAAAtV,EAAA6M,EAAAlN,EAAA,sBAAAjE,IAAA,IAAAoR,EAAA9M,EAAA,GAAAqN,EAAArN,EAAA,KAAAuV,EAAAvV,EAAA,IAAAwV,EAAAxV,EAAA,KAAAyV,EAAAzV,EAAA,KAAA0V,EAAA1V,EAAA2V,EAAAF,GAAAG,EAAA5V,EAAA,KAAA6V,EAAA7V,EAAA2V,EAAAC,GAAAE,EAAA9V,EAAA,GAAA+V,EAAA/V,EAAA,KAAAgW,EAAAhW,EAAA,KAAAiW,EAAAjW,EAAA,KAkCO,SAASsV,EAAwBha,GACtC,MAA0B,sBAAnBA,EAAMY,eAA+DqE,IAA3BjF,EAAM4a,iBAYlD,MAAMxa,UAAmCoR,EAAA,cAAhDrQ,kCACEG,KAAAQ,MAAe,CAAE+Y,UAAU,GAE3BvZ,KAAA6C,gBAAmBnE,IACjBA,EAAMmE,mBAGR7C,KAAAwZ,mBAAqB,KACnBxZ,KAAKE,SAASM,IAAK,CAAO+Y,UAAW/Y,EAAM+Y,aAG7CvZ,KAAAyZ,kBAAoB,CAAC3S,EAAwCH,IAC3DuJ,EAAA,cAACyI,EAAA,KAAI,CACH/V,QAAS5C,KAAK6C,gBACduB,MAAO0C,EAAQvH,KACfoQ,GAAIhR,OAAA0a,EAAA,EAAA1a,CAAcmI,EAAQvG,IAAKoG,IAC9BhI,OAAAwa,EAAA,mBAAAxa,CAAmBmI,EAAQvH,KAAM,KAItCS,KAAA0Z,aAAe,eAAC/S,EAADJ,UAAAC,OAAA,QAAA7C,IAAA4C,UAAA,GAAAA,UAAA,GAAU5H,OAAAua,EAAA,UAAAva,CAAU,wBAApB,OACbuR,EAAA,sBAAM9Q,UAAU,SAASgF,MAAOuC,GAC9BuJ,EAAA,cAAC4I,EAAApZ,EAAU,CAACN,UAAU,qCACrBuH,IAIL9G,oBAAoBiH,GAQlB,MAAM6S,GAAc3Z,KAAKF,MAAMZ,YAAcP,OAAAya,EAAA,EAAAza,CAAaqB,KAAKF,MAAMZ,YAErE,GAA2B,UAAvB4H,EAAQ8S,WAAwB,CAClC,MAAMC,EAAUF,EACZ,gCACA,uCACJ,OACEzJ,EAAA,qBAAK9Q,UAAU,iBACb8Q,EAAA,cAACO,EAAA,iBAAgB,CACfnB,eAAgB3Q,OAAAua,EAAA,UAAAva,CAAUkb,GAC1BtK,GAAIsK,EACJrK,OAAQ,CACN1I,QAAS9G,KAAKyZ,kBAAkB3S,EAASA,EAAQH,QACjDA,OAAQ3G,KAAK0Z,aAAa5S,EAAQH,YAKrC,GAA2B,YAAvBG,EAAQ8S,WAA0B,CAC3C,MAAMC,EAAUF,EACZ,kCACA,yCACJ,OACEzJ,EAAA,qBAAK9Q,UAAU,iBACb8Q,EAAA,cAACO,EAAA,iBAAgB,CACfnB,eAAgB3Q,OAAAua,EAAA,UAAAva,CAAUkb,GAC1BtK,GAAIsK,EACJrK,OAAQ,CACN1I,QAAS9G,KAAKyZ,kBAAkB3S,EAASA,EAAQH,QACjDA,OAAQ3G,KAAK0Z,aAAa5S,EAAQH,YAKrC,MAA2B,mBAAvBG,EAAQ8S,WAEf1J,EAAA,cAACO,EAAA,iBAAgB,CACfnB,eAAgB3Q,OAAAua,EAAA,UAAAva,CAAU,2CAC1B4Q,GAAG,0CACHC,OAAQ,CACN1I,QAAS9G,KAAKyZ,kBAAkB3S,EAASA,EAAQgT,WACjDC,UAAW/Z,KAAK0Z,aAAa5S,EAAQiT,WACrCD,UAAW9Z,KAAK0Z,aAAa5S,EAAQgT,cAKtC,KAGTja,SAAM,MACInB,EAAUsB,KAAKF,MAAfpB,MACA6a,EAAavZ,KAAKQ,MAAlB+Y,SACR,OACErJ,EAAA,cAAAA,EAAA,cACEA,EAAA,sBAAM9Q,UAAU,QAAQT,OAAAua,EAAA,UAAAva,CAAU,iBAAkBD,EAAMY,UAAkB,KAE5E4Q,EAAA,yBACEA,EAAA,cAAC0I,EAAA,gBAAe,CACdxZ,UAAU,yCACVwD,QAAS5C,KAAKwZ,mBACd3W,iBAAiB,GAChB0W,EAAW5a,OAAAua,EAAA,UAAAva,CAAU,QAAUA,OAAAua,EAAA,UAAAva,CAAU,QAC1CuR,EAAA,cAAC+I,EAAAvZ,EAAY,CAACN,UAAU,qBAAqB4a,OAAQT,MAIxDA,GACCrJ,EAAA,oBAAI9Q,UAAU,0BACXV,EAAM4a,iBAAiBW,SAAS9W,IAAI2D,GACnCoJ,EAAA,oBAAI9Q,UAAU,iCAAiCmB,IAAKuG,EAAQvG,KACzDP,KAAKka,oBAAoBpT,2CCzJ1C1D,EAAA6M,EAAAlN,EAAA,sBAAAoX,IAAA/W,EAAA6M,EAAAlN,EAAA,sBAAAnE,IAAA,IAAAsR,EAAA9M,EAAA,GAAAqN,EAAArN,EAAA,KAAAuV,EAAAvV,EAAA,IAAAwV,EAAAxV,EAAA,KAAAgX,EAAAhX,EAAA,KAAAiX,EAAAjX,EAAA2V,EAAAqB,GAAAE,EAAAlX,EAAA,KAAAmX,EAAAnX,EAAA2V,EAAAuB,GAAApB,EAAA9V,EAAA,GAAAoX,EAAApX,EAAA,KA8BO,SAAS+W,EAAuBzb,GACrC,MAA0B,iBAAnBA,EAAMY,eAAqDqE,IAAtBjF,EAAM+b,YAW7C,MAAM7b,UAAkCsR,EAAA,cAA/CrQ,kCACEG,KAAAQ,MAAe,CAAE+Y,UAAU,GAE3BvZ,KAAA6C,gBAAmBnE,IACjBA,EAAMmE,mBAGR7C,KAAAwZ,mBAAqB,KACnBxZ,KAAKE,SAASM,IAAK,CAAO+Y,UAAW/Y,EAAM+Y,aAG7C1Z,SAAM,MACInB,EAAUsB,KAAKF,MAAfpB,MACA6a,EAAavZ,KAAKQ,MAAlB+Y,SACR,OACErJ,EAAA,cAAAA,EAAA,cACEA,EAAA,sBAAM9Q,UAAU,qBAAqBT,OAAAua,EAAA,UAAAva,CAAU,iBAAkBD,EAAMY,UAAkB,KACxFZ,EAAM+b,YAAYC,aACjBxK,EAAA,cAACO,EAAA,iBAAgB,CACfnB,eAAgB3Q,OAAAua,EAAA,UAAAva,CAAU,8BAC1B4Q,GAAG,6BACHC,OAAQ,CAAEmL,OAAQzK,EAAA,cAACqK,EAAA7a,EAAK,CAACkb,MAAOlc,EAAM+b,YAAYE,OAAQE,OAAO,OAGnE3K,EAAA,cAACqK,EAAA7a,EAAK,CAACkb,MAAOlc,EAAM+b,YAAYE,OAAQE,OAAO,IAGjD3K,EAAA,yBACGxR,EAAM+b,YAAYK,QAAQtU,OAAS,GAClC0J,EAAA,cAAC0I,EAAA,gBAAe,CACdxZ,UAAU,yCACVwD,QAAS5C,KAAKwZ,mBACd3W,iBAAiB,GAChB0W,EAAW5a,OAAAua,EAAA,UAAAva,CAAU,QAAUA,OAAAua,EAAA,UAAAva,CAAU,QAC1CuR,EAAA,cAACmK,EAAA3a,EAAY,CAACN,UAAU,qBAAqB4a,OAAQT,MAK1DA,GACCrJ,EAAA,oBAAI9Q,UAAU,0BACXV,EAAM+b,YAAYK,QAAQ3X,IAAI2D,GAC7BoJ,EAAA,oBAAI9Q,UAAU,iCAAiCmB,IAAKuG,EAAQvG,KAC1D2P,EAAA,cAACqK,EAAA7a,EAAK,CAAAgD,aACQ/D,OAAAua,EAAA,UAAAva,CAAU,wBACtBS,UAAU,eACVwb,MAAOlc,EAAM+b,YAAYE,OACzBE,OAAO,IAET3K,EAAA,qBAAK9Q,UAAU,wBACb8Q,EAAA,cAACyI,EAAA,KAAI,CACH/V,QAAS5C,KAAK6C,gBACduB,MAAO0C,EAAQvH,KACfoQ,GAAIhR,OAAA6b,EAAA,EAAA7b,CAAcmI,EAAQvG,IAAKuG,EAAQH,SACvCuJ,EAAA,sBAAAxN,aAAkB/D,OAAAua,EAAA,wBAAAva,CAAwB,YAAamI,EAAQvH,OAC5DuH,EAAQvH,gDCjG/B6D,EAAA6M,EAAAlN,EAAA,sBAAAgY,IAAA3X,EAAA6M,EAAAlN,EAAA,sBAAAiY,IAAA5X,EAAA6M,EAAAlN,EAAA,sBAAAkY,IAAA7X,EAAA6M,EAAAlN,EAAA,sBAAAmY,IAAA,IAAA5C,EAAAlV,EAAA,GAAAmV,EAAAnV,EAAA,KAsBO,SAAS2X,EAAiB/H,GAI/B,OAAOrU,OAAA2Z,EAAA,QAAA3Z,CAAQ,6BAA8BqU,GAAMwF,MAAMD,EAAA,GAGpD,SAASyC,EAAiBhI,GAM/B,OAAOrU,OAAA2Z,EAAA,KAAA3Z,CAAK,4BAA6BqU,GAAMwF,MAAMD,EAAA,GAGhD,SAAS0C,EAAmBjI,GACjC,OAAOrU,OAAA2Z,EAAA,KAAA3Z,CAAK,8BAA+BqU,GAAMwF,MAAMD,EAAA,GAGlD,SAAS2C,EAA0BlI,GAGxC,OAAOrU,OAAA2Z,EAAA,QAAA3Z,CAAQ,6BAA8BqU,GAAMwF,MAAMD,EAAA,sCC1BpD,SAAS4C,EAAa1S,GAC3B,MAAM2S,EAASC,SAAS5S,EAAM,IAE9B,QAASA,EAAKjC,OAAS,GAAK8U,MAAMF,IAAWA,EAAS,GAAK9V,OAAO8V,KAAY3S,GAGzE,SAAS8S,EAAV9c,GAQL,IAPCiI,EAODjI,EAPCiI,SACA+B,EAMDhK,EANCgK,KAOA,OADDhK,EALCyC,MAOE,IAAK,iBACH,OAAOuH,EACT,IAAK,oBACH,OAAO/B,EACT,QACE,QAIC,SAAS8U,EAAgBhb,GAO/B,MAAAib,EAQKjb,EANFkG,gBAFH,IAAA+U,EAEc,GAFdA,EAGGjR,EAKEhK,EALFgK,eACAC,EAIEjK,EAJFiK,oBACAhC,EAGEjI,EAHFiI,KACAvE,EAEE1D,EAFF0D,SACAsJ,EACEhN,EADFgN,uBAGF,IAAI7C,EAiBJ,MAAO,CAAEA,UAbPA,EAHGH,QAA6C7G,IAA3B6J,GAIQ,IAA3BA,GACAtJ,IAAasG,GACC,mBAAbtG,GAAiCuE,IAASgC,GAC7B,sBAAbvG,GAAoCwC,IAAa+D,EANxC+C,EAeM5C,SALS,IAA3B4C,GACa,qBAAbtJ,GACc,sBAAbA,GAAoCwC,EAASF,OAAS,GACzC,mBAAbtC,GAAiCiX,EAAa1S,IA5EnDrF,EAAA6M,EAAAlN,EAAA,sBAAAoY,IAAA/X,EAAA6M,EAAAlN,EAAA,sBAAAwY,IAAAnY,EAAA6M,EAAAlN,EAAA,sBAAAyY,sCCAApY,EAAA6M,EAAAlN,EAAA,sBAAAqI,IAAA,IAAA8E,EAAA9M,EAAA,GAAAsY,EAAAtY,EAAA,KAAAuY,EAAAvY,EAAA2V,EAAA2C,GAAAE,EAAAxY,EAAA,KAAAyY,EAAAzY,EAAA2V,EAAA6C,GAAAE,EAAA1Y,EAAA,GAmCe,SAASgI,EAAoBtL,GAAY,MAC9CV,EAAoFU,EAApFV,UAAWqJ,EAAyE3I,EAAzE2I,KAAMzE,EAAmElE,EAAnEkE,SAAU2G,EAAyD7K,EAAzD6K,UAAWC,EAA8C9K,EAA9C8K,QAASS,EAAqCvL,EAArCuL,aAAcpH,EAAuBnE,EAAvBmE,SAAUC,EAAapE,EAAboE,SAC/E,OACEgM,EAAA,cAACyL,EAAAjc,EAAS,CACRN,UAAWA,EACX4E,SAAUA,EACVpB,QAAS,IAAMqB,EAAS,kBACxBC,SAAUA,EACVE,MAAOzF,OAAAmd,EAAA,UAAAnd,CAAU,yBACjBuR,EAAA,cAAAA,EAAA,cACEA,EAAA,mBAAG9Q,UAAU,qBAAqBT,OAAAmd,EAAA,UAAAnd,CAAU,qCAC3CuF,GACCgM,EAAA,cAAC2L,EAAAnc,EAAe,CACdqc,WAAOpY,EACP4L,GAAG,0BACHyM,UAAWrR,IAAcC,EACzBA,QAASD,GAAaC,EACtBnD,MAAO9I,OAAAmd,EAAA,UAAAnd,CAAU,yBACjBsd,UAAU,GACV/L,EAAA,uBAAOjP,SAAU4D,GAAKwG,EAAaxG,EAAEC,cAAc1E,OAAQc,KAAK,OAAOd,MAAOqI,0CCtD1FrF,EAAA6M,EAAAlN,EAAA,sBAAAmI,IAAA,IAAAgF,EAAA9M,EAAA,GAAAsY,EAAAtY,EAAA,KAAAuY,EAAAvY,EAAA2V,EAAA2C,GAAAQ,EAAA9Y,EAAA,GA8Be,SAAS8H,EAA+BpL,GAAY,MACzDkE,EAA4ClE,EAA5CkE,SAAUmH,EAAkCrL,EAAlCqL,UAAWlH,EAAuBnE,EAAvBmE,SAAUC,EAAapE,EAAboE,SACvC,OACEgM,EAAA,cAACyL,EAAAjc,EAAS,CACRsE,SAAUA,EACVpB,QAAS,IAAMqB,EAAS,oBACxBC,SAAUA,EACVE,MACEzF,OAAAud,EAAA,UAAAvd,CAAU,8BAAgCwM,EAAS,KAAArI,OAAQnE,OAAAud,EAAA,UAAAvd,CAAU,WAAlB,KAAkC,KAEvFuR,EAAA,uBAAIvR,OAAAud,EAAA,UAAAvd,CAAU","file":"js/301.m.1888fc52.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ComponentContext } from '../../../app/components/ComponentContext';\nimport { DefinitionChangeEventInner, isDefinitionChangeEvent } from './DefinitionChangeEventInner';\nimport { isRichQualityGateEvent, RichQualityGateEventInner } from './RichQualityGateEventInner';\n\nexport interface EventInnerProps {\n  event: T.AnalysisEvent;\n}\n\nexport default function EventInner({ event }: EventInnerProps) {\n  if (isRichQualityGateEvent(event)) {\n    return <RichQualityGateEventInner event={event} />;\n  } else if (isDefinitionChangeEvent(event)) {\n    return (\n      <ComponentContext.Consumer>\n        {({ branchLike }) => <DefinitionChangeEventInner branchLike={branchLike} event={event} />}\n      </ComponentContext.Consumer>\n    );\n  } else {\n    const content = (\n      <span className=\"text-middle\">\n        <span className=\"note little-spacer-right\">\n          {translate('event.category', event.category)}:\n        </span>\n        <strong className=\"spacer-right\">{event.name}</strong>\n      </span>\n    );\n    return event.description ? <Tooltip overlay={event.description}>{content}</Tooltip> : content;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  changeEvent: (event: string, name: string) => Promise<void>;\n  event: T.AnalysisEvent;\n  header: string;\n  onClose: () => void;\n}\n\ninterface State {\n  name: string;\n}\n\nexport default class ChangeEventForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { name: props.event.name };\n  }\n\n  changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = () => {\n    return this.props.changeEvent(this.props.event.key, this.state.name);\n  };\n\n  render() {\n    const { name } = this.state;\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('change_verb')}\n        confirmDisable={!name || name === this.props.event.name}\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onConfirm={this.handleSubmit}\n        size=\"small\">\n        <div className=\"modal-field\">\n          <label>{translate('name')}</label>\n          <input autoFocus={true} onChange={this.changeInput} type=\"text\" value={name} />\n        </div>\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface RemoveEventFormProps {\n  analysisKey: string;\n  event: T.AnalysisEvent;\n  header: string;\n  removeEventQuestion: string;\n  onClose: () => void;\n  onConfirm: (analysis: string, event: string) => Promise<void>;\n}\n\nexport default function RemoveEventForm(props: RemoveEventFormProps) {\n  const { analysisKey, event, header, removeEventQuestion } = props;\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      header={header}\n      isDestructive={true}\n      onClose={props.onClose}\n      onConfirm={() => props.onConfirm(analysisKey, event.key)}>\n      {removeEventQuestion}\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DeleteButton, EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectEventIcon from 'sonar-ui-common/components/icons/ProjectEventIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport EventInner from './EventInner';\nimport ChangeEventForm from './forms/ChangeEventForm';\nimport RemoveEventForm from './forms/RemoveEventForm';\n\nexport interface EventProps {\n  analysisKey: string;\n  canAdmin?: boolean;\n  event: T.AnalysisEvent;\n  isFirst?: boolean;\n  onChange?: (event: string, name: string) => Promise<void>;\n  onDelete?: (analysisKey: string, event: string) => Promise<void>;\n}\n\nexport function Event(props: EventProps) {\n  const { analysisKey, event, canAdmin, isFirst } = props;\n\n  const [changing, setChanging] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n\n  const isOther = event.category === 'OTHER';\n  const isVersion = event.category === 'VERSION';\n  const canChange = (isOther || isVersion) && props.onChange;\n  const canDelete = (isOther || (isVersion && !isFirst)) && props.onDelete;\n  const showActions = canAdmin && (canChange || canDelete);\n\n  return (\n    <div className=\"project-activity-event\">\n      <ProjectEventIcon\n        className={classNames(\n          'project-activity-event-icon little-spacer-right text-middle',\n          event.category\n        )}\n      />\n\n      <EventInner event={event} />\n\n      {showActions && (\n        <span className=\"nowrap\">\n          {canChange && (\n            <EditButton\n              aria-label={translate('project_activity.events.tooltip.edit')}\n              className=\"button-small\"\n              data-test=\"project-activity__edit-event\"\n              onClick={() => setChanging(true)}\n              stopPropagation={true}\n            />\n          )}\n          {canDelete && (\n            <DeleteButton\n              aria-label={translate('project_activity.events.tooltip.delete')}\n              className=\"button-small\"\n              data-test=\"project-activity__delete-event\"\n              onClick={() => setDeleting(true)}\n              stopPropagation={true}\n            />\n          )}\n        </span>\n      )}\n\n      {changing && props.onChange && (\n        <ChangeEventForm\n          changeEvent={props.onChange}\n          event={event}\n          header={\n            isVersion\n              ? translate('project_activity.change_version')\n              : translate('project_activity.change_custom_event')\n          }\n          onClose={() => setChanging(false)}\n        />\n      )}\n\n      {deleting && props.onDelete && (\n        <RemoveEventForm\n          analysisKey={analysisKey}\n          event={event}\n          header={\n            isVersion\n              ? translate('project_activity.remove_version')\n              : translate('project_activity.remove_custom_event')\n          }\n          onClose={() => setDeleting(false)}\n          onConfirm={props.onDelete}\n          removeEventQuestion={translate(\n            `project_activity.${isVersion ? 'remove_version' : 'remove_custom_event'}.question`\n          )}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(Event);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport Event from './Event';\n\nexport interface EventsProps {\n  analysisKey: string;\n  canAdmin?: boolean;\n  events: T.AnalysisEvent[];\n  isFirst?: boolean;\n  onChange?: (event: string, name: string) => Promise<void>;\n  onDelete?: (analysis: string, event: string) => Promise<void>;\n}\n\nexport function Events(props: EventsProps) {\n  const { analysisKey, canAdmin, events, isFirst } = props;\n\n  const sortedEvents = sortBy(\n    events,\n    // versions last\n    event => (event.category === 'VERSION' ? 1 : 0),\n    // then the rest sorted by category\n    'category'\n  );\n\n  return (\n    <div className=\"big-spacer-top\">\n      {sortedEvents.map(event => (\n        <Event\n          analysisKey={analysisKey}\n          canAdmin={canAdmin}\n          event={event}\n          isFirst={isFirst}\n          key={event.key}\n          onChange={props.onChange}\n          onDelete={props.onDelete}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default React.memo(Events);\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".project-baseline{padding:32px}.project-baseline-selector>.branch-baseline-setting-modal{max-height:60vh;padding-top:2px}.project-baseline-selector .general-setting{margin-left:7px}.branch-baseline-selector>hr{margin:0 -32px 32px}.branch-analysis-list-wrapper,.branch-baseline-setting-modal{display:flex;flex-direction:column}.branch-analysis-list-wrapper{overflow:hidden;position:relative;min-height:200px}.branch-analysis-list{overflow-y:auto;padding-left:12px;padding-right:15px;min-height:50px}.branch-analysis-list>ul{padding-top:18px}.branch-analysis-date{margin-bottom:16px;font-size:15px;font-weight:700}.branch-analysis-day{margin-top:8px;margin-bottom:24px}.branch-analysis{display:flex;justify-content:space-between;cursor:pointer;padding:8px;border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6}.branch-analysis+.branch-analysis{border-top:none}.branch-analysis:hover{background-color:#cae3f2}.branch-analysis>.project-activity-events{flex:1 0 50%}.branch-analysis-time{width:150px}.branch-analysis-version-badge{margin-left:-12px;padding-top:8px;padding-bottom:8px;background-color:#fff}.branch-analysis-version-badge.sticky+.branch-analysis-days-list{padding-top:36px}.branch-analysis-version-badge.first,.branch-analysis-version-badge.sticky{position:absolute;top:1px;left:13px;right:16px;padding-top:24px;z-index:1}.branch-analysis-version-badge .badge{max-width:385px;border-radius:0 2px 2px 0;font-weight:700;font-size:12px;letter-spacing:0;overflow:hidden;text-overflow:ellipsis}.project-activity-event-icon.VERSION{color:#4b9fd5}.project-activity-event-icon.QUALITY_GATE{color:#9139d4}.project-activity-event-icon.QUALITY_PROFILE{color:#ccc}.project-activity-event-icon.DEFINITION_CHANGE{color:#33a759}.project-activity-event-icon.OTHER{color:#442d1b}.invisible{visibility:hidden}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingAnalysis({ disabled, onSelect, selected }: Props) {\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('SPECIFIC_ANALYSIS')}\n      selected={selected}\n      title={translate('baseline.specific_analysis')}>\n      <p className=\"big-spacer-bottom\">{translate('baseline.specific_analysis.description')}</p>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { subDays } from 'date-fns';\nimport { throttle } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { parseDate, toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { getProjectActivity } from '../../../api/projectActivity';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport Events from '../../projectActivity/components/Events';\nimport { getAnalysesByVersionByDay } from '../../projectActivity/utils';\n\ninterface Props {\n  analysis: string;\n  branch: string;\n  component: string;\n  onSelectAnalysis: (analysis: T.ParsedAnalysis) => void;\n}\n\ninterface State {\n  analyses: T.ParsedAnalysis[];\n  loading: boolean;\n  range: number;\n  scroll: number;\n}\n\nexport default class BranchAnalysisList extends React.PureComponent<Props, State> {\n  mounted = false;\n  badges: T.Dict<HTMLDivElement> = {};\n  rootNodeRef: React.RefObject<HTMLDivElement>;\n  state: State = {\n    analyses: [],\n    loading: true,\n    range: 30,\n    scroll: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.rootNodeRef = React.createRef<HTMLDivElement>();\n    this.updateScroll = throttle(this.updateScroll, 20);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchAnalyses(true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  scrollToSelected() {\n    const selectedNode = document.querySelector('.branch-analysis.selected');\n    if (this.rootNodeRef.current && selectedNode) {\n      scrollToElement(selectedNode, { parent: this.rootNodeRef.current, bottomOffset: 40 });\n    }\n  }\n\n  fetchAnalyses(initial = false) {\n    const { analysis, branch, component } = this.props;\n    const { range } = this.state;\n    this.setState({ loading: true });\n\n    return getProjectActivity({\n      branch,\n      project: component,\n      from: range ? toShortNotSoISOString(subDays(new Date(), range)) : undefined\n    }).then((result: { analyses: T.Analysis[] }) => {\n      // If the selected analysis wasn't found in the default 30 days range, redo the search\n      if (initial && analysis && !result.analyses.find(a => a.key === analysis)) {\n        this.handleRangeChange({ value: 0 });\n        return;\n      }\n\n      this.setState(\n        {\n          analyses: result.analyses.map(analysis => ({\n            ...analysis,\n            date: parseDate(analysis.date)\n          })) as T.ParsedAnalysis[],\n          loading: false\n        },\n        () => {\n          this.scrollToSelected();\n        }\n      );\n    });\n  }\n\n  handleScroll = (e: React.SyntheticEvent<HTMLDivElement>) => {\n    if (e.currentTarget) {\n      this.updateScroll(e.currentTarget.scrollTop);\n    }\n  };\n\n  updateScroll = (scroll: number) => {\n    this.setState({ scroll });\n  };\n\n  registerBadgeNode = (version: string) => (el: HTMLDivElement) => {\n    if (el) {\n      if (!el.getAttribute('originOffsetTop')) {\n        el.setAttribute('originOffsetTop', String(el.offsetTop));\n      }\n      this.badges[version] = el;\n    }\n  };\n\n  shouldStick = (version: string) => {\n    const badge = this.badges[version];\n    return badge && Number(badge.getAttribute('originOffsetTop')) < this.state.scroll + 10;\n  };\n\n  getRangeOptions() {\n    return [\n      {\n        label: translate('baseline.branch_analyses.ranges.30days'),\n        value: 30\n      },\n      {\n        label: translate('baseline.branch_analyses.ranges.allTime'),\n        value: 0\n      }\n    ];\n  }\n\n  handleRangeChange = ({ value }: { value: number }) => {\n    this.setState({ range: value }, () => this.fetchAnalyses());\n  };\n\n  render() {\n    const { analyses, loading, range } = this.state;\n\n    const byVersionByDay = getAnalysesByVersionByDay(analyses, {\n      category: ''\n    });\n\n    const hasFilteredData =\n      byVersionByDay.length > 1 ||\n      (byVersionByDay.length === 1 && Object.keys(byVersionByDay[0].byDay).length > 0);\n\n    return (\n      <>\n        <div className=\"spacer-bottom\">\n          {translate('baseline.analysis_from')}\n          <Select\n            autoBlur={true}\n            className=\"input-medium spacer-left\"\n            clearable={false}\n            onChange={this.handleRangeChange}\n            options={this.getRangeOptions()}\n            searchable={false}\n            value={range}\n          />\n        </div>\n        <div className=\"branch-analysis-list-wrapper\">\n          <div\n            className=\"bordered branch-analysis-list\"\n            onScroll={this.handleScroll}\n            ref={this.rootNodeRef}>\n            {loading && <DeferredSpinner className=\"big-spacer-top\" />}\n\n            {!loading && !hasFilteredData ? (\n              <div className=\"big-spacer-top big-spacer-bottom strong\">\n                {translate('baseline.no_analyses')}\n              </div>\n            ) : (\n              <ul>\n                {byVersionByDay.map((version, idx) => {\n                  const days = Object.keys(version.byDay);\n                  if (days.length <= 0) {\n                    return null;\n                  }\n                  return (\n                    <li key={version.key || 'noversion'}>\n                      {version.version && (\n                        <div\n                          className={classNames('branch-analysis-version-badge', {\n                            first: idx === 0,\n                            sticky: this.shouldStick(version.version)\n                          })}\n                          ref={this.registerBadgeNode(version.version)}>\n                          <Tooltip\n                            mouseEnterDelay={0.5}\n                            overlay={`${translate('version')} ${version.version}`}>\n                            <span className=\"badge\">{version.version}</span>\n                          </Tooltip>\n                        </div>\n                      )}\n                      <ul className=\"branch-analysis-days-list\">\n                        {days.map(day => (\n                          <li\n                            className=\"branch-analysis-day\"\n                            data-day={toShortNotSoISOString(Number(day))}\n                            key={day}>\n                            <div className=\"branch-analysis-date\">\n                              <DateFormatter date={Number(day)} long={true} />\n                            </div>\n                            <ul className=\"branch-analysis-analyses-list\">\n                              {version.byDay[day] != null &&\n                                version.byDay[day].map(analysis => (\n                                  <li\n                                    className={classNames('branch-analysis', {\n                                      selected: analysis.key === this.props.analysis\n                                    })}\n                                    data-date={parseDate(analysis.date).valueOf()}\n                                    key={analysis.key}\n                                    onClick={() => this.props.onSelectAnalysis(analysis)}>\n                                    <div className=\"branch-analysis-time spacer-right\">\n                                      <TimeFormatter date={parseDate(analysis.date)} long={false}>\n                                        {formattedTime => (\n                                          <time\n                                            className=\"text-middle\"\n                                            dateTime={parseDate(analysis.date).toISOString()}>\n                                            {formattedTime}\n                                          </time>\n                                        )}\n                                      </TimeFormatter>\n                                    </div>\n\n                                    {analysis.events.length > 0 && (\n                                      <Events\n                                        analysisKey={analysis.key}\n                                        events={analysis.events}\n                                        isFirst={analyses[0].key === analysis.key}\n                                      />\n                                    )}\n\n                                    <div className=\"analysis-selection-button\">\n                                      <i\n                                        className={classNames('icon-radio', {\n                                          'is-checked': analysis.key === this.props.analysis\n                                        })}\n                                      />\n                                    </div>\n                                  </li>\n                                ))}\n                            </ul>\n                          </li>\n                        ))}\n                      </ul>\n                    </li>\n                  );\n                })}\n              </ul>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { toNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { setNewCodePeriod } from '../../../api/newCodePeriod';\nimport { BranchWithNewCodePeriod } from '../../../types/branch-like';\nimport { getSettingValue, validateSetting } from '../utils';\nimport BaselineSettingAnalysis from './BaselineSettingAnalysis';\nimport BaselineSettingDays from './BaselineSettingDays';\nimport BaselineSettingPreviousVersion from './BaselineSettingPreviousVersion';\nimport BranchAnalysisList from './BranchAnalysisList';\n\ninterface Props {\n  branch: BranchWithNewCodePeriod;\n  component: string;\n  onClose: (branch?: string, newSetting?: T.NewCodePeriod) => void;\n}\n\ninterface State {\n  analysis: string;\n  analysisDate?: Date;\n  days: string;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n}\n\nexport default class BranchBaselineSettingModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      analysis: this.getValueFromProps('SPECIFIC_ANALYSIS') || '',\n      days: this.getValueFromProps('NUMBER_OF_DAYS') || '30',\n      saving: false,\n      selected: this.props.branch.newCodePeriod && this.props.branch.newCodePeriod.type\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getValueFromProps(type: T.NewCodePeriodSettingType) {\n    return this.props.branch.newCodePeriod && this.props.branch.newCodePeriod.type === type\n      ? this.props.branch.newCodePeriod.value\n      : null;\n  }\n\n  handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { branch, component } = this.props;\n    const { analysis, analysisDate, days, selected: type } = this.state;\n\n    const value = getSettingValue({ type, analysis, days });\n\n    if (type) {\n      this.setState({ saving: true });\n      setNewCodePeriod({\n        project: component,\n        type,\n        value,\n        branch: branch.name\n      }).then(\n        () => {\n          this.setState({\n            saving: false\n          });\n          this.props.onClose(branch.name, {\n            type,\n            value,\n            effectiveValue: analysisDate && toNotSoISOString(analysisDate)\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  requestClose = () => this.props.onClose();\n\n  handleSelectAnalysis = (analysis: T.ParsedAnalysis) =>\n    this.setState({ analysis: analysis.key, analysisDate: analysis.date });\n\n  handleSelectDays = (days: string) => this.setState({ days });\n\n  handleSelectSetting = (selected: T.NewCodePeriodSettingType) => this.setState({ selected });\n\n  render() {\n    const { branch } = this.props;\n    const { analysis, days, saving, selected } = this.state;\n\n    const header = translateWithParameters('baseline.new_code_period_for_branch_x', branch.name);\n\n    const currentSetting = branch.newCodePeriod && branch.newCodePeriod.type;\n    const currentSettingValue = branch.newCodePeriod && branch.newCodePeriod.value;\n\n    const { isChanged, isValid } = validateSetting({\n      analysis,\n      currentSetting,\n      currentSettingValue,\n      days,\n      selected\n    });\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.requestClose} size=\"large\">\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body modal-container branch-baseline-setting-modal\">\n            <div className=\"display-flex-row huge-spacer-bottom\" role=\"radiogroup\">\n              <BaselineSettingPreviousVersion\n                isDefault={false}\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'PREVIOUS_VERSION'}\n              />\n              <BaselineSettingDays\n                days={days}\n                isChanged={isChanged}\n                isValid={isValid}\n                onChangeDays={this.handleSelectDays}\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'NUMBER_OF_DAYS'}\n              />\n              <BaselineSettingAnalysis\n                onSelect={this.handleSelectSetting}\n                selected={selected === 'SPECIFIC_ANALYSIS'}\n              />\n            </div>\n            {selected === 'SPECIFIC_ANALYSIS' && (\n              <BranchAnalysisList\n                analysis={analysis}\n                branch={branch.name}\n                component={this.props.component}\n                onSelectAnalysis={this.handleSelectAnalysis}\n              />\n            )}\n          </div>\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={saving} />\n            <SubmitButton disabled={!isChanged || saving || !isValid}>\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { listBranchesNewCodePeriod, resetNewCodePeriod } from '../../../api/newCodePeriod';\nimport BranchLikeIcon from '../../../components/icons/BranchLikeIcon';\nimport DateTimeFormatter from '../../../components/intl/DateTimeFormatter';\nimport { isBranch, sortBranches } from '../../../helpers/branch-like';\nimport { BranchLike, BranchWithNewCodePeriod } from '../../../types/branch-like';\nimport BranchBaselineSettingModal from './BranchBaselineSettingModal';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  inheritedSetting: T.NewCodePeriod;\n}\n\ninterface State {\n  branches: BranchWithNewCodePeriod[];\n  editedBranch?: BranchWithNewCodePeriod;\n  loading: boolean;\n}\n\nexport default class BranchList extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    branches: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBranches();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  sortAndFilterBranches(branchLikes: BranchLike[] = []) {\n    return sortBranches(branchLikes.filter(isBranch));\n  }\n\n  fetchBranches() {\n    const project = this.props.component.key;\n    this.setState({ loading: true });\n\n    const sortedBranches = this.sortAndFilterBranches(this.props.branchLikes);\n\n    listBranchesNewCodePeriod({ project }).then(\n      branchSettings => {\n        const newCodePeriods = branchSettings.newCodePeriods\n          ? branchSettings.newCodePeriods.filter(ncp => !ncp.inherited)\n          : [];\n\n        const branchesWithBaseline = sortedBranches.map(b => {\n          const newCodePeriod = newCodePeriods.find(ncp => ncp.branchKey === b.name);\n          if (!newCodePeriod) {\n            return b;\n          }\n          const { type = 'PREVIOUS_VERSION', value, effectiveValue } = newCodePeriod;\n          return {\n            ...b,\n            newCodePeriod: { type, value, effectiveValue }\n          };\n        });\n\n        this.setState({ branches: branchesWithBaseline, loading: false });\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  updateBranchNewCodePeriod = (branch: string, newSetting: T.NewCodePeriod | undefined) => {\n    const { branches } = this.state;\n\n    const updated = branches.find(b => b.name === branch);\n    if (updated) {\n      updated.newCodePeriod = newSetting;\n    }\n    return branches.slice(0);\n  };\n\n  openEditModal = (branch: BranchWithNewCodePeriod) => {\n    this.setState({ editedBranch: branch });\n  };\n\n  closeEditModal = (branch?: string, newSetting?: T.NewCodePeriod) => {\n    if (branch) {\n      this.setState({\n        branches: this.updateBranchNewCodePeriod(branch, newSetting),\n        editedBranch: undefined\n      });\n    } else {\n      this.setState({ editedBranch: undefined });\n    }\n  };\n\n  resetToDefault(branch: string) {\n    return resetNewCodePeriod({\n      project: this.props.component.key,\n      branch\n    }).then(() => {\n      this.setState({ branches: this.updateBranchNewCodePeriod(branch, undefined) });\n    });\n  }\n\n  renderNewCodePeriodSetting(newCodePeriod: T.NewCodePeriod) {\n    switch (newCodePeriod.type) {\n      case 'SPECIFIC_ANALYSIS':\n        return (\n          <>\n            {`${translate('baseline.specific_analysis')}: `}\n            {newCodePeriod.effectiveValue ? (\n              <DateTimeFormatter date={newCodePeriod.effectiveValue} />\n            ) : (\n              '?'\n            )}\n          </>\n        );\n      case 'NUMBER_OF_DAYS':\n        return `${translate('baseline.number_days')}: ${newCodePeriod.value}`;\n      case 'PREVIOUS_VERSION':\n        return translate('baseline.previous_version');\n      default:\n        return newCodePeriod.type;\n    }\n  }\n\n  render() {\n    const { branches, editedBranch, loading } = this.state;\n\n    if (branches.length < 1) {\n      return null;\n    }\n\n    if (loading) {\n      return <DeferredSpinner />;\n    }\n\n    return (\n      <>\n        <table className=\"data zebra\">\n          <thead>\n            <tr>\n              <th>{translate('branch_list.branch')}</th>\n              <th className=\"nowrap huge-spacer-right\">\n                {translate('branch_list.current_setting')}\n              </th>\n              <th className=\"thin nowrap\">{translate('branch_list.actions')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {branches.map(branch => (\n              <tr key={branch.name}>\n                <td className=\"nowrap\">\n                  <BranchLikeIcon branchLike={branch} className=\"little-spacer-right\" />\n                  {branch.name}\n                  {branch.isMain && (\n                    <div className=\"badge spacer-left\">{translate('branches.main_branch')}</div>\n                  )}\n                </td>\n                <td className=\"huge-spacer-right nowrap\">\n                  {branch.newCodePeriod\n                    ? this.renderNewCodePeriodSetting(branch.newCodePeriod)\n                    : translate('branch_list.default_setting')}\n                </td>\n                <td className=\"text-right\">\n                  <ActionsDropdown>\n                    <ActionsDropdownItem onClick={() => this.openEditModal(branch)}>\n                      {translate('edit')}\n                    </ActionsDropdownItem>\n                    {branch.newCodePeriod && (\n                      <ActionsDropdownItem onClick={() => this.resetToDefault(branch.name)}>\n                        {translate('reset_to_default')}\n                      </ActionsDropdownItem>\n                    )}\n                  </ActionsDropdown>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {editedBranch && (\n          <BranchBaselineSettingModal\n            branch={editedBranch}\n            component={this.props.component.key}\n            onClose={this.closeEditModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { validateSetting } from '../utils';\nimport BaselineSettingAnalysis from './BaselineSettingAnalysis';\nimport BaselineSettingDays from './BaselineSettingDays';\nimport BaselineSettingPreviousVersion from './BaselineSettingPreviousVersion';\nimport BranchAnalysisList from './BranchAnalysisList';\n\nexport interface ProjectBaselineSelectorProps {\n  analysis?: string;\n  branchesEnabled?: boolean;\n  component: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  generalSetting: T.NewCodePeriod;\n  onCancel: () => void;\n  onSelectAnalysis: (analysis: T.ParsedAnalysis) => void;\n  onSelectDays: (value: string) => void;\n  onSelectSetting: (value?: T.NewCodePeriodSettingType) => void;\n  onSubmit: (e: React.SyntheticEvent<HTMLFormElement>) => void;\n  onToggleSpecificSetting: (selection: boolean) => void;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting: boolean;\n}\n\nfunction renderGeneralSetting(generalSetting: T.NewCodePeriod) {\n  let setting: string;\n  let description: string;\n  if (generalSetting.type === 'NUMBER_OF_DAYS') {\n    setting = `${translate('baseline.number_days')} (${translateWithParameters(\n      'duration.days',\n      generalSetting.value || '?'\n    )})`;\n    description = translate('baseline.number_days.description');\n  } else {\n    setting = translate('baseline.previous_version');\n    description = translate('baseline.previous_version.description');\n  }\n\n  return (\n    <div className=\"general-setting\">\n      <strong>{setting}</strong>: {description}\n    </div>\n  );\n}\n\nexport default function ProjectBaselineSelector(props: ProjectBaselineSelectorProps) {\n  const {\n    analysis,\n    branchesEnabled,\n    component,\n    currentSetting,\n    currentSettingValue,\n    days,\n    generalSetting,\n    saving,\n    selected,\n    overrideGeneralSetting\n  } = props;\n\n  const { isChanged, isValid } = validateSetting({\n    analysis,\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  });\n\n  return (\n    <form className=\"project-baseline-selector\" onSubmit={props.onSubmit}>\n      <div className=\"big-spacer-top spacer-bottom\" role=\"radiogroup\">\n        <Radio\n          checked={!overrideGeneralSetting}\n          className=\"big-spacer-bottom\"\n          onCheck={() => props.onToggleSpecificSetting(false)}\n          value=\"general\">\n          {translate('project_baseline.general_setting')}\n        </Radio>\n        <div className=\"big-spacer-left\">{renderGeneralSetting(generalSetting)}</div>\n\n        <Radio\n          checked={overrideGeneralSetting}\n          className=\"huge-spacer-top\"\n          onCheck={() => props.onToggleSpecificSetting(true)}\n          value=\"specific\">\n          {translate('project_baseline.specific_setting')}\n        </Radio>\n      </div>\n\n      <div className=\"big-spacer-left big-spacer-right branch-baseline-setting-modal\">\n        <div className=\"display-flex-row big-spacer-bottom\" role=\"radiogroup\">\n          <BaselineSettingPreviousVersion\n            disabled={!overrideGeneralSetting}\n            onSelect={props.onSelectSetting}\n            selected={overrideGeneralSetting && selected === 'PREVIOUS_VERSION'}\n          />\n          <BaselineSettingDays\n            days={days}\n            disabled={!overrideGeneralSetting}\n            isChanged={isChanged}\n            isValid={isValid}\n            onChangeDays={props.onSelectDays}\n            onSelect={props.onSelectSetting}\n            selected={overrideGeneralSetting && selected === 'NUMBER_OF_DAYS'}\n          />\n          {!branchesEnabled && (\n            <BaselineSettingAnalysis\n              disabled={!overrideGeneralSetting}\n              onSelect={props.onSelectSetting}\n              selected={overrideGeneralSetting && selected === 'SPECIFIC_ANALYSIS'}\n            />\n          )}\n        </div>\n        {selected === 'SPECIFIC_ANALYSIS' && (\n          <BranchAnalysisList\n            analysis={analysis || ''}\n            branch=\"master\"\n            component={component}\n            onSelectAnalysis={props.onSelectAnalysis}\n          />\n        )}\n      </div>\n      <div className={classNames('big-spacer-top', { invisible: !isChanged })}>\n        <p className=\"spacer-bottom\">{translate('baseline.next_analysis_notice')}</p>\n        <DeferredSpinner className=\"spacer-right\" loading={saving} />\n        <SubmitButton disabled={saving || !isValid || !isChanged}>{translate('save')}</SubmitButton>\n        <ResetButtonLink className=\"spacer-left\" onClick={props.onCancel}>\n          {translate('cancel')}\n        </ResetButtonLink>\n      </div>\n    </form>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, resetNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { BranchLike } from '../../../types/branch-like';\nimport '../styles.css';\nimport { getSettingValue } from '../utils';\nimport BranchList from './BranchList';\nimport ProjectBaselineSelector from './ProjectBaselineSelector';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  branchesEnabled?: boolean;\n  canAdmin?: boolean;\n  component: T.Component;\n}\n\ninterface State {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  generalSetting?: T.NewCodePeriod;\n  loading: boolean;\n  overrideGeneralSetting?: boolean;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success?: boolean;\n}\n\nconst DEFAULT_GENERAL_SETTING: { type: T.NewCodePeriodSettingType } = {\n  type: 'PREVIOUS_VERSION'\n};\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    days: '30',\n    loading: true,\n    saving: false\n  };\n\n  // We use debounce as we could have multiple save in less that 3sec.\n  resetSuccess = debounce(() => this.setState({ success: undefined }), 3000);\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchLeakPeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getUpdatedState(params: {\n    currentSetting?: T.NewCodePeriodSettingType;\n    currentSettingValue?: string;\n    generalSetting: T.NewCodePeriod;\n  }) {\n    const { currentSetting, currentSettingValue, generalSetting } = params;\n\n    const defaultDays =\n      (!currentSetting && generalSetting.type === 'NUMBER_OF_DAYS' && generalSetting.value) || '30';\n\n    return {\n      loading: false,\n      currentSetting,\n      currentSettingValue,\n      generalSetting,\n      selected: currentSetting || generalSetting.type,\n      overrideGeneralSetting: Boolean(currentSetting),\n      days: (currentSetting === 'NUMBER_OF_DAYS' && currentSettingValue) || defaultDays,\n      analysis: (currentSetting === 'SPECIFIC_ANALYSIS' && currentSettingValue) || ''\n    };\n  }\n\n  fetchLeakPeriodSetting() {\n    this.setState({ loading: true });\n\n    Promise.all([\n      getNewCodePeriod(),\n      getNewCodePeriod({\n        branch: !this.props.branchesEnabled ? 'master' : undefined,\n        project: this.props.component.key\n      })\n    ]).then(\n      ([generalSetting, setting]) => {\n        if (this.mounted) {\n          if (!generalSetting.type) {\n            generalSetting = DEFAULT_GENERAL_SETTING;\n          }\n          const currentSettingValue = setting.value;\n          const currentSetting = setting.inherited ? undefined : setting.type || 'PREVIOUS_VERSION';\n\n          this.setState(\n            this.getUpdatedState({ generalSetting, currentSetting, currentSettingValue })\n          );\n        }\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  resetSetting = () => {\n    this.setState({ saving: true });\n    resetNewCodePeriod({ project: this.props.component.key }).then(\n      () => {\n        this.setState({\n          saving: false,\n          currentSetting: undefined,\n          selected: undefined,\n          success: true\n        });\n        this.resetSuccess();\n      },\n      () => {\n        this.setState({ saving: false });\n      }\n    );\n  };\n\n  handleSelectAnalysis = (analysis: T.ParsedAnalysis) => this.setState({ analysis: analysis.key });\n\n  handleSelectDays = (days: string) => this.setState({ days });\n\n  handleCancel = () =>\n    this.setState(\n      ({ generalSetting = DEFAULT_GENERAL_SETTING, currentSetting, currentSettingValue }) =>\n        this.getUpdatedState({ generalSetting, currentSetting, currentSettingValue })\n    );\n\n  handleSelectSetting = (selected?: T.NewCodePeriodSettingType) => this.setState({ selected });\n\n  handleToggleSpecificSetting = (overrideGeneralSetting: boolean) =>\n    this.setState({ overrideGeneralSetting });\n\n  handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { component } = this.props;\n    const { analysis, days, selected: type, overrideGeneralSetting } = this.state;\n\n    if (!overrideGeneralSetting) {\n      this.resetSetting();\n      return;\n    }\n\n    const value = getSettingValue({ type, analysis, days });\n\n    if (type) {\n      this.setState({ saving: true });\n      setNewCodePeriod({\n        project: component.key,\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n          this.resetSuccess();\n        },\n        () => {\n          this.setState({ saving: false });\n        }\n      );\n    }\n  };\n\n  renderHeader() {\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('project_baseline.page')}</h1>\n        <p className=\"page-description\">\n          <FormattedMessage\n            defaultMessage={translate('project_baseline.page.description')}\n            id=\"project_baseline.page.description\"\n            values={{\n              link: (\n                <Link to=\"/documentation/project-administration/new-code-period/\">\n                  {translate('project_baseline.page.description.link')}\n                </Link>\n              )\n            }}\n          />\n          <br />\n          {this.props.canAdmin && (\n            <FormattedMessage\n              defaultMessage={translate('project_baseline.page.description2')}\n              id=\"project_baseline.page.description2\"\n              values={{\n                link: (\n                  <Link to=\"/admin/settings?category=new_code_period\">\n                    {translate('project_baseline.page.description2.link')}\n                  </Link>\n                )\n              }}\n            />\n          )}\n        </p>\n      </header>\n    );\n  }\n\n  render() {\n    const { branchLikes, branchesEnabled, component } = this.props;\n    const {\n      analysis,\n      currentSetting,\n      days,\n      generalSetting,\n      loading,\n      currentSettingValue,\n      overrideGeneralSetting,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    return (\n      <>\n        <Suggestions suggestions=\"project_baseline\" />\n        <div className=\"page page-limited\">\n          {this.renderHeader()}\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <div className=\"panel-white project-baseline\">\n              {branchesEnabled && <h2>{translate('project_baseline.default_setting')}</h2>}\n\n              {generalSetting && overrideGeneralSetting !== undefined && (\n                <ProjectBaselineSelector\n                  analysis={analysis}\n                  branchesEnabled={branchesEnabled}\n                  component={component.key}\n                  currentSetting={currentSetting}\n                  currentSettingValue={currentSettingValue}\n                  days={days}\n                  generalSetting={generalSetting}\n                  onCancel={this.handleCancel}\n                  onSelectAnalysis={this.handleSelectAnalysis}\n                  onSelectDays={this.handleSelectDays}\n                  onSelectSetting={this.handleSelectSetting}\n                  onSubmit={this.handleSubmit}\n                  onToggleSpecificSetting={this.handleToggleSpecificSetting}\n                  overrideGeneralSetting={overrideGeneralSetting}\n                  saving={saving}\n                  selected={selected}\n                />\n              )}\n\n              <div className={classNames('spacer-top', { invisible: saving || !success })}>\n                <span className=\"text-success\">\n                  <AlertSuccessIcon className=\"spacer-right\" />\n                  {translate('settings.state.saved')}\n                </span>\n              </div>\n              {generalSetting && branchesEnabled && (\n                <div className=\"huge-spacer-top branch-baseline-selector\">\n                  <hr />\n                  <h2>{translate('project_baseline.configure_branches')}</h2>\n                  <BranchList\n                    branchLikes={branchLikes}\n                    component={component}\n                    inheritedSetting={\n                      currentSetting\n                        ? {\n                            type: currentSetting,\n                            value: currentSettingValue\n                          }\n                        : generalSetting\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport App from './App';\n\nconst mapStateToProps = (state: Store) => ({\n  branchesEnabled: getAppState(state).branchesEnabled,\n  canAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport const formatterOption = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nexport default function DateTimeFormatter({ children, date }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...formatterOption}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum MetricKey {\n  alert_status = 'alert_status',\n  blocker_violations = 'blocker_violations',\n  branch_coverage = 'branch_coverage',\n  bugs = 'bugs',\n  burned_budget = 'burned_budget',\n  business_value = 'business_value',\n  class_complexity = 'class_complexity',\n  classes = 'classes',\n  code_smells = 'code_smells',\n  cognitive_complexity = 'cognitive_complexity',\n  comment_lines = 'comment_lines',\n  comment_lines_data = 'comment_lines_data',\n  comment_lines_density = 'comment_lines_density',\n  complexity = 'complexity',\n  complexity_in_classes = 'complexity_in_classes',\n  complexity_in_functions = 'complexity_in_functions',\n  conditions_to_cover = 'conditions_to_cover',\n  confirmed_issues = 'confirmed_issues',\n  coverage = 'coverage',\n  critical_violations = 'critical_violations',\n  development_cost = 'development_cost',\n  directories = 'directories',\n  duplicated_blocks = 'duplicated_blocks',\n  duplicated_files = 'duplicated_files',\n  duplicated_lines = 'duplicated_lines',\n  duplicated_lines_density = 'duplicated_lines_density',\n  duplications_data = 'duplications_data',\n  effort_to_reach_maintainability_rating_a = 'effort_to_reach_maintainability_rating_a',\n  executable_lines_data = 'executable_lines_data',\n  false_positive_issues = 'false_positive_issues',\n  file_complexity = 'file_complexity',\n  file_complexity_distribution = 'file_complexity_distribution',\n  filename_size = 'filename_size',\n  filename_size_rating = 'filename_size_rating',\n  files = 'files',\n  function_complexity = 'function_complexity',\n  function_complexity_distribution = 'function_complexity_distribution',\n  functions = 'functions',\n  generated_lines = 'generated_lines',\n  generated_ncloc = 'generated_ncloc',\n  info_violations = 'info_violations',\n  last_change_on_maintainability_rating = 'last_change_on_maintainability_rating',\n  last_change_on_releasability_rating = 'last_change_on_releasability_rating',\n  last_change_on_reliability_rating = 'last_change_on_reliability_rating',\n  last_change_on_security_rating = 'last_change_on_security_rating',\n  last_change_on_security_review_rating = 'last_change_on_security_review_rating',\n  last_commit_date = 'last_commit_date',\n  leak_projects = 'leak_projects',\n  line_coverage = 'line_coverage',\n  lines = 'lines',\n  lines_to_cover = 'lines_to_cover',\n  maintainability_rating_effort = 'maintainability_rating_effort',\n  major_violations = 'major_violations',\n  minor_violations = 'minor_violations',\n  ncloc = 'ncloc',\n  ncloc_data = 'ncloc_data',\n  ncloc_language_distribution = 'ncloc_language_distribution',\n  new_blocker_violations = 'new_blocker_violations',\n  new_branch_coverage = 'new_branch_coverage',\n  new_bugs = 'new_bugs',\n  new_code_smells = 'new_code_smells',\n  new_conditions_to_cover = 'new_conditions_to_cover',\n  new_coverage = 'new_coverage',\n  new_critical_violations = 'new_critical_violations',\n  new_development_cost = 'new_development_cost',\n  new_duplicated_blocks = 'new_duplicated_blocks',\n  new_duplicated_lines = 'new_duplicated_lines',\n  new_duplicated_lines_density = 'new_duplicated_lines_density',\n  new_info_violations = 'new_info_violations',\n  new_line_coverage = 'new_line_coverage',\n  new_lines = 'new_lines',\n  new_lines_to_cover = 'new_lines_to_cover',\n  new_maintainability_rating = 'new_maintainability_rating',\n  new_major_violations = 'new_major_violations',\n  new_minor_violations = 'new_minor_violations',\n  new_reliability_rating = 'new_reliability_rating',\n  new_reliability_remediation_effort = 'new_reliability_remediation_effort',\n  new_security_hotspots = 'new_security_hotspots',\n  new_security_hotspots_reviewed = 'new_security_hotspots_reviewed',\n  new_security_rating = 'new_security_rating',\n  new_security_remediation_effort = 'new_security_remediation_effort',\n  new_security_review_rating = 'new_security_review_rating',\n  new_sqale_debt_ratio = 'new_sqale_debt_ratio',\n  new_technical_debt = 'new_technical_debt',\n  new_uncovered_conditions = 'new_uncovered_conditions',\n  new_uncovered_lines = 'new_uncovered_lines',\n  new_violations = 'new_violations',\n  new_vulnerabilities = 'new_vulnerabilities',\n  open_issues = 'open_issues',\n  projects = 'projects',\n  public_api = 'public_api',\n  public_documented_api_density = 'public_documented_api_density',\n  public_undocumented_api = 'public_undocumented_api',\n  quality_gate_details = 'quality_gate_details',\n  quality_profiles = 'quality_profiles',\n  releasability_effort = 'releasability_effort',\n  releasability_rating = 'releasability_rating',\n  reliability_rating = 'reliability_rating',\n  reliability_rating_effort = 'reliability_rating_effort',\n  reliability_remediation_effort = 'reliability_remediation_effort',\n  reopened_issues = 'reopened_issues',\n  security_hotspots = 'security_hotspots',\n  security_hotspots_reviewed = 'security_hotspots_reviewed',\n  security_rating = 'security_rating',\n  security_rating_effort = 'security_rating_effort',\n  security_remediation_effort = 'security_remediation_effort',\n  security_review_rating = 'security_review_rating',\n  security_review_rating_effort = 'security_review_rating_effort',\n  skipped_tests = 'skipped_tests',\n  sonarjava_feedback = 'sonarjava_feedback',\n  sqale_debt_ratio = 'sqale_debt_ratio',\n  sqale_index = 'sqale_index',\n  sqale_rating = 'sqale_rating',\n  statements = 'statements',\n  team_at_sonarsource = 'team_at_sonarsource',\n  team_size = 'team_size',\n  test_errors = 'test_errors',\n  test_execution_time = 'test_execution_time',\n  test_failures = 'test_failures',\n  test_success_density = 'test_success_density',\n  tests = 'tests',\n  uncovered_conditions = 'uncovered_conditions',\n  uncovered_lines = 'uncovered_lines',\n  violations = 'violations',\n  vulnerabilities = 'vulnerabilities',\n  wont_fix_issues = 'wont_fix_issues'\n}\n\nexport function isMetricKey(key: string): key is MetricKey {\n  return (Object.values(MetricKey) as string[]).includes(key);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { chunk, flatMap, groupBy, sortBy } from 'lodash';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { get, save } from 'sonar-ui-common/helpers/storage';\nimport { localizeMetric } from '../../helpers/measures';\nimport { MetricKey } from '../../types/metrics';\nimport { GraphType, MeasureHistory, Serie } from '../../types/project-activity';\n\nexport const DEFAULT_GRAPH = GraphType.issues;\n\nconst GRAPHS_METRICS_DISPLAYED: T.Dict<string[]> = {\n  [GraphType.issues]: [MetricKey.bugs, MetricKey.code_smells, MetricKey.vulnerabilities],\n  [GraphType.coverage]: [MetricKey.lines_to_cover, MetricKey.uncovered_lines],\n  [GraphType.duplications]: [MetricKey.ncloc, MetricKey.duplicated_lines]\n};\n\nconst GRAPHS_METRICS: T.Dict<string[]> = {\n  [GraphType.issues]: GRAPHS_METRICS_DISPLAYED[GraphType.issues].concat([\n    MetricKey.reliability_rating,\n    MetricKey.security_rating,\n    MetricKey.sqale_rating\n  ]),\n  [GraphType.coverage]: [...GRAPHS_METRICS_DISPLAYED[GraphType.coverage], MetricKey.coverage],\n  [GraphType.duplications]: [\n    ...GRAPHS_METRICS_DISPLAYED[GraphType.duplications],\n    MetricKey.duplicated_lines_density\n  ]\n};\n\nexport function isCustomGraph(graph: GraphType) {\n  return graph === GraphType.custom;\n}\n\nexport function getGraphTypes(ignoreCustom = false) {\n  const graphs = [GraphType.issues, GraphType.coverage, GraphType.duplications];\n  return ignoreCustom ? graphs : [...graphs, GraphType.custom];\n}\n\nexport function hasDataValues(serie: Serie) {\n  return serie.data.some(point => Boolean(point.y || point.y === 0));\n}\n\nexport function hasHistoryData(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1);\n}\n\nexport function getSeriesMetricType(series: Serie[]) {\n  return series.length > 0 ? series[0].type : 'INT';\n}\n\nexport function getDisplayedHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph];\n}\n\nexport function getHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n}\n\nexport function hasHistoryDataValue(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n}\n\nexport function splitSeriesInGraphs(series: Serie[], maxGraph: number, maxSeries: number) {\n  return flatMap(\n    groupBy(series, serie => serie.type),\n    type => chunk(type, maxSeries)\n  ).slice(0, maxGraph);\n}\n\nexport function generateCoveredLinesMetric(\n  uncoveredLines: MeasureHistory,\n  measuresHistory: MeasureHistory[]\n) {\n  const linesToCover = measuresHistory.find(measure => measure.metric === MetricKey.lines_to_cover);\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n}\n\nexport function generateSeries(\n  measuresHistory: MeasureHistory[],\n  graph: GraphType,\n  metrics: T.Metric[] | T.Dict<T.Metric>,\n  displayedMetrics: string[]\n): Serie[] {\n  if (displayedMetrics.length <= 0 || measuresHistory === undefined) {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === MetricKey.uncovered_lines && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : localizeMetric(measure.metric),\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport function saveActivityGraph(\n  namespace: string,\n  project: string,\n  graph: GraphType,\n  metrics: string[] = []\n) {\n  save(namespace, graph, project);\n  if (isCustomGraph(graph)) {\n    save(`${namespace}.custom`, metrics.join(','), project);\n  }\n}\n\nexport function getActivityGraph(\n  namespace: string,\n  project: string\n): { graph: GraphType; customGraphs: string[] } {\n  const customGraphs = get(`${namespace}.custom`, project);\n  return {\n    graph: (get(namespace, project) as GraphType) || DEFAULT_GRAPH,\n    customGraphs: customGraphs ? customGraphs.split(',') : []\n  };\n}\n\nfunction findMetric(key: string, metrics: T.Metric[] | T.Dict<T.Metric>) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum GraphType {\n  issues = 'issues',\n  coverage = 'coverage',\n  duplications = 'duplications',\n  custom = 'custom'\n}\n\nexport interface HistoryItem {\n  date: Date;\n  value?: string;\n}\n\nexport interface MeasureHistory {\n  metric: string;\n  history: HistoryItem[];\n}\n\nexport interface Serie {\n  data: Point[];\n  name: string;\n  translatedName: string;\n  type: string;\n}\n\nexport interface Point {\n  x: Date;\n  y: number | string | undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as startOfDay from 'date-fns/start_of_day';\nimport { isEqual } from 'lodash';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsDate,\n  parseAsString,\n  serializeDate,\n  serializeString,\n  serializeStringArray\n} from 'sonar-ui-common/helpers/query';\nimport { DEFAULT_GRAPH } from '../../components/activity-graph/utils';\nimport { GraphType } from '../../types/project-activity';\n\nexport interface Query {\n  category: string;\n  customMetrics: string[];\n  from?: Date;\n  graph: GraphType;\n  project: string;\n  selectedDate?: Date;\n  to?: Date;\n}\n\nexport const EVENT_TYPES = ['VERSION', 'QUALITY_GATE', 'QUALITY_PROFILE', 'OTHER'];\nexport const APPLICATION_EVENT_TYPES = ['QUALITY_GATE', 'DEFINITION_CHANGE', 'OTHER'];\n\nexport function activityQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.category !== nextQuery.category || datesQueryChanged(prevQuery, nextQuery);\n}\n\nexport function customMetricsChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.customMetrics, nextQuery.customMetrics);\n}\n\nexport function datesQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.from, nextQuery.from) || !isEqual(prevQuery.to, nextQuery.to);\n}\n\nexport function historyQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return prevQuery.graph !== nextQuery.graph;\n}\n\nexport function selectedDateQueryChanged(prevQuery: Query, nextQuery: Query) {\n  return !isEqual(prevQuery.selectedDate, nextQuery.selectedDate);\n}\n\ninterface AnalysesByDay {\n  byDay: T.Dict<T.ParsedAnalysis[]>;\n  version: string | null;\n  key: string | null;\n}\n\nexport function getAnalysesByVersionByDay(\n  analyses: T.ParsedAnalysis[],\n  query: Pick<Query, 'category' | 'from' | 'to'>\n) {\n  return analyses.reduce<AnalysesByDay[]>((acc, analysis) => {\n    let currentVersion = acc[acc.length - 1];\n    const versionEvent = analysis.events.find(event => event.category === 'VERSION');\n    if (versionEvent) {\n      const newVersion = { version: versionEvent.name, key: versionEvent.key, byDay: {} };\n      if (!currentVersion || Object.keys(currentVersion.byDay).length > 0) {\n        acc.push(newVersion);\n      } else {\n        acc[acc.length - 1] = newVersion;\n      }\n      currentVersion = newVersion;\n    } else if (!currentVersion) {\n      // APPs don't have version events, so let's create a fake one\n      currentVersion = { version: null, key: null, byDay: {} };\n      acc.push(currentVersion);\n    }\n\n    const day = startOfDay(parseDate(analysis.date))\n      .getTime()\n      .toString();\n\n    let matchFilters = true;\n    if (query.category || query.from || query.to) {\n      const isAfterFrom = !query.from || analysis.date >= query.from;\n      const isBeforeTo = !query.to || analysis.date <= query.to;\n      const hasSelectedCategoryEvents =\n        !query.category || analysis.events.find(event => event.category === query.category) != null;\n      matchFilters = isAfterFrom && isBeforeTo && hasSelectedCategoryEvents;\n    }\n\n    if (matchFilters) {\n      if (!currentVersion.byDay[day]) {\n        currentVersion.byDay[day] = [];\n      }\n      currentVersion.byDay[day].push(analysis);\n    }\n    return acc;\n  }, []);\n}\n\nexport function parseQuery(urlQuery: T.RawQuery): Query {\n  return {\n    category: parseAsString(urlQuery['category']),\n    customMetrics: parseAsArray(urlQuery['custom_metrics'], parseAsString),\n    from: parseAsDate(urlQuery['from']),\n    graph: parseGraph(urlQuery['graph']),\n    project: parseAsString(urlQuery['id']),\n    to: parseAsDate(urlQuery['to']),\n    selectedDate: parseAsDate(urlQuery['selected_date'])\n  };\n}\n\nexport function serializeQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    from: serializeDate(query.from),\n    project: serializeString(query.project),\n    to: serializeDate(query.to)\n  });\n}\n\nexport function serializeUrlQuery(query: Query): T.RawQuery {\n  return cleanQuery({\n    category: serializeString(query.category),\n    custom_metrics: serializeStringArray(query.customMetrics),\n    from: serializeDate(query.from),\n    graph: serializeGraph(query.graph),\n    id: serializeString(query.project),\n    to: serializeDate(query.to),\n    selected_date: serializeDate(query.selectedDate)\n  });\n}\n\nfunction parseGraph(value?: string) {\n  const graph = parseAsString(value);\n  return Object.keys(GraphType).includes(graph) ? (graph as GraphType) : DEFAULT_GRAPH;\n}\n\nfunction serializeGraph(value?: GraphType) {\n  return value === DEFAULT_GRAPH ? undefined : value;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getProjectActivity(\n  data: {\n    project: string;\n    category?: string;\n    from?: string;\n    p?: number;\n    ps?: number;\n  } & BranchParameters\n): Promise<{ analyses: T.Analysis[]; paging: T.Paging }> {\n  return getJSON('/api/project_analyses/search', data).catch(throwGlobalError);\n}\n\ninterface CreateEventResponse {\n  analysis: string;\n  key: string;\n  name: string;\n  category: string;\n  description?: string;\n}\n\nexport function createEvent(\n  analysis: string,\n  name: string,\n  category?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { analysis, name };\n  if (category) {\n    data.category = category;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/create_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteEvent(event: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete_event', { event }).catch(throwGlobalError);\n}\n\nexport function changeEvent(\n  event: string,\n  name?: string,\n  description?: string\n): Promise<CreateEventResponse> {\n  const data: RequestData = { event };\n  if (name) {\n    data.name = name;\n  }\n  if (description) {\n    data.description = description;\n  }\n  return postJSON('/api/project_analyses/update_event', data).then(r => r.event, throwGlobalError);\n}\n\nexport function deleteAnalysis(analysis: string): Promise<void | Response> {\n  return post('/api/project_analyses/delete', { analysis }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { limitComponentName } from 'sonar-ui-common/helpers/path';\nimport { isMainBranch } from '../../../helpers/branch-like';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BranchLike } from '../../../types/branch-like';\n\nexport type DefinitionChangeEvent = T.AnalysisEvent &\n  Required<Pick<T.AnalysisEvent, 'definitionChange'>>;\n\nexport function isDefinitionChangeEvent(event: T.AnalysisEvent): event is DefinitionChangeEvent {\n  return event.category === 'DEFINITION_CHANGE' && event.definitionChange !== undefined;\n}\n\ninterface Props {\n  branchLike: BranchLike | undefined;\n  event: DefinitionChangeEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class DefinitionChangeEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  renderProjectLink = (project: { key: string; name: string }, branch: string | undefined) => (\n    <Link\n      onClick={this.stopPropagation}\n      title={project.name}\n      to={getProjectUrl(project.key, branch)}>\n      {limitComponentName(project.name, 28)}\n    </Link>\n  );\n\n  renderBranch = (branch = translate('branches.main_branch')) => (\n    <span className=\"nowrap\" title={branch}>\n      <BranchIcon className=\"little-spacer-left text-text-top\" />\n      {branch}\n    </span>\n  );\n\n  renderProjectChange(project: {\n    changeType: string;\n    key: string;\n    name: string;\n    branch?: string;\n    newBranch?: string;\n    oldBranch?: string;\n  }) {\n    const mainBranch = !this.props.branchLike || isMainBranch(this.props.branchLike);\n\n    if (project.changeType === 'ADDED') {\n      const message = mainBranch\n        ? 'event.definition_change.added'\n        : 'event.definition_change.branch_added';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'REMOVED') {\n      const message = mainBranch\n        ? 'event.definition_change.removed'\n        : 'event.definition_change.branch_removed';\n      return (\n        <div className=\"text-ellipsis\">\n          <FormattedMessage\n            defaultMessage={translate(message)}\n            id={message}\n            values={{\n              project: this.renderProjectLink(project, project.branch),\n              branch: this.renderBranch(project.branch)\n            }}\n          />\n        </div>\n      );\n    } else if (project.changeType === 'BRANCH_CHANGED') {\n      return (\n        <FormattedMessage\n          defaultMessage={translate('event.definition_change.branch_replaced')}\n          id=\"event.definition_change.branch_replaced\"\n          values={{\n            project: this.renderProjectLink(project, project.newBranch),\n            oldBranch: this.renderBranch(project.oldBranch),\n            newBranch: this.renderBranch(project.newBranch)\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <>\n        <span className=\"note\">{translate('event.category', event.category)}:</span>\n\n        <div>\n          <ResetButtonLink\n            className=\"project-activity-event-inner-more-link\"\n            onClick={this.toggleProjectsList}\n            stopPropagation={true}>\n            {expanded ? translate('hide') : translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n          </ResetButtonLink>\n        </div>\n\n        {expanded && (\n          <ul className=\"spacer-left spacer-top\">\n            {event.definitionChange.projects.map(project => (\n              <li className=\"display-flex-center spacer-top\" key={project.key}>\n                {this.renderProjectChange(project)}\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\n\nexport type RichQualityGateEvent = T.AnalysisEvent & Required<Pick<T.AnalysisEvent, 'qualityGate'>>;\n\nexport function isRichQualityGateEvent(event: T.AnalysisEvent): event is RichQualityGateEvent {\n  return event.category === 'QUALITY_GATE' && event.qualityGate !== undefined;\n}\n\ninterface Props {\n  event: RichQualityGateEvent;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport class RichQualityGateEventInner extends React.PureComponent<Props, State> {\n  state: State = { expanded: false };\n\n  stopPropagation = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  toggleProjectsList = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { event } = this.props;\n    const { expanded } = this.state;\n    return (\n      <>\n        <span className=\"note spacer-right\">{translate('event.category', event.category)}:</span>\n        {event.qualityGate.stillFailing ? (\n          <FormattedMessage\n            defaultMessage={translate('event.quality_gate.still_x')}\n            id=\"event.quality_gate.still_x\"\n            values={{ status: <Level level={event.qualityGate.status} small={true} /> }}\n          />\n        ) : (\n          <Level level={event.qualityGate.status} small={true} />\n        )}\n\n        <div>\n          {event.qualityGate.failing.length > 0 && (\n            <ResetButtonLink\n              className=\"project-activity-event-inner-more-link\"\n              onClick={this.toggleProjectsList}\n              stopPropagation={true}>\n              {expanded ? translate('hide') : translate('more')}\n              <DropdownIcon className=\"little-spacer-left\" turned={expanded} />\n            </ResetButtonLink>\n          )}\n        </div>\n\n        {expanded && (\n          <ul className=\"spacer-left spacer-top\">\n            {event.qualityGate.failing.map(project => (\n              <li className=\"display-flex-center spacer-top\" key={project.key}>\n                <Level\n                  aria-label={translate('quality_gates.status')}\n                  className=\"spacer-right\"\n                  level={event.qualityGate.status}\n                  small={true}\n                />\n                <div className=\"flex-1 text-ellipsis\">\n                  <Link\n                    onClick={this.stopPropagation}\n                    title={project.name}\n                    to={getProjectUrl(project.key, project.branch)}>\n                    <span aria-label={translateWithParameters('project_x', project.name)}>\n                      {project.name}\n                    </span>\n                  </Link>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting?: boolean;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days));\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n"],"sourceRoot":""}