{"version":3,"sources":["webpack:///./src/main/js/apps/settings/side-tabs.css?20b1","webpack:///./src/main/js/apps/settings/side-tabs.css","webpack:///./src/main/js/apps/settings/styles.css?600d","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionsTable.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationFeatureBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","handleError","key","dispatch","response","Object","settingsPage","request","then","message","Promise","reject","AlmBindingDefinitionFormModalRenderer","props","action","children","help","header","l10n","index_js_exposed","SimpleModal_default","a","onClose","onCancel","onSubmit","size","_ref","onCloseClick","onFormSubmit","submitting","className","Alert","variant","DeferredSpinner_default","loading","buttons","disabled","canSubmit","onClick","AlmBindingDefinitionFormRenderer","success","data-test","e","preventDefault","onEdit","onDelete","AlertSuccessIcon_default","AlmBindingDefinitionForm_AlmBindingDefinitionForm","[object Object]","super","this","handleCancel","setState","formData","bindingDefinition","touched","handleDelete","handleEdit","handleFieldChange","fieldId","value","_objectSpread","handleFormSubmit","state","_this$props","hideKeyField","optionalFields","_this$state","values","omit_default","length","some","v","prevProps","isEqual_default","_this$props2","showInModal","_this$props2$loading","_this$props2$readOnly","readOnly","_this$props2$success","_this$state2","showEdit","showCancel","showDelete","onFieldChange","AlmBindingDefinitionsTable","additionalColumnsHeaders","additionalTableInfo","alm","definitions","onCreate","map","h","colSpan","additionalColumns","title","EditIcon_default","AlmIntegrationFeatureBox","active","description","inactiveReason","name","classnames","bg-muted","CheckIcon_default","fill","theme","green","ClearIcon_default","gray60","AlmTabRenderer","additionalColumnsKeys","defaultBinding","editedDefinition","_props$features","features","form","multipleAlmEnabled","_props$help","index_es","defaultMessage","concat","id","link","react_router_es","target","to","definition","mappedDefinitions","properties","_objectWithoutProperties","k","feature","assign","AlmTab_AlmTab","mounted","handleCreate","definitionKey","find","d","handleSubmit","config","originalKey","call","updateConfiguration","AlmTab_objectSpread","newKey","createConfiguration","onUpdateDefinitions","catch","_this$props$additiona","_this$props$additiona2","AlmBindingDefinitionFormField","autoFocus","isTextArea","maxLength","optional","propKey","_props$readOnly","htmlFor","HelpTooltip_default","overlay","placement","onChange","currentTarget","required","rows","type","AzureForm","personalAccessToken","AzureTab","types_alm_settings","Azure","alm_settings","childProps","BitbucketForm","example","url","BitbucketTab","Bitbucket","DeleteModal","projectCount","ConfirmModal_default","confirmButtonText","confirmData","isDestructive","onConfirm","showProjectCountWarning","DefinitionActions_DefinitionActions","reseting","handleClose","handleReset","onReset","Modal_default","contentLabel","onRequestClose","setting","isDefault","changedValue","hasValueChanged","hasValueToResetTo","utils","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","renderModal","SimpleInput_SimpleInput","handleInputChange","event","handleKeyDown","keyCode","onKeyDown","InputForNumber","InputForSingleSelectList_InputForSingleSelectList","option","label","Select_default","clearable","InputForString","typeMapping","STRING","TEXT","PASSWORD","changing","handleChangeClick","nextProps","autoComplete","renderInput","LockIcon_default","BOOLEAN","displayedValue","Toggle_default","INTEGER","LONG","FLOAT","PrimitiveInput_PrimitiveInput","other","PrimitiveInput_objectWithoutProperties","InputComponent","MultiValueInput_MultiValueInput","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","MultiValueInput_objectSpread","multiValues","PropertySetInput_PropertySetInput","fieldKey","emptyValue","newFields","PropertySetInput_objectSpread","fieldValues","fields","field","width","minWidth","marginTop","renderFields","Input","mapDispatchToProps","cancelChange","changeValue","checkValue","getState","rootReducer","defaultValue","passValidation","resetValue","component","api_settings","keys","store_values","saveValue","components_Definition","es","ownProps","validationMessage","handleChange","clearTimeout","timeout","handleCheck","componentKey","safeSetState","window","setTimeout","handleSave","changes","_this$props3","propertyName","effectiveValue","classnames_default","settings-definition-changed","data-key","dangerouslySetInnerHTML","__html","AlertErrorIcon_default","DefinitionsList","settings","components_EmailForm","withCurrentUser","error","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","CategoryDefinitionsList_mapDispatchToProps","fetchValues","globalMessages","CategoryDefinitionsList","category","renderEmailForm","subCategoryKey","prevKeys","join","bySubCategory","groupBy_default","subCategory","subCategories","sortedSubCategories","sortBy_default","toLowerCase","filteredSubCategories","filter","c","GithubForm","appId","privateKey","GithubTab","branchesEnabled","GitHub","AdditionalCategoryKeys","GitlabForm","GitlabTab","GitLab","tabs","alt","height","src","urls","requiresBranchesEnabled","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlm","BoxedTabs_default","onSelect","onSelectAlm","selected","tab","azure","bitbucket","github","gitlab","onConfirmDelete","almIntegration_AlmIntegration","withAppState","deleteConfiguration","fetchPullRequestDecorationSetting","appState","resolve","handleSelectAlm","_this$props$appState","Boolean","AnalysisScope","selectedCategory","CATEGORY_OVERRIDES","abap","apex","c / c++ / objective-c","c#","cobol","css","flex","go","html","java","javascript","kotlin","php","pl/i","pl/sql","python","rpg","ruby","scala","swift","t-sql","typescript","vb.net","visual basic","xml","components_Languages","withRouter","categories","location","router","_getLanguages","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","availableLanguages","originalValue","selectedLanguage","getLanguages","newOption","Languages_objectSpread","query","placeholder","DEFAULT_SETTING","NewCodePeriod_NewCodePeriod","days","saving","onSelectDays","onSelectSetting","currentSetting","currentSettingValue","String","newCodePeriod","fetchNewCodePeriodSetting","_ref2","_ref3","isChanged","isValid","projectBaseline_utils","BaselineSettingPreviousVersion","BaselineSettingDays","onChangeDays","optionRenderer","instance","renderField","helpParams","PRDecorationBindingRenderer","_props$formData","repository","slug","instances","originalData","_ref$repository","_ref$slug","_ref2$key","oKey","_ref2$repository","oRepository","_ref2$slug","isDataSame","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","REQUIRED_FIELDS_BY_ALM","PRDecorationBinding_PRDecorationBinding","fetchDefinitions","project","all","getProjectBinding","_slicedToArray","newFormData","validateForm","catchError","_this$state$formData","additionalFields","PRDecorationBinding_objectWithoutProperties","submitProjectAlmBinding","_ref4","PRDecorationBinding_objectSpread","_ref5","reduce","result","status","throwGlobalError","almSpecificFields","almSetting","_almSpecificFields$re","_almSpecificFields$sl","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","AllCategoriesList","defaultCategory","pathname","categoriesWithName","sortedCategories","renderLink","PageHeader","InstanceMessage","AppContainer_App","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","find_default","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","index_module","defer","AppContainer_mapDispatchToProps","filtered","store_definitions","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","WrappedComponent","Wrapper","displayName","AlmKeys","getAlmDefinitions","getAlmSettings","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","almSettings","data","projects","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","parsed","parseInt","isNaN","getSettingValue","analysis","validateSetting","_state$analysis","overrideGeneralSetting","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_RadioCard__WEBPACK_IMPORTED_MODULE_1___default","n","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_ValidationInput__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","isInvalid","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"js/315.m.76b48c73.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".side-tabs-layout{display:flex;justify-content:space-between;align-items:stretch}.modal .side-tabs-layout{padding-left:10px;background-color:#f3f3f3}.side-tabs-main{position:relative;z-index:2;flex-grow:1;padding:15px 20px;border:1px solid #e6e6e6;box-sizing:border-box;background-color:#fff;overflow:auto;height:100vh}.modal .side-tabs-main{border-top:none;border-bottom:none;border-right:none}.side-tabs-side{position:relative;z-index:3;width:160px;flex-shrink:0;padding:10px 0;box-sizing:border-box;transform:translateX(1px)}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#444;cursor:default}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".settings-layout{margin-bottom:60px}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#777}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormModalProps {\n  action: 'edit' | 'create';\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel: () => void;\n  onSubmit: () => void;\n}\n\nexport default function AlmBindingDefinitionFormModalRenderer(\n  props: AlmBindingDefinitionFormModalProps\n) {\n  const { action, children, help } = props;\n  const header = translate('settings.almintegration.form.header', action);\n\n  return (\n    <SimpleModal header={header} onClose={props.onCancel} onSubmit={props.onSubmit} size=\"medium\">\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form className=\"views-form\" onSubmit={onFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body modal-container\">\n            <div className=\"display-flex-start\">\n              <div className=\"flex-1\">{children}</div>\n\n              {help && (\n                <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n                  {help}\n                </Alert>\n              )}\n            </div>\n          </div>\n\n          <div className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton disabled={submitting || !props.canSubmit()}>\n              {translate('settings.almintegration.form.save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n          </div>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormRendererProps {\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel?: () => void;\n  onDelete?: () => void;\n  onEdit?: () => void;\n  onSubmit: () => void;\n  loading: boolean;\n  success: boolean;\n}\n\nexport default function AlmBindingDefinitionFormRenderer(\n  props: AlmBindingDefinitionFormRendererProps\n) {\n  const { children, help, loading, success } = props;\n\n  return (\n    <form\n      className=\"views-form\"\n      data-test=\"settings__alm-form\"\n      onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        props.onSubmit();\n      }}>\n      <div className=\"display-flex-start\">\n        <div className=\"flex-1\">\n          {children}\n\n          <div className=\"display-flex-center\">\n            {props.onEdit === undefined ? (\n              <SubmitButton disabled={loading || !props.canSubmit()}>\n                {translate('settings.almintegration.form.save')}\n              </SubmitButton>\n            ) : (\n              <Button disabled={loading} onClick={props.onEdit}>\n                {translate('edit')}\n              </Button>\n            )}\n            {props.onDelete && (\n              <Button\n                className=\"button-red spacer-left\"\n                disabled={loading}\n                onClick={props.onDelete}>\n                {translate('delete')}\n              </Button>\n            )}\n            {props.onCancel && (\n              <ResetButtonLink className=\"spacer-left\" onClick={props.onCancel}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            )}\n            {loading && <DeferredSpinner className=\"spacer-left\" />}\n            {!loading && success && (\n              <span className=\"text-success spacer-left\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {help && (\n          <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n            {help}\n          </Alert>\n        )}\n      </div>\n    </form>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual, omit } from 'lodash';\nimport * as React from 'react';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionFormModalRenderer from './AlmBindingDefinitionFormModalRenderer';\nimport AlmBindingDefinitionFormRenderer from './AlmBindingDefinitionFormRenderer';\n\nexport interface AlmBindingDefinitionFormChildrenProps<B> {\n  formData: B;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof B, value: string) => void;\n  readOnly?: boolean;\n}\n\ninterface Props<B> {\n  bindingDefinition: B;\n  children: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  hideKeyField?: boolean;\n  loading?: boolean;\n  onCancel?: () => void;\n  onDelete?: (definitionKey: string) => void;\n  onEdit?: (definitionKey: string) => void;\n  onSubmit: (data: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  readOnly?: boolean;\n  showInModal?: boolean;\n  success?: boolean;\n}\n\ninterface State<B> {\n  formData: B;\n  touched: boolean;\n}\n\nexport default class AlmBindingDefinitionForm<\n  B extends AlmBindingDefinition\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n    this.state = { formData: props.bindingDefinition, touched: false };\n  }\n\n  componentDidUpdate(prevProps: Props<B>) {\n    if (!isEqual(prevProps.bindingDefinition, this.props.bindingDefinition)) {\n      this.setState({ formData: this.props.bindingDefinition, touched: false });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({ formData: this.props.bindingDefinition, touched: false });\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      },\n      touched: true\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    const { hideKeyField, optionalFields } = this.props;\n    const { formData, touched } = this.state;\n\n    let values;\n    if (hideKeyField) {\n      values = omit(formData, 'key');\n    } else {\n      values = { ...formData };\n    }\n\n    if (optionalFields && optionalFields.length > 0) {\n      values = omit(values, optionalFields);\n    }\n\n    return touched && !Object.values(values).some(v => !v);\n  };\n\n  render() {\n    const {\n      bindingDefinition,\n      children,\n      help,\n      hideKeyField,\n      showInModal,\n      loading = false,\n      readOnly = false,\n      success = false\n    } = this.props;\n    const { formData, touched } = this.state;\n\n    const showEdit = this.props.onEdit !== undefined;\n    const showCancel = touched || !showEdit;\n    const showDelete = showEdit && this.props.onDelete !== undefined;\n\n    return showInModal ? (\n      <AlmBindingDefinitionFormModalRenderer\n        action={bindingDefinition.key ? 'edit' : 'create'}\n        canSubmit={this.canSubmit}\n        help={help}\n        onCancel={this.handleCancel}\n        onSubmit={this.handleFormSubmit}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmBindingDefinitionFormModalRenderer>\n    ) : (\n      <AlmBindingDefinitionFormRenderer\n        canSubmit={this.canSubmit}\n        help={help}\n        loading={loading}\n        onCancel={showCancel ? this.handleCancel : undefined}\n        onDelete={showDelete ? this.handleDelete : undefined}\n        onEdit={showEdit ? this.handleEdit : undefined}\n        onSubmit={this.handleFormSubmit}\n        success={success}>\n        {children({\n          formData,\n          hideKeyField,\n          onFieldChange: this.handleFieldChange,\n          readOnly\n        })}\n      </AlmBindingDefinitionFormRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ButtonIcon, DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionsTableProps {\n  additionalColumnsHeaders: Array<string>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  definitions: Array<{\n    key: string;\n    additionalColumns: Array<string>;\n  }>;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n}\n\nexport default function AlmBindingDefinitionsTable(props: AlmBindingDefinitionsTableProps) {\n  const { additionalColumnsHeaders, additionalTableInfo, alm, definitions } = props;\n\n  return (\n    <>\n      <div className=\"spacer-top big-spacer-bottom display-flex-space-between\">\n        <h2 className=\"settings-sub-category-name\">\n          {translate('settings.almintegration.table.title')}\n        </h2>\n        <Button data-test=\"settings__alm-create\" onClick={props.onCreate}>\n          {translate('settings.almintegration.table.create')}\n        </Button>\n      </div>\n\n      {additionalTableInfo}\n\n      <table className=\"data zebra fixed spacer-bottom\">\n        <thead>\n          <tr>\n            <th>{translate('settings.almintegration.table.column.name')}</th>\n            {additionalColumnsHeaders.map(h => (\n              <th key={h}>{h}</th>\n            ))}\n            <th className=\"action-small text-center\">\n              {translate('settings.almintegration.table.column.edit')}\n            </th>\n            <th className=\"action text-center\">\n              {translate('settings.almintegration.table.column.delete')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {definitions.length === 0 ? (\n            <tr data-test=\"settings__alm-empty-table\">\n              <td colSpan={3 + additionalColumnsHeaders.length}>\n                {translate('settings.almintegration.table.empty', alm)}\n              </td>\n            </tr>\n          ) : (\n            definitions.map(({ key, additionalColumns }) => (\n              <tr data-test=\"settings__alm-table-row\" key={key}>\n                <td className=\"nowrap hide-overflow\" title={key}>\n                  {key}\n                </td>\n                {additionalColumns.map(value => (\n                  <td className=\"nowrap hide-overflow\" key={value} title={value}>\n                    {value}\n                  </td>\n                ))}\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-edit\">\n                  <ButtonIcon onClick={() => props.onEdit(key)}>\n                    <EditIcon />\n                  </ButtonIcon>\n                </td>\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-delete\">\n                  <DeleteButton onClick={() => props.onDelete(key)} />\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\n\nexport interface AlmIntegrationFeatureBoxProps {\n  active: boolean;\n  description: React.ReactNode;\n  inactiveReason?: React.ReactNode;\n  name: React.ReactNode;\n}\n\nexport default function AlmIntegrationFeatureBox(props: AlmIntegrationFeatureBoxProps) {\n  const { active, description, inactiveReason, name } = props;\n\n  return (\n    <div\n      className={classNames(\n        'boxed-group-inner display-flex-start width-30 spacer-right spacer-bottom bordered',\n        {\n          'bg-muted': !active\n        }\n      )}>\n      {active ? (\n        <CheckIcon className=\"little-spacer-top spacer-right\" fill={colors.green} />\n      ) : (\n        <ClearIcon className=\"little-spacer-top spacer-right\" fill={colors.gray60} />\n      )}\n      <div className=\"display-flex-column abs-height-100\">\n        <h4>{name}</h4>\n\n        <div className=\"spacer-top flex-1\">{description}</div>\n\n        <div className=\"spacer-top\">\n          {active ? (\n            <em className=\"text-success\">{translate('settings.almintegration.feature.enabled')}</em>\n          ) : (\n            <em className=\"text-muted\">\n              {inactiveReason || translate('settings.almintegration.feature.disabled')}\n            </em>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionForm, {\n  AlmBindingDefinitionFormChildrenProps\n} from './AlmBindingDefinitionForm';\nimport AlmBindingDefinitionsTable from './AlmBindingDefinitionsTable';\nimport AlmIntegrationFeatureBox, {\n  AlmIntegrationFeatureBoxProps\n} from './AlmIntegrationFeatureBox';\n\nexport interface AlmTabRendererProps<B> {\n  additionalColumnsHeaders: string[];\n  additionalColumnsKeys: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  editedDefinition?: B;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  success: boolean;\n}\n\nexport default function AlmTabRenderer<B extends AlmBindingDefinition>(\n  props: AlmTabRendererProps<B>\n) {\n  const {\n    additionalColumnsHeaders,\n    additionalColumnsKeys,\n    additionalTableInfo,\n    alm,\n    defaultBinding,\n    definitions,\n    editedDefinition,\n    features = [],\n    form,\n    loading,\n    multipleAlmEnabled,\n    optionalFields,\n    success,\n    help = (\n      <FormattedMessage\n        defaultMessage={translate(`settings.almintegration.${alm}.info`)}\n        id={`settings.almintegration.${alm}.info`}\n        values={{\n          link: (\n            <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n              {translate('learn_more')}\n            </Link>\n          )\n        }}\n      />\n    )\n  } = props;\n\n  let definition: B | undefined;\n  let mappedDefinitions: Array<{ key: string; additionalColumns: string[] }> = [];\n  let showEdit: boolean | undefined;\n\n  if (!multipleAlmEnabled) {\n    definition = editedDefinition;\n    if (definition === undefined && definitions.length > 0) {\n      definition = definitions[0];\n    }\n    showEdit = definition && editedDefinition === undefined;\n  } else {\n    mappedDefinitions = definitions.map(({ key, ...properties }) => {\n      const additionalColumns = additionalColumnsKeys.map(k => (properties as any)[k]);\n      return {\n        key,\n        additionalColumns\n      };\n    });\n  }\n\n  return (\n    <div className=\"big-padded\">\n      {multipleAlmEnabled ? (\n        <DeferredSpinner loading={loading}>\n          <AlmBindingDefinitionsTable\n            additionalColumnsHeaders={additionalColumnsHeaders}\n            additionalTableInfo={additionalTableInfo}\n            alm={alm}\n            definitions={mappedDefinitions}\n            onCreate={props.onCreate}\n            onDelete={props.onDelete}\n            onEdit={props.onEdit}\n          />\n\n          {editedDefinition && (\n            <AlmBindingDefinitionForm\n              bindingDefinition={editedDefinition}\n              help={help}\n              onCancel={props.onCancel}\n              onSubmit={props.onSubmit}\n              optionalFields={optionalFields}\n              showInModal={true}>\n              {form}\n            </AlmBindingDefinitionForm>\n          )}\n        </DeferredSpinner>\n      ) : (\n        <AlmBindingDefinitionForm\n          bindingDefinition={definition || defaultBinding}\n          help={help}\n          hideKeyField={true}\n          loading={loading}\n          onCancel={props.onCancel}\n          onDelete={definition ? props.onDelete : undefined}\n          onEdit={showEdit ? props.onEdit : undefined}\n          onSubmit={props.onSubmit}\n          optionalFields={optionalFields}\n          readOnly={showEdit}\n          success={success}>\n          {form}\n        </AlmBindingDefinitionForm>\n      )}\n\n      {features.length > 0 && (\n        <div className=\"big-spacer-top big-padded-top bordered-top\">\n          <h3 className=\"big-spacer-bottom\">{translate('settings.almintegration.features')}</h3>\n\n          <div className=\"display-flex-wrap\">\n            {features.map((feature, i) => (\n              <AlmIntegrationFeatureBox key={i} {...feature} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormChildrenProps } from './AlmBindingDefinitionForm';\nimport { AlmIntegrationFeatureBoxProps } from './AlmIntegrationFeatureBox';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props<B> {\n  alm: AlmKeys;\n  additionalColumnsHeaders?: string[];\n  additionalColumnsKeys?: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  createConfiguration: (data: B) => Promise<void>;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n  optionalFields?: Array<keyof B>;\n  updateConfiguration: (data: B & { newKey?: string }) => Promise<void>;\n}\n\ninterface State<B> {\n  editedDefinition?: B;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default class AlmTab<B extends AlmBindingDefinition> extends React.PureComponent<\n  Props<B>,\n  State<B>\n> {\n  mounted = false;\n  state: State<B> = { submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined,\n      success: false\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: this.props.defaultBinding, success: false });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition, success: false });\n  };\n\n  handleSubmit = (config: B, originalKey: string) => {\n    const call = originalKey\n      ? this.props.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : // If there's no support for multi-ALM binding, the key will be an empty string.\n        // Set a default.\n        this.props.createConfiguration(config.key ? config : { ...config, key: this.props.alm });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined, submitting: false, success: true });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      additionalColumnsHeaders = [],\n      additionalColumnsKeys = [],\n      additionalTableInfo,\n      alm,\n      defaultBinding,\n      definitions,\n      features,\n      form,\n      help,\n      loading,\n      multipleAlmEnabled,\n      optionalFields\n    } = this.props;\n    const { editedDefinition, submitting, success } = this.state;\n\n    return (\n      <AlmTabRenderer\n        additionalColumnsHeaders={additionalColumnsHeaders}\n        additionalColumnsKeys={additionalColumnsKeys}\n        additionalTableInfo={additionalTableInfo}\n        alm={alm}\n        defaultBinding={defaultBinding}\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        features={features}\n        form={form}\n        help={help}\n        loading={loading || submitting}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n        optionalFields={optionalFields}\n        success={success}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionFormFieldProps<B extends AlmBindingDefinition> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  optional?: boolean;\n  propKey: keyof B;\n  readOnly?: boolean;\n  value: string;\n}\n\nexport function AlmBindingDefinitionFormField<B extends AlmBindingDefinition>(\n  props: AlmBindingDefinitionFormFieldProps<B>\n) {\n  const {\n    autoFocus,\n    help,\n    id,\n    isTextArea,\n    maxLength,\n    onFieldChange,\n    optional,\n    propKey,\n    readOnly = false,\n    value\n  } = props;\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.almintegration.form', id)}\n        {!optional && <em className=\"mandatory\">*</em>}\n        {help && <HelpTooltip className=\"spacer-left\" overlay={help} placement=\"right\" />}\n      </label>\n      {isTextArea ? (\n        <textarea\n          className=\"settings-large-input\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          required={!optional}\n          rows={5}\n          value={value}\n        />\n      ) : (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface AzureFormProps {\n  formData: AzureBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function AzureForm(props: AzureFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.azure.help')}\n          id=\"name.azure\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport AzureForm from './AzureForm';\n\nexport interface AzureTabProps {\n  definitions: AzureBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function AzureTab(props: AzureTabProps) {\n  const { multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.Azure}\n        createConfiguration={createAzureConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          }\n        ]}\n        form={childProps => <AzureForm {...childProps} />}\n        loading={loading}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateAzureConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface BitbucketFormProps {\n  formData: BitbucketBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof BitbucketBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function BitbucketForm(props: BitbucketFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.bitbucket.help')}\n          id=\"name.bitbucket\"\n          maxLength={100}\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.form.url.bitbucket.help')}\n            id=\"settings.almintegration.form.url.bitbucket.help\"\n            values={{ example: 'https://bitbucket-server.your-company.com' }}\n          />\n        }\n        id=\"url.bitbucket\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  createBitbucketConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/alm-settings';\nimport { AlmKeys, BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport BitbucketForm from './BitbucketForm';\n\nexport interface BitbucketTabProps {\n  definitions: BitbucketBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function BitbucketTab(props: BitbucketTabProps) {\n  const { multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        additionalColumnsHeaders={[translate('settings.almintegration.table.column.bitbucket.url')]}\n        additionalColumnsKeys={['url']}\n        additionalTableInfo={\n          <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n            <FormattedMessage\n              defaultMessage={translate(\n                'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances'\n              )}\n              id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances\"\n              values={{\n                feature: (\n                  <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                )\n              }}\n            />\n          </Alert>\n        }\n        alm={AlmKeys.Bitbucket}\n        createConfiguration={createBitbucketConfiguration}\n        defaultBinding={{ key: '', url: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          },\n          {\n            name: translate('settings.almintegration.feature.alm_repo_import.title'),\n            active: definitions.length === 1,\n            description: translate('settings.almintegration.feature.alm_repo_import.description'),\n            inactiveReason: translateWithParameters(\n              'onboarding.create_project.too_many_bbs_instances_X',\n              definitions.length\n            )\n          }\n        ]}\n        form={childProps => <BitbucketForm {...childProps} />}\n        help={\n          <>\n            <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n            <p className=\"big-spacer-top\">\n              {translate('settings.almintegration.bitbucket.help_1')}\n            </p>\n\n            <ul className=\"big-spacer-top list-styled\">\n              <li>{translate('settings.almintegration.bitbucket.help_2')}</li>\n              <li>{translate('settings.almintegration.bitbucket.help_3')}</li>\n            </ul>\n\n            <p className=\"big-spacer-top big-spacer-bottom\">\n              <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n                {translate('learn_more')}\n              </Link>\n            </p>\n          </>\n        }\n        loading={loading}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateBitbucketConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: T.Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<T.SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in T.SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited,\n  sanitizeTranslation\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: T.Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: T.Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success: boolean;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false,\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: false, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: true, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {this.state.success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters(\n                  'email_configuration.test.email_was_sent_to_x',\n                  this.state.recipient\n                )}\n              </Alert>\n            </div>\n          )}\n\n          {this.state.error != null && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{this.state.error}</Alert>\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={this.state.recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={this.state.subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={this.state.message}\n            />\n          </div>\n\n          <SubmitButton disabled={this.state.loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {this.state.loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { getSubCategoryDescription, getSubCategoryName, sanitizeTranslation } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<T.Setting & { definition: T.SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GithubFormProps {\n  formData: GithubBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GithubForm(props: GithubFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.github.help')}\n          id=\"name.github\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        readOnly={readOnly}\n        value={formData.appId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"privateKey\"\n        readOnly={readOnly}\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GithubForm from './GithubForm';\n\nexport interface GithubTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GithubBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GithubTab(props: GithubTabProps) {\n  const { branchesEnabled, component, multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.github.url'),\n              translate('settings.almintegration.table.column.app_id')\n            ]}\n            additionalColumnsKeys={['appId', 'url']}\n            alm={AlmKeys.GitHub}\n            createConfiguration={createGithubConfiguration}\n            defaultBinding={{ key: '', appId: '', url: '', privateKey: '' }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.pr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.pr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              }\n            ]}\n            form={childProps => <GithubForm {...childProps} />}\n            loading={loading}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            updateConfiguration={updateGithubConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitHub}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GitlabFormProps {\n  formData: GitlabBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GitlabForm(props: GitlabFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.gitlab.help')}\n          id=\"name.gitlab\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.gitlab.help1')}\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.gitlab.help2')}\n            <br />\n            <em>https://gitlab.com/api/v4</em>\n          </>\n        }\n        id=\"url.gitlab\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        optional={true}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GitlabForm from './GitlabForm';\n\nexport interface GitlabTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GitlabBindingDefinition[];\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GitlabTab(props: GitlabTabProps) {\n  const { branchesEnabled, component, multipleAlmEnabled, definitions, loading } = props;\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.gitlab.url')\n            ]}\n            additionalColumnsKeys={['url']}\n            alm={AlmKeys.GitLab}\n            createConfiguration={createGitlabConfiguration}\n            defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.mr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.mr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              }\n            ]}\n            form={childProps => <GitlabForm {...childProps} />}\n            loading={loading}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            optionalFields={['url']}\n            updateConfiguration={updateGitlabConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitLab}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: AlmKeys) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    )\n  },\n  {\n    key: AlmKeys.Bitbucket,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    )\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    component,\n    definitionKeyForDeletion,\n    definitions,\n    currentAlm,\n    loading,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={tabs.filter(tab => !(tab.requiresBranchesEnabled && !branchesEnabled))}\n      />\n\n      {currentAlm === AlmKeys.Azure && (\n        <AzureTab\n          definitions={definitions.azure}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.Bitbucket && (\n        <BitbucketTab\n          definitions={definitions.bitbucket}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitHub && (\n        <GithubTab\n          branchesEnabled={branchesEnabled}\n          component={component}\n          definitions={definitions.github}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitLab && (\n        <GitlabTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.gitlab}\n          loading={loading}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n  component?: T.Component;\n}\n\ninterface State {\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loading: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    currentAlm: AlmKeys.GitHub,\n    definitions: {\n      [AlmKeys.Azure]: [],\n      [AlmKeys.Bitbucket]: [],\n      [AlmKeys.GitHub]: [],\n      [AlmKeys.GitLab]: []\n    },\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPullRequestDecorationSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    const {\n      appState: { branchesEnabled }\n    } = this.props;\n\n    if (!branchesEnabled) {\n      return Promise.resolve();\n    }\n\n    this.setState({ loading: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: AlmKeys) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loading: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loading: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled },\n      component\n    } = this.props;\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        component={component}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default withAppState(AlmIntegration);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nexport const CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys, AlmSettingsInstance, ProjectAlmBinding } from '../../../../types/alm-settings';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nfunction renderField(props: {\n  help?: boolean;\n  helpParams?: { [key: string]: string | JSX.Element };\n  id: string;\n  onFieldChange: (id: keyof ProjectAlmBinding, value: string) => void;\n  optional?: boolean;\n  propKey: keyof ProjectAlmBinding;\n  value: string;\n}) {\n  const { help, helpParams, id, propKey, optional, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.pr_decoration.binding.form', id)}\n        {!optional && <em className=\"mandatory\">*</em>}\n        {help && (\n          <HelpTooltip\n            className=\"spacer-left\"\n            overlay={\n              <FormattedMessage\n                defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n                id={`settings.pr_decoration.binding.form.${id}.help`}\n                values={helpParams}\n              />\n            }\n            placement=\"right\"\n          />\n        )}\n      </label>\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nfunction isDataSame(\n  { key, repository = '', slug = '' }: ProjectAlmBinding,\n  { key: oKey = '', repository: oRepository = '', slug: oSlug = '' }: ProjectAlmBinding\n) {\n  return key === oKey && repository === oRepository && slug === oSlug;\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData: { key, repository, slug },\n    instances,\n    isValid,\n    loading,\n    originalData,\n    saving,\n    success\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = key && instances.find(i => i.key === key);\n  const alm = selected && selected.alm;\n\n  const isChanged = !isDataSame({ key, repository, slug }, originalData || { key: '' });\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <em className=\"mandatory spacer-right\">*</em>\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm === AlmKeys.Bitbucket && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/'}\n                    <strong>{'{KEY}'}</strong>\n                    {'/repos/{SLUG}/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/{KEY}/repos/'}\n                    <strong>{'{SLUG}'}</strong>\n                    {'/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.slug',\n              onFieldChange: props.onFieldChange,\n              propKey: 'slug',\n              value: slug || ''\n            })}\n          </>\n        )}\n\n        {alm === AlmKeys.GitHub &&\n          renderField({\n            help: true,\n            helpParams: { example: 'SonarSource/sonarqube' },\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        {alm === AlmKeys.GitLab &&\n          renderField({\n            help: true,\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            optional: true,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {originalData && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { AlmKeys, AlmSettingsInstance, ProjectAlmBinding } from '../../../../types/alm-settings';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: ProjectAlmBinding;\n  instances: AlmSettingsInstance[];\n  isValid: boolean;\n  loading: boolean;\n  originalData?: ProjectAlmBinding;\n  saving: boolean;\n  success: boolean;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<ProjectAlmBinding, 'key'>>;\n} = {\n  [AlmKeys.Azure]: [],\n  [AlmKeys.Bitbucket]: ['repository', 'slug'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: []\n};\n\nexport default class PRDecorationBinding extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '' },\n    instances: [],\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              originalData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBinding | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === 404) {\n        return Promise.resolve(undefined);\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: ''\n            },\n            originalData: undefined,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<ProjectAlmBinding, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n\n    switch (alm) {\n      case AlmKeys.Azure:\n        return setProjectAzureBinding({\n          almSetting,\n          project\n        });\n      case AlmKeys.Bitbucket: {\n        if (!almSpecificFields) {\n          return Promise.reject();\n        }\n        const { repository = '', slug = '' } = almSpecificFields;\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug\n        });\n      }\n      case AlmKeys.GitHub: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        if (!repository) {\n          return Promise.reject();\n        }\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    if (key) {\n      this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n        .then(() => {\n          if (this.mounted) {\n            this.setState({\n              saving: false,\n              success: true\n            });\n          }\n        })\n        .then(this.fetchDefinitions)\n        .catch(this.catchError);\n    }\n  };\n\n  handleFieldChange = (id: keyof ProjectAlmBinding, value: string) => {\n    this.setState(({ formData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\n\ninterface Category {\n  key: string;\n  name: string;\n}\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport class CategoriesList extends React.PureComponent<CategoriesListProps> {\n  renderLink(category: Category) {\n    const { component, defaultCategory, selectedCategory } = this.props;\n    const pathname = this.props.component ? '/project/settings' : '/settings';\n    const query = {\n      category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n      id: component && component.key\n    };\n    return (\n      <IndexLink\n        className={classNames({\n          active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n        })}\n        title={category.name}\n        to={{ pathname, query }}>\n        {category.name}\n      </IndexLink>\n    );\n  }\n\n  render() {\n    const { branchesEnabled } = this.props;\n\n    const categoriesWithName = this.props.categories\n      .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n      .map(key => ({\n        key,\n        name: getCategoryName(key)\n      }))\n      .concat(\n        ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n          .filter(c =>\n            this.props.component\n              ? // Project settings\n                c.availableForProject\n              : // Global settings\n                c.availableGlobally\n          )\n          .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n      );\n    const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n    return (\n      <ul className=\"side-tabs-menu\">\n        {sortedCategories.map(category => (\n          <li key={category.key}>{this.renderLink(category)}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\ninterface Props {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: Props) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{title}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport '../side-tabs.css';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport { CATEGORY_OVERRIDES } from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div className=\"page page-limited\" id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n\n        <PageHeader component={this.props.component} />\n\n        <div className=\"side-tabs-layout settings-layout\">\n          <div className=\"side-tabs-side\">\n            <AllCategoriesList\n              component={this.props.component}\n              defaultCategory={this.props.defaultCategory}\n              selectedCategory={selectedCategory}\n            />\n          </div>\n          <div className=\"side-tabs-main\">\n            {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n              foundAdditionalCategory.renderComponent({\n                component: this.props.component,\n                selectedCategory: originalCategory\n              })\n            ) : (\n              <CategoryDefinitionsList\n                category={selectedCategory}\n                component={this.props.component}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBinding {\n  key: string;\n  repository?: string;\n  slug?: string;\n}\n\nexport interface AzureProjectAlmBinding {\n  almSetting: string;\n  project: string;\n}\n\nexport interface BitbucketProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository: string;\n}\n\nexport interface GitlabProjectAlmBinding {\n  almSetting: string;\n  project: string;\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  azure: AzureBindingDefinition[];\n  bitbucket: BitbucketBindingDefinition[];\n  github: GithubBindingDefinition[];\n  gitlab: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBinding,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBinding,\n  GithubBindingDefinition,\n  GithubProjectAlmBinding,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBinding,\n  ProjectAlmBinding\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions').catch(throwGlobalError);\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBinding> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBinding) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBinding) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBinding) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBinding) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  selected?: T.NewCodePeriodSettingType;\n  overrideGeneralSetting?: boolean;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    selected,\n    overrideGeneralSetting\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days));\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n"],"sourceRoot":""}