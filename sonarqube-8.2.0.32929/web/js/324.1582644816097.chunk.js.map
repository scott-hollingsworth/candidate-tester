{"version":3,"sources":["webpack:///./src/main/js/apps/quality-profiles/components/ProfileLink.tsx","webpack:///../sonar-docs/src/tooltips/quality-profiles/built-in-quality-profile.md","webpack:///../sonar-docs/src/tooltips/quality-profiles/activate-rules-in-built-in-profile.md","webpack:///./src/main/js/apps/quality-profiles/details/ProfileExporters.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeParentForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritanceBox.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritance.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsFormSelect.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsGroup.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsUser.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissions.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeProjectsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileProjects.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesDeprecatedWarning.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowOfType.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowTotal.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesSonarWayComparison.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRules.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileDetails.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/api/quality-profiles.ts","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/api/rules.ts","webpack:///./src/main/js/apps/quality-profiles/components/BuiltInQualityProfileBadge.tsx"],"names":["ProfileLink","_a","name","language","organization","children","other","__rest","react__WEBPACK_IMPORTED_MODULE_0__","react_router__WEBPACK_IMPORTED_MODULE_1__","__assign","activeClassName","to","Object","_utils__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","r","__webpack_exports__","_super","ProfileExporters","__extends","prototype","getExportUrl","exporter","profile","this","props","window","baseUrl","quality_profiles","render","_this","exporters","exportersForLanguage","filter","e","languages","includes","length","index_js_exposed","className","l10n","map","index","undefined","data-key","key","href","rel","target","ChangeParentForm","apply","arguments","mounted","state","loading","selected","handleSelectChange","option","setState","value","handleFormSubmit","event","preventDefault","parent","profiles","find","p","then","onChange","catch","ChangeParentForm_extends","componentDidMount","componentWillUnmount","options","__spreadArrays","label","sortBy_default","isBuiltIn","submitDisabled","parentKey","Modal_default","a","contentLabel","onRequestClose","onClose","size","id","onSubmit","htmlFor","Select_default","clearable","buttons","disabled","onClick","ProfileInheritanceBox","depth","extendsBuiltIn","displayLink","_b","type","offset","data-test","style","paddingLeft","BuiltInQualityProfileBadge","HelpTooltip_default","overlay","activeRuleCount","overridingRuleCount","ProfileInheritance","formOpen","handleChangeParentClick","closeForm","handleParentChange","updateProfiles","loadData","ProfileInheritance_extends","componentDidUpdate","prevProps","ancestors","reverse","highlightCurrent","some","actions","edit","ancestor","classnames","child","details_ChangeParentForm","ProfilePermissionsFormSelect","call","handleSearch","query","onSearch","searchResults","handleInputChange","debounce_default","ProfilePermissionsFormSelect_extends","noResultsText","getStringValue","autoFocus","filterOptions","identity_default","isLoading","onInputChange","optionRenderer","placeholder","searchable","valueRenderer","isUser","login","Avatar","hash","avatar","GroupIcon_default","ProfilePermissionsForm","submitting","stopSubmitting","handleUserAdd","user","qualityProfile","onUserAdd","handleGroupAdd","group","onGroupAdd","q","parameters","Promise","all","usersResponse","groupsResponse","ProfilePermissionsForm_spreadArrays","users","groups","handleValueChange","ProfilePermissionsForm_extends","header","details_ProfilePermissionsFormSelect","ProfilePermissionsGroup","deleteModal","handleDeleteClick","handleDeleteModalClose","handleDelete","onDelete","renderDeleteModal","index_es","defaultMessage","values","onSubmitClick","onCloseClick","ProfilePermissionsGroup_extends","lineHeight","SimpleModal_default","ProfilePermissionsUser","ProfilePermissionsUser_extends","ProfilePermissions","addUserForm","handleAddUserButtonClick","handleAddUserFormClose","addedUser","uniqBy_default","ProfilePermissions_spreadArrays","handleUserDelete","removedUser","addedGroup","handleGroupDelete","removedGroup","ProfilePermissions_extends","fetchUsersAndGroups","details_ProfilePermissionsUser","details_ProfilePermissionsGroup","details_ProfilePermissionsForm","ChangeProjectsForm","fetchProjects","searchParams","page","ps","pageSize","data","prevState","more","projects","ChangeProjectsForm_spreadArrays","results","newSeletedProjects","project","selectedProjects","lastSearchParams","needToReload","projectsTotalCount","paging","total","handleSelect","handleUnselect","without_default","handleCloseClick","renderElement","find_default","ChangeProjectsForm_extends","SelectList_default","allowBulkSelection","elements","elementsTotalCount","labelAll","labelSelected","labelUnselected","SelectList","All","onSelect","onUnselect","selectedElements","withPaging","ProfileProjects","loadingMore","stopLoading","loadMore","ProfileProjects_spreadArrays","handleChangeClick","loadProjects","ProfileProjects_extends","isDefault","renderDefault","renderProjects","es","pathname","QualifierIcon_default","qualifier","ListFooter_default","count","ready","associateProjects","details_ChangeProjectsForm","ProfileRulesDeprecatedWarning","urls","qprofile","activeDeprecatedRules","ProfileRulesRowOfType","activeRulesUrl","activation","types","inactiveRulesUrl","inactiveCount","IssueTypeIcon_default","measures","ProfileRulesRowTotal","ProfileRulesSonarWayComparison","url","compareToProfile","sonarway","sonarWayMissingRules","TYPES","ProfileRules","activatedTotal","activatedByType","keyBy_default","t","val","allByType","compareToSonarWay","ProfileRules_extends","loadRules","loadProfile","resolve","loadAllRules","rules","facets","loadActivatedRules","responses","allRules","activatedRules","showProfile","getRulesCountForType","getRulesTotalForType","activateMoreUrl","copy","DocTooltip","doc","bind","activeDeprecatedRuleCount","missingRuleCount","ProfileDetails","details_ProfileRules","details_ProfileExporters","details_ProfilePermissions","details_ProfileInheritance","details_ProfileProjects","d","DocMarkdownBlock","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","open","close","content","default","document","addEventListener","removeEventListener","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1___default","childProps","overlayProps","_helpers_markdown__WEBPACK_IMPORTED_MODULE_3__","isTooltip","searchQualityProfiles","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_2__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_3__","getQualityProfile","createQualityProfile","restoreQualityProfile","getProfileProjects","getProfileInheritance","setDefaultProfile","renameProfile","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentProfile","parentQualityProfile","getQualityProfileBackupUrl","entries","encodeURIComponent","join","getQualityProfileExporterUrl","exporterKey","getImporters","importers","getExporters","getProfileChangelog","since","compareProfiles","leftKey","rightKey","associateProject","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","params","lodash_map__WEBPACK_IMPORTED_MODULE_0___default","sonar_ui_common_helpers_csv__WEBPACK_IMPORTED_MODULE_1__","deactivateRule","getFrontMatterPosition","lines","firstLine","lastLine","i","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","tag","beginning","ending","newContent","start","indexOf","end","substring","console","error","Error","module","exports","getFrontMatter","position","slice","separateFrontMatter","frontmatter","content_1","filterContent","regexBase","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","getRulesApp","searchRules","takeFacet","getRuleDetails","getRuleTags","createRule","deleteRule","updateRule","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","response","property","facet","tags","rule","status","reject","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","_components_docs_DocTooltip__WEBPACK_IMPORTED_MODULE_3__","tooltip","badge"],"mappings":"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","file":"js/324.1582644816097.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getProfilePath } from '../utils';\n\ninterface Props {\n  className?: string;\n  children?: React.ReactElement<any> | string;\n  language: string;\n  name: string;\n  organization: string | null;\n}\n\nexport default function ProfileLink({ name, language, organization, children, ...other }: Props) {\n  return (\n    <Link\n      activeClassName=\"link-no-underline\"\n      to={getProfilePath(name, language, organization)}\n      {...other}>\n      {children}\n    </Link>\n  );\n}\n","export default \"Built-in profiles are provided directly by the language analyzers and may be updated with each new analyzer version. They represent best-practice, minimum rule sets.\\n\"","export default \"This Quality Profile is built in, and cannot be updated manually. If you want to activate more rules, create a new profile that inherits from this one and add rules there.\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityProfileExporterUrl } from '../../../api/quality-profiles';\nimport { Exporter, Profile } from '../types';\n\ninterface Props {\n  exporters: Exporter[];\n  organization: string | null;\n  profile: Profile;\n}\n\nexport default class ProfileExporters extends React.PureComponent<Props> {\n  getExportUrl(exporter: Exporter) {\n    const { profile } = this.props;\n    return `${(window as any).baseUrl}${getQualityProfileExporterUrl(exporter, profile)}`;\n  }\n\n  render() {\n    const { exporters, profile } = this.props;\n    const exportersForLanguage = exporters.filter(e => e.languages.includes(profile.language));\n\n    if (exportersForLanguage.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"boxed-group quality-profile-exporters\">\n        <h2>{translate('quality_profiles.exporters')}</h2>\n        <div className=\"boxed-group-inner\">\n          <ul>\n            {exportersForLanguage.map((exporter, index) => (\n              <li\n                className={index > 0 ? 'spacer-top' : undefined}\n                data-key={exporter.key}\n                key={exporter.key}>\n                <a href={this.getExportUrl(exporter)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  {exporter.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { changeProfileParent } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onChange: () => void;\n  onClose: () => void;\n  profile: Profile;\n  profiles: Profile[];\n}\n\ninterface State {\n  loading: boolean;\n  selected: string | null;\n}\n\nexport default class ChangeParentForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    loading: false,\n    selected: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSelectChange = (option: { value: string }) => {\n    this.setState({ selected: option.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const parent = this.props.profiles.find(p => p.key === this.state.selected);\n\n    this.setState({ loading: true });\n    changeProfileParent(this.props.profile, parent)\n      .then(this.props.onChange)\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  render() {\n    const { profiles } = this.props;\n\n    const options = [\n      { label: translate('none'), value: '' },\n      ...sortBy(profiles, 'name').map(profile => ({\n        label: profile.isBuiltIn\n          ? `${profile.name} (${translate('quality_profiles.built_in')})`\n          : profile.name,\n        value: profile.key\n      }))\n    ];\n\n    const submitDisabled =\n      this.state.loading ||\n      this.state.selected == null ||\n      this.state.selected === this.props.profile.parentKey;\n\n    return (\n      <Modal\n        contentLabel={translate('quality_profiles.change_parent')}\n        onRequestClose={this.props.onClose}\n        size=\"small\">\n        <form id=\"change-profile-parent-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{translate('quality_profiles.change_parent')}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label htmlFor=\"change-profile-parent\">\n                {translate('quality_profiles.parent')} <em className=\"mandatory\">*</em>\n              </label>\n              <Select\n                clearable={false}\n                id=\"change-profile-parent\"\n                name=\"parentKey\"\n                onChange={this.handleSelectChange}\n                options={options}\n                value={\n                  this.state.selected != null\n                    ? this.state.selected\n                    : this.props.profile.parentKey || ''\n                }\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled} id=\"change-profile-parent-submit\">\n              {translate('change_verb')}\n            </SubmitButton>\n            <ResetButtonLink id=\"change-profile-parent-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport ProfileLink from '../components/ProfileLink';\n\ninterface Props {\n  className?: string;\n  depth: number;\n  displayLink?: boolean;\n  extendsBuiltIn?: boolean;\n  language: string;\n  organization: string | null;\n  profile: T.ProfileInheritanceDetails;\n  type?: string;\n}\n\nexport default function ProfileInheritanceBox(props: Props) {\n  const {\n    className,\n    depth,\n    extendsBuiltIn,\n    language,\n    organization,\n    profile,\n    displayLink = true,\n    type = 'current'\n  } = props;\n  const offset = 25 * depth;\n\n  return (\n    <tr className={className} data-test={`quality-profiles__inheritance-${type}`}>\n      <td>\n        <div style={{ paddingLeft: offset }}>\n          {displayLink ? (\n            <ProfileLink\n              className=\"text-middle\"\n              language={language}\n              name={profile.name}\n              organization={organization}>\n              {profile.name}\n            </ProfileLink>\n          ) : (\n            <span className=\"text-middle\">{profile.name}</span>\n          )}\n          {profile.isBuiltIn && <BuiltInQualityProfileBadge className=\"spacer-left\" />}\n          {extendsBuiltIn && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={translate('quality_profiles.extends_built_in')}\n            />\n          )}\n        </div>\n      </td>\n\n      <td>{translateWithParameters('quality_profile.x_active_rules', profile.activeRuleCount)}</td>\n\n      <td>\n        {profile.overridingRuleCount != null && (\n          <p>\n            {translateWithParameters(\n              'quality_profiles.x_overridden_rules',\n              profile.overridingRuleCount\n            )}\n          </p>\n        )}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileInheritance } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ChangeParentForm from './ChangeParentForm';\nimport ProfileInheritanceBox from './ProfileInheritanceBox';\n\ninterface Props {\n  organization: string | null;\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  ancestors?: T.ProfileInheritanceDetails[];\n  children?: T.ProfileInheritanceDetails[];\n  formOpen: boolean;\n  loading: boolean;\n  profile?: T.ProfileInheritanceDetails;\n}\n\nexport default class ProfileInheritance extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadData() {\n    getProfileInheritance(this.props.profile).then(\n      r => {\n        if (this.mounted) {\n          const { ancestors, children } = r;\n          ancestors.reverse();\n\n          this.setState({\n            children,\n            ancestors,\n            profile: r.profile,\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeParentClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n  };\n\n  handleParentChange = () => {\n    this.props.updateProfiles().then(\n      () => {\n        this.loadData();\n      },\n      () => {}\n    );\n    this.closeForm();\n  };\n\n  render() {\n    const { profile, profiles } = this.props;\n    const { ancestors } = this.state;\n\n    const highlightCurrent =\n      !this.state.loading &&\n      ancestors != null &&\n      this.state.children != null &&\n      (ancestors.length > 0 || this.state.children.length > 0);\n\n    const extendsBuiltIn = ancestors != null && ancestors.some(profile => profile.isBuiltIn);\n\n    return (\n      <div className=\"boxed-group quality-profile-inheritance\">\n        {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"pull-right js-change-parent\" onClick={this.handleChangeParentClick}>\n              {translate('quality_profiles.change_parent')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('quality_profiles.profile_inheritance')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {this.state.loading ? (\n            <i className=\"spinner\" />\n          ) : (\n            <table className=\"data zebra\">\n              <tbody>\n                {ancestors != null &&\n                  ancestors.map((ancestor, index) => (\n                    <ProfileInheritanceBox\n                      depth={index}\n                      key={ancestor.key}\n                      language={profile.language}\n                      organization={this.props.organization}\n                      profile={ancestor}\n                      type=\"ancestor\"\n                    />\n                  ))}\n\n                {this.state.profile != null && (\n                  <ProfileInheritanceBox\n                    className={classNames({\n                      selected: highlightCurrent\n                    })}\n                    depth={ancestors ? ancestors.length : 0}\n                    displayLink={false}\n                    extendsBuiltIn={extendsBuiltIn}\n                    language={profile.language}\n                    organization={this.props.organization}\n                    profile={this.state.profile}\n                  />\n                )}\n\n                {this.state.children != null &&\n                  this.state.children.map(child => (\n                    <ProfileInheritanceBox\n                      depth={ancestors ? ancestors.length + 1 : 0}\n                      key={child.key}\n                      language={profile.language}\n                      organization={this.props.organization}\n                      profile={child}\n                      type=\"child\"\n                    />\n                  ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n\n        {this.state.formOpen && (\n          <ChangeParentForm\n            onChange={this.handleParentChange}\n            onClose={this.closeForm}\n            profile={profile}\n            profiles={profiles.filter(p => p !== profile && p.language === profile.language)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, identity } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\nimport { Group } from './ProfilePermissions';\n\ntype Option = T.UserSelected | Group;\ntype OptionWithValue = Option & { value: string };\n\ninterface Props {\n  onChange: (option: OptionWithValue) => void;\n  onSearch: (query: string) => Promise<Option[]>;\n  selected?: Option;\n}\n\ninterface State {\n  loading: boolean;\n  query: string;\n  searchResults: Option[];\n}\n\nexport default class ProfilePermissionsFormSelect extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { loading: false, query: '', searchResults: [] };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.query);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSearch = (query: string) => {\n    this.setState({ loading: true });\n    this.props.onSearch(query).then(\n      searchResults => {\n        if (this.mounted) {\n          this.setState({ loading: false, searchResults });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleInputChange = (query: string) => {\n    this.setState({ query });\n    if (query.length > 1) {\n      this.handleSearch(query);\n    }\n  };\n\n  render() {\n    const noResultsText =\n      this.state.query.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n\n    // create a uniq string both for users and groups\n    const options = this.state.searchResults.map(r => ({ ...r, value: getStringValue(r) }));\n\n    return (\n      <Select\n        autoFocus={true}\n        className=\"Select-big\"\n        clearable={false}\n        // disable default react-select filtering\n        filterOptions={identity}\n        isLoading={this.state.loading}\n        noResultsText={noResultsText}\n        onChange={this.props.onChange}\n        onInputChange={this.handleInputChange}\n        optionRenderer={optionRenderer}\n        options={options}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selected && getStringValue(this.props.selected)}\n        valueRenderer={optionRenderer}\n      />\n    );\n  }\n}\n\nfunction isUser(option: Option): option is T.UserSelected {\n  return (option as T.UserSelected).login !== undefined;\n}\n\nfunction getStringValue(option: Option) {\n  return isUser(option) ? `user:${option.login}` : `group:${option.name}`;\n}\n\nfunction optionRenderer(option: OptionWithValue) {\n  return isUser(option) ? (\n    <>\n      <Avatar hash={option.avatar} name={option.name} size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n      <span className=\"note little-spacer-left\">{option.login}</span>\n    </>\n  ) : (\n    <>\n      <GroupIcon size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addGroup,\n  addUser,\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\nimport ProfilePermissionsFormSelect from './ProfilePermissionsFormSelect';\n\ninterface Props {\n  onClose: () => void;\n  onGroupAdd: (group: Group) => void;\n  onUserAdd: (user: T.UserSelected) => void;\n  organization?: string;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  selected?: T.UserSelected | Group;\n  submitting: boolean;\n}\n\nexport default class ProfilePermissionsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleUserAdd = (user: T.UserSelected) => {\n    const {\n      profile: { language, name },\n      organization\n    } = this.props;\n    addUser({\n      language,\n      login: user.login,\n      organization,\n      qualityProfile: name\n    }).then(() => this.props.onUserAdd(user), this.stopSubmitting);\n  };\n\n  handleGroupAdd = (group: Group) => {\n    const {\n      profile: { language, name },\n      organization\n    } = this.props;\n    addGroup({\n      group: group.name,\n      language,\n      organization,\n      qualityProfile: name\n    }).then(() => this.props.onGroupAdd(group), this.stopSubmitting);\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { selected } = this.state;\n    if (selected) {\n      this.setState({ submitting: true });\n      if ((selected as T.UserSelected).login !== undefined) {\n        this.handleUserAdd(selected as T.UserSelected);\n      } else {\n        this.handleGroupAdd(selected as Group);\n      }\n    }\n  };\n\n  handleSearch = (q: string) => {\n    const { organization, profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      organization,\n      q,\n      qualityProfile: profile.name,\n      selected: 'deselected'\n    };\n    return Promise.all([\n      searchUsers(parameters),\n      searchGroups(parameters)\n    ]).then(([usersResponse, groupsResponse]) => [\n      ...usersResponse.users,\n      ...groupsResponse.groups\n    ]);\n  };\n\n  handleValueChange = (selected: T.UserSelected | Group) => {\n    this.setState({ selected });\n  };\n\n  render() {\n    const header = translate('quality_profiles.grant_permissions_to_user_or_group');\n    const submitDisabled = !this.state.selected || this.state.submitting;\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('quality_profiles.search_description')}</label>\n              <ProfilePermissionsFormSelect\n                onChange={this.handleValueChange}\n                onSearch={this.handleSearch}\n                selected={this.state.selected}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            {this.state.submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled}>{translate('add_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, DeleteButton, ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeGroup } from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\n\ninterface Props {\n  group: Group;\n  onDelete: (group: Group) => void;\n  organization?: string;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsGroup extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { group, organization, profile } = this.props;\n\n    return removeGroup({\n      group: group.name,\n      language: profile.language,\n      organization,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(group);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('groups.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('groups.remove.confirmation')}\n          id=\"groups.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.group.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <Button className=\"button-red\" disabled={props.submitting} onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </Button>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <GroupIcon className=\"pull-left spacer-right\" size={32} />\n        <div className=\"overflow-hidden\" style={{ lineHeight: '32px' }}>\n          <strong>{group.name}</strong>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('group.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  DeleteButton,\n  ResetButtonLink,\n  SubmitButton\n} from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeUser } from '../../../api/quality-profiles';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Props {\n  onDelete: (user: T.UserSelected) => void;\n  organization?: string;\n  profile: { language: string; name: string };\n  user: T.UserSelected;\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsUser extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { organization, profile, user } = this.props;\n\n    return removeUser({\n      language: profile.language,\n      login: user.login,\n      organization,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(user);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('users.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('users.remove.confirmation')}\n          id=\"users.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.user.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <SubmitButton\n          className=\"button-red\"\n          disabled={props.submitting}\n          onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </SubmitButton>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <Avatar className=\"pull-left spacer-right\" hash={user.avatar} name={user.name} size={32} />\n        <div className=\"overflow-hidden\">\n          <strong>{user.name}</strong>\n          <div className=\"note\">{user.login}</div>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('users.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ProfilePermissionsForm from './ProfilePermissionsForm';\nimport ProfilePermissionsGroup from './ProfilePermissionsGroup';\nimport ProfilePermissionsUser from './ProfilePermissionsUser';\n\nexport interface Group {\n  name: string;\n}\n\ninterface Props {\n  organization?: string;\n  profile: Pick<Profile, 'key' | 'language' | 'name'>;\n}\n\ninterface State {\n  addUserForm: boolean;\n  groups?: Group[];\n  loading: boolean;\n  users?: T.UserSelected[];\n}\n\nexport default class ProfilePermissions extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { addUserForm: false, loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchUsersAndGroups();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.organization !== this.props.organization ||\n      prevProps.profile.key !== this.props.profile.key\n    ) {\n      this.fetchUsersAndGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsersAndGroups() {\n    this.setState({ loading: true });\n    const { organization, profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      organization,\n      qualityProfile: profile.name,\n      selected: 'selected'\n    };\n    Promise.all([searchUsers(parameters), searchGroups(parameters)]).then(\n      ([usersResponse, groupsResponse]) => {\n        if (this.mounted) {\n          this.setState({\n            groups: groupsResponse.groups,\n            loading: false,\n            users: usersResponse.users\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleAddUserButtonClick = () => {\n    this.setState({ addUserForm: true });\n  };\n\n  handleAddUserFormClose = () => {\n    if (this.mounted) {\n      this.setState({ addUserForm: false });\n    }\n  };\n\n  handleUserAdd = (addedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        users: state.users && uniqBy([...state.users, addedUser], user => user.login)\n      }));\n    }\n  };\n\n  handleUserDelete = (removedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        users: state.users && state.users.filter(user => user !== removedUser)\n      }));\n    }\n  };\n\n  handleGroupAdd = (addedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        groups: state.groups && uniqBy([...state.groups, addedGroup], group => group.name)\n      }));\n    }\n  };\n\n  handleGroupDelete = (removedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        groups: state.groups && state.groups.filter(group => group !== removedGroup)\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"boxed-group\">\n        <h2>{translate('permissions.page')}</h2>\n        <div className=\"boxed-group-inner\">\n          <p className=\"note\">{translate('quality_profiles.default_permissions')}</p>\n\n          {this.state.loading ? (\n            <div className=\"big-spacer-top\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <div className=\"big-spacer-top\">\n              {this.state.users &&\n                sortBy(this.state.users, 'name').map(user => (\n                  <ProfilePermissionsUser\n                    key={user.login}\n                    onDelete={this.handleUserDelete}\n                    organization={this.props.organization}\n                    profile={this.props.profile}\n                    user={user}\n                  />\n                ))}\n              {this.state.groups &&\n                sortBy(this.state.groups, 'name').map(group => (\n                  <ProfilePermissionsGroup\n                    group={group}\n                    key={group.name}\n                    onDelete={this.handleGroupDelete}\n                    organization={this.props.organization}\n                    profile={this.props.profile}\n                  />\n                ))}\n              <div className=\"text-right\">\n                <Button onClick={this.handleAddUserButtonClick}>\n                  {translate('quality_profiles.grant_permissions_to_more_users')}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {this.state.addUserForm && (\n          <ProfilePermissionsForm\n            onClose={this.handleAddUserFormClose}\n            onGroupAdd={this.handleGroupAdd}\n            onUserAdd={this.handleUserAdd}\n            organization={this.props.organization}\n            profile={this.props.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  associateProject,\n  dissociateProject,\n  getProfileProjects,\n  ProfileProject\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onClose: () => void;\n  organization: string | null;\n  profile: Profile;\n}\n\ninterface State {\n  needToReload: boolean;\n  lastSearchParams?: SelectListSearchParams;\n  projects: ProfileProject[];\n  projectsTotalCount?: number;\n  selectedProjects: string[];\n}\n\nexport default class ChangeProjectsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      projects: [],\n      selectedProjects: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchProjects = (searchParams: SelectListSearchParams) =>\n    getProfileProjects({\n      key: this.props.profile.key,\n      organization: this.props.organization,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const projects = more ? [...prevState.projects, ...data.results] : data.results;\n          const newSeletedProjects = data.results\n            .filter(project => project.selected)\n            .map(project => project.key);\n          const selectedProjects = more\n            ? [...prevState.selectedProjects, ...newSeletedProjects]\n            : newSeletedProjects;\n\n          return {\n            lastSearchParams: searchParams,\n            needToReload: false,\n            projects,\n            projectsTotalCount: data.paging.total,\n            selectedProjects\n          };\n        });\n      }\n    });\n\n  handleSelect = (key: string) =>\n    associateProject(this.props.profile, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: [...state.selectedProjects, key]\n        }));\n      }\n    });\n\n  handleUnselect = (key: string) =>\n    dissociateProject(this.props.profile, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: without(state.selectedProjects, key)\n        }));\n      }\n    });\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  renderElement = (key: string): React.ReactNode => {\n    const project = find(this.state.projects, { key });\n    return (\n      <div className=\"select-list-list-item\">\n        {project === undefined ? (\n          key\n        ) : (\n          <>\n            {project.name}\n            <br />\n            <span className=\"note\">{project.key}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const header = translate('projects');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\" id=\"profile-projects\">\n          <SelectList\n            allowBulkSelection={true}\n            elements={this.state.projects.map(project => project.key)}\n            elementsTotalCount={this.state.projectsTotalCount}\n            labelAll={translate('quality_gates.projects.all')}\n            labelSelected={translate('quality_gates.projects.with')}\n            labelUnselected={translate('quality_gates.projects.without')}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchProjects}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedProjects}\n            withPaging={true}\n          />\n        </div>\n\n        <div className=\"modal-foot\">\n          <a href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileProjects } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ChangeProjectsForm from './ChangeProjectsForm';\n\ninterface Props {\n  organization: string | null;\n  profile: Profile;\n}\n\ninterface State {\n  formOpen: boolean;\n  loading: boolean;\n  loadingMore: boolean;\n  page: number;\n  projects: Array<{ key: string; name: string }>;\n  total: number;\n}\n\nexport default class ProfileProjects extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true,\n    loadingMore: false,\n    page: 1,\n    projects: [],\n    total: 0\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadProjects();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadProjects();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadProjects() {\n    if (this.props.profile.isDefault) {\n      this.setState({ loading: false, projects: [] });\n      return;\n    }\n\n    this.setState({ loading: true });\n    const data = { key: this.props.profile.key, page: this.state.page };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState({\n          projects: results,\n          total: paging.total,\n          loading: false\n        });\n      }\n    }, this.stopLoading);\n  }\n\n  loadMore = () => {\n    this.setState({ loadingMore: true });\n    const data = { key: this.props.profile.key, page: this.state.page + 1 };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState(state => ({\n          projects: [...state.projects, ...results],\n          total: paging.total,\n          loadingMore: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n    this.loadProjects();\n  };\n\n  renderDefault() {\n    return (\n      <div>\n        <span className=\"badge spacer-right\">{translate('default')}</span>\n        {translate('quality_profiles.projects_for_default')}\n      </div>\n    );\n  }\n\n  renderProjects() {\n    if (this.state.loading) {\n      return <i className=\"spinner\" />;\n    }\n\n    const { projects } = this.state;\n\n    if (projects.length === 0) {\n      return <div>{translate('quality_profiles.no_projects_associated_to_profile')}</div>;\n    }\n\n    return (\n      <>\n        <ul>\n          {projects.map(project => (\n            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.key}>\n              <Link\n                className=\"link-with-icon\"\n                to={{ pathname: '/dashboard', query: { id: project.key } }}>\n                <QualifierIcon qualifier=\"TRK\" /> <span>{project.name}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <ListFooter\n          count={projects.length}\n          loadMore={this.loadMore}\n          ready={!this.state.loadingMore}\n          total={this.state.total}\n        />\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n    return (\n      <div className=\"boxed-group quality-profile-projects\">\n        {profile.actions && profile.actions.associateProjects && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"js-change-projects\" onClick={this.handleChangeClick}>\n              {translate('quality_profiles.change_projects')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('projects')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {profile.isDefault ? this.renderDefault() : this.renderProjects()}\n        </div>\n\n        {this.state.formOpen && (\n          <ChangeProjectsForm\n            onClose={this.closeForm}\n            organization={this.props.organization}\n            profile={profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDeprecatedActiveRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  activeDeprecatedRules: number;\n  organization: string | null;\n  profile: string;\n}\n\nexport default function ProfileRulesDeprecatedWarning(props: Props) {\n  return (\n    <div className=\"quality-profile-rules-deprecated clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.deprecated_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.deprecated_rules_description')}\n        />\n      </span>\n      <Link\n        className=\"pull-right\"\n        to={getDeprecatedActiveRulesUrl({ qprofile: props.profile }, props.organization)}>\n        {props.activeDeprecatedRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport IssueTypeIcon from 'sonar-ui-common/components/icons/IssueTypeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  organization: string | null;\n  qprofile: string;\n  total: number | null;\n  type: string;\n}\n\nexport default function ProfileRulesRowOfType(props: Props) {\n  const activeRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'true', types: props.type },\n    props.organization\n  );\n  const inactiveRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'false', types: props.type },\n    props.organization\n  );\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <span>\n          <IssueTypeIcon className=\"little-spacer-right\" query={props.type} />\n          {translate('issue.type', props.type, 'plural')}\n        </span>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>{formatMeasure(props.count, 'SHORT_INT', null)}</Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              {formatMeasure(inactiveCount, 'SHORT_INT', null)}\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  organization: string | null;\n  qprofile: string;\n  total: number | null;\n}\n\nexport default function ProfileRulesRowTotal(props: Props) {\n  const activeRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'true' },\n    props.organization\n  );\n  const inactiveRulesUrl = getRulesUrl(\n    { qprofile: props.qprofile, activation: 'false' },\n    props.organization\n  );\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>{translate('total')}</strong>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>\n            <strong>{formatMeasure(props.count, 'SHORT_INT', null)}</strong>\n          </Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              <strong>{formatMeasure(inactiveCount, 'SHORT_INT', null)}</strong>\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  language: string;\n  organization: string | null;\n  profile: string;\n  sonarway: string;\n  sonarWayMissingRules: number;\n}\n\nexport default function ProfileRulesSonarWayComparison(props: Props) {\n  const url = getRulesUrl(\n    {\n      qprofile: props.profile,\n      activation: 'false',\n      compareToProfile: props.sonarway,\n      languages: props.language\n    },\n    props.organization\n  );\n\n  return (\n    <div className=\"quality-profile-rules-sonarway-missing clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.sonarway_missing_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.sonarway_missing_rules_description')}\n        />\n      </span>\n      <Link className=\"pull-right\" data-test=\"rules\" to={url}>\n        {props.sonarWayMissingRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityProfile } from '../../../api/quality-profiles';\nimport { searchRules, takeFacet } from '../../../api/rules';\nimport DocTooltip from '../../../components/docs/DocTooltip';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport { Profile } from '../types';\nimport ProfileRulesDeprecatedWarning from './ProfileRulesDeprecatedWarning';\nimport ProfileRulesRowOfType from './ProfileRulesRowOfType';\nimport ProfileRulesRowTotal from './ProfileRulesRowTotal';\nimport ProfileRulesSonarWayComparison from './ProfileRulesSonarWayComparison';\n\nconst TYPES = ['BUG', 'VULNERABILITY', 'CODE_SMELL', 'SECURITY_HOTSPOT'];\n\ninterface Props {\n  organization: string | null;\n  profile: Profile;\n}\n\ninterface ByType {\n  val: string;\n  count: number | null;\n}\n\ninterface State {\n  activatedTotal: number | null;\n  activatedByType: T.Dict<ByType>;\n  allByType: T.Dict<ByType>;\n  compareToSonarWay: { profile: string; profileName: string; missingRuleCount: number } | null;\n  total: number | null;\n}\n\nexport default class ProfileRules extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    activatedTotal: null,\n    activatedByType: keyBy(\n      TYPES.map(t => ({ val: t, count: null })),\n      'val'\n    ),\n    allByType: keyBy(\n      TYPES.map(t => ({ val: t, count: null })),\n      'val'\n    ),\n    compareToSonarWay: null,\n    total: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadRules();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadRules();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadProfile() {\n    if (this.props.profile.isBuiltIn) {\n      return Promise.resolve(null);\n    }\n    return getQualityProfile({\n      compareToSonarWay: true,\n      profile: this.props.profile\n    });\n  }\n\n  loadAllRules() {\n    return searchRules({\n      languages: this.props.profile.language,\n      facets: 'types',\n      organization: this.props.organization || undefined,\n      ps: 1\n    });\n  }\n\n  loadActivatedRules() {\n    return searchRules({\n      activation: 'true',\n      facets: 'types',\n      organization: this.props.organization || undefined,\n      ps: 1,\n      qprofile: this.props.profile.key\n    });\n  }\n\n  loadRules() {\n    Promise.all([this.loadAllRules(), this.loadActivatedRules(), this.loadProfile()]).then(\n      responses => {\n        if (this.mounted) {\n          const [allRules, activatedRules, showProfile] = responses;\n          this.setState({\n            activatedTotal: activatedRules.total,\n            allByType: keyBy<ByType>(takeFacet(allRules, 'types'), 'val'),\n            activatedByType: keyBy<ByType>(takeFacet(activatedRules, 'types'), 'val'),\n            compareToSonarWay: showProfile && showProfile.compareToSonarWay,\n            total: allRules.total\n          });\n        }\n      }\n    );\n  }\n\n  getRulesCountForType(type: string) {\n    return this.state.activatedByType && this.state.activatedByType[type]\n      ? this.state.activatedByType[type].count\n      : null;\n  }\n\n  getRulesTotalForType(type: string) {\n    return this.state.allByType && this.state.allByType[type]\n      ? this.state.allByType[type].count\n      : null;\n  }\n\n  render() {\n    const { organization, profile } = this.props;\n    const { compareToSonarWay } = this.state;\n    const activateMoreUrl = getRulesUrl(\n      { qprofile: profile.key, activation: 'false' },\n      organization\n    );\n    const { actions = {} } = profile;\n\n    return (\n      <div className=\"boxed-group quality-profile-rules\">\n        <div className=\"quality-profile-rules-distribution\">\n          <table className=\"data condensed\">\n            <thead>\n              <tr>\n                <th>\n                  <h2>{translate('rules')}</h2>\n                </th>\n                <th>{translate('active')}</th>\n                <th>{translate('inactive')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <ProfileRulesRowTotal\n                count={this.state.activatedTotal}\n                organization={organization}\n                qprofile={profile.key}\n                total={this.state.total}\n              />\n              {TYPES.map(type => (\n                <ProfileRulesRowOfType\n                  count={this.getRulesCountForType(type)}\n                  key={type}\n                  organization={organization}\n                  qprofile={profile.key}\n                  total={this.getRulesTotalForType(type)}\n                  type={type}\n                />\n              ))}\n            </tbody>\n          </table>\n\n          {actions.edit && !profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <Link className=\"button js-activate-rules\" to={activateMoreUrl}>\n                {translate('quality_profiles.activate_more')}\n              </Link>\n            </div>\n          )}\n\n          {/* if a user is allowed to `copy` a profile if they are a global or organization admin */}\n          {/* this user could potentially active more rules if the profile was not built-in */}\n          {/* in such cases it's better to show the button but disable it with a tooltip */}\n          {actions.copy && profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <DocTooltip\n                doc={import(\n                  /* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/activate-rules-in-built-in-profile.md'\n                )}>\n                <Button className=\"disabled js-activate-rules\">\n                  {translate('quality_profiles.activate_more')}\n                </Button>\n              </DocTooltip>\n            </div>\n          )}\n        </div>\n        {profile.activeDeprecatedRuleCount > 0 && (\n          <ProfileRulesDeprecatedWarning\n            activeDeprecatedRules={profile.activeDeprecatedRuleCount}\n            organization={organization}\n            profile={profile.key}\n          />\n        )}\n        {compareToSonarWay != null && compareToSonarWay.missingRuleCount > 0 && (\n          <ProfileRulesSonarWayComparison\n            language={profile.language}\n            organization={organization}\n            profile={profile.key}\n            sonarWayMissingRules={compareToSonarWay.missingRuleCount}\n            sonarway={compareToSonarWay.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Exporter, Profile } from '../types';\nimport ProfileExporters from './ProfileExporters';\nimport ProfileInheritance from './ProfileInheritance';\nimport ProfilePermissions from './ProfilePermissions';\nimport ProfileProjects from './ProfileProjects';\nimport ProfileRules from './ProfileRules';\n\ninterface Props {\n  exporters: Exporter[];\n  organization: string | null;\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default function ProfileDetails(props: Props) {\n  const { organization, profile } = props;\n  return (\n    <div>\n      <div className=\"quality-profile-grid\">\n        <div className=\"quality-profile-grid-left\">\n          <ProfileRules organization={organization} profile={profile} />\n          <ProfileExporters\n            exporters={props.exporters}\n            organization={organization}\n            profile={profile}\n          />\n          {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n            <ProfilePermissions organization={organization || undefined} profile={profile} />\n          )}\n        </div>\n        <div className=\"quality-profile-grid-right\">\n          <ProfileInheritance\n            organization={organization}\n            profile={profile}\n            profiles={props.profiles}\n            updateProfiles={props.updateProfiles}\n          />\n          <ProfileProjects organization={organization} profile={profile} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from 'sonar-ui-common/helpers/csv';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Exporter, ProfileChangelogEvent } from '../apps/quality-profiles/types';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  organization: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  organization?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile({\n  compareToSonarWay,\n  profile: { key }\n}: {\n  compareToSonarWay?: boolean;\n  profile: Profile;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', { compareToSonarWay, key });\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/create', data).catch(throwGlobalError);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/restore', data).catch(throwGlobalError);\n}\n\nexport interface ProfileProject {\n  id: number;\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; paging: T.Paging; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance({\n  language,\n  name: qualityProfile,\n  organization\n}: Profile): Promise<{\n  ancestors: T.ProfileInheritanceDetails[];\n  children: T.ProfileInheritanceDetails[];\n  profile: T.ProfileInheritanceDetails;\n}> {\n  return getJSON('/api/qualityprofiles/inheritance', {\n    language,\n    qualityProfile,\n    organization\n  }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile({ language, name: qualityProfile, organization }: Profile) {\n  return post('/api/qualityprofiles/set_default', {\n    language,\n    qualityProfile,\n    organization\n  });\n}\n\nexport function renameProfile(key: string, name: string) {\n  return post('/api/qualityprofiles/rename', { key, name }).catch(throwGlobalError);\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName }).catch(throwGlobalError);\n}\n\nexport function deleteProfile({ language, name: qualityProfile, organization }: Profile) {\n  return post('/api/qualityprofiles/delete', { language, qualityProfile, organization }).catch(\n    throwGlobalError\n  );\n}\n\nexport function changeProfileParent(\n  { language, name: qualityProfile, organization }: Profile,\n  parentProfile?: Profile\n) {\n  return post('/api/qualityprofiles/change_parent', {\n    language,\n    qualityProfile,\n    organization,\n    parentQualityProfile: parentProfile ? parentProfile.name : undefined\n  }).catch(throwGlobalError);\n}\n\nexport function getQualityProfileBackupUrl({\n  language,\n  name: qualityProfile,\n  organization\n}: Profile) {\n  const queryParams = Object.entries({ language, qualityProfile, organization })\n    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    .join('&');\n  return `/api/qualityprofiles/backup?${queryParams}`;\n}\n\nexport function getQualityProfileExporterUrl(\n  { key: exporterKey }: Exporter,\n  { language, name: qualityProfile, organization }: Profile\n) {\n  const queryParams = Object.entries({ exporterKey, language, qualityProfile, organization })\n    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    .join('&');\n  return `/api/qualityprofiles/export?${queryParams}`;\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(\n  since: any,\n  to: any,\n  { language, name: qualityProfile, organization }: Profile,\n  page?: number\n): Promise<{\n  events: ProfileChangelogEvent[];\n  p: number;\n  ps: number;\n  total: number;\n}> {\n  return getJSON('/api/qualityprofiles/changelog', {\n    since,\n    to,\n    language,\n    qualityProfile,\n    organization,\n    p: page\n  });\n}\n\nexport interface CompareResponse {\n  left: { name: string };\n  right: { name: string };\n  inLeft: Array<{ key: string; name: string; severity: string }>;\n  inRight: Array<{ key: string; name: string; severity: string }>;\n  modified: Array<{\n    key: string;\n    name: string;\n    left: { params: T.Dict<string>; severity: string };\n    right: { params: T.Dict<string>; severity: string };\n  }>;\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<CompareResponse> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject(\n  { language, name: qualityProfile, organization }: Profile,\n  project: string\n) {\n  return post('/api/qualityprofiles/add_project', {\n    language,\n    qualityProfile,\n    organization,\n    project\n  }).catch(throwGlobalError);\n}\n\nexport function dissociateProject(\n  { language, name: qualityProfile, organization }: Profile,\n  project: string\n) {\n  return post('/api/qualityprofiles/remove_project', {\n    language,\n    qualityProfile,\n    organization,\n    project\n  }).catch(throwGlobalError);\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\ninterface SearchUsersResponse {\n  users: T.UserSelected[];\n  paging: T.Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: T.Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  organization?: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  organization: string | undefined;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  organization: string | undefined;\n  params?: T.Dict<string>;\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: {\n  key: string;\n  organization: string | undefined;\n  rule: string;\n}) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../components/docs/DocTooltip';\n\ninterface Props {\n  className?: string;\n  tooltip?: boolean;\n}\n\nexport default function BuiltInQualityProfileBadge({ className, tooltip = true }: Props) {\n  const badge = (\n    <div className={classNames('badge badge-info', className)}>\n      {translate('quality_profiles.built_in')}\n    </div>\n  );\n\n  if (tooltip) {\n    return (\n      <DocTooltip\n        doc={import(\n          /* webpackMode: \"eager\" */ 'Docs/tooltips/quality-profiles/built-in-quality-profile.md'\n        )}>\n        {badge}\n      </DocTooltip>\n    );\n  }\n  return badge;\n}\n"],"sourceRoot":""}