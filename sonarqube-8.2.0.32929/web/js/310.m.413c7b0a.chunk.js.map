{"version":3,"sources":["webpack:///./src/main/js/apps/background-tasks/background-tasks.css?4904","webpack:///./src/main/js/apps/background-tasks/background-tasks.css","webpack:///./src/main/js/apps/background-tasks/utils.ts","webpack:///./src/main/js/apps/background-tasks/components/Footer.tsx","webpack:///./src/main/js/apps/background-tasks/components/NoWorkersSupportPopup.tsx","webpack:///./src/main/js/apps/background-tasks/components/WorkersForm.tsx","webpack:///./src/main/js/apps/background-tasks/components/Workers.tsx","webpack:///./src/main/js/apps/background-tasks/components/Header.tsx","webpack:///./src/main/js/apps/background-tasks/components/CurrentsFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/DateFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatusFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/TypesFilter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Search.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingCount.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatPendingTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/StatStillFailing.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stats.tsx","webpack:///./src/main/js/apps/background-tasks/components/ScannerContext.tsx","webpack:///./src/main/js/apps/background-tasks/components/Stacktrace.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskActions.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskType.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskComponent.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDate.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskDay.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskExecutionTime.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskId.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskStatus.tsx","webpack:///./src/main/js/apps/background-tasks/components/TaskSubmitter.tsx","webpack:///./src/main/js/apps/background-tasks/components/Task.tsx","webpack:///./src/main/js/apps/background-tasks/components/Tasks.tsx","webpack:///./src/main/js/apps/background-tasks/components/BackgroundTasksApp.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/controls/DateInput.tsx","webpack:///./src/main/js/components/controls/DayPicker.css?dc71","webpack:///./src/main/js/components/controls/DayPicker.css","webpack:///./src/main/js/components/controls/styles.css?00e9","webpack:///./src/main/js/components/controls/styles.css","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/components/controls/DateRangeInput.tsx","webpack:///./src/main/js/components/shared/Organization.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","updateTask","tasks","newTask","map","task","id","ONE_SECOND","ONE_MINUTE","ONE_HOUR","format","int","suffix","concat","LIMIT","Footer","_ref","length","index_js_exposed","className","Object","l10n","NoWorkersSupportPopup","href","rel","target","MAX_WORKERS","WorkersForm_WorkersForm","[object Object]","props","super","this","mounted","handleClose","onClose","handleWorkerCountChange","option","setState","newWorkerCount","value","handleSubmit","event","preventDefault","submitting","state","ce","then","workerCount","label","String","Modal_default","a","contentLabel","onRequestClose","onSubmit","Select_default","clearable","onChange","searchable","Alert","variant","buttons","disabled","onClick","Workers_Workers","canSetWorkerCount","formOpen","loading","noSupportPopup","loadWorkers","closeForm","handleChangeClick","handleHelpClick","stopPropagation","toggleNoSupportPopup","show","_this$state","Tooltip_default","overlay","AlertWarnIcon_default","fill","HelpTooltip_default","Header","component","react_router_es","to","pathname","CurrentsFilter_CurrentsFilter","handleChange","newValue","constants","ONLY_CURRENTS","ALL","checked","Checkbox_default","onCheck","DateFilter_DateFilter","handleDateRangeChange","from","minSubmittedAt","maxExecutedAt","dateRange","DateRangeInput","StatusFilter_StatusFilter","ALL_EXCEPT_PENDING","PENDING","IN_PROGRESS","SUCCESS","FAILED","CANCELED","TypesFilter_TypesFilter","_this$props","types","t","allOptions","Search_Search","handleStatusChange","status","onFilterUpdate","handleTypeChange","taskType","handleCurrentsChange","currents","handleDateChange","date","handleQueryChange","query","handleReset","SearchBox_default","placeholder","_this$props2","renderSearchBox","onReload","components_StatPendingCount","es","isSystemAdmin","rootReducer","canAdmin","onCancelAllPending","pendingCount","ConfirmButton_default","cancelButtonText","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","_ref2","color","theme","red","MIN_PENDING_TIME_THRESHOLD","StatPendingTime","pendingTime","measures","StatStillFailing","failingCount","onShowFailing","Stats","_objectWithoutProperties","ScannerContext_ScannerContext","handleCloseClick","loadScannerContext","scannerContext","size","componentName","type","Stacktrace_Stacktrace","loadStacktrace","stacktrace","errorStacktrace","errorMessage","AnalysisWarningsModal","lazyLoad","e","bind","TaskActions_TaskActions","cancelTaskOpen","scannerContextOpen","stacktraceOpen","warningsOpen","handleFilterClick","onFilterTask","handleCancelTask","onCancelTask","handleCancelClick","handleShowScannerContextClick","closeCancelTask","closeScannerContext","handleShowStacktraceClick","closeStacktrace","handleShowWarningsClick","closeWarnings","canFilter","canCancel","canShowStacktrace","canShowWarnings","warningCount","hasScannerContext","ActionsDropdown_default","ActionsDropdown","destructive","ConfirmModal_default","header","taskId","TaskType","TaskComponent","componentKey","branch","BranchIcon_default","pullRequest","PullRequestIcon_default","componentQualifier","QualifierIcon_default","qualifier","organization","Organization","organizationKey","getTaskComponentUrl","title","style","marginLeft","marginRight","pullRequestTitle","urls","TaskDate","baseDate","parsedDate","dates","parsedBaseDate","diff","difference_in_days","TimeFormatter","long","TaskDay","submittedAt","prevSubmittedAt","shouldDisplay","is_same_day","DateFormatter","TaskExecutionTime","ms","seconds","Math","floor","minutes","hours","formatDuration","TaskId","TaskStatus","inner","PendingIcon_default","TaskSubmitter","submitter","Task","previousTask","submitterLogin","startedAt","executedAt","executionTimeMs","Tasks","classnames","new-loading","index","key","BackgroundTasksApp_BackgroundTasksApp","stopLoading","loadTasks","parameters","filters","arguments","join","onlyCurrents","q","mapFiltersToParameters","location","componentId","Promise","all","_slicedToArray","organizations","uniq_default","filter","o","fetchOrganizations","failing","pending","handleFilterUpdate","nextState","nextQuery","_objectSpread","keys","forEach","router","nextTask","handleFilterTask","handleShowFailing","handleCancelAllPending","loadTasksDebounced","debounce_default","prevProps","helpers_query","Suggestions","suggestions","index_module","defer","mapDispatchToProps","rootActions","__webpack_exports__","d","react__WEBPACK_IMPORTED_MODULE_0__","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","longFormatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","formatterOption","year","month","day","children","assign","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","DayPicker","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_14__","DateInput","react__WEBPACK_IMPORTED_MODULE_6__","focus","input","openCalendar","handleResetClick","closeCalendar","currentMonth","Date","lastHovered","open","handleDayClick","modifiers","handleDayMouseEnter","handleCurrentMonthChange","date_fns_set_month__WEBPACK_IMPORTED_MODULE_3__","handleCurrentYearChange","date_fns_set_year__WEBPACK_IMPORTED_MODULE_4__","handlePreviousMonthClick","date_fns_sub_months__WEBPACK_IMPORTED_MODULE_5__","handleNextMonthClick","date_fns_add_months__WEBPACK_IMPORTED_MODULE_2__","highlightFrom","highlightTo","minDate","after","maxDate","months","lodash_range__WEBPACK_IMPORTED_MODULE_0___default","years","getFullYear","selectedDays","lastHoveredOrValue","highlighted","weekdaysLong","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_15__","weekdaysShort","sonar_ui_common_components_controls_OutsideClickHandler__WEBPACK_IMPORTED_MODULE_9___default","onClickOutside","classnames__WEBPACK_IMPORTED_MODULE_1__","InputWrapper","inputClassName","is-filled","innerRef","node","name","onFocus","readOnly","sonar_ui_common_components_icons_CalendarIcon__WEBPACK_IMPORTED_MODULE_11___default","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_8__","iconProps","sonar_ui_common_components_icons_ChevronLeftIcon__WEBPACK_IMPORTED_MODULE_12___default","sonar_ui_common_components_controls_Select__WEBPACK_IMPORTED_MODULE_10___default","getMonth","sonar_ui_common_components_icons_ChevronRightIcon__WEBPACK_IMPORTED_MODULE_13___default","captionElement","NullComponent","disabledDays","before","firstDayOfWeek","navbarElement","onDayClick","onDayMouseEnter","react_intl__WEBPACK_IMPORTED_MODULE_7__","_ref3","intl","other","formattedValue","formatDate","ref","getAnalysisStatus","getActivity","getStatus","getTask","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","catch","additionalFields","r","taskTypes","count","hour","minute","second","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","_DateInput__WEBPACK_IMPORTED_MODULE_3__","handleFromChange","setTimeout","toDateInput","handleToChange","data-test","element","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","_ui_OrganizationLink__WEBPACK_IMPORTED_MODULE_3__","_props$link","link","shouldBeDisplayed","linkClassName","ownProps"],"mappings":"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","file":"js/310.m.413c7b0a.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./background-tasks.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".bt-search-form{display:flex;align-items:flex-end}.bt-search-form>li+li{margin-left:16px}.bt-search-form-label{margin-bottom:4px}.bt-search-form-field{padding:4px 0}.bt-search-form-large{flex:1}.bt-workers-warning-icon{margin-top:5px}.emphasised-measure{font-size:24px;font-weight:300}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { ALL_TYPES, CURRENTS, STATUSES } from './constants';\n\nexport interface Query {\n  currents: string;\n  maxExecutedAt?: Date;\n  minSubmittedAt?: Date;\n  query: string;\n  status: string;\n  taskType: string;\n}\n\nexport function updateTask(tasks: T.Task[], newTask: T.Task) {\n  return tasks.map(task => (task.id === newTask.id ? newTask : task));\n}\n\nexport function mapFiltersToParameters(filters: Partial<Query> = {}) {\n  const parameters: any = {};\n\n  if (filters.status === STATUSES.ALL) {\n    parameters.status = [\n      STATUSES.PENDING,\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else if (filters.status === STATUSES.ALL_EXCEPT_PENDING) {\n    parameters.status = [\n      STATUSES.IN_PROGRESS,\n      STATUSES.SUCCESS,\n      STATUSES.FAILED,\n      STATUSES.CANCELED\n    ].join();\n  } else {\n    parameters.status = filters.status;\n  }\n\n  if (filters.taskType !== ALL_TYPES) {\n    parameters.type = filters.taskType;\n  }\n\n  if (filters.currents !== CURRENTS.ALL) {\n    parameters.onlyCurrents = true;\n  }\n\n  if (filters.minSubmittedAt) {\n    parameters.minSubmittedAt = toShortNotSoISOString(filters.minSubmittedAt);\n  }\n\n  if (filters.maxExecutedAt) {\n    parameters.maxExecutedAt = toShortNotSoISOString(filters.maxExecutedAt);\n  }\n\n  if (filters.query) {\n    parameters.q = filters.query;\n  }\n\n  return parameters;\n}\n\nconst ONE_SECOND = 1000;\nconst ONE_MINUTE = 60 * ONE_SECOND;\nconst ONE_HOUR = 60 * ONE_MINUTE;\n\nfunction format(int: number, suffix: string) {\n  return `${int}${suffix}`;\n}\n\nexport function formatDuration(value: number | undefined) {\n  if (!value) {\n    return '';\n  }\n  if (value < ONE_SECOND) {\n    return format(value, 'ms');\n  } else if (value < ONE_SECOND * 10) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    const ms = value - seconds * ONE_SECOND;\n    return seconds + '.' + format(ms, 's');\n  } else if (value < ONE_MINUTE) {\n    const seconds = Math.floor(value / ONE_SECOND);\n    return format(seconds, 's');\n  } else if (value < ONE_MINUTE * 10) {\n    const minutes = Math.floor(value / ONE_MINUTE);\n    const seconds = Math.floor((value - minutes * ONE_MINUTE) / ONE_SECOND);\n    return format(minutes, 'min') + ' ' + format(seconds, 's');\n  }\n  const hours = Math.floor(value / ONE_HOUR);\n  const minutes = Math.floor((value - hours * ONE_HOUR) / ONE_MINUTE);\n  return format(hours, 'h') + ' ' + format(minutes, 'min');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nconst LIMIT = 1000;\n\ninterface Props {\n  tasks: T.Task[];\n}\n\nexport default function Footer({ tasks }: Props) {\n  if (tasks.length < LIMIT) {\n    return null;\n  }\n\n  return (\n    <footer className=\"spacer-top note text-center\">\n      {translateWithParameters('max_results_reached', LIMIT)}\n    </footer>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function NoWorkersSupportPopup() {\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        <strong>{translate('background_tasks.add_more_workers')}</strong>\n      </p>\n      <p className=\"big-spacer-bottom markdown\">\n        {translate('background_tasks.add_more_workers.text')}\n      </p>\n      <p>\n        <a\n          href=\"https://redirect.sonarsource.com/editions/enterprise.html\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('learn_more')}\n        </a>\n      </p>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setWorkerCount } from '../../../api/ce';\n\nconst MAX_WORKERS = 10;\n\ninterface Props {\n  onClose: (newWorkerCount?: number) => void;\n  workerCount: number;\n}\n\ninterface State {\n  newWorkerCount: number;\n  submitting: boolean;\n}\n\nexport default class WorkersForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newWorkerCount: props.workerCount,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  handleWorkerCountChange = (option: { value: number }) =>\n    this.setState({ newWorkerCount: option.value });\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const { newWorkerCount } = this.state;\n    setWorkerCount(newWorkerCount).then(\n      () => {\n        if (this.mounted) {\n          this.props.onClose(newWorkerCount);\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ submitting: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const options = [];\n    for (let i = 1; i <= MAX_WORKERS; i++) {\n      options.push({ label: String(i), value: i });\n    }\n\n    return (\n      <Modal\n        contentLabel={translate('background_tasks.change_number_of_workers')}\n        onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{translate('background_tasks.change_number_of_workers')}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <Select\n              className=\"input-tiny spacer-top\"\n              clearable={false}\n              onChange={this.handleWorkerCountChange}\n              options={options}\n              searchable={false}\n              value={this.state.newWorkerCount}\n            />\n            <Alert className=\"big-spacer-top\" variant=\"info\">\n              {translate('background_tasks.change_number_of_workers.hint')}\n            </Alert>\n          </div>\n          <footer className=\"modal-foot\">\n            <div>\n              {this.state.submitting && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={this.state.submitting}>{translate('save')}</SubmitButton>\n              <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n            </div>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { EditButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertWarnIcon from 'sonar-ui-common/components/icons/AlertWarnIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getWorkers } from '../../../api/ce';\nimport NoWorkersSupportPopup from './NoWorkersSupportPopup';\nimport WorkersForm from './WorkersForm';\n\ninterface State {\n  canSetWorkerCount: boolean;\n  formOpen: boolean;\n  loading: boolean;\n  noSupportPopup: boolean;\n  workerCount: number;\n}\n\nexport default class Workers extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    canSetWorkerCount: false,\n    formOpen: false,\n    loading: true,\n    noSupportPopup: false,\n    workerCount: 1\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadWorkers();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadWorkers = () => {\n    this.setState({ loading: true });\n    getWorkers().then(\n      ({ canSetWorkerCount, value }) => {\n        if (this.mounted) {\n          this.setState({\n            canSetWorkerCount,\n            loading: false,\n            workerCount: value\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  closeForm = (newWorkerCount?: number) =>\n    newWorkerCount\n      ? this.setState({ formOpen: false, workerCount: newWorkerCount })\n      : this.setState({ formOpen: false });\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  handleHelpClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleNoSupportPopup();\n  };\n\n  toggleNoSupportPopup = (show?: boolean) => {\n    if (show !== undefined) {\n      this.setState({ noSupportPopup: show });\n    } else {\n      this.setState(state => ({ noSupportPopup: !state.noSupportPopup }));\n    }\n  };\n\n  render() {\n    const { canSetWorkerCount, formOpen, loading, workerCount } = this.state;\n\n    return (\n      <div className=\"display-flex-center\">\n        {!loading && workerCount > 1 && (\n          <Tooltip overlay={translate('background_tasks.number_of_workers.warning')}>\n            <span className=\"display-inline-flex-center little-spacer-right\">\n              <AlertWarnIcon fill=\"#d3d3d3\" />\n            </span>\n          </Tooltip>\n        )}\n\n        <span className=\"text-middle\">\n          {translate('background_tasks.number_of_workers')}\n\n          {loading ? (\n            <i className=\"spinner little-spacer-left\" />\n          ) : (\n            <strong className=\"little-spacer-left\">{workerCount}</strong>\n          )}\n        </span>\n\n        {!loading && canSetWorkerCount && (\n          <Tooltip overlay={translate('background_tasks.change_number_of_workers')}>\n            <EditButton\n              className=\"js-edit button-small spacer-left\"\n              onClick={this.handleChangeClick}\n            />\n          </Tooltip>\n        )}\n\n        {!loading && !canSetWorkerCount && (\n          <HelpTooltip className=\"spacer-left\" overlay={<NoWorkersSupportPopup />} />\n        )}\n\n        {formOpen && <WorkersForm onClose={this.closeForm} workerCount={this.state.workerCount} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Workers from './Workers';\n\ninterface Props {\n  component?: any;\n}\n\nexport default function Header(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('background_tasks.page')}</h1>\n      {!props.component && (\n        <div className=\"page-actions\">\n          <Workers />\n        </div>\n      )}\n      <p className=\"page-description\">\n        {translate('background_tasks.page.description')}\n        <Link\n          className=\"spacer-left\"\n          target=\"_blank\"\n          to={{ pathname: '/documentation/analysis/background-tasks/' }}>\n          {translate('learn_more')}\n        </Link>\n      </p>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { CURRENTS } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value: string) => void;\n}\n\nexport default class CurrentsFilter extends React.PureComponent<Props> {\n  handleChange = (value: boolean) => {\n    const newValue = value ? CURRENTS.ONLY_CURRENTS : CURRENTS.ALL;\n    this.props.onChange(newValue);\n  };\n\n  render() {\n    const checked = this.props.value === CURRENTS.ONLY_CURRENTS;\n    return (\n      <div className=\"bt-search-form-field\">\n        <Checkbox checked={checked} onCheck={this.handleChange}>\n          <span className=\"little-spacer-left\">{translate('yes')}</span>\n        </Checkbox>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DageRangeInput from '../../../components/controls/DateRangeInput';\n\ninterface Props {\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  onChange: (x: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => void;\n}\n\nexport default class DateFilter extends React.PureComponent<Props> {\n  handleDateRangeChange = ({ from, to }: { from?: Date; to?: Date }) => {\n    this.props.onChange({ minSubmittedAt: from, maxExecutedAt: to });\n  };\n\n  render() {\n    const dateRange = { from: this.props.minSubmittedAt, to: this.props.maxExecutedAt };\n    return (\n      <div className=\"nowrap\">\n        <DageRangeInput onChange={this.handleDateRangeChange} value={dateRange} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  value?: string;\n  onChange: (value?: string) => void;\n}\n\nexport default class StatusFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      { value: STATUSES.ALL, label: translate('background_task.status.ALL') },\n      {\n        value: STATUSES.ALL_EXCEPT_PENDING,\n        label: translate('background_task.status.ALL_EXCEPT_PENDING')\n      },\n      { value: STATUSES.PENDING, label: translate('background_task.status.PENDING') },\n      { value: STATUSES.IN_PROGRESS, label: translate('background_task.status.IN_PROGRESS') },\n      { value: STATUSES.SUCCESS, label: translate('background_task.status.SUCCESS') },\n      { value: STATUSES.FAILED, label: translate('background_task.status.FAILED') },\n      { value: STATUSES.CANCELED, label: translate('background_task.status.CANCELED') }\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={options}\n        searchable={false}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALL_TYPES } from '../constants';\n\ninterface Props {\n  value: string;\n  onChange: Function;\n  types: string[];\n}\n\nexport default class TypesFilter extends React.PureComponent<Props> {\n  handleChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value, types } = this.props;\n    const options = types.map(t => {\n      return {\n        value: t,\n        label: translate('background_task.type', t)\n      };\n    });\n\n    const allOptions = [\n      { value: ALL_TYPES, label: translate('background_task.type.ALL') },\n      ...options\n    ];\n\n    return (\n      <Select\n        className=\"input-medium\"\n        clearable={false}\n        onChange={this.handleChange}\n        options={allOptions}\n        searchable={false}\n        value={value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DEFAULT_FILTERS } from '../constants';\nimport { Query } from '../utils';\nimport CurrentsFilter from './CurrentsFilter';\nimport DateFilter from './DateFilter';\nimport StatusFilter from './StatusFilter';\nimport TypesFilter from './TypesFilter';\n\ninterface Props {\n  component?: unknown;\n  currents: string;\n  loading: boolean;\n  onFilterUpdate: (changes: Partial<Query>) => void;\n  onReload: () => void;\n  query: string;\n  status: string;\n  taskType: string;\n  maxExecutedAt: Date | undefined;\n  minSubmittedAt: Date | undefined;\n  types: string[];\n}\n\nexport default class Search extends React.PureComponent<Props> {\n  handleStatusChange = (status: string) => {\n    this.props.onFilterUpdate({ status });\n  };\n\n  handleTypeChange = (taskType: string) => {\n    this.props.onFilterUpdate({ taskType });\n  };\n\n  handleCurrentsChange = (currents: string) => {\n    this.props.onFilterUpdate({ currents });\n  };\n\n  handleDateChange = (date: { maxExecutedAt?: Date; minSubmittedAt?: Date }) => {\n    this.props.onFilterUpdate(date);\n  };\n\n  handleQueryChange = (query: string) => {\n    this.props.onFilterUpdate({ query });\n  };\n\n  handleReset = () => {\n    this.props.onFilterUpdate(DEFAULT_FILTERS);\n  };\n\n  renderSearchBox() {\n    const { component, query } = this.props;\n\n    if (component) {\n      // do not render search form on the project-level page\n      return null;\n    }\n\n    return (\n      <li className=\"bt-search-form-large\">\n        <SearchBox\n          onChange={this.handleQueryChange}\n          placeholder={translate('background_tasks.search_by_task_or_component')}\n          value={query}\n        />\n      </li>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      component,\n      types,\n      status,\n      taskType,\n      currents,\n      minSubmittedAt,\n      maxExecutedAt\n    } = this.props;\n\n    return (\n      <section className=\"big-spacer-top big-spacer-bottom\">\n        <ul className=\"bt-search-form\">\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('status')}</h6>\n            <StatusFilter onChange={this.handleStatusChange} value={status} />\n          </li>\n          {types.length > 1 && (\n            <li>\n              <h6 className=\"bt-search-form-label\">{translate('type')}</h6>\n              <TypesFilter onChange={this.handleTypeChange} types={types} value={taskType} />\n            </li>\n          )}\n          {!component && (\n            <li>\n              <h6 className=\"bt-search-form-label\">\n                {translate('background_tasks.currents_filter.ONLY_CURRENTS')}\n              </h6>\n              <CurrentsFilter onChange={this.handleCurrentsChange} value={currents} />\n            </li>\n          )}\n          <li>\n            <h6 className=\"bt-search-form-label\">{translate('date')}</h6>\n            <DateFilter\n              maxExecutedAt={maxExecutedAt}\n              minSubmittedAt={minSubmittedAt}\n              onChange={this.handleDateChange}\n            />\n          </li>\n\n          {this.renderSearchBox()}\n\n          <li className=\"nowrap\">\n            <Button className=\"js-reload\" disabled={loading} onClick={this.props.onReload}>\n              {translate('reload')}\n            </Button>{' '}\n            <Button disabled={loading} onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          </li>\n        </ul>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getAppState, Store } from '../../../store/rootReducer';\n\nexport interface Props {\n  isSystemAdmin?: boolean;\n  onCancelAllPending: () => void;\n  pendingCount?: number;\n}\n\nexport function StatPendingCount({ isSystemAdmin, onCancelAllPending, pendingCount }: Props) {\n  if (pendingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span>\n      <span className=\"emphasised-measure\">{pendingCount}</span>\n      <span className=\"little-spacer-left display-inline-flex-center\">\n        {translate('background_tasks.pending')}\n        {isSystemAdmin && pendingCount > 0 && (\n          <ConfirmButton\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_all_tasks.submit')}\n            isDestructive={true}\n            modalBody={translate('background_tasks.cancel_all_tasks.text')}\n            modalHeader={translate('background_tasks.cancel_all_tasks')}\n            onConfirm={onCancelAllPending}>\n            {({ onClick }) => (\n              <Tooltip overlay={translate('background_tasks.cancel_all_tasks')}>\n                <ClearButton className=\"little-spacer-left\" color={colors.red} onClick={onClick} />\n              </Tooltip>\n            )}\n          </ConfirmButton>\n        )}\n      </span>\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  isSystemAdmin: getAppState(state).canAdmin\n});\n\nexport default connect(mapStateToProps)(StatPendingCount);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\n// Do not display the pending time for values smaller than this threshold (in ms)\nconst MIN_PENDING_TIME_THRESHOLD = 1000;\n\nexport interface Props {\n  className?: string;\n  component?: Pick<T.Component, 'key'>;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function StatPendingTime({ className, pendingCount, pendingTime }: Props) {\n  if (!pendingTime || !pendingCount || pendingTime < MIN_PENDING_TIME_THRESHOLD) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <span className=\"emphasised-measure\">{formatMeasure(pendingTime, 'MILLISEC')}</span>\n      <span className=\"little-spacer-left\">{translate('background_tasks.pending_time')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.pending_time.description')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  failingCount?: number;\n  onShowFailing: () => void;\n}\n\nexport default function StatStillFailing({ className, failingCount, onShowFailing }: Props) {\n  if (failingCount === undefined) {\n    return null;\n  }\n\n  return (\n    <span className={className}>\n      {failingCount > 0 ? (\n        <ButtonLink className=\"emphasised-measure text-baseline\" onClick={onShowFailing}>\n          {failingCount}\n        </ButtonLink>\n      ) : (\n        <span className=\"emphasised-measure\">{failingCount}</span>\n      )}\n      <span className=\"little-spacer-left\">{translate('background_tasks.failures')}</span>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={translate('background_tasks.failing_count')}\n      />\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport StatPendingCount from './StatPendingCount';\nimport StatPendingTime from './StatPendingTime';\nimport StatStillFailing from './StatStillFailing';\n\nexport interface Props {\n  component?: Pick<T.Component, 'key'>;\n  failingCount?: number;\n  onCancelAllPending: () => void;\n  onShowFailing: () => void;\n  pendingCount?: number;\n  pendingTime?: number;\n}\n\nexport default function Stats({ component, pendingCount, pendingTime, ...props }: Props) {\n  return (\n    <section className=\"big-spacer-top big-spacer-bottom\">\n      <StatPendingCount onCancelAllPending={props.onCancelAllPending} pendingCount={pendingCount} />\n      {!component && (\n        <StatPendingTime\n          className=\"huge-spacer-left\"\n          pendingCount={pendingCount}\n          pendingTime={pendingTime}\n        />\n      )}\n      {!component && (\n        <StatStillFailing\n          className=\"huge-spacer-left\"\n          failingCount={props.failingCount}\n          onShowFailing={props.onShowFailing}\n        />\n      )}\n    </section>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'id' | 'type'>;\n}\n\ninterface State {\n  scannerContext?: string;\n}\n\nexport default class ScannerContext extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadScannerContext();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadScannerContext() {\n    getTask(this.props.task.id, ['scannerContext']).then(task => {\n      if (this.mounted) {\n        this.setState({ scannerContext: task.scannerContext });\n      }\n    });\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { scannerContext } = this.state;\n\n    return (\n      <Modal contentLabel=\"scanner context\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.scanner_context')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {scannerContext != null ? (\n            <pre className=\"js-task-scanner-context\">{scannerContext}</pre>\n          ) : (\n            <i className=\"spinner\" />\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getTask } from '../../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  task: Pick<T.Task, 'componentName' | 'errorMessage' | 'id' | 'type'>;\n}\n\ninterface State {\n  loading: boolean;\n  stacktrace?: string;\n}\n\nexport default class Stacktrace extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadStacktrace();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadStacktrace() {\n    getTask(this.props.task.id, ['stacktrace']).then(\n      task => {\n        if (this.mounted) {\n          this.setState({ loading: false, stacktrace: task.errorStacktrace });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  render() {\n    const { task } = this.props;\n    const { loading, stacktrace } = this.state;\n\n    return (\n      <Modal contentLabel=\"stacktrace\" onRequestClose={this.props.onClose} size=\"large\">\n        <div className=\"modal-head\">\n          <h2>\n            {translate('background_tasks.error_stacktrace')}\n            {': '}\n            {task.componentName}\n            {' ['}\n            {translate('background_task.type', task.type)}\n            {']'}\n          </h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {loading ? (\n            <i className=\"spinner\" />\n          ) : stacktrace ? (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_stacktrace')}</h4>\n              <pre className=\"js-task-stacktrace\">{stacktrace}</pre>\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"spacer-bottom\">{translate('background_tasks.error_message')}</h4>\n              <pre className=\"js-task-error-message\">{task.errorMessage}</pre>\n            </div>\n          )}\n        </div>\n\n        <div className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\nimport ScannerContext from './ScannerContext';\nimport Stacktrace from './Stacktrace';\n\nconst AnalysisWarningsModal = lazyLoad(\n  () => import('../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n}\n\ninterface State {\n  cancelTaskOpen: boolean;\n  scannerContextOpen: boolean;\n  stacktraceOpen: boolean;\n  warningsOpen: boolean;\n}\n\nexport default class TaskActions extends React.PureComponent<Props, State> {\n  state: State = {\n    cancelTaskOpen: false,\n    scannerContextOpen: false,\n    stacktraceOpen: false,\n    warningsOpen: false\n  };\n\n  handleFilterClick = () => {\n    this.props.onFilterTask(this.props.task);\n  };\n\n  handleCancelTask = () => {\n    return this.props.onCancelTask(this.props.task);\n  };\n\n  handleCancelClick = () => {\n    this.setState({ cancelTaskOpen: true });\n  };\n\n  handleShowScannerContextClick = () => {\n    this.setState({ scannerContextOpen: true });\n  };\n\n  closeCancelTask = () => {\n    this.setState({ cancelTaskOpen: false });\n  };\n\n  closeScannerContext = () => {\n    this.setState({ scannerContextOpen: false });\n  };\n\n  handleShowStacktraceClick = () => {\n    this.setState({ stacktraceOpen: true });\n  };\n\n  closeStacktrace = () => {\n    this.setState({ stacktraceOpen: false });\n  };\n\n  handleShowWarningsClick = () => {\n    this.setState({ warningsOpen: true });\n  };\n\n  closeWarnings = () => {\n    this.setState({ warningsOpen: false });\n  };\n\n  render() {\n    const { component, task } = this.props;\n\n    const canFilter = component === undefined;\n    const canCancel = task.status === STATUSES.PENDING;\n    const canShowStacktrace = task.errorMessage !== undefined;\n    const canShowWarnings = task.warningCount !== undefined && task.warningCount > 0;\n    const hasActions =\n      canFilter || canCancel || task.hasScannerContext || canShowStacktrace || canShowWarnings;\n\n    if (!hasActions) {\n      return <td>&nbsp;</td>;\n    }\n\n    return (\n      <td className=\"thin nowrap\">\n        <ActionsDropdown className=\"js-task-action\">\n          {canFilter && task.componentName && (\n            <ActionsDropdownItem className=\"js-task-filter\" onClick={this.handleFilterClick}>\n              {translateWithParameters(\n                'background_tasks.filter_by_component_x',\n                task.componentName\n              )}\n            </ActionsDropdownItem>\n          )}\n          {canCancel && (\n            <ActionsDropdownItem\n              className=\"js-task-cancel\"\n              destructive={true}\n              onClick={this.handleCancelClick}>\n              {translate('background_tasks.cancel_task')}\n            </ActionsDropdownItem>\n          )}\n          {task.hasScannerContext && (\n            <ActionsDropdownItem\n              className=\"js-task-show-scanner-context\"\n              onClick={this.handleShowScannerContextClick}>\n              {translate('background_tasks.show_scanner_context')}\n            </ActionsDropdownItem>\n          )}\n          {canShowStacktrace && (\n            <ActionsDropdownItem\n              className=\"js-task-show-stacktrace\"\n              onClick={this.handleShowStacktraceClick}>\n              {translate('background_tasks.show_stacktrace')}\n            </ActionsDropdownItem>\n          )}\n          {canShowWarnings && (\n            <ActionsDropdownItem\n              className=\"js-task-show-warnings\"\n              onClick={this.handleShowWarningsClick}>\n              {translate('background_tasks.show_warnings')}\n            </ActionsDropdownItem>\n          )}\n        </ActionsDropdown>\n\n        {this.state.cancelTaskOpen && (\n          <ConfirmModal\n            cancelButtonText={translate('close')}\n            confirmButtonText={translate('background_tasks.cancel_task')}\n            header={translate('background_tasks.cancel_task')}\n            isDestructive={true}\n            onClose={this.closeCancelTask}\n            onConfirm={this.handleCancelTask}>\n            {translate('background_tasks.cancel_task.text')}\n          </ConfirmModal>\n        )}\n\n        {this.state.scannerContextOpen && (\n          <ScannerContext onClose={this.closeScannerContext} task={task} />\n        )}\n\n        {this.state.stacktraceOpen && <Stacktrace onClose={this.closeStacktrace} task={task} />}\n\n        {this.state.warningsOpen && (\n          <AnalysisWarningsModal onClose={this.closeWarnings} taskId={task.id} />\n        )}\n      </td>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  type: string;\n}\n\nexport default function TaskType({ type }: Props) {\n  return (\n    <span className=\"display-inline-block note\">\n      {'['}\n      {translate('background_task.type', type)}\n      {']'}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport Organization from '../../../components/shared/Organization';\nimport { getBranchUrl, getProjectUrl, getPullRequestUrl } from '../../../helpers/urls';\nimport TaskType from './TaskType';\n\ninterface Props {\n  task: T.Task;\n}\n\nexport default function TaskComponent({ task }: Props) {\n  if (!task.componentKey) {\n    return (\n      <td>\n        <span className=\"note\">{task.id}</span>\n        <TaskType type={task.type} />\n      </td>\n    );\n  }\n\n  return (\n    <td>\n      {task.branch !== undefined && <BranchIcon className=\"little-spacer-right\" />}\n      {task.pullRequest !== undefined && <PullRequestIcon className=\"little-spacer-right\" />}\n\n      {!task.branch && !task.pullRequest && task.componentQualifier && (\n        <span className=\"little-spacer-right\">\n          <QualifierIcon qualifier={task.componentQualifier} />\n        </span>\n      )}\n\n      {task.organization && <Organization organizationKey={task.organization} />}\n\n      {task.componentName && (\n        <Link className=\"spacer-right\" to={getTaskComponentUrl(task.componentKey, task)}>\n          {task.componentName}\n\n          {task.branch && (\n            <span className=\"text-limited text-text-top\" title={task.branch}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.branch}\n            </span>\n          )}\n\n          {task.pullRequest && (\n            <span className=\"text-limited text-text-top\" title={task.pullRequestTitle}>\n              <span style={{ marginLeft: 5, marginRight: 5 }}>/</span>\n              {task.pullRequest}\n            </span>\n          )}\n        </Link>\n      )}\n\n      <TaskType type={task.type} />\n    </td>\n  );\n}\n\nfunction getTaskComponentUrl(componentKey: string, task: T.Task) {\n  if (task.branch) {\n    return getBranchUrl(componentKey, task.branch);\n  } else if (task.pullRequest) {\n    return getPullRequestUrl(componentKey, task.pullRequest);\n  }\n  return getProjectUrl(componentKey);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as differenceInDays from 'date-fns/difference_in_days';\nimport * as React from 'react';\nimport { isValidDate, parseDate } from 'sonar-ui-common/helpers/dates';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\n\ninterface Props {\n  date?: string;\n  baseDate?: string;\n}\n\nexport default function TaskDate({ date, baseDate }: Props) {\n  const parsedDate = date && parseDate(date);\n  const parsedBaseDate = baseDate && parseDate(baseDate);\n  const diff =\n    parsedDate && parsedBaseDate && isValidDate(parsedDate) && isValidDate(parsedBaseDate)\n      ? differenceInDays(parsedDate, parsedBaseDate)\n      : 0;\n\n  return (\n    <td className=\"thin nowrap text-right\">\n      {diff > 0 && <span className=\"text-warning little-spacer-right\">{`(+${diff}d)`}</span>}\n\n      {parsedDate && isValidDate(parsedDate) ? <TimeFormatter date={parsedDate} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as isSameDay from 'date-fns/is_same_day';\nimport * as React from 'react';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\nimport DateFormatter from '../../../components/intl/DateFormatter';\n\ninterface Props {\n  submittedAt: string;\n  prevSubmittedAt?: string;\n}\n\nexport default function TaskDay({ submittedAt, prevSubmittedAt }: Props) {\n  const shouldDisplay =\n    !prevSubmittedAt || !isSameDay(parseDate(submittedAt), parseDate(prevSubmittedAt));\n\n  return (\n    <td className=\"thin nowrap text-right small\">\n      {shouldDisplay ? <DateFormatter date={submittedAt} long={true} /> : ''}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { formatDuration } from '../utils';\n\ninterface Props {\n  ms?: number;\n}\n\nexport default function TaskExecutionTime({ ms }: Props) {\n  return <td className=\"thin nowrap text-right\">{ms && formatDuration(ms)}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  id: string;\n}\n\nexport default function TaskId({ id }: Props) {\n  return (\n    <td className=\"thin nowrap\">\n      <div className=\"note\">{id}</div>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PendingIcon from 'sonar-ui-common/components/icons/PendingIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../constants';\n\ninterface Props {\n  status: string;\n}\n\nexport default function TaskStatus({ status }: Props) {\n  let inner;\n\n  switch (status) {\n    case STATUSES.PENDING:\n      inner = <PendingIcon />;\n      break;\n    case STATUSES.IN_PROGRESS:\n      inner = <i className=\"spinner\" />;\n      break;\n    case STATUSES.SUCCESS:\n      inner = (\n        <span className=\"badge badge-success\">{translate('background_task.status.SUCCESS')}</span>\n      );\n      break;\n    case STATUSES.FAILED:\n      inner = (\n        <span className=\"badge badge-error\">{translate('background_task.status.FAILED')}</span>\n      );\n      break;\n    case STATUSES.CANCELED:\n      inner = <span className=\"badge\">{translate('background_task.status.CANCELED')}</span>;\n      break;\n    default:\n      inner = '';\n  }\n\n  return <td className=\"thin spacer-right\">{inner}</td>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  submitter?: string;\n}\n\nexport default function TaskSubmitter({ submitter }: Props) {\n  return (\n    <td className=\"thin note\">\n      <span className=\"text-limited-small text-bottom\">{submitter || translate('anonymous')}</span>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport TaskActions from './TaskActions';\nimport TaskComponent from './TaskComponent';\nimport TaskDate from './TaskDate';\nimport TaskDay from './TaskDay';\nimport TaskExecutionTime from './TaskExecutionTime';\nimport TaskId from './TaskId';\nimport TaskStatus from './TaskStatus';\nimport TaskSubmitter from './TaskSubmitter';\n\ninterface Props {\n  component?: unknown;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n  task: T.Task;\n  previousTask?: T.Task;\n}\n\nexport default function Task(props: Props) {\n  const { task, component, onCancelTask, onFilterTask, previousTask } = props;\n\n  return (\n    <tr>\n      <TaskStatus status={task.status} />\n      <TaskComponent task={task} />\n      <TaskId id={task.id} />\n      <TaskSubmitter submitter={task.submitterLogin} />\n      <TaskDay\n        prevSubmittedAt={previousTask && previousTask.submittedAt}\n        submittedAt={task.submittedAt}\n      />\n      <TaskDate date={task.submittedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.startedAt} />\n      <TaskDate baseDate={task.submittedAt} date={task.executedAt} />\n      <TaskExecutionTime ms={task.executionTimeMs} />\n      <TaskActions\n        component={component}\n        onCancelTask={onCancelTask}\n        onFilterTask={onFilterTask}\n        task={task}\n      />\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Task from './Task';\n\ninterface Props {\n  tasks: T.Task[];\n  component?: unknown;\n  loading: boolean;\n  onCancelTask: (task: T.Task) => Promise<void>;\n  onFilterTask: (task: T.Task) => void;\n}\n\nexport default function Tasks({ tasks, component, loading, onCancelTask, onFilterTask }: Props) {\n  const className = classNames('data zebra zebra-hover background-tasks', {\n    'new-loading': loading\n  });\n\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className={className}>\n        <thead>\n          <tr>\n            <th>{translate('background_tasks.table.status')}</th>\n            <th>{translate('background_tasks.table.task')}</th>\n            <th>{translate('background_tasks.table.id')}</th>\n            <th>{translate('background_tasks.table.submitter')}</th>\n            <th>&nbsp;</th>\n            <th className=\"text-right\">{translate('background_tasks.table.submitted')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.started')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.finished')}</th>\n            <th className=\"text-right\">{translate('background_tasks.table.duration')}</th>\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task, index, tasks) => (\n            <Task\n              component={component}\n              key={task.id}\n              onCancelTask={onCancelTask}\n              onFilterTask={onFilterTask}\n              previousTask={index > 0 ? tasks[index - 1] : undefined}\n              task={task}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, uniq } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { toShortNotSoISOString } from 'sonar-ui-common/helpers/dates';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseAsDate } from 'sonar-ui-common/helpers/query';\nimport {\n  cancelAllTasks,\n  cancelTask as cancelTaskAPI,\n  getActivity,\n  getStatus,\n  getTypes\n} from '../../../api/ce';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { Location, Router } from '../../../components/hoc/withRouter';\nimport { fetchOrganizations } from '../../../store/rootActions';\nimport '../background-tasks.css';\nimport { CURRENTS, DEBOUNCE_DELAY, DEFAULT_FILTERS, STATUSES } from '../constants';\nimport { mapFiltersToParameters, Query, updateTask } from '../utils';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Search from './Search';\nimport Stats from './Stats';\nimport Tasks from './Tasks';\n\ninterface Props {\n  component?: Pick<T.Component, 'key'> & { id: string }; // id should be removed when api/ce/activity accept a component key instead of an id\n  fetchOrganizations: (keys: string[]) => void;\n  location: Location;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  failingCount: number;\n  loading: boolean;\n  pendingCount: number;\n  pendingTime?: number;\n  tasks: T.Task[];\n  types?: string[];\n}\n\nexport class BackgroundTasksApp extends React.PureComponent<Props, State> {\n  loadTasksDebounced: () => void;\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { failingCount: 0, loading: true, pendingCount: 0, tasks: [] };\n    this.loadTasksDebounced = debounce(this.loadTasks, DEBOUNCE_DELAY);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    getTypes().then(\n      types => {\n        this.setState({ types });\n        this.loadTasks();\n      },\n      () => {}\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.component !== this.props.component ||\n      prevProps.location !== this.props.location\n    ) {\n      this.loadTasksDebounced();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadTasks = () => {\n    this.setState({ loading: true });\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt =\n      this.props.location.query.minSubmittedAt || DEFAULT_FILTERS.minSubmittedAt;\n    const maxExecutedAt = this.props.location.query.maxExecutedAt || DEFAULT_FILTERS.maxExecutedAt;\n    const query = this.props.location.query.query || DEFAULT_FILTERS.query;\n\n    const filters = { status, taskType, currents, minSubmittedAt, maxExecutedAt, query };\n    const parameters = mapFiltersToParameters(filters);\n\n    if (this.props.component) {\n      parameters.componentId = this.props.component.id;\n    }\n\n    Promise.all([getActivity(parameters), getStatus(parameters.componentId)]).then(\n      ([{ tasks }, status]) => {\n        if (this.mounted) {\n          const organizations = uniq(tasks.map(task => task.organization).filter(o => o));\n          this.props.fetchOrganizations(organizations);\n\n          this.setState({\n            failingCount: status.failing,\n            loading: false,\n            pendingCount: status.pending,\n            pendingTime: status.pendingTime,\n            tasks\n          });\n        }\n      },\n      this.stopLoading\n    );\n  };\n\n  handleFilterUpdate = (nextState: Partial<Query>) => {\n    const nextQuery = { ...this.props.location.query, ...nextState };\n\n    // remove defaults\n    Object.keys(DEFAULT_FILTERS).forEach((key: keyof typeof DEFAULT_FILTERS) => {\n      if (nextQuery[key] === DEFAULT_FILTERS[key]) {\n        delete nextQuery[key];\n      }\n    });\n\n    if (nextQuery.minSubmittedAt) {\n      nextQuery.minSubmittedAt = toShortNotSoISOString(nextQuery.minSubmittedAt);\n    }\n\n    if (nextQuery.maxExecutedAt) {\n      nextQuery.maxExecutedAt = toShortNotSoISOString(nextQuery.maxExecutedAt);\n    }\n\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: nextQuery\n    });\n  };\n\n  handleCancelTask = (task: T.Task) => {\n    this.setState({ loading: true });\n\n    return cancelTaskAPI(task.id).then(nextTask => {\n      if (this.mounted) {\n        this.setState(state => ({\n          tasks: updateTask(state.tasks, nextTask),\n          loading: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleFilterTask = (task: T.Task) => {\n    this.handleFilterUpdate({ query: task.componentKey });\n  };\n\n  handleShowFailing = () => {\n    this.handleFilterUpdate({\n      ...DEFAULT_FILTERS,\n      status: STATUSES.FAILED,\n      currents: CURRENTS.ONLY_CURRENTS\n    });\n  };\n\n  handleCancelAllPending = () => {\n    this.setState({ loading: true });\n\n    cancelAllTasks().then(() => {\n      if (this.mounted) {\n        this.loadTasks();\n      }\n    }, this.stopLoading);\n  };\n\n  render() {\n    const { component } = this.props;\n    const { loading, types, tasks } = this.state;\n\n    if (!types) {\n      return (\n        <div className=\"page page-limited\">\n          <i className=\"spinner\" />\n        </div>\n      );\n    }\n\n    const status = this.props.location.query.status || DEFAULT_FILTERS.status;\n    const taskType = this.props.location.query.taskType || DEFAULT_FILTERS.taskType;\n    const currents = this.props.location.query.currents || DEFAULT_FILTERS.currents;\n    const minSubmittedAt = parseAsDate(this.props.location.query.minSubmittedAt);\n    const maxExecutedAt = parseAsDate(this.props.location.query.maxExecutedAt);\n    const query = this.props.location.query.query || '';\n\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"background_tasks\" />\n        <Helmet defer={false} title={translate('background_tasks.page')} />\n        <Header component={component} />\n\n        <Stats\n          component={component}\n          failingCount={this.state.failingCount}\n          onCancelAllPending={this.handleCancelAllPending}\n          onShowFailing={this.handleShowFailing}\n          pendingCount={this.state.pendingCount}\n          pendingTime={this.state.pendingTime}\n        />\n\n        <Search\n          component={component}\n          currents={currents}\n          loading={loading}\n          maxExecutedAt={maxExecutedAt}\n          minSubmittedAt={minSubmittedAt}\n          onFilterUpdate={this.handleFilterUpdate}\n          onReload={this.loadTasksDebounced}\n          query={query}\n          status={status}\n          taskType={taskType}\n          types={types}\n        />\n\n        <Tasks\n          component={component}\n          loading={loading}\n          onCancelTask={this.handleCancelTask}\n          onFilterTask={this.handleFilterTask}\n          tasks={tasks}\n        />\n\n        <Footer tasks={tasks} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganizations };\n\nexport default connect(null, mapDispatchToProps)(BackgroundTasksApp);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as addMonths from 'date-fns/add_months';\nimport * as setMonth from 'date-fns/set_month';\nimport * as setYear from 'date-fns/set_year';\nimport * as subMonths from 'date-fns/sub_months';\nimport { range } from 'lodash';\nimport * as React from 'react';\nimport { DayModifiers, Modifier, Modifiers } from 'react-day-picker';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { ButtonIcon, ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport CalendarIcon from 'sonar-ui-common/components/icons/CalendarIcon';\nimport ChevronLeftIcon from 'sonar-ui-common/components/icons/ChevronLeftIcon';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport {\n  getShortMonthName,\n  getShortWeekDayName,\n  getWeekDayName\n} from 'sonar-ui-common/helpers/l10n';\nimport './DayPicker.css';\nimport './styles.css';\n\nconst DayPicker = lazyLoad(() => import('react-day-picker'));\n\ninterface Props {\n  className?: string;\n  currentMonth?: Date;\n  highlightFrom?: Date;\n  highlightTo?: Date;\n  inputClassName?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  name?: string;\n  onChange: (date: Date | undefined) => void;\n  placeholder: string;\n  value?: Date;\n}\n\ninterface State {\n  currentMonth: Date;\n  open: boolean;\n  lastHovered?: Date;\n}\n\ntype Week = [string, string, string, string, string, string, string];\n\nexport default class DateInput extends React.PureComponent<Props, State> {\n  input?: HTMLInputElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { currentMonth: props.value || props.currentMonth || new Date(), open: false };\n  }\n\n  focus = () => {\n    if (this.input) {\n      this.input.focus();\n    }\n    this.openCalendar();\n  };\n\n  handleResetClick = () => {\n    this.closeCalendar();\n    this.props.onChange(undefined);\n  };\n\n  openCalendar = () => {\n    this.setState({\n      currentMonth: this.props.value || this.props.currentMonth || new Date(),\n      lastHovered: undefined,\n      open: true\n    });\n  };\n\n  closeCalendar = () => {\n    this.setState({ open: false });\n  };\n\n  handleDayClick = (day: Date, modifiers: DayModifiers) => {\n    if (!modifiers.disabled) {\n      this.closeCalendar();\n      this.props.onChange(day);\n    }\n  };\n\n  handleDayMouseEnter = (day: Date, modifiers: DayModifiers) => {\n    this.setState({ lastHovered: modifiers.disabled ? undefined : day });\n  };\n\n  handleCurrentMonthChange = ({ value }: { value: number }) => {\n    this.setState((state: State) => ({ currentMonth: setMonth(state.currentMonth, value) }));\n  };\n\n  handleCurrentYearChange = ({ value }: { value: number }) => {\n    this.setState(state => ({ currentMonth: setYear(state.currentMonth, value) }));\n  };\n\n  handlePreviousMonthClick = () => {\n    this.setState(state => ({ currentMonth: subMonths(state.currentMonth, 1) }));\n  };\n\n  handleNextMonthClick = () => {\n    this.setState(state => ({ currentMonth: addMonths(state.currentMonth, 1) }));\n  };\n\n  render() {\n    const { highlightFrom, highlightTo, minDate, value } = this.props;\n    const { lastHovered } = this.state;\n\n    const after = this.props.maxDate || new Date();\n\n    const months = range(12);\n    const years = range(new Date().getFullYear() - 10, new Date().getFullYear() + 1);\n\n    const selectedDays: Modifier[] = value ? [value] : [];\n    let modifiers: Partial<Modifiers> | undefined;\n    const lastHoveredOrValue = lastHovered || value;\n\n    if (highlightFrom && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: highlightFrom, to: lastHoveredOrValue } };\n      selectedDays.push(highlightFrom);\n    }\n    if (highlightTo && lastHoveredOrValue) {\n      modifiers = { highlighted: { from: lastHoveredOrValue, to: highlightTo } };\n      selectedDays.push(highlightTo);\n    }\n\n    const weekdaysLong = range(7).map(getWeekDayName) as Week;\n    const weekdaysShort = range(7).map(getShortWeekDayName) as Week;\n\n    return (\n      <OutsideClickHandler onClickOutside={this.closeCalendar}>\n        <span className={classNames('date-input-control', this.props.className)}>\n          <InputWrapper\n            className={classNames('date-input-control-input', this.props.inputClassName, {\n              'is-filled': this.props.value !== undefined\n            })}\n            innerRef={node => (this.input = node)}\n            name={this.props.name}\n            onFocus={this.openCalendar}\n            placeholder={this.props.placeholder}\n            readOnly={true}\n            type=\"text\"\n            value={value}\n          />\n          <CalendarIcon className=\"date-input-control-icon\" fill=\"\" />\n          {this.props.value !== undefined && (\n            <ClearButton\n              className=\"button-tiny date-input-control-reset\"\n              iconProps={{ size: 12 }}\n              onClick={this.handleResetClick}\n            />\n          )}\n          {this.state.open && (\n            <div className=\"date-input-calendar\">\n              <nav className=\"date-input-calendar-nav\">\n                <ButtonIcon className=\"button-small\" onClick={this.handlePreviousMonthClick}>\n                  <ChevronLeftIcon />\n                </ButtonIcon>\n                <div className=\"date-input-calender-month\">\n                  <Select\n                    className=\"date-input-calender-month-select\"\n                    onChange={this.handleCurrentMonthChange}\n                    options={months.map(month => ({\n                      label: getShortMonthName(month),\n                      value: month\n                    }))}\n                    value={this.state.currentMonth.getMonth()}\n                  />\n                  <Select\n                    className=\"date-input-calender-month-select spacer-left\"\n                    onChange={this.handleCurrentYearChange}\n                    options={years.map(year => ({ label: String(year), value: year }))}\n                    value={this.state.currentMonth.getFullYear()}\n                  />\n                </div>\n                <ButtonIcon className=\"button-small\" onClick={this.handleNextMonthClick}>\n                  <ChevronRightIcon />\n                </ButtonIcon>\n              </nav>\n              <DayPicker\n                captionElement={<NullComponent />}\n                disabledDays={{ after, before: minDate }}\n                firstDayOfWeek={1}\n                modifiers={modifiers}\n                month={this.state.currentMonth}\n                navbarElement={<NullComponent />}\n                onDayClick={this.handleDayClick}\n                onDayMouseEnter={this.handleDayMouseEnter}\n                selectedDays={selectedDays}\n                weekdaysLong={weekdaysLong}\n                weekdaysShort={weekdaysShort}\n              />\n            </div>\n          )}\n        </span>\n      </OutsideClickHandler>\n    );\n  }\n}\n\nfunction NullComponent() {\n  return null;\n}\n\ntype InputWrapperProps = T.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value'> &\n  InjectedIntlProps & {\n    innerRef: React.Ref<HTMLInputElement>;\n    value: Date | undefined;\n  };\n\nconst InputWrapper = injectIntl(({ innerRef, intl, value, ...other }: InputWrapperProps) => {\n  const formattedValue =\n    value && intl.formatDate(value, { year: 'numeric', month: 'short', day: 'numeric' });\n  return <input {...other} ref={innerRef} value={formattedValue || ''} />;\n});\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./DayPicker.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".DayPicker{display:inline-block}.DayPicker-wrapper{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding-bottom:8px;flex-direction:row}.DayPicker-Months{display:flex;flex-wrap:wrap;justify-content:center}.DayPicker-Month{display:table;border-collapse:collapse;border-spacing:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin:8px 8px 0}.DayPicker-Weekdays{display:table-header-group}.DayPicker-WeekdaysRow{display:table-row}.DayPicker-Weekday{display:table-cell;padding:8px;font-size:12px;text-align:center;color:#999}.DayPicker-Weekday abbr[title]{border-bottom:none;text-decoration:none}.DayPicker-Body{display:table-row-group}.DayPicker-Week{display:table-row}.DayPicker-Day{display:table-cell;line-height:15px;padding:8px;text-align:center;cursor:pointer;vertical-align:top;outline:none}.DayPicker--interactionDisabled .DayPicker-Day{cursor:default}.DayPicker-Footer{padding-top:8px}.DayPicker-Day--today{font-weight:700}.DayPicker-Day--outside{cursor:default;color:#8b9898}.DayPicker-Day--disabled{color:#cdcdcd;cursor:not-allowed}.DayPicker-Day--sunday{background-color:#f7f8f8}.DayPicker-Day--sunday:not(.DayPicker-Day--today){color:#dce0e0}.DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:#4b9fd5;color:#fff}.DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--highlighted):not(.DayPicker-Day--outside):hover{background-color:#f3f3f3}.DayPicker-Day--highlighted:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside){background-color:#cae3f2}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".date-input-control{position:relative;display:inline-block;cursor:pointer}.date-input-control-input{width:130px;padding-left:24px!important;cursor:pointer}.date-input-control-input.is-filled{padding-right:16px!important}.date-input-control-icon{position:absolute;top:4px;left:4px}.date-input-control-icon path{fill:#cdcdcd;transition:fill .3s ease}.date-input-control-input:focus+.date-input-control-icon path{fill:#4b9fd5}.date-input-control-reset{position:absolute;top:4px;right:4px;border:none}.date-input-calendar{position:absolute;z-index:7500;top:100%;left:0;border:1px solid #e6e6e6;background-color:#fff;box-shadow:0 6px 12px rgba(0,0,0,.175)}.date-input-calendar-nav{display:flex;justify-content:space-between;align-items:center;padding-top:8px;padding-left:8px;padding-right:8px}.date-input-calender-month-select{width:70px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(\n    () => getTask(id),\n    () => getTask(id)\n  );\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DateInput from './DateInput';\n\ntype DateRange = { from?: Date; to?: Date };\n\ninterface Props {\n  className?: string;\n  maxDate?: Date;\n  minDate?: Date;\n  onChange: (date: DateRange) => void;\n  value?: DateRange;\n}\n\nexport default class DateRangeInput extends React.PureComponent<Props> {\n  toDateInput?: DateInput | null;\n\n  get from() {\n    return this.props.value && this.props.value.from;\n  }\n\n  get to() {\n    return this.props.value && this.props.value.to;\n  }\n\n  handleFromChange = (from: Date | undefined) => {\n    this.props.onChange({ from, to: this.to });\n\n    // use `setTimeout` to work around the immediate closing of the `toDateInput`\n    setTimeout(() => {\n      if (from && !this.to && this.toDateInput) {\n        this.toDateInput.focus();\n      }\n    }, 0);\n  };\n\n  handleToChange = (to: Date | undefined) => {\n    this.setState({ to });\n    this.props.onChange({ from: this.from, to });\n  };\n\n  render() {\n    return (\n      <div className={classNames('display-inline-flex-center', this.props.className)}>\n        <DateInput\n          currentMonth={this.to}\n          data-test=\"from\"\n          highlightTo={this.to}\n          maxDate={this.to}\n          onChange={this.handleFromChange}\n          placeholder={translate('start_date')}\n          value={this.from}\n        />\n        <span className=\"note little-spacer-left little-spacer-right\">{translate('to_')}</span>\n        <DateInput\n          currentMonth={this.from}\n          data-test=\"to\"\n          highlightFrom={this.from}\n          minDate={this.from}\n          onChange={this.handleToChange}\n          placeholder={translate('end_date')}\n          ref={element => (this.toDateInput = element)}\n          value={this.to}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { areThereCustomOrganizations, getOrganizationByKey, Store } from '../../store/rootReducer';\nimport OrganizationLink from '../ui/OrganizationLink';\n\ninterface OwnProps {\n  organizationKey: string;\n}\n\ninterface Props {\n  link?: boolean;\n  linkClassName?: string;\n  organization: { key: string; name: string } | null;\n  shouldBeDisplayed?: boolean;\n}\n\nfunction Organization(props: Props) {\n  const { link = true, organization, shouldBeDisplayed } = props;\n\n  if (!shouldBeDisplayed || !organization) {\n    return null;\n  }\n\n  return (\n    <span>\n      {link ? (\n        <OrganizationLink className={props.linkClassName} organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n      ) : (\n        organization.name\n      )}\n      <span className=\"slash-separator\" />\n    </span>\n  );\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps) => ({\n  organization: getOrganizationByKey(state, ownProps.organizationKey),\n  shouldBeDisplayed: areThereCustomOrganizations(state)\n});\n\nexport default connect(mapStateToProps)(Organization);\n\nexport const UnconnectedOrganization = Organization;\n"],"sourceRoot":""}