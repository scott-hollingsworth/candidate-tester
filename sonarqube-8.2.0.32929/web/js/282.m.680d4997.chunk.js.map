{"version":3,"sources":["webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/api/notifications.ts","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css?fb16","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css","webpack:///../sonar-docs/src/tooltips/branches/no-branch-support.md","webpack:///../sonar-docs/src/tooltips/branches/single-branch.md","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css?432a","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css","webpack:///./src/main/js/app/components/nav/component/Menu.css?d0b0","webpack:///./src/main/js/app/components/nav/component/Menu.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css?b6ff","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css?6f16","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css?a773","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLike.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItemList.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLikeMergeInformation.tsx","webpack:///./src/main/js/app/components/nav/component/Breadcrumb.tsx","webpack:///./src/main/js/app/components/nav/component/Header.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.tsx","webpack:///./src/main/js/app/components/nav/component/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/utils.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeButton.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeParams.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/ProjectBadges.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawerPage.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationPages.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/DrawerLink.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaKey.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLinks.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityGate.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaSize.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTags.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationRenderer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/intl/DateTimeFormatter.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/helpers/markdown.js","webpack:///./src/main/js/types/metrics.ts","webpack:///./src/main/js/types/component.ts","webpack:///./src/main/js/api/rules.ts","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/components/tags/TagsList.css?aed4","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/components/shared/DrilldownLink.tsx","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/components/common/CodeSnippet.css?2955","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///../sonar-docs/src/tooltips/project/visibility-private.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-paid-org-admin.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-paid-org.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public-admin.md","webpack:///../sonar-docs/src/tooltips/project/visibility-public.md","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/api/projectLinks.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLink.tsx"],"names":["withNotifications","WrappedComponent","Wrapper","index_js_exposed","[object Object]","this","mounted","state","channels","globalTypes","loading","notifications","perProjectTypes","fetchNotifications","Object","request","catch","throwGlobalError","then","response","setState","addNotificationToState","added","uniqWith_default","areNotificationsEqual","removeNotificationFromState","removed","filter","notification","addNotification","data","channel","project","type","removeNotification","a","b","_this$state","assign","props","displayName","utils","content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","r","__webpack_exports__","ComponentContainerNotFound","index_module","defaultTitle","l10n","defer","className","id","react_router_es","to","component_ComponentNavLicenseNotif","withAppState","fetchIsValidLicense","marketplace","_ref","isValidLicense","currentTask","errorType","Alert","display","variant","componentQualifier","types_component","Project","errorMessage","appState","canAdmin","ComponentNavBgTaskNotif_ComponentNavBgTaskNotif","messageKey","status","branch","_this$props","component","canSeeBackgroundTasks","configuration","showBackgroundTasks","url","urls","key","index_es","defaultMessage","values","_this$props2","currentTaskOnSameBranch","isInProgress","isPending","renderMessage","constants","ALL","FAILED","concat","pullRequest","pullRequestTitle","message","branch_like_CurrentBranchLike","branchesEnabled","currentBranchLike","hasManyBranches","branch_like","isApplication","qualifier","Application","canAdminComponent","showSettings","BranchLikeIcon","branchLike","title","plusIcon","PlusCircleIcon_default","fill","theme","blue","size","DropdownIcon_default","HelpTooltip_default","overlay","DocTooltip","data-test","doc","Promise","resolve","bind","additionalIcon","branch_like_MenuItem","indent","setSelectedNode","onSelect","selected","classnames","active","onClick","ref","big-spacer-left","BranchStatus","branch_like_MenuItemList","listNode","selectedNode","scrolling","parent","smooth","branchLikeTree","hasResults","selectedBranchLike","renderItem","node","mainBranchTree","branchTree","types","map","tree","pullRequests","length","pr","parentlessPullRequests","orphanPullRequests","branch_like_Menu","withRouter","super","processBranchLikes","branchLikes","branchLikesToDisplay","reduce","prev","t","branchLikesToDisplayTree","openHighlightedBranchLike","handleOnSelect","highlightSiblingBranchlike","indexDelta","selectBranchLikeIndex","findIndex","newIndex","handleKeyDown","event","keyCode","keycodes","Enter","preventDefault","UpArrow","DownArrow","handleSearchChange","query","q","toLowerCase","filteredBranchLikes","bl","name","includes","filterBranch","filterPullRequest","_objectSpread","onClose","router","some","showManageLink","Dropdown","noPadding","SearchBox_default","autoFocus","onChange","onKeyDown","placeholder","value","pathname","branch_like_BranchLikeNavigation","_React$useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","isMenuEnabled","currentBranchLikeElement","Boolean","dropdown","Toggler_default","onRequestClose","open","href","branch_like_CurrentBranchLikeMergeInformation","target","Breadcrumb","breadcrumbs","lastBreadcrumbElement","last_default","isNoMainBranch","breadcrumbElement","isFirst","isNotLast","QualifierIcon_default","component_Header","es","currentUser","rootReducer","users","Favorite","favorite","isFavorite","AnalysisWarningsModal","lazyLoad","all","e","ComponentNavWarnings_ComponentNavWarnings","modal","handleClick","currentTarget","blur","handleCloseModal","warnings","warningsCount","component_HeaderMeta","isABranch","currentPage","Portfolio","SubPortfolio","getCurrentPage","displayVersion","version","analysisDate","DateTimeFormatter","date","HomePageSelect","rel","DetachIcon_default","SETTINGS_URLS","nav_component_Menu","getQuery","Menu_objectSpread","renderExtension","isAdmin","activeClassName","Developper","isPortfolio","isDeveloper","resolved","_component$extensions","extensions","extension","startsWith","getConfiguration","isSettingsActive","window","location","indexOf","adminLinks","renderAdministrationLinks","link","Dropdown_default","tagName","_ref2","onToggleClick","aria-expanded","aria-haspopup","renderSettingsLink","renderBranchesLink","renderBaselineLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderAdminExtensions","renderDeletionLink","isProject","onToggleProjectInfo","role","tabIndex","BulletListIcon_default","showQualityProfiles","showQualityGates","system","showManualMeasures","showLinks","showPermissions","showUpdateKey","withoutSecurityExtension","_ref3","NavBarTabs_default","renderDashboardLink","renderIssuesLink","renderSecurityHotspotsLink","renderSecurityReports","renderComponentMeasuresLink","renderCodeLink","renderActivityLink","renderExtensions","renderAdministration","renderProjectInformationButton","InfoDrawer_InfoDrawer","children","displayed","top","style","buttons","EscKeydownHandler_default","onKeydown","OutsideClickHandler_default","onClickOutside","BadgeType","getBadgeSnippet","getBadgeUrl","_options$format","format","_options$metric","metric","label","projectUrl","marketing","measure","qualityGate","helpers_urls","mdImage","_ref$color","color","_ref$metric","querystring_es3","BadgeButton_BadgeButton","width","alt","src","BadgeParams_BadgeParams","badgeMetrics","getColorOptions","getFormatOptions","getMetricOptions","metrics","handleColorChange","updateOptions","handleFormatChange","handleMetricChange","renderBadgeType","htmlFor","Select_default","clearable","searchable","menuStyle","maxHeight","fetchBadgeMetrics","web_api","webservices","domain","find","d","path","ws","actions","w","param","params","p","possibleValues","spacer-top","ProjectBadges_ProjectBadges","selectedType","badgeOptions","types_metrics","alert_status","handleSelectBadge","handleUpdateOptions","ProjectBadges_objectSpread","fullBadgeOptions","CodeSnippet","isOneLine","snippet","InfoDrawerPage","onPageChange","BackIcon_default","ProjectInformationPages","notifications_ProjectNotifications","projectNotifications","n","DeferredSpinner_default","aria-label","NotificationsList","checkboxId","onAdd","onRemove","projectInformation_DrawerLink","ChevronRightIcon_default","MetaKey","componentKey","readOnly","clipboard","copyValue","MetaLinks_MetaLinks","loadLinks","projectLinks","links","prevProps","orderedLinks","helpers_projectLinks","MetaLink","MetaQualityGate","isDefault","meta_MetaQualityProfiles","languages","deprecatedByKey","loadDeprecatedRules","existingProfiles","profiles","deleted","requests","profile","loadDeprecatedRulesForProfile","responses","forEach","count","profileKey","activation","organization","ps","qprofile","statuses","rules","total","languageFromStore","language","languageName","inner","tooltip","Tooltip_default","getDeprecatedRulesCount","headerClassName","renderProfile","MetaSize","measures","isApp","ncloc","projects","helpers_measures","DrilldownLink","SizeRating_default","Number","LIST_SIZE","MetaTagsSelector_MetaTagsSelector","searchResult","onSearch","components","Math","min","selectedTags","tags","tag","setProjectTags","onUnselect","without_default","availableTags","difference_default","TagsSelector","listSize","MetaTags_MetaTags","canUpdateTags","getPopupPos","eltPos","containerPos","height","right","handleSetProjectTags","join","onComponentChange","card","closeOnClick","closeOnClickOutside","overlayPlacement","popups","BottomLeft","innerRef","tagsList","stopPropagation","TagsList","allowUpdate","projectInformation_ProjectInformationRenderer","canConfigureNotifications","canUseBadges","_props$measures","description","visibility","PrivacyBadgeContainer","tooltipProps","projectKey","qualityProfiles","badges","mapDispatchToProps","fetchMetrics","rootActions","component_projectInformation_ProjectInformation","_this","page","main","setPage","arguments","loadMeasures","api_measures","metricKeys","ComponentNav","contextNavHeightRaw","globalNavHeightRaw","ComponentNav_slicedToArray","displayProjectInfo","setDisplayProjectInfo","notifComponent","RecentHistory","add","contextNavHeight","ContextNavBar_default","notif","padded-bottom","FETCH_STATUS_WAIT_TIME","ComponentContainer_ComponentContainer","addQualifier","ComponentContainer_objectSpread","fetchBranches","breadcrumb","branches","ComponentContainer_slicedToArray","getCurrentBranchLike","registerBranchStatuses","fetchStatus","ce","_ref4","current","queue","shouldFetchComponent","_ref5","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","IN_PROGRESS","currentTaskChanged","progressChanged","differenceBy_default","clearTimeout","watchStatusTimer","setTimeout","PENDING","fetchComponent","fetchWarnings","_ref6","isMain","isSameBranch","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","_ref7","_this$props$location$","api_nav","_ref8","_ref9","nav","componentWithQualifier","fetchOrganization","requireAuthorization","_ref10","_this$state2","ComponentContext","Provider","onBranchesChange","ComponentContainer_mapDispatchToProps","formatterOption","react__WEBPACK_IMPORTED_MODULE_0__","react_intl__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","year","month","day","hour","minute","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1___default","sonar_ui_common_components_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","_helpers_markdown__WEBPACK_IMPORTED_MODULE_3__","DocMarkdownBlock","close","default","document","addEventListener","removeEventListener","childProps","overlayProps","isTooltip","getFrontMatterPosition","lines","firstLine","lastLine","trim","parseFrontMatter","tokens","split","x","cutConditionalContent","beginning","ending","newContent","start","end","substring","console","error","Error","getFrontMatter","position","slice","separateFrontMatter","frontmatter","filterContent","regexBase","_require","isSonarCloud","getInstance","contentWithoutStatic","replace","RegExp","MetricKey","isMetricKey","ComponentQualifier","getRulesApp","searchRules","takeFacet","getRuleDetails","getRuleTags","createRule","deleteRule","updateRule","sonar_ui_common_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","property","facet","facets","parameters","rule","reject","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_icons_DropdownIcon__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_components_icons_TagsIcon__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_icons_TagsIcon__WEBPACK_IMPORTED_MODULE_3___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_ref$allowUpdate","aria-hidden","MultiSelectOption","custom","disabled","element","onHover","renderLabel","onFocus","onMouseOver","Checkbox_default","checked","onCheck","onSelectChange","MultiSelect_MultiSelect","handleSelectChange","item","onSelectItem","onUnselectItem","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","handleKeyboard","evt","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","selectedElements","elements","updateSelectedElements","filterSelected","updateUnselectedElements","unselectedElements","setElementActive","idx","allElements","container","nextProps","totalElements","searchInput","focus","_this$props$allowSele","allowSelection","_this$props$allowNewE","allowNewElements","_this$props$footerNod","footerNode","activeElement","showNewElement","infiniteList","listClasses","menu-vertically-limited","with-top-separator","with-bottom-separator","div","defaultProps","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","ALL_EXCEPT_PENDING","SUCCESS","CANCELED","ONLY_CURRENTS","taskType","currents","minSubmittedAt","maxExecutedAt","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","_users__WEBPACK_IMPORTED_MODULE_0__","subscription","userOrganizations","admin","org","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_1__","_common_MultiSelect__WEBPACK_IMPORTED_MODULE_2__","validateTag","addFavorite","removeFavorite","Favorite_Favorite","toggleFavorite","newFavorite","handleFavorite","_prevProps","FavoriteButton_default","sonar_ui_common_components_controls_clipboard__WEBPACK_IMPORTED_MODULE_2__","s","noCopy","render","wrap","snippetArray","Array","isArray","line","finalSnippet","code-snippet-oneline","code-snippet-wrap","getAnalysisStatus","getActivity","getStatus","getTask","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","componentId","additionalFields","taskTypes","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","react_redux__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_4__","sonar_ui_common_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_4___default","sonar_ui_common_components_icons_HomeIcon__WEBPACK_IMPORTED_MODULE_5__","sonar_ui_common_components_icons_HomeIcon__WEBPACK_IMPORTED_MODULE_5___default","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","_helpers_users__WEBPACK_IMPORTED_MODULE_7__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_8__","setHomePage","homepage","filled","_objectWithoutProperties","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_3__","sonar_ui_common_components_icons_PullRequestIcon__WEBPACK_IMPORTED_MODULE_2___default","sonar_ui_common_components_icons_BranchIcon__WEBPACK_IMPORTED_MODULE_1___default","PROVIDED_TYPES","isProvided","orderLinks","_partition3","lodash_partition__WEBPACK_IMPORTED_MODULE_1___default","provided","unknown","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","getLinkName","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","ISSUE_MEASURES","issueParamsPerMetric","blocker_violations","severities","new_blocker_violations","critical_violations","new_critical_violations","major_violations","new_major_violations","minor_violations","new_minor_violations","info_violations","new_info_violations","open_issues","reopened_issues","confirmed_issues","false_positive_issues","resolutions","code_smells","new_code_smells","bugs","new_bugs","vulnerabilities","new_vulnerabilities","isIssueMeasure","propsToIssueParams","sinceLeakPeriod","_helpers_urls__WEBPACK_IMPORTED_MODULE_3__","_helpers_branch_like__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_1__","listView","getDoc","icon","_organization$actions","_store_rootReducer__WEBPACK_IMPORTED_MODULE_9__","onSonarCloud","_helpers_system__WEBPACK_IMPORTED_MODULE_8__","_helpers_organizations__WEBPACK_IMPORTED_MODULE_7__","sonar_ui_common_components_icons_VisibleIcon__WEBPACK_IMPORTED_MODULE_4___default","_app_theme__WEBPACK_IMPORTED_MODULE_6__","badge","badge-info","sonar_ui_common_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","_docs_DocTooltip__WEBPACK_IMPORTED_MODULE_10__","sonar_ui_common_components_controls_Tooltip__WEBPACK_IMPORTED_MODULE_3___default","getBranches","getPullRequests","deleteBranch","deletePullRequest","renameBranch","excludeBranchFromPurge","branchName","excluded","valid_url__WEBPACK_IMPORTED_MODULE_0__","test","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_ui_Level__WEBPACK_IMPORTED_MODULE_2___default","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","level","small","fetchWebApi","fetchResponseExample","showInternal","include_internals","webServices","action","controller","sonar_ui_common_components_controls_Checkbox__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_controls_Checkbox__WEBPACK_IMPORTED_MODULE_1___default","dispatcher","globalMessageKey","projectMessageKey","getDispatcherLabel","isEnabled","handleCheck","getProjectLinks","deleteLink","createLink","linkId","sonar_ui_common_components_controls_buttons__WEBPACK_IMPORTED_MODULE_1__","sonar_ui_common_components_icons_ProjectLinkIcon__WEBPACK_IMPORTED_MODULE_2__","sonar_ui_common_components_icons_ProjectLinkIcon__WEBPACK_IMPORTED_MODULE_2___default","_helpers_projectLinks__WEBPACK_IMPORTED_MODULE_3__","_utils_isValidUri__WEBPACK_IMPORTED_MODULE_4__","expanded","handleCollapse","handleSelect","select","iconOnly","linkTitle"],"mappings":"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","file":"js/282.m.680d4997.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n","\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".branch-like-navigation-toggler-container .popup{min-width:430px;max-width:650px}.branch-like-navigation-menu .search-box-container{padding:8px}.branch-like-navigation-menu .search-box-container .search-box,.branch-like-navigation-menu .search-box-container .search-box-input{max-width:none!important}.branch-like-navigation-menu .item-list{padding-bottom:8px;max-height:300px;overflow-y:auto}.branch-like-navigation-menu .item{padding:4px 8px}.branch-like-navigation-menu .item.header{color:#777}.branch-like-navigation-menu .item:not(.header).active,.branch-like-navigation-menu .item:not(.header):hover{background-color:#f3f3f3;cursor:pointer}.branch-like-navigation-menu .hint-container{padding:8px;background-color:#f3f3f3;border-top:1px solid #e6e6e6}\", \"\"]);\n\n","export default \"**Get the most out of SonarQube with branches analysis**\\n\\nAnalyze each branch of your project separately with the Developer Edition.\\n\\n---\\n\\n[Learn More](https://redirect.sonarsource.com/editions/developer.html)\\n\"","export default \"**Learn how to analyze branches in {instance}**\\n\\nQuickly setup branch analysis and get separate insights for each of your branches and pull requests.\\n\\n---\\n\\n[Branches Documentation](/branches/overview/)  \\n[Pull Request Analysis](/analysis/pull-request/)\\n\"","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".header-meta-warnings .alert{margin-bottom:0}.header-meta-warnings .alert-content{padding:6px 8px}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".navbar-tabs>li>a.menu-button{color:#236a97}.navbar-tabs>li>a.menu-button:hover{color:#4b9fd5;border-bottom-color:transparent}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".navbar-inner-with-notif .info-drawer{border-top:1px solid #e6e6e6}.info-drawer-pane{background-color:#fff;right:-380px;width:380px;transition:right .3s ease-in-out;border-left:1px solid #e6e6e6;box-sizing:border-box}.info-drawer-pane.open{right:0}.info-drawer{position:fixed;bottom:0;z-index:51}.info-drawer .close-button{position:absolute;top:0;right:0;background:#fff;padding:16px;z-index:2}.info-drawer .back-button{cursor:pointer}.info-drawer .back-button:hover{color:#4b9fd5}.info-drawer-page{position:absolute;top:0;bottom:0}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".badges-list{display:flex;justify-content:space-around;justify-content:space-evenly;flex-wrap:nowrap}.button.badge-button{display:flex;justify-content:center;padding:8px;min-width:146px;height:116px;background-color:#f3f3f3;border:1px solid #e6e6e6;border-radius:3px;transition:all .3s ease}.button.badge-button:active,.button.badge-button:focus,.button.badge-button:hover{background-color:#f3f3f3;border-color:#4b9fd5;box-shadow:none}.button.badge-button.selected{background-color:#cae3f2;border-color:#236a97}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".project-info-list>li{padding-left:1px;padding-bottom:4px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-info-tags{position:relative}.project-info-deleted-profile,.project-info-deprecated-rules{margin:4px -6px;padding:3px 6px!important;border:1px solid #f4b1b0;border-radius:3px;background-color:#f2dede}.project-info-deleted-profile a,.project-info-deprecated-rules a{color:#0e516f;border-color:darken(#cae3f2)}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ComponentQualifier } from '../../../../types/component';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: T.Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translateWithParameters(\n            'component_navigation.status.last_blocked_due_to_bad_license_X',\n            translate('qualifier', currentTask.componentQualifier || ComponentQualifier.Project)\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\n\ninterface Props {\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component, currentTask } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n\n    let type;\n    if (currentTask && hasMessage('background_task.type', currentTask.type)) {\n      messageKey += '_X';\n      type = translate('background_task.type', currentTask.type);\n    }\n\n    let url;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n      url = (\n        <Link to={getComponentBackgroundTaskUrl(component.key, status)}>\n          {translate('background_tasks.page')}\n        </Link>\n      );\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url, type }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === STATUSES.FAILED) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocTooltip from '../../../../../components/docs/DocTooltip';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName } from '../../../../../helpers/branch-like';\nimport { getPortfolioAdminUrl } from '../../../../../helpers/urls';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { colors } from '../../../../theme';\n\nexport interface CurrentBranchLikeProps {\n  branchesEnabled: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  hasManyBranches: boolean;\n}\n\nexport function CurrentBranchLike(props: CurrentBranchLikeProps) {\n  const {\n    branchesEnabled,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    hasManyBranches\n  } = props;\n\n  const displayName = getBranchLikeDisplayName(currentBranchLike);\n  const isApplication = component.qualifier === ComponentQualifier.Application;\n  const canAdminComponent = configuration && configuration.showSettings;\n\n  const additionalIcon = () => {\n    const plusIcon = <PlusCircleIcon fill={colors.blue} size={12} />;\n\n    if (branchesEnabled && hasManyBranches) {\n      return <DropdownIcon />;\n    }\n\n    if (isApplication) {\n      if (!hasManyBranches && canAdminComponent) {\n        return (\n          <HelpTooltip\n            overlay={\n              <>\n                <p>{translate('application.branches.help')}</p>\n                <hr className=\"spacer-top spacer-bottom\" />\n                <Link to={getPortfolioAdminUrl(component.key, component.qualifier)}>\n                  {translate('application.branches.link')}\n                </Link>\n              </>\n            }>\n            {plusIcon}\n          </HelpTooltip>\n        );\n      }\n    } else {\n      if (!branchesEnabled) {\n        return (\n          <DocTooltip\n            data-test=\"branches-support-disabled\"\n            doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/no-branch-support.md')}>\n            {plusIcon}\n          </DocTooltip>\n        );\n      }\n\n      if (!hasManyBranches) {\n        return (\n          <DocTooltip\n            data-test=\"only-one-branch-like\"\n            doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/single-branch.md')}>\n            {plusIcon}\n          </DocTooltip>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <span className=\"display-flex-center flex-shrink text-ellipsis\">\n      <BranchLikeIcon branchLike={currentBranchLike} />\n      <span\n        className=\"spacer-left spacer-right flex-shrink text-ellipsis js-branch-like-name\"\n        title={displayName}>\n        {displayName}\n      </span>\n      {additionalIcon()}\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLike);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../../components/common/BranchStatus';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName, isMainBranch } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface MenuItemProps {\n  branchLike: BranchLike;\n  component: T.Component;\n  indent?: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n  setSelectedNode?: (node: HTMLLIElement) => void;\n}\n\nexport function MenuItem(props: MenuItemProps) {\n  const { branchLike, component, indent, setSelectedNode, onSelect, selected } = props;\n  const displayName = getBranchLikeDisplayName(branchLike);\n\n  return (\n    <li\n      className={classNames('item', {\n        active: selected\n      })}\n      onClick={() => onSelect(branchLike)}\n      ref={selected ? setSelectedNode : undefined}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between', {\n          'big-spacer-left': indent\n        })}>\n        <div className=\"item-name text-ellipsis\" title={displayName}>\n          <BranchLikeIcon branchLike={branchLike} />\n          <span className=\"spacer-left\">{displayName}</span>\n          {isMainBranch(branchLike) && (\n            <span className=\"badge spacer-left\">{translate('branches.main_branch')}</span>\n          )}\n        </div>\n        <div className=\"spacer-left\">\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default React.memo(MenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getBranchLikeKey, isSameBranchLike } from '../../../../../helpers/branch-like';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport MenuItem from './MenuItem';\n\nexport interface MenuItemListProps {\n  branchLikeTree: BranchLikeTree;\n  component: T.Component;\n  hasResults: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport function MenuItemList(props: MenuItemListProps) {\n  let listNode: HTMLUListElement | null = null;\n  let selectedNode: HTMLLIElement | null = null;\n\n  React.useEffect(() => {\n    if (listNode && selectedNode) {\n      scrollToElement(selectedNode, { parent: listNode, smooth: false });\n    }\n  });\n\n  const { branchLikeTree, component, hasResults, onSelect, selectedBranchLike } = props;\n\n  const renderItem = (branchLike: BranchLike, indent?: boolean) => (\n    <MenuItem\n      branchLike={branchLike}\n      component={component}\n      indent={indent}\n      key={getBranchLikeKey(branchLike)}\n      onSelect={onSelect}\n      selected={isSameBranchLike(branchLike, selectedBranchLike)}\n      setSelectedNode={node => (selectedNode = node)}\n    />\n  );\n\n  return (\n    <ul className=\"item-list\" ref={node => (listNode = node)}>\n      {!hasResults && (\n        <li className=\"item\">\n          <span className=\"note\">{translate('no_results')}</span>\n        </li>\n      )}\n\n      {/* BRANCHES & PR */}\n      {[branchLikeTree.mainBranchTree, ...branchLikeTree.branchTree].filter(isDefined).map(tree => (\n        <React.Fragment key={getBranchLikeKey(tree.branch)}>\n          {renderItem(tree.branch)}\n          {tree.pullRequests.length > 0 && (\n            <>\n              <li className=\"item header\">\n                <span className=\"big-spacer-left\">\n                  {translate('branch_like_navigation.pull_requests')}\n                </span>\n              </li>\n              {tree.pullRequests.map(pr => renderItem(pr, true))}\n            </>\n          )}\n          <hr />\n        </React.Fragment>\n      ))}\n\n      {/* PARENTLESS PR (for display during search) */}\n      {branchLikeTree.parentlessPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">{translate('branch_like_navigation.pull_requests')}</li>\n          {branchLikeTree.parentlessPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n\n      {/* ORPHAN PR */}\n      {branchLikeTree.orphanPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">\n            {translate('branch_like_navigation.orphan_pull_requests')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('branch_like_navigation.orphan_pull_requests.tooltip')}\n            />\n          </li>\n          {branchLikeTree.orphanPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n    </ul>\n  );\n}\n\nexport default React.memo(MenuItemList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { KeyCodes } from 'sonar-ui-common/helpers/keycodes';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../../../components/hoc/withRouter';\nimport {\n  getBrancheLikesAsTree,\n  isBranch,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../../../helpers/branch-like';\nimport { getBranchLikeUrl } from '../../../../../helpers/urls';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport MenuItemList from './MenuItemList';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdminComponent?: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  branchLikesToDisplay: BranchLike[];\n  branchLikesToDisplayTree: BranchLikeTree;\n  query: string;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport class Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let selectedBranchLike = undefined;\n\n    if (props.branchLikes.some(b => isSameBranchLike(b, props.currentBranchLike))) {\n      selectedBranchLike = props.currentBranchLike;\n    } else if (props.branchLikes.length > 0) {\n      selectedBranchLike = props.branchLikes[0];\n    }\n\n    this.state = {\n      query: '',\n      selectedBranchLike,\n      ...this.processBranchLikes(props.branchLikes)\n    };\n  }\n\n  processBranchLikes = (branchLikes: BranchLike[]) => {\n    const tree = getBrancheLikesAsTree(branchLikes);\n    return {\n      branchLikesToDisplay: [\n        ...(tree.mainBranchTree\n          ? [tree.mainBranchTree.branch, ...tree.mainBranchTree.pullRequests]\n          : []),\n        ...tree.branchTree.reduce((prev, t) => [...prev, t.branch, ...t.pullRequests], []),\n        ...tree.parentlessPullRequests,\n        ...tree.orphanPullRequests\n      ],\n      branchLikesToDisplayTree: tree\n    };\n  };\n\n  openHighlightedBranchLike = () => {\n    if (this.state.selectedBranchLike) {\n      this.handleOnSelect(this.state.selectedBranchLike);\n    }\n  };\n\n  highlightSiblingBranchlike = (indexDelta: number) => {\n    const selectBranchLikeIndex = this.state.branchLikesToDisplay.findIndex(b =>\n      isSameBranchLike(b, this.state.selectedBranchLike)\n    );\n    const newIndex = selectBranchLikeIndex + indexDelta;\n\n    if (\n      selectBranchLikeIndex !== -1 &&\n      newIndex >= 0 &&\n      newIndex < this.state.branchLikesToDisplay.length\n    ) {\n      this.setState(({ branchLikesToDisplay }) => ({\n        selectedBranchLike: branchLikesToDisplay[newIndex]\n      }));\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.preventDefault();\n        this.openHighlightedBranchLike();\n        break;\n      case KeyCodes.UpArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(-1);\n        break;\n      case KeyCodes.DownArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(+1);\n        break;\n    }\n  };\n\n  handleSearchChange = (query: string) => {\n    const q = query.toLowerCase();\n\n    const filterBranch = (branch: BranchLike) =>\n      isBranch(branch) && branch.name.toLowerCase().includes(q);\n    const filterPullRequest = (pr: BranchLike) =>\n      isPullRequest(pr) && (pr.title.toLowerCase().includes(q) || pr.key.toLowerCase().includes(q));\n\n    const filteredBranchLikes = this.props.branchLikes.filter(\n      bl => filterBranch(bl) || filterPullRequest(bl)\n    );\n\n    this.setState({\n      query: q,\n      selectedBranchLike: filteredBranchLikes.length > 0 ? filteredBranchLikes[0] : undefined,\n      ...this.processBranchLikes(filteredBranchLikes)\n    });\n  };\n\n  handleOnSelect = (branchLike: BranchLike) => {\n    this.setState({ selectedBranchLike: branchLike }, () => {\n      this.props.onClose();\n      this.props.router.push(getBranchLikeUrl(this.props.component.key, branchLike));\n    });\n  };\n\n  render() {\n    const { canAdminComponent, component, onClose } = this.props;\n    const {\n      branchLikesToDisplay,\n      branchLikesToDisplayTree,\n      query,\n      selectedBranchLike\n    } = this.state;\n\n    const showManageLink = component.qualifier === ComponentQualifier.Project && canAdminComponent;\n    const hasResults = branchLikesToDisplay.length > 0;\n\n    return (\n      <DropdownOverlay className=\"branch-like-navigation-menu\" noPadding={true}>\n        <div className=\"search-box-container\">\n          <SearchBox\n            autoFocus={true}\n            onChange={this.handleSearchChange}\n            onKeyDown={this.handleKeyDown}\n            placeholder={translate('branch_like_navigation.search_for_branch_like')}\n            value={query}\n          />\n        </div>\n\n        <div className=\"item-list-container\">\n          <MenuItemList\n            branchLikeTree={branchLikesToDisplayTree}\n            component={component}\n            hasResults={hasResults}\n            onSelect={this.handleOnSelect}\n            selectedBranchLike={selectedBranchLike}\n          />\n        </div>\n\n        {showManageLink && (\n          <div className=\"hint-container text-right\">\n            <Link\n              onClick={() => onClose()}\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branch_like_navigation.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Toggler from 'sonar-ui-common/components/controls/Toggler';\nimport { withAppState } from '../../../../../components/hoc/withAppState';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport './BranchLikeNavigation.css';\nimport CurrentBranchLike from './CurrentBranchLike';\nimport Menu from './Menu';\n\nexport interface BranchLikeNavigationProps {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike;\n}\n\nexport function BranchLikeNavigation(props: BranchLikeNavigationProps) {\n  const {\n    appState: { branchesEnabled },\n    branchLikes,\n    component,\n    component: { configuration },\n    currentBranchLike\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const canAdminComponent = configuration && configuration.showSettings;\n  const hasManyBranches = branchLikes.length >= 2;\n  const isMenuEnabled = branchesEnabled && hasManyBranches;\n\n  const currentBranchLikeElement = (\n    <CurrentBranchLike\n      branchesEnabled={Boolean(branchesEnabled)}\n      component={component}\n      currentBranchLike={currentBranchLike}\n      hasManyBranches={hasManyBranches}\n    />\n  );\n\n  return (\n    <span\n      className={classNames('big-spacer-left flex-0 branch-like-navigation-toggler-container', {\n        dropdown: isMenuEnabled\n      })}>\n      {isMenuEnabled ? (\n        <Toggler\n          onRequestClose={() => setIsMenuOpen(false)}\n          open={isMenuOpen}\n          overlay={\n            <Menu\n              branchLikes={branchLikes}\n              canAdminComponent={canAdminComponent}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              onClose={() => setIsMenuOpen(false)}\n            />\n          }>\n          <a\n            className=\"link-base-color link-no-underline\"\n            href=\"#\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {currentBranchLikeElement}\n          </a>\n        </Toggler>\n      ) : (\n        currentBranchLikeElement\n      )}\n    </span>\n  );\n}\n\nexport default withAppState(React.memo(BranchLikeNavigation));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPullRequest } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface CurrentBranchLikeMergeInformationProps {\n  currentBranchLike: BranchLike;\n}\n\nexport function CurrentBranchLikeMergeInformation(props: CurrentBranchLikeMergeInformationProps) {\n  const { currentBranchLike } = props;\n\n  if (!isPullRequest(currentBranchLike)) {\n    return null;\n  }\n\n  return (\n    <span className=\"big-spacer-left flex-shrink note text-ellipsis\">\n      <FormattedMessage\n        defaultMessage={translate('branch_like_navigation.for_merge_into_x_from_y')}\n        id=\"branch_like_navigation.for_merge_into_x_from_y\"\n        values={{\n          target: <strong>{currentBranchLike.target}</strong>,\n          branch: <strong>{currentBranchLike.branch}</strong>\n        }}\n      />\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLikeMergeInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { last } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { isMainBranch } from '../../../../helpers/branch-like';\nimport { getProjectUrl } from '../../../../helpers/urls';\nimport { BranchLike } from '../../../../types/branch-like';\n\ninterface Props {\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n}\n\nexport function Breadcrumb(props: Props) {\n  const {\n    component: { breadcrumbs },\n    currentBranchLike\n  } = props;\n  const lastBreadcrumbElement = last(breadcrumbs);\n  const isNoMainBranch = currentBranchLike && !isMainBranch(currentBranchLike);\n\n  return (\n    <div className=\"big flex-shrink display-flex-center\">\n      {breadcrumbs.map((breadcrumbElement, i) => {\n        const isFirst = i === 0;\n        const isNotLast = i < breadcrumbs.length - 1;\n\n        return (\n          <span className=\"flex-shrink display-flex-center\" key={breadcrumbElement.key}>\n            {isFirst && lastBreadcrumbElement && (\n              <QualifierIcon className=\"spacer-right\" qualifier={lastBreadcrumbElement.qualifier} />\n            )}\n            {isNoMainBranch || isNotLast ? (\n              <Link\n                className=\"link-no-underline text-ellipsis\"\n                title={breadcrumbElement.name}\n                to={getProjectUrl(breadcrumbElement.key)}>\n                {breadcrumbElement.name}\n              </Link>\n            ) : (\n              <span className=\"text-ellipsis\" title={breadcrumbElement.name}>\n                {breadcrumbElement.name}\n              </span>\n            )}\n            {isNotLast && <span className=\"slash-separator\" />}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(Breadcrumb);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport Favorite from '../../../../components/controls/Favorite';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport BranchLikeNavigation from './branch-like/BranchLikeNavigation';\nimport CurrentBranchLikeMergeInformation from './branch-like/CurrentBranchLikeMergeInformation';\nimport { Breadcrumb } from './Breadcrumb';\n\nexport interface HeaderProps {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n  currentUser: T.CurrentUser;\n}\n\nexport function Header(props: HeaderProps) {\n  const { branchLikes, component, currentBranchLike, currentUser } = props;\n\n  return (\n    <>\n      <Helmet title={component.name} />\n      <header className=\"display-flex-center flex-shrink\">\n        <Breadcrumb component={component} currentBranchLike={currentBranchLike} />\n        {isLoggedIn(currentUser) && (\n          <Favorite\n            className=\"spacer-left\"\n            component={component.key}\n            favorite={Boolean(component.isFavorite)}\n            qualifier={component.qualifier}\n          />\n        )}\n        {currentBranchLike && (\n          <>\n            <BranchLikeNavigation\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={currentBranchLike}\n            />\n            <CurrentBranchLikeMergeInformation currentBranchLike={currentBranchLike} />\n          </>\n        )}\n      </header>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(React.memo(Header));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst AnalysisWarningsModal = lazyLoad(() =>\n  import('../../../../components/common/AnalysisWarningsModal')\n);\n\ninterface Props {\n  warnings: string[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Alert className=\"js-component-analysis-warnings flex-1\" display=\"inline\" variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analysis_had_warnings')}\n            id=\"component_navigation.last_analysis_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  <FormattedMessage\n                    defaultMessage={translate('component_navigation.x_warnings')}\n                    id=\"component_navigation.x_warnings\"\n                    values={{\n                      warningsCount: this.props.warnings.length\n                    }}\n                  />\n                </a>\n              )\n            }}\n          />\n        </Alert>\n        {this.state.modal && (\n          <AnalysisWarningsModal onClose={this.handleCloseModal} warnings={this.props.warnings} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport DateTimeFormatter from '../../../../components/intl/DateTimeFormatter';\nimport { isBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport './HeaderMeta.css';\n\nexport interface HeaderMetaProps {\n  branchLike?: BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  warnings: string[];\n}\n\nexport function HeaderMeta(props: HeaderMetaProps) {\n  const { branchLike, component, currentUser, warnings } = props;\n\n  const isABranch = isBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && isABranch;\n\n  return (\n    <>\n      <div className=\"display-flex-center flex-0 small\">\n        {warnings.length > 0 && (\n          <span className=\"header-meta-warnings\">\n            <ComponentNavWarnings warnings={warnings} />\n          </span>\n        )}\n        {component.analysisDate && (\n          <span className=\"spacer-left nowrap note\">\n            <DateTimeFormatter date={component.analysisDate} />\n          </span>\n        )}\n        {displayVersion && (\n          <span className=\"spacer-left nowrap note\">{`${translate('version')} ${\n            component.version\n          }`}</span>\n        )}\n        {isLoggedIn(currentUser) && isABranch && currentPage !== undefined && (\n          <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n        )}\n      </div>\n      {isPullRequest(branchLike) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n\n  switch (component.qualifier) {\n    case ComponentQualifier.Portfolio:\n    case ComponentQualifier.SubPortfolio:\n      currentPage = { type: 'PORTFOLIO', component: component.key };\n      break;\n    case ComponentQualifier.Application:\n      currentPage = {\n        type: 'APPLICATION',\n        component: component.key,\n        branch: isBranch(branchLike) ? branchLike.name : undefined\n      };\n      break;\n    case ComponentQualifier.Project:\n      // when home page is set to the default branch of a project, its name is returned as `undefined`\n      currentPage = {\n        type: 'PROJECT',\n        component: component.key,\n        branch: isBranch(branchLike) ? branchLike.name : undefined\n      };\n      break;\n  }\n\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(HeaderMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport NavBarTabs from 'sonar-ui-common/components/ui/NavBarTabs';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getBranchLikeQuery, isMainBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport './Menu.css';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/baseline',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: BranchLike | undefined;\n  component: T.Component;\n  onToggleProjectInfo: () => void;\n}\n\nexport class Menu extends React.PureComponent<Props> {\n  isProject() {\n    return this.props.component.qualifier === ComponentQualifier.Project;\n  }\n\n  isDeveloper() {\n    return this.props.component.qualifier === ComponentQualifier.Developper;\n  }\n\n  isPortfolio() {\n    const { qualifier } = this.props.component;\n    return (\n      qualifier === ComponentQualifier.Portfolio || qualifier === ComponentQualifier.SubPortfolio\n    );\n  }\n\n  isApplication() {\n    return this.props.component.qualifier === ComponentQualifier.Application;\n  }\n\n  getConfiguration() {\n    return this.props.component.configuration || {};\n  }\n\n  getQuery = () => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink() {\n    const pathname = this.isPortfolio() ? '/portfolio' : '/dashboard';\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname, query: this.getQuery() }}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCodeLink() {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname: '/code', query: this.getQuery() }}>\n          {this.isPortfolio() || this.isApplication()\n            ? translate('view_projects.page')\n            : translate('code.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderActivityLink() {\n    const { branchLike } = this.props;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/activity', query: this.getQuery() }}>\n          {translate('project_activity.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderIssuesLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/issues', query: { ...this.getQuery(), resolved: 'false' } }}>\n          {translate('issues.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderComponentMeasuresLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/component_measures', query: this.getQuery() }}>\n          {translate('layout.measures')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderSecurityHotspotsLink() {\n    return (\n      !this.isPortfolio() && (\n        <li>\n          <Link\n            activeClassName=\"active\"\n            to={{ pathname: '/security_hotspots', query: this.getQuery() }}>\n            {translate('layout.security_hotspots')}\n          </Link>\n        </li>\n      )\n    );\n  }\n\n  renderSecurityReports() {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query: this.getQuery()\n          }}>\n          {translate('layout.security_reports')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderAdministration() {\n    const { branchLike, component } = this.props;\n\n    if (!this.getConfiguration().showSettings || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks();\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {hasMessage('layout.settings', component.qualifier)\n              ? translate('layout.settings', component.qualifier)\n              : translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderAdministrationLinks() {\n    return [\n      this.renderSettingsLink(),\n      this.renderBranchesLink(),\n      this.renderBaselineLink(),\n      this.renderProfilesLink(),\n      this.renderQualityGateLink(),\n      this.renderCustomMeasuresLink(),\n      this.renderLinksLink(),\n      this.renderPermissionsLink(),\n      this.renderBackgroundTasksLink(),\n      this.renderUpdateKeyLink(),\n      this.renderWebhooksLink(),\n      ...this.renderAdminExtensions(),\n      this.renderDeletionLink()\n    ];\n  }\n\n  renderProjectInformationButton() {\n    if (isPullRequest(this.props.branchLike)) {\n      return null;\n    }\n\n    return (\n      (this.isProject() || this.isApplication()) && (\n        <li>\n          <a\n            className=\"menu-button\"\n            onClick={(e: React.SyntheticEvent<HTMLAnchorElement>) => {\n              e.preventDefault();\n              e.currentTarget.blur();\n              this.props.onToggleProjectInfo();\n            }}\n            role=\"button\"\n            tabIndex={0}>\n            <BulletListIcon className=\"little-spacer-right\" />\n            {translate(this.isProject() ? 'project' : 'application', 'info.title')}\n          </a>\n        </li>\n      )\n    );\n  }\n\n  renderSettingsLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/settings', query: this.getQuery() }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBranchesLink() {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !this.isProject() ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/branches', query: this.getQuery() }}>\n          {translate('project_branch_pull_request.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBaselineLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"baseline\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/baseline', query: this.getQuery() }}>\n          {translate('project_baseline.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderProfilesLink() {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_profiles', query: this.getQuery() }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderQualityGateLink() {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_gate', query: this.getQuery() }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCustomMeasuresLink() {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/custom_measures', query: this.getQuery() }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderLinksLink() {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/links', query: this.getQuery() }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderPermissionsLink() {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project_roles', query: this.getQuery() }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBackgroundTasksLink() {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/background_tasks', query: this.getQuery() }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderUpdateKeyLink() {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/key', query: this.getQuery() }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderWebhooksLink() {\n    if (!this.getConfiguration().showSettings || !this.isProject()) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/webhooks', query: this.getQuery() }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderDeletionLink() {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (\n      ![\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/deletion', query: this.getQuery() }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { ...this.getQuery(), qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions() {\n    if (this.props.branchLike && !isMainBranch(this.props.branchLike)) {\n      return [];\n    }\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true));\n  }\n\n  renderExtensions() {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n    if (\n      withoutSecurityExtension.length === 0 ||\n      (this.props.branchLike && !isMainBranch(this.props.branchLike))\n    ) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"display-flex-center display-flex-space-between\">\n        <NavBarTabs>\n          {this.renderDashboardLink()}\n          {this.renderIssuesLink()}\n          {this.renderSecurityHotspotsLink()}\n          {this.renderSecurityReports()}\n          {this.renderComponentMeasuresLink()}\n          {this.renderCodeLink()}\n          {this.renderActivityLink()}\n          {this.renderExtensions()}\n        </NavBarTabs>\n        <NavBarTabs>\n          {this.renderAdministration()}\n          {this.renderProjectInformationButton()}\n        </NavBarTabs>\n      </div>\n    );\n  }\n}\n\nexport default withAppState(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport EscKeydownHandler from 'sonar-ui-common/components/controls/EscKeydownHandler';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport './InfoDrawer.css';\n\nexport interface InfoDrawerProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onClose: () => void;\n  top: number;\n}\n\nexport default function InfoDrawer(props: InfoDrawerProps) {\n  const { children, displayed, onClose, top } = props;\n\n  return (\n    <div\n      className={classNames('info-drawer info-drawer-pane', { open: displayed })}\n      style={{ top }}>\n      <div className=\"close-button\">\n        <ClearButton onClick={onClose} />\n      </div>\n      {displayed && (\n        <EscKeydownHandler onKeydown={onClose}>\n          <OutsideClickHandler onClickOutside={onClose}>\n            <div className=\"display-flex-column max-height-100\">{children}</div>\n          </OutsideClickHandler>\n        </EscKeydownHandler>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { getLocalizedMetricName } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { getHostUrl, getPathUrlAsString } from 'sonar-ui-common/helpers/urls';\nimport { getProjectUrl } from '../../../../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\nexport type BadgeFormats = 'md' | 'url';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  format?: BadgeFormats;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeSnippet(type: BadgeType, options: BadgeOptions) {\n  const url = getBadgeUrl(type, options);\n  const { branch, format = 'md', metric = 'alert_status', project } = options;\n\n  if (format === 'url') {\n    return url;\n  } else {\n    let label;\n    let projectUrl;\n\n    switch (type) {\n      case BadgeType.marketing:\n        label = 'SonarCloud';\n        break;\n      case BadgeType.measure:\n        label = getLocalizedMetricName({ key: metric });\n        break;\n      case BadgeType.qualityGate:\n      default:\n        label = 'Quality gate';\n        break;\n    }\n\n    if (project) {\n      projectUrl = getPathUrlAsString(getProjectUrl(project, branch), false);\n    }\n\n    const mdImage = `![${label}](${url})`;\n    return projectUrl ? `[${mdImage}](${projectUrl})` : mdImage;\n  }\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BadgeType } from './utils';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchWebApi } from '../../../../../../api/web-api';\nimport { BadgeColors, BadgeFormats, BadgeOptions, BadgeType } from './utils';\n\ninterface Props {\n  className?: string;\n  metrics: T.Dict<T.Metric>;\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(d => d.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(w => w.key === 'measure');\n          const param = ws && ws.params && ws.params.find(p => p.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () => {\n    return ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n  };\n\n  getFormatOptions = () => {\n    return ['md', 'url'].map(format => ({\n      label: translate('overview.badges.options.formats', format),\n      value: format\n    }));\n  };\n\n  getMetricOptions = () => {\n    return this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n  };\n\n  handleColorChange = ({ value }: { value: BadgeColors }) => {\n    this.props.updateOptions({ color: value });\n  };\n\n  handleFormatChange = ({ value }: { value: BadgeFormats }) => {\n    this.props.updateOptions({ format: value });\n  };\n\n  handleMetricChange = ({ value }: { value: string }) => {\n    this.props.updateOptions({ metric: value });\n  };\n\n  renderBadgeType = (type: BadgeType, options: BadgeOptions) => {\n    if (type === BadgeType.marketing) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-color\">\n            {translate('color')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            name=\"badge-color\"\n            onChange={this.handleColorChange}\n            options={this.getColorOptions()}\n            searchable={false}\n            value={options.color}\n          />\n        </>\n      );\n    } else if (type === BadgeType.measure) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-metric\">\n            {translate('overview.badges.metric')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            menuStyle={{ maxHeight: 100 }}\n            name=\"badge-metric\"\n            onChange={this.handleMetricChange}\n            options={this.getMetricOptions()}\n            searchable={false}\n            value={options.metric}\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { className, options, type } = this.props;\n    return (\n      <div className={className}>\n        {this.renderBadgeType(type, options)}\n\n        <label\n          className={classNames('spacer-right', {\n            'spacer-top': type !== BadgeType.qualityGate\n          })}\n          htmlFor=\"badge-format\">\n          {translate('format')}:\n        </label>\n        <Select\n          className=\"input-medium\"\n          clearable={false}\n          name=\"badge-format\"\n          onChange={this.handleFormatChange}\n          options={this.getFormatOptions()}\n          searchable={false}\n          value={this.props.options.format || 'md'}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CodeSnippet from '../../../../../../components/common/CodeSnippet';\nimport { getBranchLikeQuery } from '../../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../../types/branch-like';\nimport { MetricKey } from '../../../../../../types/metrics';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport './styles.css';\nimport { BadgeOptions, BadgeType, getBadgeSnippet, getBadgeUrl } from './utils';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: T.Dict<T.Metric>;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class ProjectBadges extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: MetricKey.alert_status }\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n\n    return (\n      <div className=\"display-flex-column\">\n        <h3>{translate('overview.badges.get_badge', qualifier)}</h3>\n        <p className=\"big-spacer-bottom\">{translate('overview.badges.description', qualifier)}</p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.measure === selectedType}\n          type={BadgeType.measure}\n          url={getBadgeUrl(BadgeType.measure, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.measure, 'description', qualifier)}\n        </p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.qualityGate === selectedType}\n          type={BadgeType.qualityGate}\n          url={getBadgeUrl(BadgeType.qualityGate, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.qualityGate, 'description', qualifier)}\n        </p>\n        <BadgeParams\n          className=\"big-spacer-bottom display-flex-column\"\n          metrics={this.props.metrics}\n          options={badgeOptions}\n          type={selectedType}\n          updateOptions={this.handleUpdateOptions}\n        />\n        <CodeSnippet isOneLine={true} snippet={getBadgeSnippet(selectedType, fullBadgeOptions)} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport BackIcon from 'sonar-ui-common/components/icons/BackIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface InfoDrawerPageProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onPageChange: () => void;\n}\n\nexport default function InfoDrawerPage(props: InfoDrawerPageProps) {\n  const { children, displayed, onPageChange } = props;\n  return (\n    <div\n      className={classNames(\n        'info-drawer-page info-drawer-pane display-flex-column overflow-hidden',\n        {\n          open: displayed\n        }\n      )}>\n      <h2 className=\"back-button big-padded bordered-bottom\" onClick={() => onPageChange()}>\n        <BackIcon className=\"little-spacer-right\" />\n        {translate('back')}\n      </h2>\n\n      {displayed && <div className=\"overflow-y-auto big-padded\">{children}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from '../../../../../../apps/account/notifications/NotificationsList';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../../../../components/hoc/withNotifications';\n\ninterface Props {\n  className?: string;\n  component: T.Component;\n}\n\nexport function ProjectNotifications(props: WithNotificationsProps & Props) {\n  const { channels, component, loading, notifications, perProjectTypes } = props;\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ project: component.key, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      project: component.key,\n      channel,\n      type\n    });\n  };\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${component.key}-${type}-${channel}`;\n  };\n\n  const projectNotifications = notifications.filter(n => n.project && n.project === component.key);\n\n  return (\n    <>\n      <h3>{translate('project.info.notifications')}</h3>\n\n      <Alert className=\"spacer-top\" variant=\"info\">\n        {translate('notification.dispatcher.information')}\n      </Alert>\n\n      <DeferredSpinner loading={loading}>\n        <table className=\"data zebra notifications-table\">\n          <thead>\n            <tr>\n              <th aria-label={translate('project')} />\n              {channels.map(channel => (\n                <th className=\"text-center\" key={channel}>\n                  <h4>{translate('notification.channel', channel)}</h4>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <NotificationsList\n            channels={channels}\n            checkboxId={getCheckboxId}\n            notifications={projectNotifications}\n            onAdd={handleAddNotification}\n            onRemove={handleRemoveNotification}\n            project={true}\n            types={perProjectTypes}\n          />\n        </table>\n      </DeferredSpinner>\n    </>\n  );\n}\n\nexport default withNotifications(ProjectNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ProjectInformationPages {\n  main,\n  badges,\n  notifications\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\n\nexport interface DrawerLinkProps<P> {\n  label: string;\n  onPageChange: (page: P) => void;\n  to: P;\n}\n\nexport function DrawerLink<P>(props: DrawerLinkProps<P>) {\n  const { label, to } = props;\n\n  return (\n    <a\n      className=\"display-flex-space-between bordered-bottom big-padded\"\n      onClick={() => props.onPageChange(to)}\n      role=\"link\"\n      tabIndex={0}>\n      {label}\n      <ChevronRightIcon />\n    </a>\n  );\n}\n\nexport default React.memo(DrawerLink);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h3>{translate('overview.project_key', qualifier)}</h3>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" readOnly={true} type=\"text\" value={componentKey} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectLinks } from '../../../../../../api/projectLinks';\nimport { orderLinks } from '../../../../../../helpers/projectLinks';\nimport MetaLink from './MetaLink';\n\ninterface Props {\n  component: T.LightComponent;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <>\n        <div className=\"big-padded bordered-bottom\">\n          <h3>{translate('overview.external_links')}</h3>\n          <ul className=\"project-info-list\">\n            {orderedLinks.map(link => (\n              <MetaLink key={link.id} link={link} />\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityGateUrl } from '../../../../../../helpers/urls';\n\ninterface Props {\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate }: Props) {\n  return (\n    <>\n      <h3>{translate('project.info.quality_gate')}</h3>\n\n      <ul className=\"project-info-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">({translate('default')})</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../../../../api/rules';\nimport { getQualityProfileUrl } from '../../../../../../helpers/urls';\nimport { getLanguages, Store } from '../../../../../../store/rootReducer';\n\ninterface StateProps {\n  languages: T.Languages;\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  profiles: T.ComponentQualityProfile[];\n}\n\ninterface State {\n  deprecatedByKey: T.Dict<number>;\n}\n\nexport class MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const existingProfiles = this.props.profiles.filter(p => !p.deleted);\n    const requests = existingProfiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: T.Dict<number> = {};\n          responses.forEach((count, i) => {\n            const profileKey = existingProfiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      organization: undefined,\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: T.ComponentQualityProfile) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">({languageName})</span>\n        {profile.deleted ? (\n          profile.name\n        ) : (\n          <Link to={getQualityProfileUrl(profile.name, profile.language)}>{profile.name}</Link>\n        )}\n      </div>\n    );\n\n    if (profile.deleted) {\n      const tooltip = translateWithParameters('overview.deleted_profile', profile.name);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deleted-profile\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h3 className={headerClassName}>{translate('overview.quality_profiles')}</h3>\n\n        <ul className=\"project-info-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure, localizeMetric } from 'sonar-ui-common/helpers/measures';\nimport DrilldownLink from '../../../../../../components/shared/DrilldownLink';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport { MetricKey } from '../../../../../../types/metrics';\n\nexport interface MetaSizeProps {\n  component: T.Component;\n  measures: T.Measure[];\n}\n\nexport default function MetaSize({ component, measures }: MetaSizeProps) {\n  const isApp = component.qualifier === ComponentQualifier.Application;\n  const ncloc = measures.find(measure => measure.metric === MetricKey.ncloc);\n  const projects = isApp\n    ? measures.find(measure => measure.metric === MetricKey.projects)\n    : undefined;\n\n  return (\n    <>\n      <h3>{localizeMetric(MetricKey.ncloc)}</h3>\n      <div className=\"display-flex-center\">\n        {ncloc ? (\n          <>\n            <DrilldownLink className=\"huge\" component={component.key} metric={MetricKey.ncloc}>\n              {formatMeasure(ncloc.value, 'SHORT_INT')}\n            </DrilldownLink>\n\n            <span className=\"spacer-left\">\n              <SizeRating value={Number(ncloc.value)} />\n            </span>\n          </>\n        ) : (\n          <span>0</span>\n        )}\n\n        {isApp && (\n          <span className=\"huge-spacer-left display-inline-flex-center\">\n            {projects ? (\n              <DrilldownLink component={component.key} metric={MetricKey.projects}>\n                <span className=\"big\">{formatMeasure(projects.value, 'SHORT_INT')}</span>\n              </DrilldownLink>\n            ) : (\n              <span className=\"big\">0</span>\n            )}\n            <span className=\"little-spacer-left text-muted\">\n              {translate('metric.projects.name')}\n            </span>\n          </span>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, without } from 'lodash';\nimport * as React from 'react';\nimport { searchProjectTags } from '../../../../../../api/components';\nimport TagsSelector from '../../../../../../components/tags/TagsSelector';\n\ninterface Props {\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setProjectTags } from '../../../../../../api/components';\nimport TagsList from '../../../../../../components/tags/TagsList';\nimport MetaTagsSelector from './MetaTagsSelector';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class MetaTags extends React.PureComponent<Props> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  handleSetProjectTags = (values: string[]) => {\n    setProjectTags({\n      project: this.props.component.key,\n      tags: values.join(',')\n    }).then(\n      () => this.props.onComponentChange({ tags: values }),\n      () => {}\n    );\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"project-info-tags\" ref={card => (this.card = card)}>\n          <Dropdown\n            closeOnClick={false}\n            closeOnClickOutside={true}\n            overlay={\n              <MetaTagsSelector\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            }\n            overlayPlacement={PopupPlacement.BottomLeft}>\n            <ButtonLink innerRef={tagsList => (this.tagsList = tagsList)} stopPropagation={true}>\n              <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n            </ButtonLink>\n          </Dropdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top project-info-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../../../components/common/PrivacyBadgeContainer';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport DrawerLink from './DrawerLink';\nimport MetaKey from './meta/MetaKey';\nimport MetaLinks from './meta/MetaLinks';\nimport MetaQualityGate from './meta/MetaQualityGate';\nimport MetaQualityProfiles from './meta/MetaQualityProfiles';\nimport MetaSize from './meta/MetaSize';\nimport MetaTags from './meta/MetaTags';\nimport { ProjectInformationPages } from './ProjectInformationPages';\n\nexport interface ProjectInformationRendererProps {\n  canConfigureNotifications: boolean;\n  canUseBadges: boolean;\n  component: T.Component;\n  measures?: T.Measure[];\n  onComponentChange: (changes: {}) => void;\n  onPageChange: (page: ProjectInformationPages) => void;\n}\n\nexport function ProjectInformationRenderer(props: ProjectInformationRendererProps) {\n  const { canConfigureNotifications, canUseBadges, component, measures = [] } = props;\n\n  const isApp = component.qualifier === ComponentQualifier.Application;\n\n  return (\n    <>\n      <div>\n        <h2 className=\"big-padded bordered-bottom\">\n          {translate(isApp ? 'application' : 'project', 'info.title')}\n        </h2>\n      </div>\n\n      <div className=\"overflow-y-auto\">\n        {(component.description || !isApp) && (\n          <div className=\"big-padded bordered-bottom\">\n            <div className=\"display-flex-center\">\n              <h3 className=\"spacer-right\">{translate('project.info.description')}</h3>\n              {component.visibility && (\n                <PrivacyBadgeContainer\n                  organization={undefined}\n                  qualifier={component.qualifier}\n                  tooltipProps={{ projectKey: component.key }}\n                  visibility={component.visibility}\n                />\n              )}\n            </div>\n\n            {component.description && <p className=\"spacer-bottom\">{component.description}</p>}\n\n            {!isApp && (\n              <MetaTags component={component} onComponentChange={props.onComponentChange} />\n            )}\n          </div>\n        )}\n\n        <div className=\"big-padded bordered-bottom it__project-loc-value\">\n          <MetaSize component={component} measures={measures} />\n        </div>\n\n        {(component.qualityGate ||\n          (component.qualityProfiles && component.qualityProfiles.length > 0)) && (\n          <>\n            <div className=\"big-padded bordered-bottom\">\n              {component.qualityGate && <MetaQualityGate qualityGate={component.qualityGate} />}\n\n              {component.qualityProfiles && component.qualityProfiles.length > 0 && (\n                <MetaQualityProfiles\n                  headerClassName={component.qualityGate ? 'big-spacer-top' : undefined}\n                  profiles={component.qualityProfiles}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n        {!isApp && <MetaLinks component={component} />}\n\n        <div className=\"big-padded bordered-bottom\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n        </div>\n\n        {canUseBadges && (\n          <DrawerLink\n            label={translate('overview.badges.get_badge', component.qualifier)}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.badges}\n          />\n        )}\n        {canConfigureNotifications && (\n          <DrawerLink\n            label={translate('project.info.to_notifications')}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.notifications}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ProjectInformationRenderer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getMeasures } from '../../../../../api/measures';\nimport { isLoggedIn } from '../../../../../helpers/users';\nimport { fetchMetrics } from '../../../../../store/rootActions';\nimport { getCurrentUser, getMetrics, Store } from '../../../../../store/rootReducer';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { MetricKey } from '../../../../../types/metrics';\nimport ProjectBadges from './badges/ProjectBadges';\nimport InfoDrawerPage from './InfoDrawerPage';\nimport ProjectNotifications from './notifications/ProjectNotifications';\nimport './ProjectInformation.css';\nimport { ProjectInformationPages } from './ProjectInformationPages';\nimport ProjectInformationRenderer from './ProjectInformationRenderer';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  currentUser: T.CurrentUser;\n  fetchMetrics: () => void;\n  onComponentChange: (changes: {}) => void;\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface State {\n  measures?: T.Measure[];\n  page: ProjectInformationPages;\n}\n\nexport class ProjectInformation extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    page: ProjectInformationPages.main\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  setPage = (page: ProjectInformationPages = ProjectInformationPages.main) => {\n    this.setState({ page });\n  };\n\n  loadMeasures = () => {\n    const {\n      component: { key }\n    } = this.props;\n\n    return getMeasures({\n      component: key,\n      metricKeys: [MetricKey.ncloc, MetricKey.projects].join()\n    }).then(measures => {\n      if (this.mounted) {\n        this.setState({ measures });\n      }\n    });\n  };\n\n  render() {\n    const { branchLike, component, currentUser, metrics } = this.props;\n    const { measures, page } = this.state;\n\n    const canConfigureNotifications =\n      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;\n    const canUseBadges =\n      metrics !== undefined &&\n      component.visibility !== 'private' &&\n      (component.qualifier === ComponentQualifier.Application ||\n        component.qualifier === ComponentQualifier.Project);\n\n    return (\n      <>\n        <ProjectInformationRenderer\n          canConfigureNotifications={canConfigureNotifications}\n          canUseBadges={canUseBadges}\n          component={component}\n          measures={measures}\n          onComponentChange={this.props.onComponentChange}\n          onPageChange={this.setPage}\n        />\n        {canUseBadges && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.badges}\n            onPageChange={this.setPage}>\n            <ProjectBadges\n              branchLike={branchLike}\n              metrics={metrics}\n              project={component.key}\n              qualifier={component.qualifier}\n            />\n          </InfoDrawerPage>\n        )}\n        {canConfigureNotifications && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.notifications}\n            onPageChange={this.setPage}>\n            <ProjectNotifications component={component} />\n          </InfoDrawerPage>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ContextNavBar from 'sonar-ui-common/components/ui/ContextNavBar';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { rawSizes } from '../../../theme';\nimport RecentHistory from '../../RecentHistory';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport Header from './Header';\nimport HeaderMeta from './HeaderMeta';\nimport Menu from './Menu';\nimport InfoDrawer from './projectInformation/InfoDrawer';\nimport ProjectInformation from './projectInformation/ProjectInformation';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n  warnings: string[];\n}\n\nexport default function ComponentNav(props: Props) {\n  const {\n    branchLikes,\n    component,\n    currentBranchLike,\n    currentTask,\n    currentTaskOnSameBranch,\n    isInProgress,\n    isPending,\n    warnings\n  } = props;\n  const { contextNavHeightRaw, globalNavHeightRaw } = rawSizes;\n\n  const [displayProjectInfo, setDisplayProjectInfo] = React.useState(false);\n\n  React.useEffect(() => {\n    const { breadcrumbs, key, name, organization } = component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (\n      [\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application,\n        ComponentQualifier.Developper\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      RecentHistory.add(key, name, qualifier.toLowerCase(), organization);\n    }\n  }, [component, component.key]);\n\n  let notifComponent;\n  if (isInProgress || isPending || (currentTask && currentTask.status === STATUSES.FAILED)) {\n    notifComponent = (\n      <ComponentNavBgTaskNotif\n        component={component}\n        currentTask={currentTask}\n        currentTaskOnSameBranch={currentTaskOnSameBranch}\n        isInProgress={isInProgress}\n        isPending={isPending}\n      />\n    );\n  }\n\n  const contextNavHeight = notifComponent ? contextNavHeightRaw + 30 : contextNavHeightRaw;\n\n  return (\n    <ContextNavBar height={contextNavHeight} id=\"context-navigation\" notif={notifComponent}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between little-padded-top', {\n          'padded-bottom': warnings.length === 0\n        })}>\n        <Header\n          branchLikes={branchLikes}\n          component={component}\n          currentBranchLike={currentBranchLike}\n        />\n        <HeaderMeta branchLike={currentBranchLike} component={component} warnings={warnings} />\n      </div>\n      <Menu\n        branchLike={currentBranchLike}\n        component={component}\n        onToggleProjectInfo={() => setDisplayProjectInfo(!displayProjectInfo)}\n      />\n      <InfoDrawer\n        displayed={displayProjectInfo}\n        onClose={() => setDisplayProjectInfo(false)}\n        top={globalNavHeightRaw + contextNavHeightRaw}>\n        <ProjectInformation\n          branchLike={currentBranchLike}\n          component={component}\n          onComponentChange={props.onComponentChange}\n        />\n      </InfoDrawer>\n    </ContextNavBar>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getAnalysisStatus, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { STATUSES } from '../../apps/background-tasks/constants';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../helpers/branch-like';\nimport { isSonarCloud } from '../../helpers/system';\nimport {\n  fetchOrganization,\n  registerBranchStatus,\n  requireAuthorization\n} from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport { ComponentContext } from './ComponentContext';\nimport ComponentNav from './nav/component/ComponentNav';\n\ninterface Props {\n  children: React.ReactElement;\n  fetchOrganization: (organization: string) => void;\n  location: Pick<Location, 'query'>;\n  registerBranchStatus: (branchLike: BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component?: T.Component;\n  currentTask?: T.Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: T.Task[];\n  warnings: string[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (response?: Response) => {\n      if (this.mounted) {\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        if (isSonarCloud()) {\n          this.props.fetchOrganization(componentWithQualifier.organization);\n        }\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: BranchLike;\n    branchLikes: BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === STATUSES.IN_PROGRESS\n              );\n\n              const currentTaskChanged =\n                currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id;\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === STATUSES.PENDING);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: T.Task, branchLike?: BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === STATUSES.FAILED || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: T.Task[], branchLike?: BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (task: Pick<T.Task, 'branch' | 'pullRequest'>, branchLike?: BranchLike) => {\n    if (branchLike && !isMainBranch(branchLike)) {\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isBranch(branchLike)) {\n        return branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            onComponentChange={this.handleComponentChange}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization, registerBranchStatus, requireAuthorization };\n\nexport default withRouter(connect(null, mapDispatchToProps)(ComponentContainer));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from 'sonar-ui-common/helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport const formatterOption = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nexport default function DateTimeFormatter({ children, date }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...formatterOption}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { lazyLoad } from 'sonar-ui-common/components/lazyLoad';\nimport { filterContent } from '../../helpers/markdown';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={filterContent(this.state.content)}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// keep this file in JavaScript, because it is used by a webpack loader\nmodule.exports = { getFrontMatter, separateFrontMatter, filterContent };\n\nfunction getFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  return position ? parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine)) : {};\n}\n\nfunction separateFrontMatter(content) {\n  const lines = content.split('\\n');\n  const position = getFrontMatterPosition(lines);\n  if (position) {\n    const frontmatter = parseFrontMatter(lines.slice(position.firstLine + 1, position.lastLine));\n    const content = lines.slice(position.lastLine + 1).join('\\n');\n    return { frontmatter, content };\n  } else {\n    return { frontmatter: {}, content };\n  }\n}\n\nfunction getFrontMatterPosition(lines) {\n  let firstLine;\n  let lastLine;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (line.trim() === '---') {\n      if (firstLine === undefined) {\n        firstLine = i;\n      } else {\n        lastLine = i;\n        break;\n      }\n    }\n  }\n  return lastLine !== undefined ? { firstLine, lastLine } : undefined;\n}\n\nfunction parseFrontMatter(lines) {\n  const data = {};\n  for (let i = 0; i < lines.length; i++) {\n    const tokens = lines[i].split(':').map(x => x.trim());\n    if (tokens.length === 2) {\n      data[tokens[0]] = tokens[1];\n    }\n  }\n  return data;\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nfunction filterContent(content) {\n  const regexBase = '<!-- \\\\/?(sonarqube|sonarcloud|static) -->';\n  const { isSonarCloud, getInstance } = require('./system');\n  const contentWithInstance = content.replace(/{instance}/gi, getInstance());\n  const contentWithoutStatic = cutConditionalContent(contentWithInstance, 'static');\n  const filteredContent = isSonarCloud()\n    ? cutConditionalContent(contentWithoutStatic, 'sonarqube')\n    : cutConditionalContent(contentWithoutStatic, 'sonarcloud');\n  return filteredContent\n    .replace(new RegExp(`^${regexBase}(\\n|\\r|\\r\\n|$)`, 'gm'), '') // First, remove single-line ones, including ending carriage-returns.\n    .replace(new RegExp(`${regexBase}`, 'g'), ''); // Now remove all remaining ones.\n}\n\n/**\n * @param {string} content\n * @param {string} tag\n * @returns {string}\n */\nfunction cutConditionalContent(content, tag) {\n  const beginning = `<!-- ${tag} -->`;\n  const ending = `<!-- /${tag} -->`;\n\n  let newContent = content;\n  let start = newContent.indexOf(beginning);\n  let end = newContent.indexOf(ending);\n  while (start !== -1 && end !== -1) {\n    if (start < end) {\n      newContent = newContent.substring(0, start) + newContent.substring(end + ending.length);\n    } else {\n      // When conditional tags are incorrectly used we log an error, strip them out and pass to the next pair of tags\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          `Documentation - incorrect usage of conditional formatting tags here: \"${newContent.substring(\n            end,\n            start + beginning.length\n          )}\"`\n        )\n      );\n      newContent =\n        newContent.substring(0, end) +\n        newContent.substring(end + ending.length, start) +\n        newContent.substring(start + beginning.length);\n    }\n    start = newContent.indexOf(beginning);\n    end = newContent.indexOf(ending);\n  }\n\n  return newContent;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum MetricKey {\n  alert_status = 'alert_status',\n  blocker_violations = 'blocker_violations',\n  branch_coverage = 'branch_coverage',\n  bugs = 'bugs',\n  burned_budget = 'burned_budget',\n  business_value = 'business_value',\n  class_complexity = 'class_complexity',\n  classes = 'classes',\n  code_smells = 'code_smells',\n  cognitive_complexity = 'cognitive_complexity',\n  comment_lines = 'comment_lines',\n  comment_lines_data = 'comment_lines_data',\n  comment_lines_density = 'comment_lines_density',\n  complexity = 'complexity',\n  complexity_in_classes = 'complexity_in_classes',\n  complexity_in_functions = 'complexity_in_functions',\n  conditions_to_cover = 'conditions_to_cover',\n  confirmed_issues = 'confirmed_issues',\n  coverage = 'coverage',\n  critical_violations = 'critical_violations',\n  development_cost = 'development_cost',\n  directories = 'directories',\n  duplicated_blocks = 'duplicated_blocks',\n  duplicated_files = 'duplicated_files',\n  duplicated_lines = 'duplicated_lines',\n  duplicated_lines_density = 'duplicated_lines_density',\n  duplications_data = 'duplications_data',\n  effort_to_reach_maintainability_rating_a = 'effort_to_reach_maintainability_rating_a',\n  executable_lines_data = 'executable_lines_data',\n  false_positive_issues = 'false_positive_issues',\n  file_complexity = 'file_complexity',\n  file_complexity_distribution = 'file_complexity_distribution',\n  filename_size = 'filename_size',\n  filename_size_rating = 'filename_size_rating',\n  files = 'files',\n  function_complexity = 'function_complexity',\n  function_complexity_distribution = 'function_complexity_distribution',\n  functions = 'functions',\n  generated_lines = 'generated_lines',\n  generated_ncloc = 'generated_ncloc',\n  info_violations = 'info_violations',\n  last_change_on_maintainability_rating = 'last_change_on_maintainability_rating',\n  last_change_on_releasability_rating = 'last_change_on_releasability_rating',\n  last_change_on_reliability_rating = 'last_change_on_reliability_rating',\n  last_change_on_security_rating = 'last_change_on_security_rating',\n  last_change_on_security_review_rating = 'last_change_on_security_review_rating',\n  last_commit_date = 'last_commit_date',\n  leak_projects = 'leak_projects',\n  line_coverage = 'line_coverage',\n  lines = 'lines',\n  lines_to_cover = 'lines_to_cover',\n  maintainability_rating_effort = 'maintainability_rating_effort',\n  major_violations = 'major_violations',\n  minor_violations = 'minor_violations',\n  ncloc = 'ncloc',\n  ncloc_data = 'ncloc_data',\n  ncloc_language_distribution = 'ncloc_language_distribution',\n  new_blocker_violations = 'new_blocker_violations',\n  new_branch_coverage = 'new_branch_coverage',\n  new_bugs = 'new_bugs',\n  new_code_smells = 'new_code_smells',\n  new_conditions_to_cover = 'new_conditions_to_cover',\n  new_coverage = 'new_coverage',\n  new_critical_violations = 'new_critical_violations',\n  new_development_cost = 'new_development_cost',\n  new_duplicated_blocks = 'new_duplicated_blocks',\n  new_duplicated_lines = 'new_duplicated_lines',\n  new_duplicated_lines_density = 'new_duplicated_lines_density',\n  new_info_violations = 'new_info_violations',\n  new_line_coverage = 'new_line_coverage',\n  new_lines = 'new_lines',\n  new_lines_to_cover = 'new_lines_to_cover',\n  new_maintainability_rating = 'new_maintainability_rating',\n  new_major_violations = 'new_major_violations',\n  new_minor_violations = 'new_minor_violations',\n  new_reliability_rating = 'new_reliability_rating',\n  new_reliability_remediation_effort = 'new_reliability_remediation_effort',\n  new_security_hotspots = 'new_security_hotspots',\n  new_security_hotspots_reviewed = 'new_security_hotspots_reviewed',\n  new_security_rating = 'new_security_rating',\n  new_security_remediation_effort = 'new_security_remediation_effort',\n  new_security_review_rating = 'new_security_review_rating',\n  new_sqale_debt_ratio = 'new_sqale_debt_ratio',\n  new_technical_debt = 'new_technical_debt',\n  new_uncovered_conditions = 'new_uncovered_conditions',\n  new_uncovered_lines = 'new_uncovered_lines',\n  new_violations = 'new_violations',\n  new_vulnerabilities = 'new_vulnerabilities',\n  open_issues = 'open_issues',\n  projects = 'projects',\n  public_api = 'public_api',\n  public_documented_api_density = 'public_documented_api_density',\n  public_undocumented_api = 'public_undocumented_api',\n  quality_gate_details = 'quality_gate_details',\n  quality_profiles = 'quality_profiles',\n  releasability_effort = 'releasability_effort',\n  releasability_rating = 'releasability_rating',\n  reliability_rating = 'reliability_rating',\n  reliability_rating_effort = 'reliability_rating_effort',\n  reliability_remediation_effort = 'reliability_remediation_effort',\n  reopened_issues = 'reopened_issues',\n  security_hotspots = 'security_hotspots',\n  security_hotspots_reviewed = 'security_hotspots_reviewed',\n  security_rating = 'security_rating',\n  security_rating_effort = 'security_rating_effort',\n  security_remediation_effort = 'security_remediation_effort',\n  security_review_rating = 'security_review_rating',\n  security_review_rating_effort = 'security_review_rating_effort',\n  skipped_tests = 'skipped_tests',\n  sonarjava_feedback = 'sonarjava_feedback',\n  sqale_debt_ratio = 'sqale_debt_ratio',\n  sqale_index = 'sqale_index',\n  sqale_rating = 'sqale_rating',\n  statements = 'statements',\n  team_at_sonarsource = 'team_at_sonarsource',\n  team_size = 'team_size',\n  test_errors = 'test_errors',\n  test_execution_time = 'test_execution_time',\n  test_failures = 'test_failures',\n  test_success_density = 'test_success_density',\n  tests = 'tests',\n  uncovered_conditions = 'uncovered_conditions',\n  uncovered_lines = 'uncovered_lines',\n  violations = 'violations',\n  vulnerabilities = 'vulnerabilities',\n  wont_fix_issues = 'wont_fix_issues'\n}\n\nexport function isMetricKey(key: string): key is MetricKey {\n  return (Object.values(MetricKey) as string[]).includes(key);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ComponentQualifier {\n  Application = 'APP',\n  Directory = 'DIR',\n  Developper = 'DEV',\n  File = 'FIL',\n  Portfolio = 'VW',\n  Project = 'TRK',\n  SubPortfolio = 'SVW',\n  SubProject = 'BRC',\n  TestFile = 'UTS'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface GetRulesAppResponse {\n  canWrite?: boolean;\n  repositories: { key: string; language: string; name: string }[];\n}\n\nexport function getRulesApp(data: {\n  organization: string | undefined;\n}): Promise<GetRulesAppResponse> {\n  return getJSON('/api/rules/app', data).catch(throwGlobalError);\n}\n\nexport interface SearchRulesResponse {\n  actives?: T.Dict<T.RuleActivation[]>;\n  facets?: { property: string; values: { count: number; val: string }[] }[];\n  p: number;\n  ps: number;\n  rules: T.Rule[];\n  total: number;\n}\n\nexport function searchRules(data: {\n  organization: string | undefined;\n  [x: string]: any;\n}): Promise<SearchRulesResponse> {\n  return getJSON('/api/rules/search', data).catch(throwGlobalError);\n}\n\nexport function takeFacet(response: any, property: string) {\n  const facet = response.facets.find((facet: any) => facet.property === property);\n  return facet ? facet.values : [];\n}\n\nexport function getRuleDetails(parameters: {\n  actives?: boolean;\n  key: string;\n  organization: string | undefined;\n}): Promise<{ actives?: T.RuleActivation[]; rule: T.RuleDetails }> {\n  return getJSON('/api/rules/show', parameters).catch(throwGlobalError);\n}\n\nexport function getRuleTags(parameters: {\n  organization: string | undefined;\n  ps?: number;\n  q: string;\n}): Promise<string[]> {\n  return getJSON('/api/rules/tags', parameters).then(r => r.tags, throwGlobalError);\n}\n\nexport function createRule(data: {\n  custom_key: string;\n  markdown_description: string;\n  name: string;\n  organization: string | undefined;\n  params?: string;\n  prevent_reactivation?: boolean;\n  severity?: string;\n  status?: string;\n  template_key: string;\n  type?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/create', data).then(\n    r => r.rule,\n    response => {\n      // do not show global error if the status code is 409\n      // this case should be handled inside a component\n      if (response && response.status === 409) {\n        return Promise.reject(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    }\n  );\n}\n\nexport function deleteRule(parameters: { key: string; organization: string | undefined }) {\n  return post('/api/rules/delete', parameters).catch(throwGlobalError);\n}\n\nexport function updateRule(data: {\n  key: string;\n  markdown_description?: string;\n  markdown_note?: string;\n  name?: string;\n  organization: string | undefined;\n  params?: string;\n  remediation_fn_base_effort?: string;\n  remediation_fn_type?: string;\n  remediation_fy_gap_multiplier?: string;\n  severity?: string;\n  status?: string;\n  tags?: string;\n}): Promise<T.RuleDetails> {\n  return postJSON('/api/rules/update', data).then(r => r.rule, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getWrappedDisplayName } from './utils';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentType<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <MultiSelect\n      elements={props.tags}\n      listSize={props.listSize}\n      onSearch={props.onSearch}\n      onSelect={props.onSelect}\n      onUnselect={props.onUnselect}\n      placeholder={translate('search.search_for_tags')}\n      selectedElements={props.selectedTags}\n      validateSearchInput={validateTag}\n    />\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport './CodeSnippet.css';\n\ninterface Props {\n  className?: string;\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  render?: () => JSX.Element;\n  snippet: string | (string | undefined)[];\n  wrap?: boolean;\n}\n\n// keep this \"useless\" concatentation for the readability reason\n// eslint-disable-next-line no-useless-concat\nconst s = ' \\\\' + '\\n  ';\n\nexport default function CodeSnippet({\n  className,\n  isOneLine,\n  noCopy,\n  render,\n  snippet,\n  wrap\n}: Props) {\n  const snippetArray = Array.isArray(snippet)\n    ? snippet.filter(line => line !== undefined)\n    : [snippet];\n  const finalSnippet = isOneLine ? snippetArray.join(' ') : snippetArray.join(s);\n  return (\n    <div\n      className={classNames(\n        'code-snippet',\n        { 'code-snippet-oneline': isOneLine, 'code-snippet-wrap': wrap },\n        className\n      )}>\n      <pre>{render ? render() : finalSnippet}</pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(\n    () => getTask(id),\n    () => getTask(id)\n  );\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nclass HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const checked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const tooltip = checked ? translate('homepage.current') : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {checked ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={checked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={this.handleClick}>\n            <HomeIcon filled={checked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component &&\n    (a as any).organization === (b as any).organization\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getBranchLikeQuery } from '../../helpers/branch-like';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\nconst issueParamsPerMetric: T.Dict<T.Dict<string>> = {\n  blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  new_blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  new_critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  major_violations: { resolved: 'false', severities: 'MAJOR' },\n  new_major_violations: { resolved: 'false', severities: 'MAJOR' },\n  minor_violations: { resolved: 'false', severities: 'MINOR' },\n  new_minor_violations: { resolved: 'false', severities: 'MINOR' },\n  info_violations: { resolved: 'false', severities: 'INFO' },\n  new_info_violations: { resolved: 'false', severities: 'INFO' },\n  open_issues: { resolved: 'false', statuses: 'OPEN' },\n  reopened_issues: { resolved: 'false', statuses: 'REOPENED' },\n  confirmed_issues: { resolved: 'false', statuses: 'CONFIRMED' },\n  false_positive_issues: { resolutions: 'FALSE-POSITIVE' },\n  code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  new_code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  bugs: { resolved: 'false', types: 'BUG' },\n  new_bugs: { resolved: 'false', types: 'BUG' },\n  vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' },\n  new_vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' }\n};\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: T.Dict<string | boolean> = {\n      ...(issueParamsPerMetric[this.props.metric] || { resolved: 'false' })\n    };\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl({\n      componentKey: this.props.component,\n      metric: this.props.metric,\n      branchLike: this.props.branchLike,\n      listView: true\n    });\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport VisibleIcon from 'sonar-ui-common/components/icons/VisibleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../app/theme';\nimport { isCurrentUserMemberOf, isPaidOrganization } from '../../helpers/organizations';\nimport { isSonarCloud } from '../../helpers/system';\nimport {\n  getCurrentUser,\n  getMyOrganizations,\n  getOrganizationByKey,\n  Store\n} from '../../store/rootReducer';\nimport DocTooltip from '../docs/DocTooltip';\n\ninterface StateToProps {\n  currentUser: T.CurrentUser;\n  organization?: T.Organization;\n  userOrganizations: T.Organization[];\n}\n\ninterface OwnProps {\n  className?: string;\n  organization: T.Organization | string | undefined;\n  qualifier: string;\n  tooltipProps?: { projectKey: string };\n  visibility: T.Visibility;\n}\n\ninterface Props extends OwnProps, StateToProps {\n  organization: T.Organization | undefined;\n}\n\nexport function PrivacyBadge({\n  className,\n  currentUser,\n  organization,\n  qualifier,\n  userOrganizations,\n  tooltipProps,\n  visibility\n}: Props) {\n  const onSonarCloud = isSonarCloud();\n  if (\n    visibility !== 'private' &&\n    (!onSonarCloud || !isCurrentUserMemberOf(currentUser, organization, userOrganizations))\n  ) {\n    return null;\n  }\n\n  let icon = null;\n  if (isPaidOrganization(organization) && visibility === 'public') {\n    icon = <VisibleIcon className=\"little-spacer-right\" fill={colors.blue} />;\n  }\n\n  const badge = (\n    <div\n      className={classNames('badge', className, {\n        'badge-info': Boolean(icon)\n      })}>\n      {icon}\n      {translate('visibility', visibility)}\n    </div>\n  );\n\n  if (onSonarCloud && organization) {\n    return (\n      <DocTooltip\n        className={className}\n        doc={getDoc(visibility, icon, organization)}\n        overlayProps={{ ...tooltipProps, organization: organization.key }}>\n        {badge}\n      </DocTooltip>\n    );\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      {badge}\n    </Tooltip>\n  );\n}\n\nconst mapStateToProps = (state: Store, { organization }: OwnProps) => {\n  if (typeof organization === 'string') {\n    organization = getOrganizationByKey(state, organization);\n  }\n  return {\n    currentUser: getCurrentUser(state),\n    organization,\n    userOrganizations: getMyOrganizations(state)\n  };\n};\n\nexport default connect(mapStateToProps)(PrivacyBadge);\n\nfunction getDoc(visibility: T.Visibility, icon: JSX.Element | null, organization: T.Organization) {\n  let doc;\n  const { actions = {} } = organization;\n  if (visibility === 'private') {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-private.md');\n  } else if (icon) {\n    if (actions.admin) {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org-admin.md'\n      );\n    } else {\n      doc = import(\n        /* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-paid-org.md'\n      );\n    }\n  } else if (actions.admin) {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public-admin.md');\n  } else {\n    doc = import(/* webpackMode: \"eager\" */ 'Docs/tooltips/project/visibility-public.md');\n  }\n  return doc;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Branch, PullRequest } from '../types/branch-like';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n\nexport function excludeBranchFromPurge(projectKey: string, branchName: string, excluded: boolean) {\n  return post('/api/project_branches/set_automatic_deletion_protection', {\n    project: projectKey,\n    branch: branchName,\n    value: excluded\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".code-snippet{position:relative;margin:8px 0;background:#404040;color:#f0f0f0;border-radius:3px}.code-snippet pre{padding:16px;overflow:auto}.code-snippet>button{position:absolute;top:16px;right:16px;line-height:18px;border:1px solid #fff;color:#fff;font-size:11px;font-weight:400;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:#fff;color:#404040}.code-snippet-oneline pre{padding-bottom:40px}.code-snippet-oneline>button{top:auto;bottom:16px}.code-snippet-wrap pre{white-space:pre-wrap;word-break:break-all}.code-snippet .highlight{font-weight:700;color:#f4b1b0}.code-snippet .button-icon{color:#fff!important}.code-snippet .button-icon:active svg,.code-snippet .button-icon:focus svg,.code-snippet .button-icon:hover svg{background-color:#fff;color:#404040}\", \"\"]);\n\n","export default \"This project is private. Only the members of this organization are able to browse it and its source code.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Go to your project's [Administration > Permissions](/#sonarcloud#/project_roles?id=#projectKey#) to make it private.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Contact the project administrator to make it private.\\n\\n---\\n\\nSee also: [Organization Visibility](/organizations/organization-visibility/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Subscribe to a paid plan to get unlimited private projects in [Administration > Billing](/#sonarcloud#/organizations/#organization#/extension/billing/billing).\\n\\n---\\n\\nSee also: [Pricing](/sonarcloud-pricing/)\\n\"","export default \"This project is public, which means anyone is able to browse its source code. Contact the organization administrator if you want to make it private.\\n\\n---\\n\\nSee also: [Pricing](/sonarcloud-pricing/)\\n\"","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { getBranchStatusByBranchLike, Store } from '../../store/rootReducer';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface Props {\n  branchLike: BranchLike;\n  component: string;\n  status?: string;\n}\n\nexport function BranchStatus({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, { branchLike, component }: Props) => {\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\ninterface RawDomain {\n  actions: T.WebApi.Action[];\n  deprecatedSince?: string;\n  description: string;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<RawDomain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r => r.webServices)\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<T.WebApi.Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { getLinkName } from '../../../../../../helpers/projectLinks';\nimport isValidUri from '../../../../../utils/isValidUri';\n\ninterface Props {\n  iconOnly?: boolean;\n  link: T.ProjectLink;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class MetaLink extends React.PureComponent<Props, State> {\n  state = { expanded: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  handleCollapse = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleSelect = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n  };\n\n  render() {\n    const { iconOnly, link } = this.props;\n    const linkTitle = getLinkName(link);\n    return (\n      <li>\n        <a\n          className=\"link-with-icon\"\n          href={link.url}\n          onClick={!isValidUri(link.url) ? this.handleClick : undefined}\n          rel=\"nofollow noreferrer noopener\"\n          target=\"_blank\"\n          title={linkTitle}>\n          <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n          {!iconOnly && linkTitle}\n        </a>\n        {this.state.expanded && (\n          <div className=\"little-spacer-top display-flex-center\">\n            <input\n              className=\"overview-key width-80\"\n              onClick={this.handleSelect}\n              readOnly={true}\n              type=\"text\"\n              value={link.url}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.handleCollapse} />\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n"],"sourceRoot":""}